{"version":3,"sources":["server.js","api/base.js","api/user.js","actions/index.js","components/users/login.jsx","components/users/logout.jsx","api/inventory/vendorApi.js","components/vendors/vendorCreation.jsx","components/users/userCreation.jsx","components/list.jsx","components/users/userList.jsx","components/loading.js","components/users/index.jsx","components/vendors/vendorList.jsx","components/vendors/index.jsx","api/sales/customer.js","components/customer/customerList.jsx","components/customer/index.jsx","components/customer/customerCreation.jsx","api/inventory/purchaseOrder.js","api/inventory/purchaseItem.js","api/misc.js","api/inventory/itemApi.js","components/purchaseOrder/popUpEdit.jsx","components/purchaseOrder/purchaseOrderList.jsx","components/purchaseOrder/index.jsx","components/purchaseOrder/purchaseOrderCreation.jsx","api/sales/invoice.js","api/sales/invoiceItem.js","api/inventory/placeApi.js","components/invoices/popUpEdit.jsx","components/invoices/invoiceListing.jsx","components/invoices/index.jsx","components/invoices/invoiceCreation.jsx","components/discounts/discountList.jsx","components/discounts/index.jsx","components/discounts/discountCreation.jsx","components/taxes/taxList.jsx","components/taxes/index.jsx","components/taxes/taxCreation.jsx","api/inventory/itemCatagory.js","components/items/itemList.jsx","components/items/index.jsx","components/items/itemCreation.jsx","components/itemCatagories/itemCatagoryList.jsx","components/itemCatagories/index.jsx","components/itemCatagories/itemCreation.jsx","components/placement/placeList.jsx","components/placement/index.jsx","components/placement/placeCreation.jsx","components/dashboard.js","components/index.jsx","App.js","serviceWorker.js","reducers/userReducer.js","reducers/usersReducer.js","reducers/index.js","index.js","components/purchaseOrder/css/popUp.module.css"],"names":["url","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","setCookie","value","days","expires","date","Date","setTime","getTime","toUTCString","getResponse","response","a","headers","get","json","baseRequest","method","body","signal","fetch","URL","serverUrl","credentials","myResponse","loginUser","data","alert","logoutUser","createUser","getUsers","getUser","updateUser","getCurrentUser","loggedIn","type","payload","Login","props","state","username","password","status","onChange","bind","onSubmit","this","current_state","user","isLoggedIn","window","location","href","e","setState","target","preventDefault","JSON","stringify","then","Container","component","maxWidth","CssBaseline","Avatar","style","padding","margin","backgroundColor","noValidate","TextField","variant","fullWidth","id","label","autoComplete","autoFocus","FormControlLabel","control","Checkbox","color","Button","Alert","severity","display","Grid","container","Box","mt","Component","connect","Logout","res","dispatch","history","push","getVendors","createVendor","deleteVendors","updateVendor","getVendor","styles","makeStyles","theme","root","flexGrow","paper","spacing","textAlign","palette","text","secondary","VendorCreation","update","ele","console","log","Swal","fire","icon","title","classes","justify","alignContent","alignItems","item","xm","xs","required","md","FormControl","InputLabel","htmlFor","Input","onClick","withStyles","UserCreation","user_type","password2","cellSpacing","cellPadding","useStyles","table","minWidth","List","page","delete_button","temp","header","rows","no_data","back","delete","pagination","IconButton","aria-label","disabled","TableContainer","Paper","Table","className","TableHead","TableRow","map","TableCell","key","TableBody","row","popUp","uuid","prop","size","UserList","columns","match","params","pushNewId","data_main","listData","list","popUpRender","user_data","first_name","last_name","email","defaultValue","is_active","userDelete","userRevive","left","bottom","right","LoadingIcon","React","useState","progress","setProgress","useEffect","timer","setInterval","oldProgress","clearInterval","direction","minHeight","CircularProgress","Users","update_table","request_json","by","x","start","end","getUsersData","render_after_load","users","to","textDecoration","loaded","VendorList","vendorDelete","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","showConfirmButton","middle_name","website","phone1","phone2","address","tax_number","Vendors","getVendorsData","vendors","getCustomers","deleteCustomers","createCustomer","getCustomer","updateCustomer","CustomerList","customerDelete","loading","complete","fromUrl","customer","Customers","context","getCustomersData","ref","child","customers","CustomerCreation","getPurchaseOrders","deletePurchaseOrder","createPurchaseOrder","getPurchaseOrder","updatePurchaseOrder","deletePurchaseItems","createPurchaseItem","updatePurchaseItem","getPurchaseItems","getDiscounts","deleteDiscounts","createDiscount","getDiscount","updateDiscount","getTaxes","deleteTaxes","createTax","getTax","updateTax","getPurchaseOrderStatus","getPlacements","deletePlacement","getItems","deleteItems","createItem","getItem","updateItem","PopUpEdit","purchase_order","converter","invoiced_on","completed_on","purchase_items","refreshTable","getItemData","selectItem","searchItem","addPurchaseItem","invoiceHandler","completeHandler","searchVendor","selectVendor","onChangePI","postPurchaseItem","deletePurchaseItem","parse","error","current","is_new","purchase_items_id","p_list","items","item_selection","itemPopUp","trigger","closeOnDocumentClick","placeholder","dropdown_content","popUpItem","colSpan","item_name","InputProps","readOnly","new","quantity","defective","Select","lable","discount_type","MenuItem","discount","purchase_price","vendor_selection","vendorPopup","vendor","vendor_name","added_by_name","selected","total_cost","parseInt","PurchaseOrderList","purchaseOrderDelete","PurchaseOrders","getPurchaseOrdersData","purchaseOrders","PurchaseOrderCreation","toISOString","addPurchaseOrder","registered","getInvoices","deleteInvoices","createInvoice","getInvoice","updateInvoice","getInvoiceStatus","deleteInvoiceItems","createInvoiceItem","updateInvoiceItem","getPlaces","deletePlaces","createPlace","getPlace","updatePlace","assignPlace","discount_columns","tax_columns","add_discount_columns","add_tax_columns","invoice","due_on","invoice_items","stateman","addInvoiceItem","dueOnHandler","getCustomerData","searchCustomer","selectCustomer","postInvoiceItem","deleteInvoiceItem","onChangePlace","removeEntry","addEntryDiscount","addEntryTax","popUpTemp","dis","temp2","applied_discount","pop","applied_tax","taxes","getPlacesData","filter","el","update_stock","sold_from","p","string","sold_from_selection","invoice_items_id","discount_start","discount_end","discount_page","getDiscountsData","tax_start","tax_end","tax_page","getTaxesData","discount_selection","tax_selection","sales_price","places","place_selection","selectPlace","str_placed_on","stocks","stock_selection","stockValue","purchase_item","selectStock","str","addPopupDiscount","addPopupTax","discounts","responsive","min","price","tax_total","sub_total","discount_amount","total_without_discount","total","discount_loaded","tax_loaded","customer_selection","customerPopup","spaceing","customer_name","order_number","total_amount","discount_total","paid_amount","additional_discount","InvoiceListing","invoiceDelete","Invoices","getInvoiceData","invoices","InvoiceCreation","pathname","DiscountList","discountDelete","code","rate","Discounts","DiscountCreation","formControl","TaxList","taxDelete","tax","tax_type","Taxes","TaxCreation","getItemCatagories","deleteItemCatagory","createItemCatagory","getItemCatagory","updateItemCatagory","ItemList","placementColumns","itemDelete","getPlacementsData","dummy","onFileChange","files","blob","Promise","resolve","reject","reader","FileReader","onloadend","onerror","readAsDataURL","dataUrl","product_image","thumbnail_image","request","slice","placements","placementStart","placementEnd","placementPage","catagories","catagory","stock","sold","weight","average_cost_price","description","width","src","alt","multiple","onDone","getFiles","getThumbnail","update_placement_table","Items","getItemsData","ItemCreation","ItemCatagoryList","items_c","itemCatDelete","popUptemp","updatetemp","itemCatagory","ItemCatagories","getItemCatagoriesData","item_catagories","PlaceList","placementColumn","itemsColumn","purchaseItemsColumn","placeDelete","popUpPlacement","addNewItem","updateItemsTable","selectPurchaseItem","assignPlacement","place","req","action","newPlacementPopUpSelectItem","selectedPurchaseItem","itemsStart","itemsEnd","itemsPage","selectedItem","purchaseItemSelectPopUp","purchaseItems","addPlacementFinal","placementUpdate","fianlForm","max","on_default","newPlacementForm","Placements","PlaceCreation","toolbar","paddingRight","toolbarIcon","justifyContent","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","menuButtonHidden","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","height","overflow","paddingTop","paddingBottom","flexDirection","fixedHeight","Dashboard","open","setOpen","useSelector","AppBar","clsx","Toolbar","edge","Typography","noWrap","Drawer","Divider","ListItem","button","ListItemIcon","ListItemText","primary","path","ItemCatagoryCreation","Places","Index","swal","render_x","App","Boolean","hostname","initState","userReducer","usersReducer","rootReducers","combineReducers","store","createStore","rootReducer","applyMiddleware","thunkMiddleware","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.7d51dd78.chunk.js","sourcesContent":["// const prod = `${window.location.protocol}//${window.location.host}/`;\nconst url = \"http://localhost:8000/\";\n// const url =\"https://simpleim.herokuapp.com/\"\n// const serverUrl = process.env.NODE_ENV === \"development\" ? dev : prod;\nexport default url;\n","import serverUrl from \"../server\";\n\nfunction getCookie(name) {\n  var cookieValue = null;\n  if (document.cookie && document.cookie !== \"\") {\n    var cookies = document.cookie.split(\";\");\n    for (var i = 0; i < cookies.length; i++) {\n      var cookie = cookies[i].trim();\n      if (cookie.substring(0, name.length + 1) === name + \"=\") {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n  return cookieValue;\n}\n\nfunction setCookie(name,value,days) {\n  var expires = \"\";\n  if (days) {\n      var date = new Date();\n      date.setTime(date.getTime() + (days*24*60*60*1000));\n      expires = \"; expires=\" + date.toUTCString();\n  }\n  document.cookie = name + \"=\" + (value || \"\")  + expires + \"; path=/\";\n}\n\nconst getResponse = async response => {\n  const contentType = response.headers.get(\"content-type\");\n  if (contentType === \"application/json\") {\n    const json = await response.json();\n    return { response, json };\n  }\n  return { response };\n};\n\nconst baseRequest = async (url, method, body, signal) => {\n    var cookie = getCookie(\"x-csrftoken\")\n    if (cookie === null) {\n      const response = await fetch(new URL('apiv1/users/verify', serverUrl), {\n        method: 'GET'\n      });\n      const temp = await getResponse(response)\n      setCookie('x-csrftoken', temp.json['x-csrftoken'], 2)\n    }\n    cookie = getCookie(\"x-csrftoken\")\n    const response = await fetch(new URL(url, serverUrl), {\n        method: method,\n        body: body,\n        signal: signal,\n        credentials: \"include\",\n        headers: {\n        \"x-csrftoken\": cookie,\n        \"Content-Type\": \"application/json\"\n        }\n    });\n    const myResponse = await getResponse(response);\n    return myResponse.json;\n};\n\n\nexport { baseRequest };","import { baseRequest } from './base';\n\nconst loginUser = async data => {\n    try {\n      return await baseRequest(\"apiv1/users/login\", \"POST\", data);\n    } catch (e) {\n      alert(e);\n    }\n  };\n\nconst csrfToken = async () => {\n    try {\n        return await baseRequest(\"apiv1/users/verify\", \"GET\");\n      } catch (e) {\n        alert(e);\n      }\n    };\n\nconst logoutUser = async data => {\n  try {\n    return await baseRequest('apiv1/users/logout', \"GET\");\n  } catch(e){\n    alert(e);\n  }\n};\n\nconst createUser = async data => {\n  try {\n    return await baseRequest('apiv1/users/create','POST', data);\n  } catch(e){\n    alert(e)\n  }\n};\n\nconst getUsers = async data => {\n  try {\n    return await baseRequest('apiv1/users/get','POST', data);\n  } catch(e){\n    alert(e)\n  }\n};\n\n\nconst getUser = async data => {\n  try {\n    return await baseRequest('apiv1/users/get/0','POST', data);\n  } catch(e){\n    alert(e)\n  }\n};\n\nconst updateUser = async data => {\n  try{\n    return await baseRequest('apiv1/users/get/0', 'POST', data);\n  } catch (e){\n    alert(e)\n  }\n};\n\n\nconst getCurrentUser = async data => {\n  try{\n    return await baseRequest('apiv1/users/current', 'POST', data);\n  } catch (e){\n    alert(e)\n  }\n};\n\nexport { loginUser, csrfToken, logoutUser, getUsers, createUser, getUser, updateUser, getCurrentUser }","export const logout = () => {\n    return {\n        type: 'logout'\n    };\n}\n\nexport const loggedIn = (data) => {\n    return {\n        type: 'loggedIn',\n        payload: data\n    };\n}\n\nexport const setUsers = (data) => {\n    return{\n        type: 'setUsers',\n        payload: data\n    }\n}\n\n\nexport const setVendors = (data) => {\n    return{\n        type: 'setVendors',\n        payload: data\n    }\n}","import React, { Component } from 'react';\nimport { loginUser, getCurrentUser } from '../../api/user';\nimport {  connect } from 'react-redux';\nimport { loggedIn } from '../../actions';\n\n//material-ui import button\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\n\nimport Alert from '@material-ui/lab/Alert';\n\nclass Login extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            username:'',\n            password:'',\n            status:'',\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n    componentDidMount() {\n        if (this.props.current_state.user.isLoggedIn === true){\n          window.location.href=\"/\"\n        }\n    }\n    onChange(e)\n    {\n        this.setState({[e.target.name]: [e.target.value]})\n    }\n    async onSubmit(e){\n        e.preventDefault();\n        const data = {\n            username: this.state.username[0],\n            password: this.state.password[0]\n        }\n        loginUser(JSON.stringify(data)).then(data => {\n            try{\n                if (data['status']){\n                    window.location.href=\"/\"\n                  }else if ((this.state.username===\"\" && this.state.password===\"\")|\n                (this.state.username===\"\" || this.state.password===\"\")){\n                        this.setState((state) => {\n                            return {status: \"Username and password empty\"};\n                          });\n                }\n                else if (data['status']=== false){\n                    this.setState((state) => {\n                        return {status: data['msg']};\n                      });\n                }\n            }catch(e){\n                alert(e)\n            }\n        })       \n    }\n\n    render() {\n      \n        return (\n            <Container component=\"main\" maxWidth=\"xs\">\n                \n                <CssBaseline />\n                <div>\n                  <Avatar style={{padding:30,margin:'auto',backgroundColor:'#1a237e'}} >\n                    <h3>O</h3>\n                  </Avatar>\n                  {/* <Typography component=\"h1\" variant=\"h4\" style={{textAlign:'center'}}>\n                    LOGIN\n                  </Typography> */}\n                  <form  onSubmit={this.onSubmit} noValidate>\n                    <TextField\n                      variant=\"outlined\"\n                      margin=\"normal\"\n                      fullWidth\n                      id=\"uname\"\n                      label=\"Username\"\n                      name=\"username\"\n                      autoComplete=\"email\"\n                      autoFocus\n                      type='text'\n                      onChange={this.onChange}\n                      value={this.state.username}\n                    />\n                    {/* required */}\n                    <TextField\n                      variant=\"outlined\"\n                      margin=\"normal\"\n                      fullWidth\n                      name=\"password\"\n                      label=\"Password\"\n                      type=\"password\"\n                      id=\"password\"\n                      autoComplete=\"current-password\"\n                      onChange={this.onChange}\n                      value={this.state.password}\n                    />\n                    <FormControlLabel\n                      control={<Checkbox value=\"remember\" color=\"primary\" />}\n                      label=\"Remember me\"\n                    />\n                    <Button\n                      type='submit'\n                      fullWidth\n                      variant=\"contained\"\n                      color=\"primary\"\n                    >\n                      Login\n                    </Button>\n                    <br/><br/>\n                    <Alert severity=\"error\" style={{display: this.state.status ? \"\":'none'}}>\n                        {this.state.status}\n                    </Alert>\n\n                    <Grid container>\n                      {/* <Grid item xs>\n                        <Link href=\"#\" variant=\"body2\">\n                          Forgot password?\n                        </Link>\n                      </Grid> */}\n                      {/* <Grid item>\n                        <Link href=\"#\" variant=\"body2\">\n                          {\"Don't have an account? Sign Up\"}\n                        </Link>\n                      </Grid> */}\n                    </Grid>\n                  </form>\n                </div>\n                <Box mt={8}>\n                  {/* <Copyright /> */}\n                </Box>\n              </Container>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    current_state: state\n})\n\nexport default connect(mapStateToProps)(Login)","import React, { Component } from 'react'\nimport { logoutUser } from '../../api/user';\nimport {  connect } from 'react-redux';\nimport { logout } from '../../actions';\n\n\nclass Logout extends Component {\n    componentDidMount(){\n        logoutUser().then(res => {\n            this.props.dispatch(logout())\n            this.props.history.push('/')\n\n        });\n    }\n\n    render() {\n        return (\n            <div>\n            </div>\n        )\n    }\n}\n\nexport default connect()(Logout)","import { baseRequest } from '../base';\n// api for vendors\n\nconst getVendors = async data => {\n  try {\n    return await baseRequest('apiv1/inventory/vendors','POST', data);\n  } catch(e){\n    alert(e)\n  }\n};\n\nconst createVendor = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/vendors','POST', data);\n    } catch(e){\n      alert(e)\n    }\n};\n\n\nconst deleteVendors = async data => {\n  try {\n    return await baseRequest('apiv1/inventory/vendors/delete','POST', data);\n  } catch(e){\n    alert(e)\n  }\n};\n\n\nconst updateVendor = async data => {\n  try {\n    return await baseRequest('apiv1/inventory/vendor','POST', data);\n  } catch(e){\n    alert(e)\n  }\n};\n\nconst getVendor = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/vendor','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n\nexport { getVendors, createVendor, deleteVendors, updateVendor, getVendor}","import React, { Component } from 'react'\nimport {  connect } from 'react-redux';\nimport {Button, TextField , withStyles} from '@material-ui/core';\nimport { createVendor } from '../../api/inventory/vendorApi';\n\n\nimport {Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\n\n\nimport {FormControl, InputLabel, Input} from '@material-ui/core'\nimport Swal from 'sweetalert2'\n\n\nconst styles = makeStyles((theme) => ({\n    root: {\n    flexGrow: 12,\n    },\n    paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    },\n}));\n\n\nclass VendorCreation extends Component {\n\n    constructor (props){\n        super(props)\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.state = {\n            'update':{\n                'middle_name':[''],\n                'website':[''],\n                'phone2':[''],\n                'address':['']\n            }\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n    }\n\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value]\n            }\n        })\n    }\n\n\n    async onSubmit(e){\n            var data = {...this.state.update}\n            var ele;\n            for (ele in this.state.update){\n                data[ele] = this.state.update[ele][0]\n            }\n            data = {...data, 'action':'add'}\n            console.log(data)\n            createVendor(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        Swal.fire(\n                            'Updated!',\n                            'Vendor details has been added.',\n                            'success'\n                          )                    }\n                    else{\n                        Swal.fire({\n                            icon:'error',\n                            title:data['error']\n                        })                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div>\n            &nbsp;\n            &nbsp;\n            &nbsp;\n            &nbsp;\n            &nbsp;\n            &nbsp; \n        <Grid  container spacing={3} justify=\"center\" alignContent='center' alignItems=\"center\">\n            <Grid item xm={4}>\n            \n            </Grid>\n            <Grid item xs={4}>\n            <h1>Add New Customer</h1>\n            </Grid>\n            <Grid item xm={4}>\n            </Grid>\n        </Grid>\n\n        <Grid container  justify=\"center\" alignContent='center' alignItems=\"center\">\n        <Grid item xm={6}>\n            <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n                <Grid item xm={2} > \n                <TextField required id=\"first_name\" label=\"First Name\" name='first_name' autoFocus onChange={this.onChange} />\n                </Grid>\n                <Grid item xm={2}>\n                <TextField id=\"middle_name\" label=\"Middle Name\" name='middle_name'  onChange={this.onChange} />\n                </Grid>\n                <Grid item xm={2}>\n                <TextField required id=\"last_name\" label=\"Last Name\" name='last_name'  onChange={this.onChange} />\n                </Grid>\n            </Grid>\n            \n            <Grid container spacing={3}>\n                <Grid item xm={6} md={6}> \n                <FormControl fullWidth required>\n                <InputLabel htmlFor=\"email\">Email address</InputLabel>\n                <Input id=\"email\" required name='email' fullWidth onChange={this.onChange}   />\n                </FormControl>\n                </Grid>\n                <Grid item xm={6} md={6}> \n                 <TextField\n                                id ='website'\n                                name=\"website\"\n                                label='Website'\n                                type='text'\n                                fullWidth\n                                onChange={this.onChange}                                \n                            />\n\n               </Grid>\n            </Grid>\n\n\n            <Grid container spacing={3} >\n                \n                <Grid item xm={6} md={6}> \n                <TextField\n                label=\"Primary Phone Number\"\n                                id ='phone1'\n                                name=\"phone1\"\n                                fullWidth\n                                required\n                                onChange={this.onChange}                                  \n                            />\n                </Grid>\n                <Grid item xm={6} md={6}> \n                 \n                <TextField\n                    label='Second Phone Number'\n                                id ='phone2'\n                                name=\"phone2\"\n                                fullWidth\n                                onChange={this.onChange}                                \n                            />\n\n               </Grid>\n            </Grid>\n\n\n            <Grid container spacing={3}>\n\n                <Grid item xm={6} md={6}> \n                <TextField\n                                id ='address'\n                                name=\"address\"\n                                type='text'\n                                label='Address'\n                                fullWidth\n                                onChange={this.onChange}\n                                required\n                            />\n                </Grid>\n                <Grid item xm={6} md={6} > \n                <TextField\n                                id ='tax_number'\n                                name=\"tax_number\"\n                                type='number'\n                                fullWidth\n                                label='Tax Number'\n                                onChange={this.onChange}  \n                                required                              \n                            />\n               </Grid>\n            </Grid>\n            <Grid container spacing={3}  alignItems='flex-end'>\n\n                <Grid item xm={3} md={6}> \n                <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={()=>{this.onSubmit()}}\n                                >\n                                Add\n                                </Button>\n                </Grid>\n                <Grid item xm={3} md={6}> \n                \n               </Grid>\n            </Grid>\n        </Grid>\n        </Grid><br></br>\n        </div>\n        )\n    }\n}\n\nVendorCreation.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n\nconst mapStateToProps = state => ({\n    user: state.user\n})\n\nexport default withStyles(styles)(connect(mapStateToProps)(VendorCreation))\n","import React, { Component } from 'react'\nimport {  connect } from 'react-redux';\nimport { createUser } from '../../api/user';\nimport {Button, TextField, Grid } from '@material-ui/core';\nimport Swal from 'sweetalert2'\n\n\nclass UserCreation extends Component {\n\n    constructor (props){\n        super(props)\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.state = {\n            'update':{\n                'user_type':'STAFF'\n            }\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n        if (this.props.user.data.user_type !== \"MANAGER\"){\n            this.props.history.push('/')\n        }\n    }\n\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value]\n            }\n        })\n    }\n\n\n    async onSubmit(e){\n        if (this.state.update.password[0] === this.state.update.password2[0]){\n            var data = {...this.state.update}\n            var ele;\n            for (ele in this.state.update){\n                data[ele] = this.state.update[ele][0]\n            }\n            createUser(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        Swal.fire(\"New User Created\")\n                    }\n                    else{\n                        Swal.fire(data['error'])\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n        }\n        else {\n            Swal.fire(\"Password didn't match\")\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Grid container justify='center'>\n                    <Grid item xm ={6}>\n\n                    <h1>Create New User</h1><br></br>\n                    <table cellSpacing={10}  cellPadding={10}>\n                        <tbody>\n                            <tr>\n                                <td>\n                                    First Name: <TextField\n                                    id ='first_name'\n                                    name=\"first_name\"\n                                    type='text'\n                                    onChange={this.onChange}  \n                                    required                  \n                                />\n                                </td>\n                                <td>\n                                    Last Name<TextField\n                                    id ='last_name'\n                                    name=\"last_name\"\n                                    type='text'\n                                    onChange={this.onChange}\n                                    required \n                                />\n                                </td>\n                            </tr>\n\n                            <tr>\n                                <td>\n                                Username :<TextField\n                                \n                                id ='username'\n                                name=\"username\"\n                                type='text'\n                                onChange={this.onChange}\n                                required \n                            />\n                                </td>\n                            </tr>\n                            \n                            <tr>\n                                <td>\n                                Password <TextField\n                                id=\"password\"\n                                name=\"password\"\n                                type=\"password\"\n                                autoComplete=\"current-password\"\n                                onChange={this.onChange}\n                                required \n                                />\n                                </td>\n                                <td>\n                                Confirm Password <TextField\n                                id=\"password2\"\n                                type=\"password\"\n                                name=\"password2\"\n                                autoComplete=\"current-password\"\n                                onChange={this.onChange}\n                                required \n                                />\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>\n                            Email : <TextField\n                                id ='email'\n                                name=\"email\"\n                                type='email'\n                                onChange={this.onChange}\n                                required \n                            />\n                            </td>\n                            <td>\n                            User Post:\n                            <select name='user_type' id=\"user_type\" onChange={this.onChange} value={this.state.update.user_type}>\n                                <option value=\"MANAGER\">Manager</option>\n                                <option value=\"STAFF\">Staff</option>\n                            </select>\n                            </td>\n                            </tr>\n                            <td>\n                            <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={this.onSubmit}\n                                >\n                                Update\n                                </Button>\n                            </td>\n\n                        </tbody>\n\n                    </table>\n\n                    </Grid>\n\n                </Grid>\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    user: state.user\n})\n\nexport default connect(mapStateToProps)(UserCreation)","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid'\nimport IconButton from '@material-ui/core/IconButton';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport {Button } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst List = (props) => {\n  var page = true;\n  if (!props.page){\n    page=props.page\n  }\n  const classes = useStyles();\n  const headers = props.header\n  const rows = props.data\n  var delete_button;\n  var temp;\n  var no_data=false\n  var back=true\n  if (rows.length === 0){\n    no_data=true\n  } \n  if (props.page === 1){\n    back = false\n  }\n\n  if (props.delete){\n    delete_button = true\n  }\n\n  const pagination = <div>\n    {back? <IconButton color=\"secondary\" onClick={() => {props.update(-10)}} aria-label=\"pervious-button\">\n      <NavigateBeforeIcon />\n    </IconButton> : <IconButton color=\"secondary\" onClick={() => {props.update(-10)}} aria-label=\"pervious-button\" disabled>\n      <NavigateBeforeIcon />\n    </IconButton>}\n    <b>\n    Page: {props.page}</b>\n    {no_data? <IconButton color=\"secondary\" onClick={() => {props.update(10)}} aria-label=\"pervious-button\" disabled>\n      <NavigateNextIcon />\n    </IconButton> : <IconButton color=\"secondary\" onClick={() => {props.update(10)}} aria-label=\"pervious-button\">\n      <NavigateNextIcon />\n    </IconButton>}\n  </div>\n\n  return (\n      <div>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n                {headers.map(\n                    header =>(\n                    <TableCell key={header.id}><b>{header.name}</b></TableCell>\n                    )\n                )}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          {rows.map(\n              row =>(\n                  <TableRow key={row.id} onClick={() => {props.popUp(row.id, row.uuid)}}>\n                      {headers.map(\n                          header =>\n                              (\n                                  temp = header.prop,\n                              <TableCell key={header.id}>{row[temp]}</TableCell>\n                              )\n                      )}\n                      <TableCell>{delete_button ? <Button  variant=\"contained\" size='small' color=\"secondary\" onClick={()=> {props.delete(row.id)}}><DeleteForeverIcon></DeleteForeverIcon></Button>:null }</TableCell>\n                  </TableRow>\n              )\n          )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      <Grid container justify=\"center\" alignItems=\"center\">\n    <Grid item xs={\"auto\"}>\n    {no_data ? <h2>No Data Available</h2> : <span></span>}\n    </Grid>\n    </Grid>\n    <br></br>\n    <Grid container justify=\"center\" alignItems=\"center\">\n    <Grid item xs={\"auto\"}>\n    {page ? pagination : <span></span>}\n    </Grid>    \n    </Grid>\n    <br></br>\n    </div>\n  );\n}\n\nexport default List","import React, { Component } from 'react'\nimport List from '../list';\nimport { getUser, updateUser } from '../../api/user';\nimport {Button, TextField, Grid } from '@material-ui/core';\n\nimport Swal from 'sweetalert2'\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\n\n\nclass UserList extends Component {\n    constructor(props){\n        super(props)\n        this.popUp = this.popUp.bind(this)\n        this.state = {\n            'popUp':false,\n            'user_data':{},\n            'update':{}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.back = this.back.bind(this);\n    }\n    \n    back(){ \n        if (this.props.data){\n            this.setState({...this.state, popUp:false});\n        }else{\n            this.props.history.push('/users')\n        }\n    }\n    async componentDidMount(){\n        try {\n            const {id} = this.props.match.params\n            if (id){\n                await this.popUp(id,0,true)\n            }\n        }catch(e){\n            console.log(e)\n        }\n    }\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value][0]\n            }\n        })\n    }\n\n    onSubmit(){\n        var data = this.state.update;\n        data = {\n            ...data,\n            'action':'edit',\n            'user_id':data.id\n        }\n        updateUser(JSON.stringify(data)).then(data =>{\n            if (data['status']){\n                Swal.fire(\n                    'Updated!',\n                    'Details has been updated.',\n                    'success'\n                  )                \n                  this.back()\n            }\n        })\n    }\n\n    userDelete(id,uuid){\n        var data = {\n            'action':'delete',\n            'user_id':id,\n            'uuid':uuid\n        }\n        updateUser(JSON.stringify(data)).then(data =>{\n            if (data['status']){\n                Swal.fire('User has been deleted. They cannot login now')\n                this.back()\n            }\n        })\n    }\n\n    \n    userRevive(id,uuid){\n        var data = {\n            'action':'revive',\n            'user_id':id,\n            'uuid':uuid\n        }\n        updateUser(JSON.stringify(data)).then(data =>{\n            if (data['status']){\n                Swal.fire('User has been made active. They login now')\n                this.back()\n            }\n        })\n    }\n\n    async popUp(id, uuid=0, fromUrl){\n        if(!fromUrl){\n            this.props.pushNewId(id)\n        }else{\n        const data = {\n            'action':'get',\n            'user_id':id,\n            'uuid':uuid\n        }\n        var data_main;\n        await getUser(JSON.stringify(data)).then(data => {\n            if (data['status']){\n                data_main=data\n            }\n        })\n        await this.setState({\n            'popUp':true,\n            'user_data':data_main,\n            'update':data_main\n        })\n    }\n}\n\n    columns = [\n        {\n            id:1,\n            name:\"Name\",\n            prop: 'name'\n        },\n        {\n            id:2,\n            name:\"Post\",\n            prop: 'status'\n        },\n        {\n            id:3,\n            name:\"Username\",\n            prop: 'username'\n        },\n        {\n            id:4,\n            name:\"Status\",\n            prop: 'is_active_str'\n        }      \n    ]\n    \n\n    render() {var listData\n        if (!this.props.data){\n            listData = []\n        }else{\n            listData=this.props.data\n        }\n        const list = <List data={listData} header={this.columns} popUp={this.popUp} update={this.props.update} page={this.props.page}/>\n        const popUpRender = \n        \n        \n        <div>\n             <Grid  container spacing={3} justify=\"center\" alignContent='center' alignItems=\"center\">\n        \n        <Grid item xm={4}>\n        <Button  variant=\"contained\" size='small' color=\"primary\" onClick={()=> {this.back()}}>\n            <ArrowLeftIcon></ArrowLeftIcon>\n     Back\n </Button>          <h1>{this.state.user_data.name}</h1>\n        &nbsp;\n        &nbsp;\n        &nbsp;\n        &nbsp;\n        &nbsp;\n        &nbsp; \n        \n        </Grid>\n        <Grid item xm={4}>\n        </Grid>\n    </Grid>\n\n            \n    <Grid container  justify=\"center\" alignContent='center' alignItems=\"center\">\n        <Grid item xm={6}>\n        <table cellPadding={10} cellSpacing={10}>\n            <tbody>\n                <tr>\n                    <td>\n                        \n                First Name : <TextField\n                                id ='first_name'\n                                name=\"first_name\"\n                                type='text'\n                                onChange={this.onChange}\n                                value={this.state.update.first_name}                       \n                            />\n                            \n                    </td>\n                    <td>\n\n                            \n                    Last Name : <TextField\n                            \n                            id ='last_name'\n                            name=\"last_name\"\n\n                            // placeholder = {this.state.user_data.last_name}   \n                            type='text'\n                            onChange={this.onChange}\n                            value={this.state.update.last_name}                       \n                        />\n                       \n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                    Username :<TextField\n                             \n                             id ='username'\n\n                             name=\"username\"\n                            //  placeholder = {this.state.user_data.username}   \n                             type='text'\n                             onChange={this.onChange}\n                             value={this.state.update.username}                       \n                         />\n                    </td>\n                <td>\n                Email : <TextField\n                                id ='email'\n                                name=\"email\"\n                                // placeholder = {this.state.user_data.email}   \n                                type='email'\n                                onChange={this.onChange}\n                                value={this.state.update.email}                       \n                            />\n                </td>\n\n                </tr>\n                <tr>\n                    <td>\n                    User Post:\n                            <select name='user_type' onChange={this.onChange} defaultValue={this.state.user_data.user_type}>\n                                <option value=\"MANAGER\">Manager</option>\n                                <option value=\"STAFF\">Staff</option>\n                            </select>\n                    </td>\n                </tr>\n<tr>\n    <td>\n    <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={this.onSubmit}\n                                >\n                                Update\n                                </Button>\n    </td>\n    <td>\n    {this.state.user_data.is_active ? <Button variant=\"contained\" color=\"secondary\" onClick={() => {this.userDelete(this.state.user_data.id, this.state.user_data.uuid)}}>\n                            Deactivate User\n                        </Button> : <Button variant=\"contained\" color=\"secondary\" onClick={() => {this.userRevive(this.state.user_data.id, this.state.user_data.uuid)}}>\n                            Activate User\n                        </Button> }\n                        \n    </td>\n</tr>\n\n            </tbody>\n        </table>\n                            \n                            \n                       \n                        <br>\n                        </br>\n                        </Grid>\n                        </Grid>\n                    </div>\n        return (\n            <div>\n                {this.state.popUp ? popUpRender : list}\n            </div>\n        )\n    }\n}\n\nexport default  UserList","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    backgroundColor: \"black\",\n        \n    // position: 'fixed',\n    left: theme.spacing(2),\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n    },\n}));\n\nexport default function LoadingIcon() {\n  const [progress, setProgress] = React.useState(0);\n\n  React.useEffect(() => {\n    function tick() {\n      // reset when reaching 100%\n      setProgress(oldProgress => (oldProgress >= 100 ? 0 : oldProgress + 1));\n    }\n\n    const timer = setInterval(tick, 20);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  return (\n    <Grid\n    container\n    spacing={0}\n    direction=\"column\"\n    alignItems=\"center\"\n    justify=\"center\"\n    style={{ minHeight: '100vh' }}\n  >\n  \n    <Grid item xs={3}>\n    <CircularProgress variant=\"determinate\" value={progress} />\n\n    </Grid>   \n  \n  </Grid> \n        \n  );\n}","import React, { Component } from 'react'\nimport { getUsers } from '../../api/user'\nimport {  connect } from 'react-redux';\nimport UserList from './userList';\nimport { Link} from 'react-router-dom';\n\n\nimport Button from '@material-ui/core/Button';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/styles';\nimport PropTypes from 'prop-types';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport LoadingIcon from '../loading';\nimport Swal from 'sweetalert2';\n\n\nconst styles = makeStyles((theme) => ({\n    root: {\n    flexGrow: 12,\n    },\n    paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    },\n}));\n\nclass Users extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            'users':[],\n            'loaded':false,\n            'start':0,\n            'end':10,\n            'page':1\n        }\n        this.update_table = this.update_table.bind(this)\n        this.pushNewId = this.pushNewId.bind(this)\n    }\n\n    \n    pushNewId(id){\n        this.props.history.push('/users/'+id)\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n        if (this.props.user.data.user_type !== \"MANAGER\"){\n            console.log(\"not manager\")\n            Swal.fire({\n                icon:'error',\n                title:'Permission Denied!',\n                text:'You donont have authorization. Contact Manager or Admin'\n            })\n            this.props.history.push('/')\n            return\n        }\n        this.update_table(0)\n\n    }\n\n    async getUsersData (request_json) {\n        await getUsers(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'users':data['users'],\n                    'loaded':true\n                })\n            }  \n        })\n    }\n\n    async update_table (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                'loaded':false,\n                start: 0,\n                end: 10,\n                page:1\n            })\n        }\n        else{\n            if (this.state.start+by>-1){\n                await this.setState({\n                    'loaded':false,\n                    start: this.state.start+by,\n                    end: this.state.end+by,\n                    page:this.state.page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.start,\n            'end':this.state.end\n        }\n        this.getUsersData(request_json)\n    }\n    \n\n    render() {\n        const render_after_load = (\n            <div>\n                <UserList pushNewId={this.pushNewId} data={this.state.users} update={this.update_table} page={this.state.page} />\n            </div>\n        )\n        const { classes } = this.props;\n\n\n        return(\n            <div className={classes.root}>\n        <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n            <Grid item xs={3} >\n            <Button variant=\"contained\" color=\"primary\" onClick={() => {this.update_table(0)}}>\n              <RefreshIcon/>&nbsp;&nbsp;&nbsp;Refresh Table\n              </Button>\n            </Grid>\n            <Grid item xs={5}>\n  \n            </Grid>\n              <Grid item xs={3}>\n              <Link to='/users/create' style={{ textDecoration: 'none' }}>\n              <Button variant=\"contained\" color=\"secondary\">\n              <AddCircleIcon/>&nbsp;&nbsp;&nbsp;Add New Staff\n              </Button>\n              </Link>\n              </Grid>\n  \n          <Grid item xs={12}>\n            <Paper className={classes.paper}>\n            {this.state.loaded ? render_after_load : <LoadingIcon></LoadingIcon>}\n            </Paper>\n          </Grid>\n          \n        </Grid>\n      </div>\n        )\n    }\n}\n\n\nUsers.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n\n\nconst mapStateToProps = state => ({\n    user: state.user,\n})\n\nexport default withStyles(styles)(connect(mapStateToProps)(Users))\n","import React, { Component } from 'react'\nimport List from '../list';\nimport { getVendor, updateVendor,  deleteVendors } from '../../api/inventory/vendorApi';\nimport {Button, TextField, Grid } from '@material-ui/core';\n\nimport {FormControl, InputLabel, Input} from '@material-ui/core'\nimport Swal from 'sweetalert2'\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\n\nclass VendorList extends Component {\n    \n    constructor(props){\n        super(props)\n        this.popUp = this.popUp.bind(this)\n        this.state = {\n            'popUp':false,\n            'vendor':{},\n            'update':{}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.back = this.back.bind(this)\n        this.vendorDelete = this.vendorDelete.bind(this)\n    }\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value][0]\n            }\n        })\n    }\n\n    back(){ \n        if (this.props.data){\n            this.setState({...this.state, popUp:false});\n        }else{\n            this.props.history.push('/vendors')\n        }\n    }\n    async componentDidMount(){\n        try {\n            const {id} = this.props.match.params\n            if (id){\n                await this.popUp(id,0,true)\n            }\n        }catch(e){\n            console.log(e)\n        }\n    }\n    async onSubmit(){\n            var data = this.state.update\n            data = {...data, 'action':'edit'}\n            console.log(data)\n            updateVendor(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        Swal.fire(\n                            'Updated!',\n                            'Vendor Details has been updated.',\n                            'success'\n                          )\n                        this.back()\n                    }\n                    else{\n                        Swal.fire({\n                            icon:'error',\n                            title:data['error']\n                        })                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    vendorDelete(id){\n        var data = {\n            'vendors_id':[\n                id\n            ]\n        }\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to revert this!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, delete it!'\n          }).then((result) => {\n        deleteVendors(JSON.stringify(data)).then(data=>{\n            try {\n                if (data['status']){\n                    Swal.fire({\n                        icon:'success',\n                        title:'Vendor entry has been deleted.',\n                        showConfirmButton: false,\n                        timer:1000\n                    })  \n                    this.back()\n                }   else{\n                    Swal.fire({\n                        icon:'error',\n                        title:data['error']\n                    })                }\n            }catch(e){\n                console.log(e)\n            }\n        })\n    })\n}\n    \n    async popUp(id, uuid=0, fromUrl){\n        if(!fromUrl){\n            this.props.pushNewId(id)\n        }else{\n        const data = {\n            'action':'get',\n            'vendor_id':id,\n        }\n        var data_main;\n        await getVendor(JSON.stringify(data)).then(data => {\n            if (data['status']){\n                data_main=data\n            }\n        })\n        await this.setState({\n            'popUp':true,\n            'vendor':data_main['vendors'][0],\n            'update':data_main['vendors'][0]\n        })\n    }\n}\n\n\n    columns = [\n        {\n            id:1,\n            name:\"Name\",\n            prop: 'name'\n        },\n        {\n            id:2,\n            name:\"Phone Number\",\n            prop: 'phone1'\n        },\n        {\n            id:3,\n            name:\"Email\",\n            prop: 'email'\n        },\n        {\n            id:4,\n            name:\"Address\",\n            prop: 'address'\n        }      \n    ]\n    \n\n    render() {\n        var listData\n        if (!this.props.data){\n            listData = []\n        }else{\n            listData=this.props.data\n        }\n        const list = <List data={listData} header={this.columns}   popUp={this.popUp} update={this.props.update} page={this.props.page} />\n        const popUpRender = <div>\n             \n             \n        <Grid  container spacing={3} justify=\"center\" alignContent='center' alignItems=\"center\">\n        \n            <Grid item xm={4}>\n            <Button  variant=\"contained\" size='small' color=\"primary\" onClick={()=> {this.back()}}>\n                <ArrowLeftIcon></ArrowLeftIcon>\n         Back\n     </Button>          <h1>{this.state.update.name}</h1>\n            &nbsp;\n            &nbsp;\n            &nbsp;\n            &nbsp;\n            &nbsp;\n            &nbsp; \n            \n            </Grid>\n            <Grid item xm={4}>\n            </Grid>\n        </Grid>\n\n        <Grid container  justify=\"center\" alignContent='center' alignItems=\"center\">\n        <Grid item xm={6}>\n            <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n                <Grid item xm={2} > \n                <TextField required value={this.state.update.first_name} id=\"first_name\" label=\"First Name\" name='first_name' autoFocus onChange={this.onChange} />\n                </Grid>\n                <Grid item xm={2}>\n                <TextField id=\"middle_name\"  value={this.state.update.middle_name} label=\"Middle Name\" name='middle_name'  onChange={this.onChange} />\n                </Grid>\n                <Grid item xm={2}>\n                <TextField required id=\"last_name\" value={this.state.update.last_name} label=\"Last Name\" name='last_name'  onChange={this.onChange} />\n                </Grid>\n            </Grid>\n            \n            <Grid container spacing={3}>\n                <Grid item xm={6} md={6}> \n                <FormControl fullWidth required>\n                <InputLabel htmlFor=\"email\">Email address</InputLabel>\n                <Input id=\"email\" required name='email' value={this.state.update.email} fullWidth onChange={this.onChange}   />\n                </FormControl>\n                </Grid>\n                <Grid item xm={6} md={6}> \n                 <TextField\n                                id ='website'\n                                name=\"website\"\n                                label='Website'\n                                value={this.state.update.website}\n                                type='text'\n                                fullWidth\n                                onChange={this.onChange}                                \n                            />\n\n               </Grid>\n            </Grid>\n\n\n            <Grid container spacing={3} >\n                \n                <Grid item xm={6} md={6}> \n                <TextField\n                label=\"Primary Phone Number\"\n                                id ='phone1'\n                                value={this.state.update.phone1}\n                                name=\"phone1\"\n                                fullWidth\n                                required\n                                onChange={this.onChange}                                  \n                            />\n                </Grid>\n                <Grid item xm={6} md={6}> \n                 \n                <TextField\n                    label='Second Phone Number'\n                                id ='phone2'\n                                name=\"phone2\"\n                                value={this.state.update.phone2}\n                                fullWidth\n                                onChange={this.onChange}                                \n                            />\n\n               </Grid>\n            </Grid>\n\n\n            <Grid container spacing={3}>\n\n                <Grid item xm={6} md={6}> \n                <TextField\n                                id ='address'\n                                name=\"address\"\n                                type='text'\n                                label='Address'\n                                value={this.state.update.address}\n                                fullWidth\n                                onChange={this.onChange}\n                                required\n                            />\n                </Grid>\n                <Grid item xm={6} md={6} > \n                <TextField\n                                id ='tax_number'\n                                name=\"tax_number\"\n                                type='number'\n                                fullWidth\n                                label='Tax Number'\n                                value={this.state.update.tax_number}\n                                onChange={this.onChange}  \n                                required                              \n                            />\n               </Grid>\n            </Grid>\n            <Grid container spacing={3}  alignItems='flex-end'>\n\n                <Grid item xm={3} md={6}> \n                <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={()=>{this.onSubmit()}}\n                                >\n                                Update\n                                </Button>\n                </Grid><Grid item xm={3} md={6}> \n                <Button variant=\"contained\" color=\"secondary\" onClick={() => {this.vendorDelete(this.state.update.id)}}>\n                    Delete Vendor\n                </Button> \n               </Grid>\n            </Grid>\n        </Grid>\n        </Grid>\n            \n                        <br>\n                        </br>\n                    </div>\n        return (\n            <div>\n                {this.state.popUp ? popUpRender : list}\n            </div>\n        )\n    }\n}\n\nexport default VendorList\n","import React, { Component } from 'react'\nimport {getVendors} from '../../api/inventory/vendorApi';\nimport {  connect } from 'react-redux';\nimport  VendorList  from './vendorList';\nimport { Link} from 'react-router-dom';\n\nimport Button from '@material-ui/core/Button';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/styles';\nimport PropTypes from 'prop-types';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport LoadingIcon from '../loading';\n\n\nconst styles = makeStyles((theme) => ({\n    root: {\n    flexGrow: 12,\n    },\n    paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    },\n}));\n\nclass Vendors extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            'vendors':[],\n            'loaded':false,\n            'start':0,\n            'end':10,\n            'page':1\n        }\n        this.update_table = this.update_table.bind(this)\n        this.pushNewId = this.pushNewId.bind(this)\n    }\n\n    \n    pushNewId(id){\n        this.props.history.push('/vendors/'+id)\n    }\n    \n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n        this.update_table(0)\n    }\n\n    async update_table (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                'loaded':false,\n                start: 0,\n                end: 10,\n                page:1\n            })\n        }\n        else{\n            if (this.state.start+by>-1){\n                await this.setState({\n                    'loaded':false,\n                    start: this.state.start+by,\n                    end: this.state.end+by,\n                    page:this.state.page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.start,\n            'end':this.state.end\n        }\n        this.getVendorsData(request_json)\n    }\n    \n    async getVendorsData (request_json) {\n        await getVendors(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'vendors':data['vendors'],\n                    'loaded':true\n                })\n            }  \n        })\n    }\n\n \n\nrender() {\n    const { classes } = this.props;\n\n    const render_after_load = (\n        <div>\n            <VendorList data={this.state.vendors} update={this.update_table} page={this.state.page}  pushNewId={this.pushNewId}/>\n        </div>\n    )\n\n    return(\n        <div className={classes.root}>\n        <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n            <Grid item xs={3} >\n            <Button variant=\"contained\" color=\"primary\" onClick={() => {this.update_table(0)}}>\n              <RefreshIcon/>&nbsp;&nbsp;&nbsp;Refresh Table\n              </Button>\n            </Grid>\n            <Grid item xs={5}>\n  \n            </Grid>\n              <Grid item xs={3}>\n              <Link to='/vendors/create' style={{ textDecoration: 'none' }}>\n              <Button variant=\"contained\" color=\"secondary\">\n              <AddCircleIcon/>&nbsp;&nbsp;&nbsp;Add New Discount\n              </Button>\n              </Link>\n              </Grid>\n  \n          <Grid item xs={12}>\n            <Paper className={classes.paper}>\n            {this.state.loaded ? render_after_load : <LoadingIcon></LoadingIcon>}\n            </Paper>\n          </Grid>\n          \n        </Grid>\n      </div>\n    )\n}\n}\n\n\n\nVendors.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n\n\nconst mapStateToProps = state => ({\n    user: state.user,\n})\n\nexport default withStyles(styles)(connect(mapStateToProps)(Vendors))","import { baseRequest } from '../base';\n// api for Invoices \n\nconst getCustomers = async data => {\n    try {\n      return await baseRequest('apiv1/sales/customers','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  \n  const deleteCustomers = async data => {\n    try {\n      return await baseRequest('apiv1/sales/customers/delete','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const createCustomer = async data => {\n      try {\n        return await baseRequest('apiv1/sales/customers','POST', data);\n      } catch(e){\n        alert(e)\n      }\n  };\n  \n  \n  const getCustomer = async data => {\n    try {\n      return await baseRequest('apiv1/sales/customer','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const updateCustomer= async data => {\n    try {\n      return await baseRequest('apiv1/sales/customer','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \nexport {getCustomers, createCustomer, deleteCustomers, updateCustomer, getCustomer}\n  ","import React, { Component } from 'react'\nimport List from '../list';\nimport { getCustomer, updateCustomer,  deleteCustomers } from '../../api/sales/customer';\nimport {Button, TextField, Grid, withStyles } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\n\nimport {FormControl, InputLabel, Input} from '@material-ui/core'\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\nimport Swal from 'sweetalert2'\nimport LoadingIcon from '../loading';\n\n\nconst styles = makeStyles((theme) => ({\n    root: {\n    flexGrow: 12,\n    },\n    paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    },\n}));\n\n\nclass CustomerList extends Component {\n    \n    constructor(props){\n        super(props)\n        this.popUp = this.popUp.bind(this)\n        this.state = {\n            'loading':false,\n            'popUp':false,\n            'customer':{},\n            'update':{}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.customerDelete = this.customerDelete.bind(this)\n        this.back = this.back.bind(this)\n        this.popUp= this.popUp.bind(this)\n    }\n    \n    back(){ \n        if (this.props.data){\n            this.setState({...this.state, popUp:false});\n        }else{\n            this.props.history.push('/customers')\n        }\n    }\n\n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value][0]\n            }\n        })\n    }\n\n    async componentDidMount(){\n        try {\n            const {id} = this.props.match.params\n            if (id){\n                await this.popUp(id,0,true)\n            }\n        }catch(e){\n            console.log(e)\n        }\n    }\n\n    complete(){\n        this.setState({\n            ...this.state,\n            loading:false\n        })\n    }\n    loading(){\n        this.setState({\n            ...this.state,\n            loading:true\n        })\n    }\n\n    async onSubmit(){\n            this.loading()\n            var data = this.state.update\n            data = {...data, 'action':'edit'}\n            updateCustomer(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        Swal.fire(\n                            'Updated!',\n                            'Customer Details has been updated.',\n                            'success'\n                          )\n                            this.back()\n                        }\n                    else{\n                        Swal.fire({\n                            icon:'error',\n                            title:data['error']\n                        })\n                        this.complete()\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n        this.complete()\n    }\n\n    customerDelete(id){\n        this.loading()\n        var data = {\n            'customers_id':[\n                id\n            ]\n        }\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to revert this!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, delete it!'\n          }).then((result) => {\n            if (result.value) {\n                deleteCustomers(JSON.stringify(data)).then(data=>{\n                    try {\n                        if (data['status']){\n                            Swal.fire({\n                                icon:'success',\n                                title:'Customer entry has been deleted.',\n                                showConfirmButton: false,\n                                timer:1000\n                            })\n                            this.back()\n                        }   else{\n                            Swal.fire({\n                                icon:'error',\n                                title:data['error']\n                            })\n                            this.complete()\n                            this.back()\n                        }\n                    }catch(e){\n                        console.log(e)\n                    }\n                })\n              \n            }\n          })\n          this.complete()\n        \n    }\n    \n    async popUp(id, uuid=0, fromUrl=false){\n        this.loading()\n        if(!fromUrl){\n            this.props.pushNewId(id)\n        }else{\n            const data = {\n                'action':'get',\n                'customer_id':id,\n            }\n            var data_main;\n            await getCustomer(JSON.stringify(data)).then(data => {\n                if (data['status']){\n                    data_main=data\n                }\n                else {\n                    Swal.fire(data['error'])\n                    return\n                }\n            })\n            await this.setState({\n                'popUp':true,\n                'update':data_main['customers'][0],\n                'customer':data_main['customers'][0]\n            })\n        }\n        this.complete()\n    }\n\n\n    columns = [\n        {\n            id:1,\n            name:\"Name\",\n            prop: 'name'\n        },\n        {\n            id:2,\n            name:\"Phone Number\",\n            prop: 'phone1'\n        },\n        {\n            id:3,\n            name:\"Email\",\n            prop: 'email'\n        },\n        {\n            id:4,\n            name:\"Address\",\n            prop: 'address'\n        }      \n    ]\n\n\n\n    render() {\n        var listData\n        if (!this.props.data){\n            listData = []\n        }else{\n            listData=this.props.data\n        }\n        const list = <List data={listData} header={this.columns}   popUp={this.popUp} update={this.props.update} page={this.props.page} />\n         const popUpRender =\n         <div>\n            &nbsp;\n            &nbsp;\n            &nbsp;\n            &nbsp;\n            &nbsp;\n            &nbsp; <Button  variant=\"contained\" size='small' color=\"primary\" onClick={()=> {this.back()}}>\n                <ArrowLeftIcon></ArrowLeftIcon>\n         Back\n     </Button>\n        <Grid  container spacing={3} justify=\"center\" alignContent='center' alignItems=\"center\">\n            <Grid item xm={4}>\n            \n            </Grid>\n            <Grid item xs={4}>\n            <h1>{this.state.update.name}</h1>\n            </Grid>\n            <Grid item xm={4}>\n            </Grid>\n        </Grid>\n\n        <Grid container  justify=\"center\" alignContent='center' alignItems=\"center\">\n        <Grid item xm={6}>\n            <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n                <Grid item xm={2} > \n                <TextField required id=\"first_name\" label=\"First Name\" name='first_name' defaultValue={this.state.update.first_name} onChange={this.onChange} autoFocus/>\n                </Grid>\n                <Grid item xm={2}>\n                <TextField required id=\"middle_name\" label=\"Middle Name\" name='middle_name' defaultValue={this.state.update.middle_name} onChange={this.onChange} />\n                </Grid>\n                <Grid item xm={2}>\n                <TextField required id=\"last_name\" label=\"Last Name\" name='last_name' defaultValue={this.state.update.last_name} onChange={this.onChange} />\n                </Grid>\n            </Grid>\n            \n            <Grid container spacing={3}>\n                <Grid item xm={6} md={6}> \n                <FormControl fullWidth>\n                <InputLabel htmlFor=\"email\">Email address</InputLabel>\n                <Input id=\"email\" required name='email' fullWidth onChange={this.onChange} defaultValue={this.state.update.email}  />\n                </FormControl>\n                </Grid>\n                <Grid item xm={6} md={6}> \n                 <TextField\n                                id ='website'\n                                name=\"website\"\n                                label='Website'\n                                type='text'\n                                fullWidth\n                                onChange={this.onChange}                                \n                                defaultValue={this.state.update.website}\n                            />\n\n               </Grid>\n            </Grid>\n\n\n            <Grid container spacing={3} >\n                \n                <Grid item xm={6} md={6}> \n                <TextField\n                label=\"Primary Phone Number\"\n                                id ='phone1'\n                                name=\"phone1\"\n                                fullWidth\n                                onChange={this.onChange}                                  \n                                value={this.state.update.phone1}\n                            />\n                </Grid>\n                <Grid item xm={6} md={6}> \n                 \n                <TextField\n                    label='Second Phone Number'\n                                id ='phone2'\n                                name=\"phone2\"\n                                fullWidth\n                                onChange={this.onChange}                                \n                                value={this.state.update.phone2}\n                            />\n\n               </Grid>\n            </Grid>\n\n\n            <Grid container spacing={3}>\n\n                <Grid item xm={6} md={6}> \n                <TextField\n                                id ='address'\n                                name=\"address\"\n                                type='text'\n                                label='Address'\n                                fullWidth\n                                onChange={this.onChange}\n                                value={this.state.update.address}\n                            />\n                </Grid>\n                <Grid item xm={6} md={6} > \n                <TextField\n                                id ='tax_number'\n                                name=\"tax_number\"\n                                type='number'\n                                fullWidth\n                                label='Tax Number'\n                                onChange={this.onChange}                                \n                                value={this.state.update.tax_number}   \n                            />\n               </Grid>\n            </Grid>\n            <Grid container spacing={3}  alignItems='flex-end'>\n\n                <Grid item xm={3} md={6}> \n                <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={()=>{this.onSubmit()}}\n                                >\n                                Update\n                                </Button>\n                </Grid>\n                <Grid item xm={3} md={6}> \n                <Button variant=\"contained\" color=\"secondary\" onClick={() => {this.customerDelete(this.state.customer.id)}}>\n                    Delete Customer\n                </Button> \n               </Grid>\n            </Grid>\n        </Grid>\n        </Grid><br></br>\n        </div>\n        return (\n            <div>\n                {this.state.loading ?  <LoadingIcon></LoadingIcon> :this.state.popUp ? popUpRender : list}\n            </div>\n        )\n    }\n}\n\nCustomerList.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n\n\nexport default withStyles(styles)(CustomerList)","import React, { Component } from 'react'\nimport {getCustomers} from '../../api/sales/customer';\nimport {  connect } from 'react-redux';\nimport  CustomerList  from './customerList';\nimport { Link} from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/styles';\nimport PropTypes from 'prop-types';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport LoadingIcon from '../loading';\n\nconst styles = makeStyles((theme) => ({\n    root: {\n    flexGrow: 12,\n    },\n    paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    },\n}));\n\n\nclass Customers extends Component {\n    constructor(props, context ){\n        super(props, context)\n        this.state = {\n            'customers':[],\n            'loaded':false,\n            'start':0,\n            'end':10,\n            'page':1\n        }\n        this.update_table = this.update_table.bind(this)\n        this.pushNewId = this.pushNewId.bind(this)\n    }\n\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n        this.update_table(0)    \n    }\n\n    async update_table (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                'loaded':false,\n                start: 0,\n                end: 10,\n                page:1\n            })\n        }\n        else{\n            if (this.state.start+by>-1){\n                await this.setState({\n                    'loaded':false,\n                    start: this.state.start+by,\n                    end: this.state.end+by,\n                    page:this.state.page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.start,\n            'end':this.state.end\n        }\n        this.getCustomersData(request_json)\n    }\n    \n    async getCustomersData (request_json) {\n        await getCustomers(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'customers':data['customers'],\n                    'loaded':true\n                })\n            }  \n        })\n    }\n\n    pushNewId(id){\n        this.props.history.push('/customers/'+id)\n    }\n\n \n\nrender() {\n    const { classes } = this.props;\n\n    const render_after_load = (\n        <div>\n            <CustomerList ref={this.child} data={this.state.customers} update={this.update_table} page={this.state.page} pushNewId={this.pushNewId} />\n        </div>\n    )\n\n    return(\n        <div className={classes.root}>\n      <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n          <Grid item xs={3} >\n          <Button variant=\"contained\" color=\"primary\" onClick={() => {this.update_table(0)}}>\n            <RefreshIcon/>&nbsp;&nbsp;&nbsp;Refresh Table\n            </Button>\n          </Grid>\n          <Grid item xs={5}>\n\n          </Grid>\n            <Grid item xs={3}>\n            <Link to='/customers/create' style={{ textDecoration: 'none' }}>\n            <Button variant=\"contained\" color=\"secondary\">\n            <AddCircleIcon/>&nbsp;&nbsp;&nbsp;Add New Customer\n            </Button>\n            </Link>\n            </Grid>\n\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n          {this.state.loaded ? render_after_load : <LoadingIcon></LoadingIcon>}\n          </Paper>\n        </Grid>\n        \n      </Grid>\n    </div>\n    )\n}\n}\n\n\n\n\n\nCustomers.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n\nconst mapStateToProps = state => ({\n    user: state.user,\n})\n\nexport default withStyles(styles)(connect(mapStateToProps)(Customers))","import React, { Component } from 'react'\n\nimport { createCustomer} from '../../api/sales/customer';\nimport {Button, TextField, Grid, withStyles } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport {  connect } from 'react-redux';\n\nimport {FormControl, InputLabel, Input} from '@material-ui/core'\nimport Swal from 'sweetalert2'\n\nconst styles = makeStyles((theme) => ({\n    root: {\n    flexGrow: 12,\n    },\n    paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    },\n}));\n\n\nclass CustomerCreation extends Component {\n    \n    constructor(props){\n        super(props)\n        this.state = {\n            'customer':{},\n            'update':{\n                'first_name':'',\n                'middle_name':'',\n                'last_name':'',\n                'email':'',\n                'phone1':'',\n                'website':'',\n                'phone2':'',\n                'address':'',\n                'tax_number':''\n            }\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n    \n    \n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n    }\n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value][0]\n            }\n        })\n    }\n\n    \n    async onSubmit(){\n            var data = this.state.update\n            data = {...data, 'action':'add'}\n            createCustomer(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        Swal.fire(\n                            'Updated!',\n                            'New Customer Has Been Added.',\n                            'success'\n                          )\n                    }\n                    else{\n                        Swal.fire({\n                            icon:'error',\n                            title:data['error']\n                        })\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n    render() {\n         const popUpRender =\n         <div>\n            &nbsp;\n            &nbsp;\n            &nbsp;\n            &nbsp;\n            &nbsp;\n            &nbsp; \n        <Grid  container spacing={3} justify=\"center\" alignContent='center' alignItems=\"center\">\n            <Grid item xm={4}>\n            \n            </Grid>\n            <Grid item xs={4}>\n            <h1>Add New Customer</h1>\n            </Grid>\n            <Grid item xm={4}>\n            </Grid>\n        </Grid>\n\n        <Grid container  justify=\"center\" alignContent='center' alignItems=\"center\">\n        <Grid item xm={6}>\n            <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n                <Grid item xm={2} > \n                <TextField required id=\"first_name\" label=\"First Name\" name='first_name' autoFocus onChange={this.onChange} />\n                </Grid>\n                <Grid item xm={2}>\n                <TextField id=\"middle_name\" label=\"Middle Name\" name='middle_name'  onChange={this.onChange} />\n                </Grid>\n                <Grid item xm={2}>\n                <TextField required id=\"last_name\" label=\"Last Name\" name='last_name'  onChange={this.onChange} />\n                </Grid>\n            </Grid>\n            \n            <Grid container spacing={3}>\n                <Grid item xm={6} md={6}> \n                <FormControl fullWidth required>\n                <InputLabel htmlFor=\"email\">Email address</InputLabel>\n                <Input id=\"email\" required name='email' fullWidth onChange={this.onChange}   />\n                </FormControl>\n                </Grid>\n                <Grid item xm={6} md={6}> \n                 <TextField\n                                id ='website'\n                                name=\"website\"\n                                label='Website'\n                                type='text'\n                                fullWidth\n                                onChange={this.onChange}                                \n                            />\n\n               </Grid>\n            </Grid>\n\n\n            <Grid container spacing={3} >\n                \n                <Grid item xm={6} md={6}> \n                <TextField\n                label=\"Primary Phone Number\"\n                                id ='phone1'\n                                name=\"phone1\"\n                                fullWidth\n                                required\n                                onChange={this.onChange}                                  \n                            />\n                </Grid>\n                <Grid item xm={6} md={6}> \n                 \n                <TextField\n                    label='Second Phone Number'\n                                id ='phone2'\n                                name=\"phone2\"\n                                fullWidth\n                                onChange={this.onChange}                                \n                            />\n\n               </Grid>\n            </Grid>\n\n\n            <Grid container spacing={3}>\n\n                <Grid item xm={6} md={6}> \n                <TextField\n                                id ='address'\n                                name=\"address\"\n                                type='text'\n                                label='Address'\n                                fullWidth\n                                onChange={this.onChange}\n                                required\n                            />\n                </Grid>\n                <Grid item xm={6} md={6} > \n                <TextField\n                                id ='tax_number'\n                                name=\"tax_number\"\n                                type='number'\n                                fullWidth\n                                label='Tax Number'\n                                onChange={this.onChange}  \n                                required                              \n                            />\n               </Grid>\n            </Grid>\n            <Grid container spacing={3}  alignItems='flex-end'>\n\n                <Grid item xm={3} md={6}> \n                <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={()=>{this.onSubmit()}}\n                                >\n                                Add\n                                </Button>\n                </Grid>\n                <Grid item xm={3} md={6}> \n                \n               </Grid>\n            </Grid>\n        </Grid>\n        </Grid><br></br>\n        </div>\n        return (\n            <div>\n                {popUpRender}\n            </div>\n        )\n    }\n}\n\nCustomerCreation.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n\n\nconst mapStateToProps = state => ({\n    user: state.user\n})\n\nexport default withStyles(styles)(connect(mapStateToProps)(CustomerCreation))\n","import { baseRequest } from '../base';\n// api for items \n\nconst getPurchaseOrders = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/porders','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  \n  const deletePurchaseOrder = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/porders/delete','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const createPurchaseOrder = async data => {\n      try {\n        return await baseRequest('apiv1/inventory/porders','POST', data);\n      } catch(e){\n        alert(e)\n      }\n  };\n  \n  \n  const getPurchaseOrder = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/porder','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const updatePurchaseOrder= async data => {\n    try {\n      return await baseRequest('apiv1/inventory/porder','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \nexport {getPurchaseOrders, deletePurchaseOrder, createPurchaseOrder, getPurchaseOrder, updatePurchaseOrder}\n  ","import { baseRequest } from '../base';\n// api for items \n\n  \n  const deletePurchaseItems = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/pitems/delete','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const createPurchaseItem = async data => {\n      try {\n        return await baseRequest('apiv1/inventory/pitems','POST', data);\n      } catch(e){\n        alert(e)\n      }\n  };\n  \n  const updatePurchaseItem= async data => {\n    try {\n      return await baseRequest('apiv1/inventory/pitem','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n\n  const getPurchaseItems = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/pitems','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \nexport { getPurchaseItems, deletePurchaseItems, createPurchaseItem, updatePurchaseItem}\n  ","import { baseRequest } from './base';\n \n\nconst getDiscounts = async data => {\n    try {\n      return await baseRequest('apiv1/sales/discounts','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  \n  const deleteDiscounts = async data => {\n    try {\n      return await baseRequest('apiv1/sales/discounts/delete','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const createDiscount = async data => {\n      try {\n        return await baseRequest('apiv1/sales/discounts','POST', data);\n      } catch(e){\n        alert(e)\n      }\n  };\n  \n  \n  const getDiscount = async data => {\n    try {\n      return await baseRequest('apiv1/sales/discount','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const updateDiscount= async data => {\n    try {\n      return await baseRequest('apiv1/sales/discount','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n\n\n  \nconst getTaxes = async data => {\n    try {\n      return await baseRequest('apiv1/sales/taxes','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  \n  const deleteTaxes = async data => {\n    try {\n      return await baseRequest('apiv1/sales/taxes/delete','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const createTax = async data => {\n      try {\n        return await baseRequest('apiv1/sales/taxes','POST', data);\n      } catch(e){\n        alert(e)\n      }\n  };\n  \n  \n  const getTax = async data => {\n    try {\n      return await baseRequest('apiv1/sales/tax','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const updateTax= async data => {\n    try {\n      return await baseRequest('apiv1/sales/tax','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n\n  const getPurchaseOrderStatus= async data => {\n    try {\n      return await baseRequest('apiv1/inventory/status/porders','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n\n  \n  const getPlacements= async data => {\n    try {\n      return await baseRequest('apiv1/inventory/placements','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n\n  const deletePlacement = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/places/assign','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  }\n\n  \nexport {deletePlacement,  getPlacements, getPurchaseOrderStatus, getDiscounts, createDiscount, deleteDiscounts, updateDiscount, getDiscount, getTaxes, createTax, deleteTaxes, updateTax, getTax}\n  ","import { baseRequest } from '../base';\n// api for items \n\nconst getItems = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/items','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  \n  const deleteItems = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/items/delete','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const createItem = async data => {\n      try {\n        return await baseRequest('apiv1/inventory/items','POST', data);\n      } catch(e){\n        alert(e)\n      }\n  };\n  \n  \n  const getItem = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/item','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const updateItem= async data => {\n    try {\n      return await baseRequest('apiv1/inventory/item','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \nexport {getItems, createItem, deleteItems, updateItem, getItem}\n  ","import React, { Component } from 'react'\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport List from '../list';\nimport Popup from \"reactjs-popup\";\nimport style from './css/popUp.module.css';\nimport {getVendors} from '../../api/inventory/vendorApi';\nimport {updatePurchaseOrder, getPurchaseOrder} from '../../api/inventory/purchaseOrder';\nimport {updatePurchaseItem, deletePurchaseItems, createPurchaseItem} from '../../api/inventory/purchaseItem'\nimport {getPurchaseOrderStatus} from '../../api/misc';\nimport {getItems} from '../../api/inventory/itemApi';\nimport { Grid, TextField, Button } from '@material-ui/core';\n\nimport Swal from 'sweetalert2'\n\nimport IconButton from '@material-ui/core/IconButton';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\n\n\n\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\n\n\nclass PopUpEdit extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            'popUp':false,\n            'new':false,\n            'current':0,\n            'status':[],\n            'vendor_selection':[\n                {\n                    'id':0,\n                    'name':'None'\n                }\n            ],\n            'item_selection':[\n                {\n                    'id':0,\n                    'name':\"None\"\n                }\n            ],\n            update : {\n                'purchase_order':{\n                    ...this.props.purchase_order,\n                    'invoiced_on': this.converter(this.props.purchase_order.invoiced_on),\n                    'completed_on': this.converter(this.props.purchase_order.completed_on)\n                },\n                'purchase_items':this.props.purchase_items\n            }\n        }\n        this.refreshTable = this.refreshTable.bind(this)\n        this.getItemData = this.getItemData.bind(this)\n        this.selectItem = this.selectItem.bind(this)\n        this.searchItem = this.searchItem.bind(this)\n        this.addPurchaseItem = this.addPurchaseItem.bind(this)\n        this.invoiceHandler = this.invoiceHandler.bind(this)\n        this.completeHandler = this.completeHandler.bind(this)\n        this.getVendorsData = this.getVendorsData.bind(this)\n        this.converter = this.converter.bind(this)\n        this.popUp = this.popUp.bind(this)\n        this.searchVendor = this.searchVendor.bind(this)\n        this.selectVendor = this.selectVendor.bind(this)\n        this.onChange = this.onChange.bind(this)\n        this.updatePurchaseOrder = this.updatePurchaseOrder.bind(this)\n        this.onChangePI = this.onChangePI.bind(this)\n        this.postPurchaseItem = this.postPurchaseItem.bind(this)\n        this.deletePurchaseItem = this.deletePurchaseItem.bind(this)\n    }\n\n\n    async componentDidMount(){\n        var request_json = {\n            'action':'get',\n        }\n        await getPurchaseOrderStatus(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    ...this.state,\n                    'status':data.data\n                })\n            }  \n        })\n    }\n\n    async getVendorsData (request_json) {\n        console.log(\"getging vendor data\")\n        await getVendors(JSON.stringify(request_json)).then(data => {\n            console.log(\"got\", data)\n            if (data['status']){\n                console.log(\"setting\")\n                this.setState({\n                    'vendor_selection':data['vendors'],\n                })\n            }  \n        })\n    }\n\n    selectVendor(id,name){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_order':{\n                    ...this.state.update.purchase_order,\n                    'vendor':id,\n                    'vendor_name':name\n                }\n            }\n        })\n    }\n\n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_order':{\n                    ...this.state.update.purchase_order,\n                    [e.target.name] : [e.target.value][0]\n                }\n            }\n        })\n    }\n\n    converter(date){\n        return ( new Date(Date.parse(date)))\n    }\n\n    popUp(id){\n        var key\n        for (key in this.state.update.purchase_items){\n            if (this.state.update.purchase_items[key].id === id){\n                this.setState({\n                    ...this.state,\n                    'current':key,\n                    'popUp':true\n                })        \n                return\n            }\n        }\n    }\n\n    searchVendor(e){\n        console.log(\"serch\")\n        if ((e.target.value).length > 2 ){\n            var request_json = {\n                'action':'get',\n                'start':0,\n                'end':10,\n                'filter':'name',\n                'first_name':(e.target.value)\n            }\n            this.getVendorsData(request_json)\n        }\n    }\n    \n    invoiceHandler(date){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_order':{\n                    ...this.state.update.purchase_order,\n                    'invoiced_on' : date\n                }\n            }\n        })\n    }\n    \n    completeHandler(date){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_order':{\n                    ...this.state.update.purchase_order,\n                    'completed_on' : date\n                }\n            }\n        })\n    }\n\n    updatePurchaseOrder(){\n        var request_json = {\n            ...this.state.update.purchase_order,\n            'action':'edit',\n            'purchase_order_id':this.state.update.purchase_order.id\n        }\n        updatePurchaseOrder(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                Swal.fire(\"Purchase Order Details Has Been Updated.\")\n                this.props.update(0)\n            }\n            else{\n                Swal.fire(\"Error : \",data.error)\n            }\n        })\n    }\n\n    onChangePI(e){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_items':{\n                    ...this.state.update.purchase_items,\n                    [this.state.current] : {\n                        ...this.state.update.purchase_items[this.state.current],\n                        [e.target.name] : [e.target.value][0]\n                    },\n                }\n            }\n        })\n    }\n\n    postPurchaseItem(is_new=false){\n        var request_json\n        if (is_new){\n            request_json = {\n                'action':'add',\n                'purchase_order':this.state.update.purchase_order.id,\n                ...this.state.update.purchase_items[this.state.current]\n            }\n            createPurchaseItem(JSON.stringify(request_json)).then(data => {\n                if (data['status']){\n                    Swal.fire(\"Purchase Item Has Been Added.\")\n                    this.refreshTable()\n                }\n                else{\n                    Swal.fire(data['error'])\n                }\n            })\n            return\n        }\n        request_json = {\n            'action':'edit',\n            ...this.state.update.purchase_items[this.state.current]\n        }\n        updatePurchaseItem(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                Swal.fire(\"Purchase Item Details Has Been Updated.\")\n                this.refreshTable()\n            }\n            else{\n                Swal.fire(data['error'])\n            }\n        })\n    }\n\n    deletePurchaseItem(){\n        var request_json = {\n            purchase_items_id : [this.state.update.purchase_items[this.state.current].id]\n        }\n        deletePurchaseItems(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                Swal.fire(\"Purchase Item Has Beed Deleted.\")\n                this.refreshTable()\n            }\n            else{\n                Swal.fire(data['error'])\n            }\n        })\n    }\n\n\n    addPurchaseItem(){\n        var current =0;\n        var item,p_list=[];\n        for (item in this.state.update.purchase_items){\n            if (item.id){\n                if (item.id !== \"Fake Key\"){\n                    current = current + 1\n                    p_list.push(item)\n                }\n            }\n        }\n        this.setState({\n            'current':current,\n            'new':true,\n            'popUp':true,\n            'update':{\n                ...this.state.update,\n                'purchase_items':[\n                    ...p_list,\n                    {\n                        'item_name':\"None\",\n                        'discount_type':'percentage',\n                        'status':'incomplete'\n                    }\n                ]\n            }\n        })\n    }\n    columns = [\n        {\n            id:1,\n            name:\"Item Name\",\n            prop: 'item_name'\n        },\n        {\n            id:2,\n            name:\"Quantity\",\n            prop: 'quantity'\n        },\n        {\n            id:3,\n            name:\"Stock\",\n            prop: 'stock'\n        },\n        {\n            id:4,\n            name:\"Defective\",\n            prop: 'defective'\n        },   \n        {\n            id:5,\n            name:\"Sold\",\n            prop: 'sold'\n        },\n        {\n            id:6,\n            name:\"Discount\",\n            prop: 'discount'\n        },\n        {\n            id:7,\n            name:\"Purchase Price\",\n            prop: 'purchase_price'\n        },\n        {\n            id:8,\n            name:\"Status\",\n            prop: 'status'\n        }\n    ]\n\n    searchItem(e){\n        if ((e.target.value).length > 2 ){\n            var request_json = {\n                'action':'get',\n                'start':0,\n                'end':10,\n                'filter':'name',\n                'name':(e.target.value)\n            }\n            this.getItemData(request_json)\n        }\n    }\n\n    async getItemData(request_json){\n        await getItems(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    ...this.state,\n                    'item_selection':data['items'],\n                })\n            }  \n        })\n    }\n    selectItem(id, name){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_items':{\n                    ...this.state.update.purchase_items,\n                    [this.state.current] : {\n                        ...this.state.update.purchase_items[this.state.current],\n                        'item_name' : name,\n                        'item':id\n                    },\n                }\n            }\n        })\n\n    }\n\n    async refreshTable(){\n        var id = this.state.update.purchase_order.id;\n        var items= [];\n        const request_json = {\n            'action':'get',\n            'purchase_order_id':id\n        }\n        await getPurchaseOrder(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                items = data['p_items']\n            }\n        })\n        if (items.length === 0){\n            items = [{\n                'id':\"Fake Key\",\n                'item_name': ''\n            }]\n        }\n        await this.setState({\n            ...this.state,\n            'popUp':false,\n            'update':{\n                ...this.state.update,\n                'purchase_items':items\n            }\n        })\n    }\n\n\n    render() {\n        const item_selection = this.state.item_selection\n        const itemPopUp = <Popup trigger={ <Button variant=\"contained\" color=\"secondary\" >Select Item</Button>} closeOnDocumentClick>\n        <div>\n            <input placeholder=\"Item Name\" id='item_search_box' name='item_serach_box' onChange={this.searchItem}></input>\n            <div className={style.dropdown_content} id='vendor_dropdown'>\n                    {item_selection.map(\n                        item => (\n                            // use css to get rid of <a>\n                            <a href=\"#\" key={item.id} onClick={() => {this.selectItem(item.id, item.name)}} >{item.name}</a>\n                        )\n                    )}\n            </div>\n        </div>\n        </Popup>\n        const popUpItem = <table cellPadding={10} cellSpacing={10}>\n            <tbody><tr>\n                    <td colSpan={2}>\n                    <IconButton color='secondary' onClick={()=> {this.refreshTable()}}><NavigateBeforeIcon /></IconButton>\n                    </td>\n                </tr>\n            <tr>\n                <td>\n                <TextField\n                    value= {this.state.update.purchase_items[this.state.current].item_name}\n                    InputProps={{\n                        readOnly: true,\n                    }}\n                    \n                    label='Item'\n                    variant=\"outlined\"\n                    />\n                </td>\n                <td>\n                {this.state.new ? itemPopUp: <span></span>}\n                </td>\n            </tr>\n            <tr>\n                <td>\n                <TextField\n                    value={this.state.update.purchase_items[this.state.current].quantity} \n                    type=\"number\" \n                    required \n                    name=\"quantity\" \n                    onChange={this.onChangePI}\n                    label='Quantity'\n                    variant=\"outlined\"\n                    />\n                </td>\n                <td>\n                <TextField\n                    name=\"defective\" \n                    value={this.state.update.purchase_items[this.state.current].defective} \n                    type=\"number\"  \n                    onChange={this.onChangePI}\n                    required\n                    label='Defective'\n                    variant=\"outlined\"\n                    />\n                </td>\n            </tr>\n            <tr>\n                    <td colSpan={2}>\n                        Discount Type  :  <Select lable='Discount Type' fullWidth name='discount_type' id=\"discount_type\"value={this.state.update.purchase_items[this.state.current].discount_type}  onChange={this.onChangePI}>\n                            <MenuItem value=\"percent\">Percentage</MenuItem>\n                            <MenuItem value=\"fixed\">Fixed</MenuItem>\n                        </Select>\n                    </td>\n            </tr>\n            <tr>\n                <td>\n                <TextField\n                    name=\"discount\" \n                    value={this.state.update.purchase_items[this.state.current].discount} \n                    type=\"number\"  \n                    onChange={this.onChangePI}\n                    required\n                    label='Discount'\n                    variant=\"outlined\"\n                    />\n                </td>\n                <td>\n                <TextField\n                    name=\"purchase_price\" \n                    value={this.state.update.purchase_items[this.state.current].purchase_price} \n                    type=\"number\"  \n                    onChange={this.onChangePI}\n                    required\n                    label='Purchase Price'\n                    variant=\"outlined\"\n                    />\n                </td>\n            </tr>\n            <tr>\n                <td colSpan={2}>\n                <Select value= {this.state.update.purchase_items[this.state.current].status} name=\"status\" onChange={this.onChangePI}>\n                    <MenuItem value=\"delivered\">Delivered</MenuItem>\n                    <MenuItem value=\"incomplete\">Incomplete</MenuItem>\n                    <MenuItem value=\"addedtocirculation\">Added To Circulation</MenuItem>\n                </Select>\n                </td>\n            </tr>\n                <tr>\n                    <td>\n                    {this.state.new ? <Button variant=\"contained\" color=\"primary\" onClick={() => {this.postPurchaseItem(true)}} >Add</Button> : <Button variant=\"contained\" color=\"primary\" onClick={() => {this.postPurchaseItem()}} >Update</Button>}\n                    </td>\n                    <td>\n                    {this.state.new ? <span></span>:<Button variant=\"contained\" color=\"secondary\" onClick={() => {this.deletePurchaseItem()}} >Delete</Button>}\n            \n                    </td>\n                </tr>\n                \n                </tbody>\n            </table>\n        const vendor_selection = this.state.vendor_selection\n        const vendorPopup = <Popup trigger={<Button variant=\"contained\" color=\"secondary\">Change Vendor</Button>} closeOnDocumentClick>\n        <div>\n            <input placeholder=\"Vendor's first name\" id='vendor_serach_box' name='vendor_serach_box' onChange={this.searchVendor}></input>\n            <div className={style.dropdown_content} id='vendor_dropdown'>\n                    {vendor_selection.map(\n                        vendor => (\n                            // use css to get rid of <a>\n                            <a href=\"#\" key={vendor.id} onClick={() => {this.selectVendor(vendor.id, vendor.name)}} >{vendor.name}</a>\n                        )\n                    )}\n            </div>\n        </div>\n        </Popup>\n        const status = this.state.status\n                \n        return (\n            <div>\n                <Grid container justify='center'>\n                    <Grid  item xm={6}>\n                    <h1>{this.props.purchase_order.vendor_name}</h1>\n                    </Grid>\n                </Grid>\n                <Grid container justify='center'>\n                    <Grid item xm={6}>\n                        <table cellPadding='10' cellSpacing='10'>\n                            <tbody>\n                                <tr>\n                                    <td>\n                                        <TextField\n                                        value={this.state.update.purchase_order.vendor_name}\n                                        InputProps={{\n                                            readOnly: true,\n                                        }}\n                                        label='Vendor'\n                                        variant=\"outlined\"\n                                        />\n                                    </td>\n                                    <td>\n                                    {vendorPopup}\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td colSpan={2}>\n                                    <TextField\n                                        value={this.state.update.purchase_order.added_by_name}\n                                        InputProps={{\n                                            readOnly: true,\n                                        }}\n                                        label='Added By'\n                                        variant=\"outlined\"\n                                        fullWidth\n                                        />\n                                    </td>\n                                </tr>\n                                \n                                <tr>\n                                    <td>\n                                    Invoiced On:<br></br>\n                                    <DatePicker\n                                    name='invoiced_on'\n                                    selected={this.state.update.purchase_order.invoiced_on}\n                                    onChange={this.invoiceHandler}\n                                    />\n                                    </td>\n                                    <td>\n                                    Completed On : <br></br>\n                                    <DatePicker\n                                    name='completed_on'\n                                    selected={this.state.update.purchase_order.completed_on}\n                                    onChange={this.completeHandler}\n                                    />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                    <TextField\n                                        value={this.state.update.purchase_order.total_cost} \n                                        name=\"total_cost\" \n                                        onChange={this.onChange}\n                                        label='Total Cost'\n                                        variant=\"outlined\"\n                                        fullWidth\n                                        />\n                                    </td>\n                                    <td>\n                                    <TextField\n                                        value= {this.state.update.purchase_order.discount} \n                                        name=\"discount\"\n                                        onChange={this.onChange}\n                                        label='Discount'\n                                        variant=\"outlined\"\n                                        fullWidth\n                                        />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td colSpan={2}>\n                                        Discount Type  :  <Select lable='Discount Type' fullWidth name='discount_type' id=\"discount_type\" onChange={this.onChange} value={this.state.update.purchase_order.discount_type}>\n                                            <MenuItem value=\"percent\">Percentage</MenuItem>\n                                            <MenuItem value=\"fixed\">Fixed</MenuItem>\n                                        </Select>\n                                    </td>\n                                </tr>\n                                <tr >\n                                    <td colSpan={2}>\n                                    Status : <Select name='status' id=\"status\" fullWidth onChange={this.onChange} value={this.state.update.purchase_order.status} required >\n                                    {status.map(\n                                        x => (\n                                        <MenuItem key={x.id} value={parseInt(x.id)}>{x.name}</MenuItem>\n                                        )\n                                    )}\n                                    </Select> \n                            </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <Button  variant=\"contained\" color=\"primary\"  onClick={() => {this.updatePurchaseOrder()}}>\n                                        Update\n                                        </Button>\n                                       \n                                    </td>\n                                    <td>\n                                    <Button  variant=\"contained\" color=\"secondary\"  onClick={() => {this.props.delete(this.props.purchase_order.id)}}>\n                                        Delete\n                                        </Button>\n                                    </td>\n                                </tr>\n\n                            </tbody>\n                        </table><br></br>\n                       </Grid>\n                </Grid>\n                <hr></hr>\n                <Grid container>\n                    <Grid item md={1}>\n\n                    </Grid>\n                    <Grid item md={3}>             \n                        <h1>Items</h1>   \n                    </Grid>\n\n                </Grid>\n                <Grid container justify='center'>\n                    <Grid item xm={8}>\n                    <table cellSpacing={10} cellPadding={10}>\n                    <tbody>\n                        <tr>\n                            <td>\n                            </td>\n                            <td>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td colSpan={3}>\n                            {this.state.popUp ? popUpItem :<div> <Button  variant=\"contained\" color=\"primary\" onClick={() => {this.addPurchaseItem()}}>Add New Items</Button><br></br>\n                            <List data={this.state.update.purchase_items} header={this.columns} page={false} popUp={this.popUp} /></div>}\n                            </td>\n                        </tr>\n                    </tbody>\n                    </table>\n                 \n                \n                </Grid>\n\n                </Grid>\n                </div>\n        )\n    }\n}\nexport default PopUpEdit","import React, { Component } from 'react'\nimport List from '../list';\nimport { getPurchaseOrder, deletePurchaseOrder, updatePurchaseOrder } from '../../api/inventory/purchaseOrder';\nimport PopUpEdit from './popUpEdit';\nimport Swal from 'sweetalert2'\n\nclass PurchaseOrderList extends Component {\n    \n    constructor(props){\n        super(props)\n        this.popUp = this.popUp.bind(this)\n        this.state = {\n            'popUp':false,\n            'purchase_order':{},\n            'purchase_items':[],\n            'update':{}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.purchaseOrderDelete = this.purchaseOrderDelete.bind(this)\n        this.back = this.back.bind(this)\n    }\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value]\n            }\n        })\n    }\n\n    back(){ \n        if (this.props.data){\n            this.setState({...this.state, popUp:false});\n        }else{\n            this.props.history.push('/purchaseorders')\n        }\n    }\n    async componentDidMount(){\n        try {\n            const {id} = this.props.match.params\n            if (id){\n                await this.popUp(id,0,true)\n            }\n        }catch(e){\n            console.log(e)\n        }\n    }\n\n    async onSubmit(e){\n        e.preventDefault();\n            var data = this.state.vendor\n            var ele;\n            for (ele in this.state.update){\n                data[ele] = this.state.update[ele][0]\n            }\n            data = {...data, 'action':'edit'}\n            updatePurchaseOrder(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        Swal.fire({\n                            title:'Updated',\n                            icon:'success',\n                            text:\"Purchase Order Details updated.\"\n                        })\n                        this.back()\n                    }\n                    else{\n                        Swal.fire(data['error'])\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    purchaseOrderDelete(id){\n        var data = {\n            'purchase_orders_id':[\n                id\n            ]\n        }\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to revert this!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, delete it!'\n          }).then((result) => {\n              if(result['value']==true){\n                deletePurchaseOrder(JSON.stringify(data)).then(data=>{\n                    try {\n                        if (data['status']){\n                            Swal.fire('Purchase Order Deleted.')\n                            this.back()\n                        }   else{\n                            Swal.fire(data['error'])\n                        }\n                    }catch(e){\n                        console.log(e)\n                    }\n                })\n            }\n         })\n    }\n    \n    async popUp(id, uuid=0, fromUrl){\n        if(!fromUrl){\n            this.props.pushNewId(id)\n        }else{\n        const data = {\n            'action':'get',\n            'purchase_order_id':id,\n        }\n        var data_main;\n        await getPurchaseOrder(JSON.stringify(data)).then(data => {\n            if (data['status']){\n                data_main=data\n            }\n        })\n        if (data_main['p_items'].length === 0) {\n            console.log(\"blank\")\n            data_main['p_items'] = [{\n                id:0\n            }]\n        }\n        await this.setState({\n            'popUp':true,\n            'purchase_order':data_main['p_order'][0],\n            'purchase_items':data_main['p_items']\n        })\n    }\n}\n\n\n    columns = [\n        {\n            id:1,\n            name:\"Vendor Name\",\n            prop: 'vendor_name'\n        },\n        {\n            id:2,\n            name:\"Items\",\n            prop: 'items'\n        },\n        {\n            id:3,\n            name:\"Invoiced On\",\n            prop: 'invoiced_on'\n        },\n        {\n            id:4,\n            name:\"Total Cost\",\n            prop: 'total_cost'\n        },   \n        {\n            id:5,\n            name:\"Status\",\n            prop: 'status_name'\n        }      \n    ]\n    \n\n    render() {\n        var listData\n        if (!this.props.data){\n            listData = []\n        }else{\n            listData=this.props.data\n        }\n        const list = <List data={listData} header={this.columns}   popUp={this.popUp} update={this.props.update} page={this.props.page} />\n        const popUpRender = <PopUpEdit purchase_order={this.state.purchase_order} purchase_items={this.state.purchase_items} update={this.props.update} delete={this.purchaseOrderDelete} ></PopUpEdit>\n        return (\n            <div>\n                {this.state.popUp ? popUpRender : list}\n            </div>\n        )\n    }\n}\n\nexport default PurchaseOrderList\n","import React, { Component } from 'react'\nimport {getPurchaseOrders} from '../../api/inventory/purchaseOrder';\nimport {  connect } from 'react-redux';\nimport  PurchaseOrderList  from './purchaseOrderList';\nimport { Link} from 'react-router-dom';\n\n\n\nimport Button from '@material-ui/core/Button';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/styles';\nimport PropTypes from 'prop-types';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport LoadingIcon from '../loading';\n\nimport Swal from 'sweetalert2'\n\n\n\nclass PurchaseOrders extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            'purchaseOrders':[],\n            'loaded':false,\n            'start':0,\n            'end':10,\n            'page':1\n        }\n        this.update_table = this.update_table.bind(this)\n        this.pushNewId = this.pushNewId.bind(this)\n    }\n\n    \n    pushNewId(id){\n        this.props.history.push('/purchaseorders/'+id)\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n        this.update_table(0)\n    }\n\n    async update_table (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                'loaded':false,\n                start: 0,\n                end: 10,\n                page:1\n            })\n        }\n        else{\n            if (this.state.start+by>-1){\n                await this.setState({\n                    'loaded':false,\n                    start: this.state.start+by,\n                    end: this.state.end+by,\n                    page:this.state.page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.start,\n            'end':this.state.end\n        }\n        this.getPurchaseOrdersData(request_json)\n    }\n    \n    async getPurchaseOrdersData (request_json) {\n        await getPurchaseOrders(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'purchaseOrders':data['p_orders'],\n                    'loaded':true\n                })\n            } \n            else{\n                Swal.fire(data['error'])\n            } \n        })\n    }\n\n \n\nrender() {\n    const render_after_load = (\n        <div>\n            <PurchaseOrderList pushNewId={this.pushNewId} data={this.state.purchaseOrders} update={this.update_table} page={this.state.page} />\n        </div>\n    )\n\n    return(\n        <div>\n        <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n            <Grid item xs={3} >\n            <Button variant=\"contained\" color=\"primary\" onClick={() => {this.update_table(0)}}>\n              <RefreshIcon/>&nbsp;&nbsp;&nbsp;Refresh Table\n              </Button>\n            </Grid>\n            <Grid item xs={5}>\n  \n            </Grid>\n              <Grid item xs={3}>\n              <Link to='/purchaseorders/create' style={{ textDecoration: 'none' }}>\n              <Button variant=\"contained\" color=\"secondary\">\n              <AddCircleIcon/>&nbsp;&nbsp;&nbsp;Add New Purchase Order\n              </Button>\n              </Link>\n              </Grid>\n  \n          <Grid item xs={12}>\n            <Paper>\n            {this.state.loaded ? render_after_load : <LoadingIcon></LoadingIcon>}\n            </Paper>\n          </Grid>\n          \n        </Grid>\n        </div>\n    )\n}\n}\n\n\n\nconst mapStateToProps = state => ({\n    user: state.user,\n})\n\nexport default connect(mapStateToProps)(PurchaseOrders)\n","import React, { Component } from 'react'\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport List from '../list';\nimport Popup from \"reactjs-popup\";\nimport style from './css/popUp.module.css';\nimport {getVendors} from '../../api/inventory/vendorApi';\nimport {getPurchaseOrder , updatePurchaseOrder, createPurchaseOrder} from '../../api/inventory/purchaseOrder';\nimport {updatePurchaseItem, deletePurchaseItems, createPurchaseItem} from '../../api/inventory/purchaseItem'\nimport {getPurchaseOrderStatus} from '../../api/misc';\nimport {getItems} from '../../api/inventory/itemApi';\n\nimport { Grid, TextField, Button } from '@material-ui/core';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport Swal from 'sweetalert2'\n\n\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\n\nclass PurchaseOrderCreation extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            'registered':false,\n            'popUp':false,\n            'new':false,\n            'current':0,\n            'status':[],\n            'vendor_selection':[\n                {\n                    'id':0,\n                    'name':'None'\n                }\n            ],\n            'item_selection':[\n                {\n                    'id':0,\n                    'name':\"None\"\n                }\n            ],\n            update : {\n                'purchase_order':{\n                    'vendor_name':'',\n                    'total_cost':0,\n                    'discount':0,\n                    'invoiced_on': this.converter((new Date()).toISOString()),\n                    'completed_on': this.converter((new Date()).toISOString()),\n                    'discount_type':'percent'\n                },\n                'purchase_items':[{\n                    'id':\"Fake Key\"\n                }]\n            }\n        }\n        this.converter = this.converter.bind(this)\n        this.addPurchaseOrder = this.addPurchaseOrder.bind(this)\n        this.getItemData = this.getItemData.bind(this)\n        this.selectItem = this.selectItem.bind(this)\n        this.searchItem = this.searchItem.bind(this)\n        this.addPurchaseItem = this.addPurchaseItem.bind(this)\n        this.invoiceHandler = this.invoiceHandler.bind(this)\n        this.completeHandler = this.completeHandler.bind(this)\n        this.getVendorsData = this.getVendorsData.bind(this)\n        this.popUp = this.popUp.bind(this)\n        this.searchVendor = this.searchVendor.bind(this)\n        this.selectVendor = this.selectVendor.bind(this)\n        this.onChange = this.onChange.bind(this)\n        this.updatePurchaseOrder = this.updatePurchaseOrder.bind(this)\n        this.onChangePI = this.onChangePI.bind(this)\n        this.postPurchaseItem = this.postPurchaseItem.bind(this)\n        this.deletePurchaseItem = this.deletePurchaseItem.bind(this)\n        this.refreshTable = this.refreshTable.bind(this)\n    }\n\n    async componentDidMount(){\n        var request_json = {\n            'action':'get',\n        }\n        await getPurchaseOrderStatus(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    ...this.state,\n                    'status':data.data\n                })\n            }  \n        })\n    }\n\n    async getVendorsData (request_json) {\n        await getVendors(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'vendor_selection':data['vendors'],\n                })\n            }  \n        })\n    }\n\n    selectVendor(id,name){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_order':{\n                    ...this.state.update.purchase_order,\n                    'vendor':id,\n                    'vendor_name':name\n                }\n            }\n        })\n    }\n\n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_order':{\n                    ...this.state.update.purchase_order,\n                    [e.target.name] : [e.target.value][0]\n                }\n            }\n        })\n    }\n\n    converter(date){\n        return ( new Date(Date.parse(date)))\n    }\n\n    popUp(id){\n        var key\n        for (key in this.state.update.purchase_items){\n            if (this.state.update.purchase_items[key].id === id){\n                this.setState({\n                    ...this.state,\n                    'current':key,\n                    'popUp':true\n                })        \n                return\n            }\n        }\n    }\n\n    searchVendor(e){\n        if ((e.target.value).length > 2 ){\n            var request_json = {\n                'action':'get',\n                'start':0,\n                'end':10,\n                'filter':'name',\n                'first_name':(e.target.value)\n            }\n            this.getVendorsData(request_json)\n        }\n    }\n    \n    invoiceHandler(date){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_order':{\n                    ...this.state.update.purchase_order,\n                    'invoiced_on' : date\n                }\n            }\n        })\n    }\n    \n    completeHandler(date){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_order':{\n                    ...this.state.update.purchase_order,\n                    'completed_on' : date\n                }\n            }\n        })\n    }\n\n    updatePurchaseOrder(){\n        if (this.state.registered){\n            console.log(this.state)\n            var request_json = {\n                ...this.state.update.purchase_order,\n                'action':'edit',\n                'purchase_order_id':this.state.update.purchase_order.id\n            }\n            updatePurchaseOrder(JSON.stringify(request_json)).then(data => {\n                if (data['status']){\n                    Swal.fire(\"Purchase Order Details Has Been Updated.\")\n                }\n                else{\n                    Swal.fire(data['error'])\n                }\n            })\n        }\n        else{\n            var request_json = {\n                ...this.state.update.purchase_order,\n                'action':'add',\n                'purchase_order_id':this.state.update.purchase_order.id\n            }\n            createPurchaseOrder(JSON.stringify(request_json)).then(data => {\n                if (data['status']){\n                    console.log(data)\n                    Swal.fire(\"Purchase Order Has Been Added.\")\n                    this.setState({\n                        ...this.state,\n                        'registered':true,\n                        'update':{\n                            ...this.state.update,\n                            'purchase_order':{\n                                ...this.state.update.purchase_order,\n                                'id':data['p_orders'][0]['id'],\n                                'added_by':data['p_orders'][0]['added_by_name']\n                            }\n                        }\n                    })\n                }\n                else{\n                    Swal.fire(data['error'])\n                }\n            })\n        }\n        \n    }\n    addPurchaseOrder(){\n        var request_json = {\n            ...this.state.update.purchase_order,\n            'action':'add',\n        }\n        createPurchaseOrder(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                Swal.fire(\"Purchase Order Has Been Added.\")\n                data['p_orders'][0]['invoiced_on'] = this.converter(data['p_orders'][0]['invoiced_on'])\n                data['p_orders'][0]['completed_on'] = this.converter(data['p_orders'][0]['completed_on'])\n                this.setState({\n                    ...this.state,\n                    'update':{\n                        ...this.state.update,\n                        'purchase_order':data['p_orders'][0]\n                    }\n                })\n            }\n            else{\n                Swal.fire(\"Error : \",data.error)\n            }\n        })\n    }\n\n    onChangePI(e){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_items':{\n                    ...this.state.update.purchase_items,\n                    [this.state.current] : {\n                        ...this.state.update.purchase_items[this.state.current],\n                        [e.target.name] : [e.target.value][0]\n                    },\n                }\n            }\n        })\n    }\n\n    postPurchaseItem(is_new=false){\n        var request_json;\n        if (is_new){\n            request_json = {\n                'action':'add',\n                'purchase_order':this.state.update.purchase_order.id,\n                ...this.state.update.purchase_items[this.state.current]\n            }\n            createPurchaseItem(JSON.stringify(request_json)).then(data => {\n                if (data['status']){\n                    Swal.fire(\"Purchase Item Has Been Added.\")\n                    this.refreshTable()\n                }\n                else{\n                    Swal.fire(data['error'])\n                }\n            })\n            return\n        }\n        request_json = {\n            'action':'edit',\n            ...this.state.update.purchase_items[this.state.current]\n        }\n        updatePurchaseItem(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                Swal.fire(\"Purchase Item Details Has Been Updated.\")\n                this.refreshTable()\n            }\n            else{\n                Swal.fire(data['error'])\n            }\n        })\n    }\n\n  \n    deletePurchaseItem(){\n        var request_json = {\n            purchase_items_id : [this.state.update.purchase_items[this.state.current].id]\n        }\n        deletePurchaseItems(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                Swal.fire(\"Purchase Item Has Beed Deleted.\")\n                this.refreshTable()\n            }\n            else{\n                Swal.fire(data['error'])\n            }\n        })\n    }\n\n\n    addPurchaseItem(){\n        var current =0;\n        var item,p_list=[];\n        for (item in this.state.update.purchase_items){\n            if (item.id){\n                if (item.id !== \"Fake Key\"){\n                    current = current + 1\n                    p_list.push(item)\n                }\n            }\n        }\n        this.setState({\n            'current':current,\n            'new':true,\n            'popUp':true,\n            'update':{\n                ...this.state.update,\n                'purchase_items':[\n                    ...p_list,\n                    {\n                        'item_name':\"None\",\n                        'discount_type':'percentage',\n                        'status':'incomplete'\n                    }\n                ]\n            }\n        })\n    }\n\n    columns = [\n        {\n            id:1,\n            name:\"Item Name\",\n            prop: 'item_name'\n        },\n        {\n            id:2,\n            name:\"Quantity\",\n            prop: 'quantity'\n        },\n        {\n            id:3,\n            name:\"Stock\",\n            prop: 'stock'\n        },\n        {\n            id:4,\n            name:\"Defective\",\n            prop: 'defective'\n        },   \n        {\n            id:5,\n            name:\"Sold\",\n            prop: 'sold'\n        },\n        {\n            id:6,\n            name:\"Discount\",\n            prop: 'discount'\n        },\n        {\n            id:7,\n            name:\"Purchase Price\",\n            prop: 'purchase_price'\n        },\n        {\n            id:8,\n            name:\"Status\",\n            prop: 'status'\n        }\n    ]\n\n    searchItem(e){\n        if ((e.target.value).length > 2 ){\n            var request_json = {\n                'action':'get',\n                'start':0,\n                'end':10,\n                'filter':'name',\n                'name':(e.target.value)\n            }\n            this.getItemData(request_json)\n        }\n    }\n\n    async getItemData(request_json){\n        await getItems(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    ...this.state,\n                    'item_selection':data['items'],\n                })\n            }  \n        })\n    }\n    selectItem(id, name){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_items':{\n                    ...this.state.update.purchase_items,\n                    [this.state.current] : {\n                        ...this.state.update.purchase_items[this.state.current],\n                        'item_name' : name,\n                        'item':id\n                    },\n                }\n            }\n        })\n\n    }\n\n    async refreshTable(){\n        var id = this.state.update.purchase_order.id;\n        var items= [];\n        const request_json = {\n            'action':'get',\n            'purchase_order_id':id\n        }\n        await getPurchaseOrder(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                items = data['p_items']\n            }\n        })\n        if (items.length === 0){\n            items = [{\n                'id':\"Fake Key\",\n                'item_name': ''\n            }]\n        }\n        await this.setState({\n            ...this.state,\n            'popUp':false,\n            'update':{\n                ...this.state.update,\n                'purchase_items':items\n            }\n        })\n    }\n\n\n    render() {\n        const item_selection = this.state.item_selection\n        const itemPopUp = <Popup trigger={ <Button variant=\"contained\" color=\"secondary\">Select Item</Button>} closeOnDocumentClick>\n        <div>\n            <input placeholder=\"Item Name\" id='item_search_box' name='item_serach_box' onChange={this.searchItem}></input>\n            <div className={style.dropdown_content} id='vendor_dropdown'>\n                    {item_selection.map(\n                        item => (\n                            // use css to get rid of <a>\n                            <a key={item.id} onClick={() => {this.selectItem(item.id, item.name)}} >{item.name}</a>\n                        )\n                    )}\n            </div>\n        </div>\n        </Popup>\n        const popUpItem = <table cellPadding={10} cellSpacing={10}>\n        <tbody><tr>\n                <td colSpan={2}>\n                <IconButton color='secondary' onClick={()=> {this.refreshTable()}}><NavigateBeforeIcon /></IconButton>\n                </td>\n            </tr>\n        <tr>\n            <td>\n            <TextField\n                value= {this.state.update.purchase_items[this.state.current].item_name}\n                InputProps={{\n                    readOnly: true,\n                }}\n                \n                label='Item'\n                variant=\"outlined\"\n                />\n            </td>\n            <td>\n            {this.state.new ? itemPopUp: <span></span>}\n            </td>\n        </tr>\n        <tr>\n            <td>\n            <TextField\n                value={this.state.update.purchase_items[this.state.current].quantity} \n                type=\"number\" \n                required \n                name=\"quantity\" \n                onChange={this.onChangePI}\n                label='Quantity'\n                variant=\"outlined\"\n                />\n            </td>\n            <td>\n            <TextField\n                name=\"defective\" \n                value={this.state.update.purchase_items[this.state.current].defective} \n                type=\"number\"  \n                onChange={this.onChangePI}\n                required\n                label='Defective'\n                variant=\"outlined\"\n                />\n            </td>\n        </tr>\n        <tr>\n                <td colSpan={2}>\n                    Discount Type  :  <Select lable='Discount Type' fullWidth name='discount_type' id=\"discount_type\"value={this.state.update.purchase_items[this.state.current].discount_type}  onChange={this.onChangePI}>\n                        <MenuItem value=\"percent\">Percentage</MenuItem>\n                        <MenuItem value=\"fixed\">Fixed</MenuItem>\n                    </Select>\n                </td>\n        </tr>\n        <tr>\n            <td>\n            <TextField\n                name=\"discount\" \n                value={this.state.update.purchase_items[this.state.current].discount} \n                type=\"number\"  \n                onChange={this.onChangePI}\n                required\n                label='Discount'\n                variant=\"outlined\"\n                />\n            </td>\n            <td>\n            <TextField\n                name=\"purchase_price\" \n                value={this.state.update.purchase_items[this.state.current].purchase_price} \n                type=\"number\"  \n                onChange={this.onChangePI}\n                required\n                label='Purchase Price'\n                variant=\"outlined\"\n                />\n            </td>\n        </tr>\n        <tr>\n            <td colSpan={2}>\n            <Select value= {this.state.update.purchase_items[this.state.current].status} name=\"status\" onChange={this.onChangePI}>\n                <MenuItem value=\"delivered\">Delivered</MenuItem>\n                <MenuItem value=\"incomplete\">Incomplete</MenuItem>\n                <MenuItem value=\"addedtocirculation\">Added To Circulation</MenuItem>\n            </Select>\n            </td>\n        </tr>\n            <tr>\n                <td>\n                {this.state.new ? <Button variant=\"contained\" color=\"primary\" onClick={() => {this.postPurchaseItem(true)}} >Add</Button> : <Button variant=\"contained\" color=\"primary\" onClick={() => {this.postPurchaseItem()}} >Update</Button>}\n                </td>\n                <td>\n                {this.state.new ? <span></span>:<Button variant=\"contained\" color=\"secondary\" onClick={() => {this.deletePurchaseItem()}} >Delete</Button>}\n        \n                </td>\n            </tr>\n            \n            </tbody>\n        </table>\n        const vendor_selection = this.state.vendor_selection\n        const vendorPopup = <Popup trigger={this.state.update.purchase_order.id ?<Button variant=\"contained\" color=\"secondary\">Change Vendor</Button> :<Button variant=\"contained\" color=\"secondary\">Select Vendor</Button> } closeOnDocumentClick>\n        <div>\n            <input placeholder=\"Vendor's first name\" id='vendor_serach_box' name='vendor_serach_box' onChange={this.searchVendor}></input>\n            <div className={style.dropdown_content} id='vendor_dropdown'>\n                    {vendor_selection.map(\n                        vendor => (\n                            // use css to get rid of <a>\n                            <a key={vendor.id} onClick={() => {this.selectVendor(vendor.id, vendor.name)}} >{vendor.name}</a>\n                        )\n                    )}\n            </div>\n        </div>\n        </Popup>\n        const status = this.state.status\n        return (\n            <div>\n                <Grid container justify='center'>\n                    <Grid  item xm={6}>\n                    <h1>Create New Purchase Order</h1>\n                    </Grid>\n                </Grid>\n                <Grid container justify='center'>\n                    <Grid item xm={6}>\n                        <table cellPadding='10' cellSpacing='10'>\n                            <tbody>\n                                <tr>\n                                    <td>\n                                        <TextField\n                                        value={this.state.update.purchase_order.vendor_name}\n                                        InputProps={{\n                                            readOnly: true,\n                                        }}\n                                        label='Vendor'\n                                        variant=\"outlined\"\n                                        />\n                                    </td>\n                                    <td>\n                                    {vendorPopup}\n                                    </td>\n                                </tr>\n                                \n                                <tr>\n                                    <td>\n                                    Invoiced On:<br></br>\n                                    <DatePicker\n                                    name='invoiced_on'\n                                    selected={this.state.update.purchase_order.invoiced_on}\n                                    onChange={this.invoiceHandler}\n                                    />\n                                    </td>\n                                    <td>\n                                    Completed On : <br></br>\n                                    <DatePicker\n                                    name='completed_on'\n                                    selected={this.state.update.purchase_order.completed_on}\n                                    onChange={this.completeHandler}\n                                    />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                    <TextField\n                                        value={this.state.update.purchase_order.total_cost} \n                                        name=\"total_cost\" \n                                        onChange={this.onChange}\n                                        label='Total Cost'\n                                        variant=\"outlined\"\n                                        fullWidth\n                                        />\n                                    </td>\n                                    <td>\n                                    <TextField\n                                        value= {this.state.update.purchase_order.discount} \n                                        name=\"discount\"\n                                        onChange={this.onChange}\n                                        label='Discount'\n                                        variant=\"outlined\"\n                                        fullWidth\n                                        />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td colSpan={2}>\n                                        Discount Type  :  <Select lable='Discount Type' fullWidth name='discount_type' id=\"discount_type\" onChange={this.onChange} value={this.state.update.purchase_order.discount_type}>\n                                            <MenuItem value=\"percent\">Percentage</MenuItem>\n                                            <MenuItem value=\"fixed\">Fixed</MenuItem>\n                                        </Select>\n                                    </td>\n                                </tr>\n                                <tr >\n                                    <td colSpan={2}>\n                                    Status : <Select name='status' id=\"status\" fullWidth onChange={this.onChange} value={this.state.update.purchase_order.status} required >\n                                    {status.map(\n                                        x => (\n                                        <MenuItem key={x.id} value={parseInt(x.id)}>{x.name}</MenuItem>\n                                        )\n                                    )}\n                                    </Select> \n                            </td>\n                                </tr>\n\n                                <tr>\n                                    <td>\n                                        <Button  variant=\"contained\" color=\"primary\"  onClick={() => {this.updatePurchaseOrder()}}>\n                                        {this.state.registered? 'Update': 'Add'} \n                                        </Button>\n                                       \n                                    </td>\n                                    <td>\n                                    \n                                    </td>\n                                </tr>\n\n                            </tbody>\n                        </table><br></br>\n                       </Grid>\n                </Grid>\n                <hr></hr>\n                <Grid container>\n                    <Grid item md={1}>\n\n                    </Grid>\n                    <Grid item md={3}>             \n                        <h1>Items</h1>   \n                    </Grid>\n\n                </Grid>\n                <Grid container justify='center'>\n                    <Grid item xm={8}>\n                    <table cellSpacing={10} cellPadding={10}>\n                    <tbody>\n                        <tr>\n                            <td>\n                            </td>\n                            <td>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td colSpan={3}>\n                            {this.state.popUp ? popUpItem :<div> <Button  variant=\"contained\" color=\"primary\" onClick={() => {this.addPurchaseItem()}}>Add New Items</Button><br></br>\n                            <List data={this.state.update.purchase_items} header={this.columns} page={false} popUp={this.popUp} /></div>}\n                            </td>\n                        </tr>\n                    </tbody>\n                    </table>\n                 \n                \n                </Grid>\n\n                </Grid>\n                </div>\n        )\n    }\n}\nexport default PurchaseOrderCreation","import { baseRequest } from '../base';\n// api for Invoices \n\nconst getInvoices = async data => {\n    try {\n      return await baseRequest('apiv1/sales/invoices','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  \n  const deleteInvoices = async data => {\n    try {\n      return await baseRequest('apiv1/sales/invoices/delete','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const createInvoice = async data => {\n      try {\n        return await baseRequest('apiv1/sales/invoices','POST', data);\n      } catch(e){\n        alert(e)\n      }\n  };\n  \n  \n  const getInvoice = async data => {\n    try {\n      return await baseRequest('apiv1/sales/invoice','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const updateInvoice= async data => {\n    try {\n      return await baseRequest('apiv1/sales/invoice','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  const getInvoiceStatus= async data => {\n    try {\n      return await baseRequest('apiv1/sales/invoices/status','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \nexport {getInvoiceStatus, getInvoices, createInvoice, deleteInvoices, updateInvoice, getInvoice}\n  ","import { baseRequest } from '../base';\n// api for Invoices \n\nconst getInvoiceItems = async data => {\n    try {\n      return await baseRequest('apiv1/sales/invoiceitems','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  \n  const deleteInvoiceItems = async data => {\n    try {\n      return await baseRequest('apiv1/sales/invoiceitems/delete','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const createInvoiceItem = async data => {\n      try {\n        return await baseRequest('apiv1/sales/invoiceitems','POST', data);\n      } catch(e){\n        alert(e)\n      }\n  };\n  \n  \n  const getInvoiceItem = async data => {\n    try {\n      return await baseRequest('apiv1/sales/invoiceitem','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const updateInvoiceItem= async data => {\n    try {\n      return await baseRequest('apiv1/sales/invoiceitem','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \nexport {getInvoiceItems, createInvoiceItem, deleteInvoiceItems, updateInvoiceItem, getInvoiceItem}\n  ","import { baseRequest } from '../base';\n// api for items \n\nconst getPlaces = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/places','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  \n  const deletePlaces = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/places/delete','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const createPlace = async data => {\n      try {\n        return await baseRequest('apiv1/inventory/places','POST', data);\n      } catch(e){\n        alert(e)\n      }\n  };\n  \n  \n  const getPlace = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/place','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const updatePlace = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/place','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n\n  const assignPlace = async data => {\n    try { \n      return await  baseRequest('apiv1/inventory/places/assign','POST', data);\n    } catch (e){\n      alert(e)\n    }\n  }\n  \nexport {getPlaces, createPlace, deletePlaces, updatePlace, getPlace, assignPlace}\n  ","import React, { Component } from 'react'\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport List from '../list';\nimport Popup from \"reactjs-popup\";\nimport style from '../purchaseOrder/css/popUp.module.css';\nimport {getCustomers} from '../../api/sales/customer';\nimport {updateInvoice, getInvoice, deleteInvoices, getInvoiceStatus} from '../../api/sales/invoice';\nimport {updateInvoiceItem, deleteInvoiceItems, createInvoiceItem} from '../../api/sales/invoiceItem'\nimport {getItems} from '../../api/inventory/itemApi';\nimport {getPlaces} from '../../api/inventory/placeApi';\nimport { getDiscounts, getTaxes } from '../../api/misc'\nimport { Grid } from '@material-ui/core';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport Table from 'react-bootstrap/Table'\n\nimport IconButton from '@material-ui/core/IconButton';\n\nimport {Button, TextField } from '@material-ui/core';\n\nimport Swal from 'sweetalert2'\n\n\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\n\n\nclass PopUpEdit extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            'tax_start':0,\n            'tax_end':5,\n            'discount_start':0,\n            'discount_end':5,\n            'tax_loaded':false,\n            'discount_loaded':false,\n            'discount_page':[],\n            'tax_page':[],\n            'discount_selection':[],\n            'tax_selection':[],\n            'place_selection':[],\n            'stock_selection':[],\n            'sold_from_selection':[],\n            'popUp':false,\n            'new':false,\n            'current':0,\n            'status':[],\n            'customer_selection':[\n                {\n                    'id':0,\n                    'name':'None'\n                }\n            ],\n            'item_selection':[\n                {\n                    'id':0,\n                    'name':\"None\"\n                }\n            ],\n            update : {\n                'invoice':{\n                    ...this.props.invoice,\n                    'invoiced_on': this.converter(this.props.invoice.invoiced_on),\n                    'due_on': this.converter(this.props.invoice.due_on)\n                },\n                'invoice_items':this.props.invoice_items\n            }\n        }\n        this.update_table = this.update_table.bind(this)\n        this.stateman = this.stateman.bind(this)\n        this.refreshTable = this.refreshTable.bind(this)\n        this.getItemData = this.getItemData.bind(this)\n        this.selectItem = this.selectItem.bind(this)\n        this.searchItem = this.searchItem.bind(this)\n        this.addInvoiceItem = this.addInvoiceItem.bind(this)\n        this.invoiceHandler = this.invoiceHandler.bind(this)\n        this.dueOnHandler = this.dueOnHandler.bind(this)\n        this.getCustomerData = this.getCustomerData.bind(this)\n        this.converter = this.converter.bind(this)\n        this.popUp = this.popUp.bind(this)\n        this.searchCustomer = this.searchCustomer.bind(this)\n        this.selectCustomer = this.selectCustomer.bind(this)\n        this.onChange = this.onChange.bind(this)\n        this.updateInvoice = this.updateInvoice.bind(this)\n        this.onChangePI = this.onChangePI.bind(this)\n        this.postInvoiceItem = this.postInvoiceItem.bind(this)\n        this.deleteInvoiceItem = this.deleteInvoiceItem.bind(this)\n        this.onChangePlace = this.onChangePlace.bind(this)\n        this.removeEntry = this.removeEntry.bind(this)\n        this.addEntryDiscount = this.addEntryDiscount.bind(this)\n        this.addEntryTax = this.addEntryTax.bind(this)\n        this.popUpTemp = this.popUpTemp.bind(this)\n    }\n    popUpTemp(){\n\n    }\n    removeEntry(id, dis){\n        if (dis){\n            var temp = this.state.update.invoice_items[this.state.current].applied_discount\n            temp.pop(dis)\n            var temp2 = this.state.update.invoice_items[this.state.current].discount\n            temp2.pop(temp.id)\n            this.setState({\n                ...this.state,\n                'update':{\n                    ...this.state.update,\n                    invoice_items:{\n                        ...this.state.update.invoice_items,\n                        [dis]:{\n                            'applied_discount':temp,\n                            'discount':temp2\n                            }\n                        }\n                    }\n                })\n            }\n        else {\n                var temp = this.state.update.invoice_items[this.state.current].applied_tax\n                temp.pop(dis)\n                var temp2 = this.state.update.invoice_items[this.state.current].taxes\n                temp2.pop(temp.id)\n                this.setState({\n                    ...this.state,\n                    'update':{\n                        ...this.state.update,\n                        invoice_items:{\n                            ...this.state.update.invoice_items,\n                            [dis]:{\n                                'applied_tax':temp,\n                                'taxes':temp2\n                            }\n                        }\n                    }\n                })\n    }\n}\n\n    async componentDidMount(){\n        var request_json = {\n            'action':'get',\n        }\n        await getInvoiceStatus(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    ...this.state,\n                    'status':data.data\n                })\n            }\n        })\n    }\n\n    async getCustomerData (request_json) {\n        await getCustomers(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'customer_selection':data['customers'],\n                })\n            } \n            \n            else{\n                Swal.fire({\n                    icon:'error',\n                    title:data['error']\n                })\n            } \n        })\n    }\n\n    selectCustomer(id,name){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice':{\n                    ...this.state.update.invoice,\n                    'customer':id,\n                    'customer_name':name\n                }\n            }\n        })\n    }\n\n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice':{\n                    ...this.state.update.invoice,\n                    [e.target.name] : [e.target.value][0]\n                }\n            }\n        })\n    }\n\n    converter(date){\n        return ( new Date(Date.parse(date)))\n    }\n\n    popUp(id){\n        var key\n        for (key in this.state.update.invoice_items){\n            if (this.state.update.invoice_items[key].id === id){\n                this.setState({\n                    ...this.state,\n                    'current':key,\n                    'popUp':true\n                }) \n                break;       \n            }\n        }\n        var request_json = {\n            'action':'get',\n            'filter':'item',\n            'item_id':this.state.update.invoice_items[key].item  \n        }\n        this.getPlacesData(request_json)\n    }\n\n    async getPlacesData(request_json) {\n        await getPlaces(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'sold_from_selection':data['placements'],\n                })\n                var temp = [], key, x;\n                for(key in data['placements']){\n                    x = {'id': data['placements'][key]['placed_on'], 'str_placed_on':data['placements'][key]['str_placed_on']}\n                    temp[data['placements'][key]['placed_on']] = x\n                    }\n                temp = temp.filter(function (el) {\n                    return el != null;\n                });\n                this.setState({\n                    'place_selection':temp\n                })\n                this.update_stock(data)\n            }\n            else{\n                Swal.fire({\n                    icon:'error',\n                    title:data['error']\n                })\n            }\n        })\n\n    }\n\n    // data = sold_From_selection\n    update_stock(data){\n        var sold_from;\n        if (this.state.update.invoice_items[this.state.current]['sold_from']){\n            sold_from = this.state.update.invoice_items[this.state.current]['sold_from']\n        }else {\n            sold_from = data['placements'][0]['placed_on']\n        }\n        var temp=[];\n        var p ;\n        for (p in data['placements']){\n            if (sold_from === data['placements'][p]['placed_on']){\n                var string  = data['placements'][p]['purchase_item_details']['purchase_price'] + \"/-  \" + data['placements'][p]['purchase_item_details']['quantity'] + \" \" + data['placements'][p]['purchase_item_details']['vendor'] \n                temp.push({\n                    'id': data['placements'][p]['purchase_item'],\n                    'str':string\n                })\n            }\n            \n        }\n        this.setState({\n            ...this.state,\n            'stock_selection': temp\n        })\n    }  \n    \n\n    async onChangePlace(e){\n        await this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice_items':{\n                    ...this.state.update.invoice_items,\n                    [this.state.current] : {\n                        ...this.state.update.invoice_items[this.state.current],\n                        [e.target.name] : [e.target.value][0]\n                    },\n                }\n            }\n        })\n        var temp=[],p;\n                for (p in this.state.sold_from_selection){\n                    if ( parseInt( this.state.update.invoice_items[this.state.current]['sold_from']) ===parseInt( this.state.sold_from_selection[p]['placed_on'])){\n                        var string  = this.state.sold_from_selection[p]['purchase_item_details']['purchase_price'] + \"/-  \" + this.state.sold_from_selection[p]['purchase_item_details']['quantity'] + \" \" + this.state.sold_from_selection[p]['purchase_item_details']['vendor'] \n                        temp.push({\n                            'id': this.state.sold_from_selection[p]['purchase_item'],\n                            'str':string\n                        })\n                    }\n                }\n                this.setState({\n                    ...this.state,\n                    'stock_selection': temp\n                }) \n    }\n\n    searchCustomer(e){\n        if ((e.target.value).length > 2 ){\n            var request_json = {\n                'action':'get',\n                'start':0,\n                'end':10,\n                'filter':'name',\n                'name':(e.target.value)\n            }\n            this.getCustomerData(request_json)\n        }\n    }\n    \n    invoiceHandler(date){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice':{\n                    ...this.state.update.invoice,\n                    'invoiced_on' : date\n                }\n            }\n        })\n    }\n    \n    dueOnHandler(date){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice':{\n                    ...this.state.update.invoice,\n                    'due_on' : date\n                }\n            }\n        })\n    }\n\n    updateInvoice(){\n        var request_json = {\n            ...this.state.update.invoice,\n            'action':'edit',\n            'invoice_id':this.state.update.invoice.id\n        }\n        updateInvoice(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                Swal.fire(\"Invoice Details Has Been Updated.\")\n                this.props.update(0)\n            }\n            else{\n                Swal.fire({\n                    icon:'error',\n                    title:data['error']\n                })            }\n        })\n    }\n\n    onChangePI(e){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice_items':{\n                    ...this.state.update.invoice_items,\n                    [this.state.current] : {\n                        ...this.state.update.invoice_items[this.state.current],\n                        [e.target.name] : [e.target.value][0]\n                    },\n                }\n            }\n        })\n    }\n\n    postInvoiceItem(is_new=false){\n        var request_json\n        if (is_new){\n            request_json = {\n                'action':'add',\n                'invoice':this.state.update.invoice.id,\n                ...this.state.update.invoice_items[this.state.current],\n            }\n            request_json['applied_tax'] = []\n            request_json['applied_discount'] = []\n            createInvoiceItem(JSON.stringify(request_json)).then(data => {\n                if (data['status']){\n                    Swal.fire(\"Invoice Item Has Been Added.\")\n                    this.refreshTable()\n                }\n                else{\n                    Swal.fire({\n                        icon:'error',\n                        title:data['error']\n                    })                   }\n            })\n            return\n        }\n        request_json = {\n            'action':'edit',\n            'invoice':this.state.update.invoice.id,\n            'invoice_item_id':this.state.update.invoice_items[this.state.current].id,\n            ...this.state.update.invoice_items[this.state.current]\n        }\n        request_json['applied_tax'] = []\n        request_json['applied_discount'] = []\n        updateInvoiceItem(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                Swal.fire(\"Invoice Item Details Has Been Updated.\")\n                this.refreshTable()\n            }\n            else{\n                Swal.fire({\n                    icon:'error',\n                    title:data['error']\n                })               }\n        })\n    }\n\n    deleteInvoiceItem(){\n        var request_json = {\n            invoice_items_id : [this.state.update.invoice_items[this.state.current].id]\n        }\n        \n    Swal.fire({\n        title: 'Are you sure?',\n        text: \"You won't be able to revert this!\",\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Yes, delete it!'\n      }).then((result) => {\n        deleteInvoiceItems(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                Swal.fire(\"Invoice Item Has Beed Deleted.\")\n                this.refreshTable()\n            }\n            else{\n                Swal.fire({\n                    icon:'error',\n                    title:data['error']\n                })               }\n        })\n    })\n    }\n\n    addInvoiceItem(){\n        var current =0;\n        var item,p_list=[];\n        for (item in this.state.update.invoice_items){\n            if (item.id){\n                if (item.id !== \"Fake Key\"){\n                    current = current + 1\n                    p_list.push(item)\n                }\n            }\n        }\n        this.setState({\n            'current':current,\n            'new':true,\n            'popUp':true,\n            'update':{\n                ...this.state.update,\n                'invoice_items':[\n                    ...p_list,\n                    {\n                        'item_name':\"None\",\n                        'discount_type':'percentage',\n                        'status':'incomplete',\n                        'discount':[],\n                        'taxes':[],\n                        'applied_tax':[],\n                        'applied_discount':[],\n                        'purchase_item':'',\n                    }\n                ]\n            }\n        })\n    }\n    columns = [\n        {\n            id:1,\n            name:\"Item Name\",\n            prop: 'item_name'\n        },\n        {\n            id:2,\n            name:\"Quantity\",\n            prop: 'quantity'\n        },\n        {\n            id:8,\n            name:\"Price\",\n            prop: 'price'\n        },\n        {\n            id:3,\n            name:\"Sold From\",\n            prop: 'sold_from_name'\n        },\n        {\n            id:4,\n            name:\"Tax Total\",\n            prop: 'tax_total'\n        },\n        ,\n        {\n            id:5,\n            name:\"Disount Amount\",\n            prop: 'discount_amount'\n        },   \n        {\n            id:6,\n            name:\"Sub Total\",\n            prop: 'sub_total'\n        },\n        {\n            id:7,\n            name:\"Total\",\n            prop: 'total'\n        }\n    ]\n\n    searchItem(e){\n        if ((e.target.value).length > 2 ){\n            var request_json = {\n                'action':'get',\n                'start':0,\n                'end':10,\n                'filter':'name',\n                'name':(e.target.value)\n            }\n            this.getItemData(request_json)\n        }\n    }\n\n    async getItemData(request_json){\n        await getItems(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    ...this.state,\n                    'item_selection':data['items'],\n                })\n            }  \n            \n            else{\n                Swal.fire({\n                    icon:'error',\n                    title:data['error']\n                })            }\n        })\n    }\n    selectItem(id, name){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice_items':{\n                    ...this.state.update.invoice_items,\n                    [this.state.current] : {\n                        ...this.state.update.invoice_items[this.state.current],\n                        'item_name' : name,\n                        'item':id\n                    },\n                }\n            }\n        })\n        var request_json = {\n            'action':'get',\n            'filter':'item',\n            'item_id':id\n        }\n        this.getPlacesData(request_json)\n    }\n\n    async refreshTable(){\n        var id = this.state.update.invoice.id;\n        var items= [];\n        const request_json = {\n            'action':'get',\n            'invoice_id':id\n        }\n        await getInvoice(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                items = data['invoice_items']\n            }\n            \n            else{\n                Swal.fire({\n                    icon:'error',\n                    title:data['error']\n                })            }\n        })\n        if (items.length === 0){\n            items = [{\n                'id':\"Fake Key\",\n                'item_name': ''\n            }]\n        }\n        await this.setState({\n            ...this.state,\n            'popUp':false,\n            'update':{\n                ...this.state.update,\n                'invoice_items':items\n            }\n        })\n    }\n\n\n    stateman(){\n    }\n\n\n    discount_columns =[\n        {\n            'id':1,\n            'name':'Name',\n            'prop':'name'\n        },{\n            'id':2,\n            'name':'Rate',\n            'prop':'rate'\n        },{\n            'id':3,\n            'name':'Code',\n            'prop':'code'\n        },{\n            'id':4,\n            'name':'Type',\n            'prop':'discount_type'\n        },{\n            'id':5,\n            'name':'Remove',\n            'prop':'removeButton'\n        },\n    ]\n\n    tax_columns =[\n        {\n            'id':1,\n            'name':'Name',\n            'prop':'name'\n        },{\n            'id':2,\n            'name':'Rate',\n            'prop':'rate'\n        },{\n            'id':3,\n            'name':'Code',\n            'prop':'code'\n        },{\n            'id':4,\n            'name':'Type',\n            'prop':'tax_type'\n        },{\n            'id':5,\n            'name':'Remove',\n            'prop':'removeButton'\n        },\n    ]\n\n    \n    add_discount_columns =[\n        {\n            'id':1,\n            'name':'Name',\n            'prop':'name'\n        },{\n            'id':2,\n            'name':'Rate',\n            'prop':'rate'\n        },{\n            'id':3,\n            'name':'Code',\n            'prop':'code'\n        },{\n            'id':4,\n            'name':'Type',\n            'prop':'discount_type'\n        }\n    ]\n\n    add_tax_columns =[\n        {\n            'id':1,\n            'name':'Name',\n            'prop':'name'\n        },{\n            'id':2,\n            'name':'Rate',\n            'prop':'rate'\n        },{\n            'id':3,\n            'name':'Code',\n            'prop':'code'\n        },{\n            'id':4,\n            'name':'Type',\n            'prop':'tax_type'\n        }\n    ]\n\n    async update_table (by,dis) {\n        var x = by<0?-1:1\n        if (dis){\n            if (by===0){\n                await this.setState({\n                    'discoount_loaded':false,\n                    discount_start: 0,\n                    discount_end: 10,\n                    discount_page:1\n                })\n            }\n            else{\n                if (this.state.discount_start+by>-1){\n                    await this.setState({\n                        'discount_loaded':false,\n                        discount_start: this.state.discount_start+by,\n                        discount_end: this.state.discount_end+by,\n                        discount_page:this.state.discount_page+x\n                    })\n                }\n                else{\n                    alert(\"Cannot move futher from here.\")\n                    return\n                }\n            }\n            var  request_json = {\n                'action':'get',\n                'filter':'none',\n                'start':this.state.discount_start,\n                'end':this.state.discount_end\n            }\n            this.getDiscountsData(request_json)\n        }\n    else { \n        if (by===0){\n            await this.setState({\n                'tax_loaded':false,\n                tax_start: 0,\n                tax_end: 10,\n                tax_page:1\n            })\n        }\n        else{\n            if (this.state.tax_start+by>-1){\n                await this.setState({\n                    'tax_loaded':false,\n                    tax_start: this.state.tax_start+by,\n                    tax_end: this.state.tax_end+by,\n                    tax_page:this.state.tax_page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.tax_start,\n            'end':this.state.tax_end\n        }\n        this.getTaxesData(request_json)\n\n    }\n    }\n    \n    async getDiscountsData (request_json) {\n        await getDiscounts(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'discount_selection':data['discounts'],\n                    'discount_loaded':true\n                })\n            }\n            else{\n                Swal.fire({\n                    icon:'error',\n                    title:data['error']\n                })            }\n        })\n    }\n    async getTaxesData (request_json) {\n        await getTaxes(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'tax_selection':data['taxes'],\n                    'tax_loaded':true\n                })\n            }  \n        })\n    }\n \n    addEntryDiscount(id){\n        var dis;\n        var temp,temp2;\n        for (dis in this.state.discount_selection){\n            if (this.state.discount_selection[dis].id === id){\n                temp = this.state.update.invoice_items[this.state.current]['applied_discount']\n                var x = this.state.discount_selection[dis]\n                temp.push(x)\n                temp2 = this.state.update.invoice_items[this.state.current]['discount']\n                temp2.push(id)\n                this.setState({\n                    ...this.state,\n                    update:{\n                        ...this.state.update,\n                        'invoice_items':{\n                            ...this.state.update.invoice_items,\n                            [this.state.current] : {\n                                ...this.state.update.invoice_items[this.state.current],\n                                'discount':temp2,\n                                'applied_discount': temp\n                            }\n                        }\n                    }\n                })\n            }\n        }\n    }\n\n    addEntryTax(id){\n        var dis;\n        for (dis in this.state.tax_selection){\n            if (this.state.tax_selection[dis].id === id){\n                var temp = this.state.update.invoice_items[this.state.current]['applied_tax']\n                var x = this.state.tax_selection[dis]\n                temp.push(x)\n                var temp2 = this.state.update.invoice_items[this.state.current]['taxes']\n                temp2.push(id)\n                this.setState({\n                    ...this.state,\n                    update:{\n                        ...this.state.update,\n                        'invoice_items':{\n                            ...this.state.update.invoice_items,\n                            [this.state.current] : {\n                                ...this.state.update.invoice_items[this.state.current],\n                                'tax':temp2,\n                                'applied_tax': temp\n                            }\n                        }\n                    }\n                })\n            }\n        }\n    }\n\n\n    render() {\n        const item_selection = this.state.item_selection\n        const itemPopUp = <Popup trigger={ <Button variant=\"contained\" color=\"primary\" size='small'>Select Item</Button>} closeOnDocumentClick>\n        <div>\n            <input placeholder=\"Item Name\" id='item_search_box' name='item_serach_box' onChange={this.searchItem}></input>\n            <div className={style.dropdown_content} id='item_dropdown'>\n                    {item_selection.map(\n                        item => (\n                        <a key={item.id} onClick={() => {this.selectItem(item.id, item.name)}} >{item.name} {item.sales_price}</a>\n                        )\n                    )}\n            </div>\n        </div>\n        </Popup>\n\n        var places = this.state.place_selection\n        const selectPlace =<select name='sold_from' id=\"sold_from\" onChange={this.onChangePlace} value={this.state.update.invoice_items[this.state.current].sold_from}  >\n            <option key=\"Fake Key\" value='Fake Value'>Select Place</option>\n                {places.map(\n                    x => (\n                    <option key={x.id} value={x.id}>{x.str_placed_on}</option>\n                    )\n                )}\n            </select>\n\n            \n        var stocks  = this.state.stock_selection\n        var stockValue = this.state.update.invoice_items[this.state.current].purchase_item ? this.state.update.invoice_items[this.state.current].purchase_item : ''\n        const selectStock = <select name='purchase_item' id=\"purchase_item\" onChange={this.onChangePI} value={stockValue} >\n                <option key='Fake Key' value=\"Fake Value\">Select Stock</option>\n                {stocks.map(\n                    x => (\n                    <option key={x.id} value={parseInt(x.id)}>{x.str}</option>\n                    )\n                )}\n            </select>\n        const addPopupDiscount = <div>\n\n            <h3> Click To Apply New Discount</h3>\n            <Grid container justify='center'>\n                <Grid item xm={12} md={12}>\n            <List data={this.state.discount_selection} header={this.add_discount_columns} page={false} popUp={this.addEntryDiscount} />\n            </Grid>\n            <Grid item xm={12} md={3}>\n            <IconButton onClick={()=> {this.update_table(-5,true)}}><NavigateBeforeIcon /></IconButton><span>      {this.state.discount_page}       </span><IconButton  onClick={()=> {this.update_table(5,true)}} ><NavigateNextIcon /></IconButton>\n            </Grid>\n                            \n            </Grid>\n                            </div>\n        \n        const addPopupTax = <div>\n            <h3>Click To Apply New Tax </h3>\n            <Grid container justify='center'>\n                <Grid item xm={12} md={12}>\n            <List data={this.state.tax_selection} header={this.add_tax_columns} page={false} popUp={this.addEntryTax} />\n            </Grid>\n            <Grid item xm={12} md={3}>\n            <IconButton onClick={()=> {this.update_table(-5,false)}}><NavigateBeforeIcon /></IconButton><span>      {this.state.discount_page}       </span><IconButton  onClick={()=> {this.update_table(5,false)}} ><NavigateNextIcon /></IconButton>\n            </Grid>\n                            \n            </Grid>\n            </div>\n        \n\n        var dis;\n        const discounts =this.state.update.invoice_items[this.state.current].applied_discount\n        for (dis in discounts){\n            discounts[dis] = {\n                ...discounts[dis],\n                'removeButton':<button onClick={() => {this.removeEntry(dis,true)}}> Remove </button>\n            }\n        }\n        \n        const taxes = this.state.update.invoice_items[this.state.current].applied_tax\n        for (dis in taxes){\n            taxes[dis] = {\n                ...taxes[dis],\n                'removeButton':<button onClick={()=>{this.removeEntry(dis,false)}}> Remove </button>\n            }\n        }\n        const popUpItem = <div>\n            <Grid container justify='center'>\n                <Grid item md={'auto'}>\n\n            <Table cellSpacing={10} cellPadding={10} responsive=\"sm\" >\n                <tbody>\n\n               \n                <tr>\n                    <td>\n                    <Button  variant=\"contained\" color=\"secondary\" onClick={() => {this.refreshTable()}} >Back</Button>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                    <h3>Item :  {this.state.update.invoice_items[this.state.current].item_name}</h3>\n                    </td>\n                    <td>\n                    {itemPopUp}\n                    </td>\n                </tr>\n                <tr>\n                    <th colSpan={2} >\n                        <b>Sold From </b>\n                    </th>\n                </tr>\n\n                <tr>\n                    <td>\n                        Place: \n                    </td>\n                    <td>\n                    {this.state.update.invoice_items[this.state.current].item ? selectPlace : \"Select An Item First\" }\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                    Stock :\n                    </td>\n                    <td>\n                    {this.state.update.invoice_items[this.state.current].item ? selectStock : \"Select An Item First\" }\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                    Quantity : <input name=\"quantity\" placeholder={this.state.update.invoice_items[this.state.current].quantity} type=\"number\" onChange={this.onChangePI} required min='1' ></input><br></br>\n                \n                    </td>\n                    <td>\n                    Price : <input name=\"price\" placeholder={this.state.update.invoice_items[this.state.current].price} type=\"number\" onChange={this.onChangePI} required></input><br></br>\n                \n                    </td>\n                    </tr>\n                    <tr>\n                    <td>\n                    Tax Total : {this.state.update.invoice_items[this.state.current].tax_total} <br></br>\n                    </td>\n                    <td>\n                    Sub Total : {this.state.update.invoice_items[this.state.current].sub_total} <br></br>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                    Discount Amount : {this.state.update.invoice_items[this.state.current].discount_amount}<br></br>\n                    </td>\n                    <td>\n                    Total without discount : {this.state.update.invoice_items[this.state.current].total_without_discount}<br></br>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                    Total : {this.state.update.invoice_items[this.state.current].total}<br></br>\n                    </td>\n                </tr>\n                <tr>\n                    \n                <td>\n                    Applied Discounts \n                    </td>\n                    <th>\n                    <Button onClick={() =>{this.update_table(0, true)}}  variant=\"contained\" color=\"secondary\" size='small'>Apply New Discount</Button>\n                    </th>\n                </tr>\n                <tr>\n                    <td colSpan={3} >\n                    <List data={discounts} header={this.discount_columns} page={false} popUp={this.popUpTemp} removeEntry={this.removeEntry} />\n                    </td>\n                </tr>\n                <tr>\n                    <td colSpan={3}>\n                {this.state.discount_loaded ? addPopupDiscount : <span></span>}\n                </td>\n                </tr>\n            <tr>\n                <td>\n                    Applied Taxes \n                </td>\n                <td>\n                <Button variant=\"contained\" color=\"secondary\" size='small' onClick={() => {this.update_table(0, false)}}>Apply New Tax</Button>\n                </td>\n            </tr>\n                <tr>\n                    <td colSpan={3}>\n                    <List data={taxes} header={this.tax_columns} page={false} popUp={this.popUpTemp} removeEntry={this.removeEntry} />\n                    </td>\n                </tr>\n                <tr>\n                    <td colSpan={3}>\n                    {this.state.tax_loaded ? addPopupTax : <span></span>}<br></br>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                    {this.state.new ? <Button variant=\"contained\" color=\"primary\" size='small' onClick={() => {this.postInvoiceItem(true)}} >Add</Button> : <Button  variant=\"contained\" color=\"primary\" size='small' onClick={() => {this.postInvoiceItem()}} >Update</Button>}\n                    </td>\n                    <td>\n                    <Button  variant=\"contained\" color=\"secondary\" size='small' onClick={() => {this.deleteInvoiceItem()}} >Delete</Button>\n                    </td>\n                </tr>\n                </tbody>\n            </Table>\n            \n            </Grid>\n            </Grid>\n            </div>\n\n        const customer_selection = this.state.customer_selection\n        const customerPopup = <Popup trigger={<Button variant=\"contained\" color=\"primary\">Change Customer</Button>} closeOnDocumentClick>\n        <div>\n            <input placeholder=\"Customer's first name\" id='customer_serach_box' name='customer_serach_box' onChange={this.searchCustomer}></input>\n            <div className={style.dropdown_content} id='customer_dropdown'>\n                    {customer_selection.map(\n                        customer => (\n                            <a href=\"#\" key={customer.id} onClick={() => {this.selectCustomer(customer.id, customer.name)}} >{customer.name}</a>\n                        )\n                    )}\n            </div>\n        </div>\n        </Popup>\n        const status = this.state.status\n        return (\n            <div>\n                \n            <Grid container justify='center' alignContent='center' alignItems='center' spaceing={6}>\n                <Grid item xm={12} >\n                    <h2>{this.state.update.invoice.customer_name}</h2>\n                </Grid>\n            </Grid>\n\n            <Grid container justify='center' >\n                <Grid item xm={8}>\n                    <Table  cellPadding='10' cellSpacing='10' >\n                        <tbody>\n                        <tr>\n                        <td>\n                                <TextField\n                                defaultValue={this.state.update.invoice.added_by_name}\n                                InputProps={{\n                                    readOnly: true,\n                                }}\n                                label='Added By'\n                                variant=\"outlined\"\n                                />\n                                </td>\n                        <td> <TextField\n                                defaultValue={this.state.update.invoice.customer_name}\n                                InputProps={{\n                                    readOnly: true,\n                                }}\n                                label='Customer'\n                                variant=\"outlined\"\n                                \n                                />\n                         </td>\n                        </tr>\n                        <tr>\n                            <td></td><td>{customerPopup}</td>\n                        </tr>\n                        <tr>\n                            <td colSpan=\"2\">\n                            <TextField\n                                defaultValue= {this.state.update.invoice.order_number}\n                                InputProps={{\n                                    readOnly: true,\n                                }}\n                                fullWidth\n                                label='Order Number'\n                                variant=\"outlined\"\n                                />\n                        </td>\n                        </tr>\n\n                        <tr>\n                            <td>\n                            <TextField\n                                defaultValue= {this.state.update.invoice.total_amount}\n                                InputProps={{\n                                    readOnly: true,\n                                }}\n                                \n                                label='Total Amount'\n                                variant=\"outlined\"\n                                />\n                            </td>\n                            <td>\n                            <TextField\n                                defaultValue= {this.state.update.invoice.tax_total}\n                                InputProps={{\n                                    readOnly: true,\n                                }}\n                                \n                                label='Tax Total'\n                                variant=\"outlined\"\n                                />\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                            <TextField\n                                defaultValue={this.state.update.invoice.discount_total}\n                                InputProps={{\n                                    readOnly: true,\n                                }}\n                                \n                                label='Discount Total'\n                                variant=\"outlined\"\n                                />\n                            </td>\n                            <td>\n                            <TextField\n                                defaultValue= {this.state.update.invoice.paid_amount}\n                                InputProps={{\n                                    readOnly: true,\n                                }}\n                                \n                                label='Paid Amount'\n                                variant=\"outlined\"\n                                />\n                            </td>\n                        </tr>\n\n                        <tr>\n                            <td>\n                            <TextField variant=\"outlined\" value={this.state.update.invoice.additional_discount} name='additional_discount' onChange={this.onChange} type='float' label='Additional Discount'></TextField>\n                            </td>\n                        </tr>\n                        \n                        <tr>\n                            <td>\n                            <b>Invoiced On : </b><br></br>\n                                <DatePicker\n                                name='invoiced_on'\n                                selected={this.state.update.invoice.invoiced_on}\n                                onChange={this.invoiceHandler}\n                                />\n                            </td>\n                            <td>\n                            <b>Due On : </b> <br></br>\n                            <DatePicker\n                            name='completed_on'\n                            selected={this.state.update.invoice.due_on}\n                            onChange={this.dueOnHandler}\n                            />\n                            </td>\n                        </tr>\n                        <tr>\n                    \n                            <td >\n                            <b>Status : </b> \n                                    <Select label='Status' fullWidth name='status' id=\"status\" onChange={this.onChange} value={this.state.update.invoice.status}>\n                                        {status.map(\n                                            x=>(\n                                            <MenuItem key={x.id} value={parseInt(x.id)}>{x.name}</MenuItem>\n                                            )\n                                        )}\n                                    </Select>\n                            </td>\n                        </tr>\n                            <tr>\n                                <td>\n                                <Button variant=\"contained\" color=\"primary\" onClick={() => {this.updateInvoice()}}>Update Invoice</Button>\n                                </td>\n                                <td>\n                                <Button variant=\"contained\" color=\"secondary\"  onClick={() => {this.props.delete(this.props.invoice.id)}}>Delete</Button>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </Table>\n                </Grid>\n                </Grid>\n                <Grid container justify='center'>\n                    <Grid item xs={8} >\n                    <h3>Items</h3> <Button variant=\"contained\" color=\"secondary\"  onClick={() => {this.addInvoiceItem()}}>Add New Items</Button>\n                    {this.state.popUp ? popUpItem :<List data={this.state.update.invoice_items} header={this.columns} page={false} popUp={this.popUp} />}\n                    </Grid>\n                </Grid>\n            </div>\n        )\n    }\n}\nexport default PopUpEdit","import React, { Component } from 'react'\nimport List from '../list';\nimport { getInvoice, deleteInvoices, updateInvoice } from '../../api/sales/invoice';\nimport PopUpEdit from './popUpEdit';\nimport Swal from 'sweetalert2'\n\nclass InvoiceListing extends Component {\n    \n    constructor(props){\n        super(props)\n        this.popUp = this.popUp.bind(this)\n        this.state = {\n            'popUp':false,\n            'invoices':{},\n            'invoice_items':[],\n            'update':{}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.invoiceDelete = this.invoiceDelete.bind(this)\n    }\n    \n     \n    async componentDidMount(){\n        try {\n            const {id} = this.props.match.params\n            if (id){\n                await this.popUp(id,0,true)\n            }\n        }catch(e){\n        }\n    }\n    back(){ \n        if (this.props.data){\n            this.setState({...this.state, popUp:false});\n        }else{\n            this.props.history.push('/invoices')\n        }\n    }\n\n       \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value]\n            }\n        })\n    }\n\n    \n    async onSubmit(e){\n        e.preventDefault();\n            var data = this.state.vendor\n            var ele;\n            for (ele in this.state.update){\n                data[ele] = this.state.update[ele][0]\n            }\n            data = {...data, 'action':'edit'}\n            updateInvoice(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        Swal.fire(\"Invoice Data updated.\")\n                        this.props.update(0)\n                    }\n                    else{\n                        Swal.fire({\n                            icon:'error',\n                            title:data['error']\n                        })\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    invoiceDelete(id){\n        var data = {\n            'invoices_id':[\n                id\n            ]\n        }\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to revert this!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, delete it!'\n          }).then((result) => {\n              if (result['value'] == true){\n        deleteInvoices(JSON.stringify(data)).then(data=>{\n            try {\n                if (data['status']){\n                    Swal.fire('Invoice has been Deleted.')\n                    this.props.update(0)\n                }   else{\n                    Swal.fire({\n                        icon:'error',\n                        title:data['error']\n                    })\n                }\n            }catch(e){\n                console.log(e)\n            }\n        })\n    }\n    })\n}\n    \n    async popUp(id, uuid=0, fromUrl=false){\n        if(!fromUrl){\n            this.props.pushNewId(id)\n        }\n        else{\n            const data = {\n                'action':'get',\n                'invoice_id':id,\n            }\n            var data_main;\n            await getInvoice(JSON.stringify(data)).then(data => {\n                if (data['status']){\n                    console.log(data)\n                    data_main=data\n                }\n                else{\n                    Swal.fire({\n                        icon:'error',\n                        title:data['error']\n                    })\n                }\n            })\n            if (data_main['invoice_items'].length === 0) {\n                console.log(\"blank\")\n                data_main['invoice_items'] = [{\n                    id:0\n                }]\n            }\n            await this.setState({\n                'popUp':true,\n                'invoice':data_main['invoice'][0],\n                'invoice_items':data_main['invoice_items']\n            })\n        }\n    }\n\n\n    columns = [\n        {\n            id:1,\n            name:\"Customer's Name\",\n            prop: 'customer_name'\n        },\n        {\n            id:2,\n            name:\"Sold By\",\n            prop: 'added_by_name'\n        },\n        {\n            id:3,\n            name:\"Paid Amount\",\n            prop: 'paid_amount'\n        },\n        {\n            id:4,\n            name:\"Order Number\",\n            prop: 'order_number'\n        },\n        {\n            id:5,\n            name:'Invoiced On',\n            prop:'invoiced_on_str'\n        },\n        {\n            id:6,\n            name:'Status',\n            prop:'status_name'\n        }\n    ]\n    \n\n    render() {\n        var listData\n        if (!this.props.data){\n            listData = []\n        }else{\n            listData=this.props.data\n        }\n\n        const list = <List data={listData} header={this.columns}   popUp={this.popUp} update={this.props.update} page={this.props.page} />\n        const popUpRender = <PopUpEdit invoice={this.state.invoice} invoice_items={this.state.invoice_items} update={this.props.update} delete={this.invoiceDelete} ></PopUpEdit>\n        return (\n            <div>\n                {this.state.popUp ? popUpRender : list}\n            </div>\n        )\n    }\n}\n\nexport default InvoiceListing\n","import React, { Component } from 'react'\nimport {getInvoices} from '../../api/sales/invoice';\nimport {  connect } from 'react-redux';\nimport  InvoiceListing  from './invoiceListing';\nimport { Link} from 'react-router-dom';\n\n\nimport Button from '@material-ui/core/Button';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/styles';\nimport PropTypes from 'prop-types';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport LoadingIcon from '../loading';\n\nimport Swal from 'sweetalert2'\n\n\n\nconst styles = makeStyles((theme) => ({\n    root: {\n    flexGrow: 12,\n    },\n    paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    },\n}));\n\n\nclass Invoices extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            'invoices':[],\n            'loaded':false,\n            'start':0,\n            'end':10,\n            'page':1\n        }\n        this.update_table = this.update_table.bind(this)\n        this.pushNewId = this.pushNewId.bind(this)\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n        this.update_table(0)\n    }\n\n    async update_table (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                'loaded':false,\n                start: 0,\n                end: 10,\n                page:1\n            })\n        }\n        else{\n            if (this.state.start+by>-1){\n                await this.setState({\n                    'loaded':false,\n                    start: this.state.start+by,\n                    end: this.state.end+by,\n                    page:this.state.page+x\n                })\n            }\n            else{\n                Swal.fire({\n                    icon:'error',\n                    title:'cannot go any further'\n                })\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.start,\n            'end':this.state.end\n        }\n        this.getInvoiceData(request_json)\n    }\n    \n    async getInvoiceData (request_json) {\n        var invoice\n        await getInvoices(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                for (invoice in data['invoices']){\n                    data['invoices'][invoice]['invoiced_on_str']=(data['invoices'][invoice]['invoiced_on']).split('T')[0]\n                    data['invoices'][invoice]['due_on_str']=(data['invoices'][invoice]['due_on']).split('T')[0]\n                }\n                this.setState({\n                    'invoices':data['invoices'],\n                    'loaded':true\n                })\n            }\n            else{\n                Swal.fire(data['error'])\n            }  \n        })\n    }\n    \n    pushNewId(id){\n        this.props.history.push('/invoices/'+id)\n    }\n\n\n \n\nrender() {\n    const { classes } = this.props;\n\n    const render_after_load = (\n        <div>\n            <InvoiceListing pushNewId={this.pushNewId} data={this.state.invoices} update={this.update_table} page={this.state.page} />\n        </div>\n    )\n\n    return(\n        <div className={classes.root}>\n        <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n            <Grid item xs={3} >\n            <Button variant=\"contained\" color=\"primary\" onClick={() => {this.update_table(0)}}>\n              <RefreshIcon/>&nbsp;&nbsp;&nbsp;Refresh Table\n              </Button>\n            </Grid>\n            <Grid item xs={5}>\n  \n            </Grid>\n              <Grid item xs={3}>\n              <Link to='/invoices/create' style={{ textDecoration: 'none' }}>\n              <Button variant=\"contained\" color=\"secondary\">\n              <AddCircleIcon/>&nbsp;&nbsp;&nbsp;Add New Invoice\n              </Button>\n              </Link>\n              </Grid>\n  \n          <Grid item xs={12}>\n            <Paper className={classes.paper}>\n            {this.state.loaded ? render_after_load : <LoadingIcon></LoadingIcon>}\n            </Paper>\n          </Grid>\n          \n        </Grid>\n      </div>\n    )\n}\n}\n\n\nInvoices.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n\nconst mapStateToProps = state => ({\n    user: state.user,\n})\nexport default withStyles(styles)(connect(mapStateToProps)(Invoices))\n","import React, { Component } from 'react'\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport List from '../list';\nimport Popup from \"reactjs-popup\";\nimport style from '../purchaseOrder/css/popUp.module.css';\nimport {getCustomers} from '../../api/sales/customer';\nimport {createInvoice,  getInvoice, getInvoiceStatus} from '../../api/sales/invoice';\nimport {updateInvoiceItem, deleteInvoiceItems, createInvoiceItem} from '../../api/sales/invoiceItem'\nimport {getItems} from '../../api/inventory/itemApi';\nimport {getPlaces} from '../../api/inventory/placeApi';\nimport { getDiscounts, getTaxes } from '../../api/misc'\nimport { Grid, Button, TextField } from '@material-ui/core';\nimport Swal from 'sweetalert2';\n\n\nclass InvoiceCreation extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            'tax_start':0,\n            'tax_end':5,\n            'discount_start':0,\n            'discount_end':5,\n            'tax_loaded':false,\n            'discount_loaded':false,\n            'discount_page':[],\n            'tax_page':[],\n            'discount_selection':[],\n            'tax_selection':[],\n            'place_selection':[],\n            'stock_selection':[],\n            'sold_from_selection':[],\n            'popUp':false,\n            'new':false,\n            'current':0,\n            'status':[],\n            'customer_selection':[\n                {\n                    'id':0,\n                    'name':'None'\n                }\n            ],\n            'item_selection':[\n                {\n                    'id':0,\n                    'name':\"None\"\n                }\n            ],\n            update : {\n                'invoice':{\n                    'customer_name':'',\n                    'invoiced_on': new Date(),\n                    'due_on': new Date()\n                },\n                'invoice_items':[[{\n                    'id':'Fake Key',\n                    'discount':[],\n                    'applied_discount':[],\n                    'tax':[],\n                    'applied_tax':[]\n                }]]\n            }\n        }\n        this.update_table = this.update_table.bind(this)\n        this.stateman = this.stateman.bind(this)\n        this.refreshTable = this.refreshTable.bind(this)\n        this.getItemData = this.getItemData.bind(this)\n        this.selectItem = this.selectItem.bind(this)\n        this.searchItem = this.searchItem.bind(this)\n        this.addInvoiceItem = this.addInvoiceItem.bind(this)\n        this.invoiceHandler = this.invoiceHandler.bind(this)\n        this.dueOnHandler = this.dueOnHandler.bind(this)\n        this.getCustomerData = this.getCustomerData.bind(this)\n        this.converter = this.converter.bind(this)\n        this.popUp = this.popUp.bind(this)\n        this.searchCustomer = this.searchCustomer.bind(this)\n        this.selectCustomer = this.selectCustomer.bind(this)\n        this.onChange = this.onChange.bind(this)\n        this.updateInvoice = this.updateInvoice.bind(this)\n        this.onChangePI = this.onChangePI.bind(this)\n        this.postInvoiceItem = this.postInvoiceItem.bind(this)\n        this.deleteInvoiceItem = this.deleteInvoiceItem.bind(this)\n        this.onChangePlace = this.onChangePlace.bind(this)\n        this.removeEntry = this.removeEntry.bind(this)\n        this.addEntryDiscount = this.addEntryDiscount.bind(this)\n        this.addEntryTax = this.addEntryTax.bind(this)\n    }\n\n    removeEntry(id, dis){\n        var temp,temp2\n        if (dis){\n             temp = this.state.update.invoice_items[this.state.current].applied_discount\n            temp.pop(dis)\n             temp2 = this.state.update.invoice_items[this.state.current].discount\n            temp2.pop(temp.id)\n            this.setState({\n                ...this.state,\n                'update':{\n                    ...this.state.update,\n                    invoice_items:{\n                        ...this.state.update.invoice_items,\n                        [dis]:{\n                            'applied_discount':temp,\n                            'discount':temp2\n                        }\n                    }\n                }\n            })\n        }\n        else {\n            \n                 temp = this.state.update.invoice_items[this.state.current].applied_tax\n                temp.pop(dis)\n                 temp2 = this.state.update.invoice_items[this.state.current].taxes\n                temp2.pop(temp.id)\n                this.setState({\n                    ...this.state,\n                    'update':{\n                        ...this.state.update,\n                        invoice_items:{\n                            ...this.state.update.invoice_items,\n                            [dis]:{\n                                'applied_tax':temp,\n                                'taxes':temp2\n                            }\n                        }\n                    }\n                })\n            \n        }\n    }\n\n    async componentDidMount(){\n        var request_json = {\n            'action':'get',\n        }\n        await getInvoiceStatus(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    ...this.state,\n                    'status':data.data\n                })\n            }\n            else{\n                Swal.fire(data['error'])\n            }\n        })\n    }\n\n    async getCustomerData (request_json) {\n        await getCustomers(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'customer_selection':data['customers'],\n                })\n            } \n            \n            else{\n                Swal.fire(data['error'])\n            } \n        })\n    }\n\n    selectCustomer(id,name){\n        console.log(id,name)\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice':{\n                    ...this.state.update.invoice,\n                    'customer':id,\n                    'customer_name':name\n                }\n            }\n        })\n    }\n\n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice':{\n                    ...this.state.update.invoice,\n                    [e.target.name] : [e.target.value][0]\n                }\n            }\n        })\n    }\n\n    converter(date){\n        return ( new Date(Date.parse(date)))\n    }\n\n    popUp(id){\n        var key\n        for (key in this.state.update.invoice_items){\n            if (this.state.update.invoice_items[key].id === id){\n                this.setState({\n                    ...this.state,\n                    'current':key,\n                    'popUp':true\n                }) \n                break;       \n            }\n        }\n        var request_json = {\n            'action':'get',\n            'filter':'item',\n            'item_id':this.state.update.invoice_items[key].item  \n        }\n        this.getPlacesData(request_json)\n    }\n\n    async getPlacesData(request_json) {\n        await getPlaces(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'sold_from_selection':data['placements'],\n                })\n                var temp = [], key, x;\n                for(key in data['placements']){\n                    x = {'id': data['placements'][key]['placed_on'], 'str_placed_on':data['placements'][key]['str_placed_on']}\n                    temp[data['placements'][key]['placed_on']] = x\n                    }\n                temp = temp.filter(function (el) {\n                    return el != null;\n                });\n                this.setState({\n                    'place_selection':temp\n                })\n                this.update_stock(data)\n            }\n        })\n\n    }\n\n    // data = sold_From_selection\n    update_stock(data){\n        console.log('data',data)\n        var sold_from\n        if (this.state.update.invoice_items[this.state.current]['sold_from']){\n            sold_from = this.state.update.invoice_items[this.state.current]['sold_from']\n        }else {\n            sold_from = data['placements'][0]['placed_on']\n            console.log('default',sold_from)\n        }\n        var temp=[];\n        var p ;\n        for (p in data['placements']){\n            console.log(sold_from, \"  \", data['placements'][p]['placed_on'])\n            if (parseInt(sold_from) === parseInt(data['placements'][p]['placed_on'])){\n                var string  = data['placements'][p]['purchase_item_details']['purchase_price'] + \"/-  \" + data['placements'][p]['purchase_item_details']['quantity'] + \" \" + data['placements'][p]['purchase_item_details']['vendor'] \n                temp.push({\n                    'id': data['placements'][p]['purchase_item'],\n                    'str':string\n                })\n                console.log(temp)\n            }\n            \n        }\n        this.setState({\n            ...this.state,\n            'stock_selection': temp\n        })\n    }  \n    \n\n    async onChangePlace(e){\n        await this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice_items':{\n                    ...this.state.update.invoice_items,\n                    [this.state.current] : {\n                        ...this.state.update.invoice_items[this.state.current],\n                        [e.target.name] : [e.target.value][0]\n                    },\n                }\n            }\n        })\n        var temp=[],p,sold_from;\n        if (this.state.update.invoice_items[this.state.current]['sold_from']){\n            sold_from = this.state.update.invoice_items[this.state.current]['sold_from']\n        }else {\n            sold_from = this.state.sold_from[0]['placed_on']\n            console.log('default',sold_from)\n        }\n        for (p in this.state.sold_from_selection){\n            if ( parseInt(sold_from) === parseInt(this.state.sold_from_selection[p]['placed_on'])){\n                var string  = this.state.sold_from_selection[p]['purchase_item_details']['purchase_price'] + \"/-  \" + this.state.sold_from_selection[p]['purchase_item_details']['quantity'] + \" \" + this.state.sold_from_selection[p]['purchase_item_details']['vendor'] \n                temp.push({\n                    'id': this.state.sold_from_selection[p]['purchase_item'],\n                    'str':string\n                })\n            }\n            \n        }\n        this.setState({\n            ...this.state,\n            'stock_selection': temp\n        }) \n    }\n\n    searchCustomer(e){\n        if ((e.target.value).length > 2 ){\n            var request_json = {\n                'action':'get',\n                'start':0,\n                'end':10,\n                'filter':'name',\n                'name':(e.target.value)\n            }\n            this.getCustomerData(request_json)\n        }\n    }\n    \n    invoiceHandler(date){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice':{\n                    ...this.state.update.invoice,\n                    'invoiced_on' : date\n                }\n            }\n        })\n    }\n    \n    dueOnHandler(date){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice':{\n                    ...this.state.update.invoice,\n                    'due_on' : date\n                }\n            }\n        })\n    }\n\n    updateInvoice(){\n        var request_json = {\n            ...this.state.update.invoice,\n            'action':'add',\n            'status':'',\n        }\n        console.log(request_json)\n        createInvoice(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                Swal.fire(\"Invoice Details Has Been Updated.\")\n                window.location.pathname = '/invoices'\n            }\n            else{\n                Swal.fire(data['error'])\n            }\n        })\n    }\n\n    onChangePI(e){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice_items':{\n                    ...this.state.update.invoice_items,\n                    [this.state.current] : {\n                        ...this.state.update.invoice_items[this.state.current],\n                        [e.target.name] : [e.target.value][0]\n                    },\n                }\n            }\n        })\n    }\n\n    postInvoiceItem(is_new=false){\n        var request_json\n        if (is_new){\n            request_json = {\n                'action':'add',\n                'invoice':this.state.update.invoice.id,\n                ...this.state.update.invoice_items[this.state.current],\n            }\n            request_json['applied_tax'] = []\n            request_json['applied_discount'] = []\n            createInvoiceItem(JSON.stringify(request_json)).then(data => {\n                if (data['status']){\n                    Swal.fire(\"Invoice Item Has Been Added.\")\n                    this.refreshTable()\n                }\n                else{\n                    Swal.fire(data['error'])\n                }\n            })\n            return\n        }\n        request_json = {\n            'action':'edit',\n            'invoice':this.state.update.invoice.id,\n            'invoice_item_id':this.state.update.invoice_items[this.state.current].id,\n            ...this.state.update.invoice_items[this.state.current]\n        }\n        request_json['applied_tax'] = []\n        request_json['applied_discount'] = []\n        updateInvoiceItem(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                Swal.fire(\"Invoice Item Details Has Been Updated.\")\n                this.refreshTable()\n            }\n            else{\n                Swal.fire(data['error'])\n            }\n        })\n    }\n\n    deleteInvoiceItem(){\n        var request_json = {\n            invoice_items_id : [this.state.update.invoice_items[this.state.current].id]\n        }\n        deleteInvoiceItems(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                Swal.fire(\"Invoice Item Has Beed Deleted.\")\n                this.refreshTable()\n            }\n            else{\n                Swal.fire(data['error'])\n            }\n        })\n    }\n\n\n    addInvoiceItem(){\n        var current =0;\n        var item,p_list=[];\n        for (item in this.state.update.invoice_items){\n            if (item.id){\n                if (item.id !== \"Fake Key\"){\n                    current = current + 1\n                    p_list.push(item)\n                }\n            }\n        }\n        this.setState({\n            'current':current,\n            'new':true,\n            'popUp':true,\n            'update':{\n                ...this.state.update,\n                'invoice_items':[\n                    ...p_list,\n                    {\n                        'item_name':\"None\",\n                        'discount_type':'percentage',\n                        'status':'incomplete',\n                        'applied_tax':[],\n                        'applied_discount':[],\n                        'purchase_item':'',\n                        'discount':[],\n                        'taxes':[]\n                    }\n                ]\n            }\n        })\n    }\n    columns = [\n        {\n            id:1,\n            name:\"Item Name\",\n            prop: 'item_name'\n        },\n        {\n            id:2,\n            name:\"Quantity\",\n            prop: 'quantity'\n        },\n        {\n            id:8,\n            name:\"Price\",\n            prop: 'price'\n        },\n        {\n            id:3,\n            name:\"Sold From\",\n            prop: 'sold_from_name'\n        },\n        {\n            id:4,\n            name:\"Tax Total\",\n            prop: 'tax_total'\n        },\n        ,\n        {\n            id:5,\n            name:\"Disount Amount\",\n            prop: 'discount_amount'\n        },   \n        {\n            id:6,\n            name:\"Sub Total\",\n            prop: 'sub_total'\n        },\n        {\n            id:7,\n            name:\"Total\",\n            prop: 'total'\n        }\n    ]\n\n    searchItem(e){\n        if ((e.target.value).length > 2 ){\n            var request_json = {\n                'action':'get',\n                'start':0,\n                'end':10,\n                'filter':'name',\n                'name':(e.target.value)\n            }\n            this.getItemData(request_json)\n        }\n    }\n\n    async getItemData(request_json){\n        await getItems(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    ...this.state,\n                    'item_selection':data['items'],\n                })\n            }  \n            \n            else{\n                Swal.fire(data['error'])\n            }\n        })\n    }\n    selectItem(id, name){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice_items':{\n                    ...this.state.update.invoice_items,\n                    [this.state.current] : {\n                        ...this.state.update.invoice_items[this.state.current],\n                        'item_name' : name,\n                        'item':id\n                    },\n                }\n            }\n        })\n        var request_json = {\n            'action':'get',\n            'filter':'item',\n            'item_id':id\n        }\n        this.getPlacesData(request_json)\n    }\n\n    async refreshTable(){\n        var id = this.state.update.invoice.id;\n        var items= [];\n        const request_json = {\n            'action':'get',\n            'invoice_id':id\n        }\n        await getInvoice(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                items = data['invoice_items']\n            }\n            \n            else{\n                Swal.fire(data['error'])\n            }\n        })\n        if (items.length === 0){\n            items = [{\n                'id':\"Fake Key\",\n                'item_name': ''\n            }]\n        }\n        await this.setState({\n            ...this.state,\n            'popUp':false,\n            'update':{\n                ...this.state.update,\n                'invoice_items':items\n            }\n        })\n    }\n\n\n    stateman(){\n        console.log(this.state)\n    }\n\n\n    discount_columns =[\n        {\n            'id':1,\n            'name':'Name',\n            'prop':'name'\n        },{\n            'id':2,\n            'name':'Rate',\n            'prop':'rate'\n        },{\n            'id':3,\n            'name':'Code',\n            'prop':'code'\n        },{\n            'id':4,\n            'name':'Type',\n            'prop':'discount_type'\n        },{\n            'id':5,\n            'name':'Remove',\n            'prop':'removeButton'\n        },\n    ]\n\n    tax_columns =[\n        {\n            'id':1,\n            'name':'Name',\n            'prop':'name'\n        },{\n            'id':2,\n            'name':'Rate',\n            'prop':'rate'\n        },{\n            'id':3,\n            'name':'Code',\n            'prop':'code'\n        },{\n            'id':4,\n            'name':'Type',\n            'prop':'tax_type'\n        },{\n            'id':5,\n            'name':'Remove',\n            'prop':'removeButton'\n        },\n    ]\n\n    \n    add_discount_columns =[\n        {\n            'id':1,\n            'name':'Name',\n            'prop':'name'\n        },{\n            'id':2,\n            'name':'Rate',\n            'prop':'rate'\n        },{\n            'id':3,\n            'name':'Code',\n            'prop':'code'\n        },{\n            'id':4,\n            'name':'Type',\n            'prop':'discount_type'\n        }\n    ]\n\n    add_tax_columns =[\n        {\n            'id':1,\n            'name':'Name',\n            'prop':'name'\n        },{\n            'id':2,\n            'name':'Rate',\n            'prop':'rate'\n        },{\n            'id':3,\n            'name':'Code',\n            'prop':'code'\n        },{\n            'id':4,\n            'name':'Type',\n            'prop':'tax_type'\n        }\n    ]\n\n    async update_table (by,dis) {\n        var x = by<0?-1:1\n        var request_json\n        if (dis){\n            if (by===0){\n                await this.setState({\n                    'discoount_loaded':false,\n                    discount_start: 0,\n                    discount_end: 10,\n                    discount_page:1\n                })\n            }\n            else{\n                if (this.state.discount_start+by>-1){\n                    await this.setState({\n                        'discount_loaded':false,\n                        discount_start: this.state.discount_start+by,\n                        discount_end: this.state.discount_end+by,\n                        discount_page:this.state.discount_page+x\n                    })\n                }\n                else{\n                    Swal.fire(\"Cannot move futher from here.\")\n                    return\n                }\n            }\n            request_json = {\n                'action':'get',\n                'filter':'none',\n                'start':this.state.discount_start,\n                'end':this.state.discount_end\n            }\n            this.getDiscountsData(request_json)\n        }\n    else { \n        if (by===0){\n            await this.setState({\n                'tax_loaded':false,\n                tax_start: 0,\n                tax_end: 10,\n                tax_page:1\n            })\n        }\n        else{\n            if (this.state.tax_start+by>-1){\n                await this.setState({\n                    'tax_loaded':false,\n                    tax_start: this.state.tax_start+by,\n                    tax_end: this.state.tax_end+by,\n                    tax_page:this.state.tax_page+x\n                })\n            }\n            else{\n                Swal.fire(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.tax_start,\n            'end':this.state.tax_end\n        }\n        this.getTaxesData(request_json)\n\n    }\n    }\n    \n    async getDiscountsData (request_json) {\n        await getDiscounts(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'discount_selection':data['discounts'],\n                    'discount_loaded':true\n                })\n            }\n            else{\n                Swal.fire(data['error'])\n            }\n        })\n    }\n    async getTaxesData (request_json) {\n        await getTaxes(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'tax_selection':data['taxes'],\n                    'tax_loaded':true\n                })\n            }  \n        })\n    }\n \n    addEntryDiscount(id){\n        var dis;\n        for (dis in this.state.discount_selection){\n            if (this.state.discount_selection[dis].id === id){\n                var temp = this.state.update.invoice_items[this.state.current]['applied_discount']\n                var x = this.state.discount_selection[dis]\n                temp.push(x)\n                var temp2 = this.state.update.invoice_items[this.state.current]['discount']\n                temp2.push(id)\n                this.setState({\n                    ...this.state,\n                    update:{\n                        ...this.state.update,\n                        'invoice_items':{\n                            ...this.state.update.invoice_items,\n                            [this.state.current] : {\n                                ...this.state.update.invoice_items[this.state.current],\n                                'discount':temp2,\n                                'applied_discount': temp\n                            }\n                        }\n                    }\n                })\n            }\n        }\n    }\n\n    addEntryTax(id){\n        var dis;\n        for (dis in this.state.tax_selection){\n            if (this.state.tax_selection[dis].id === id){\n                var temp = this.state.update.invoice_items[this.state.current]['applied_tax']\n                var x = this.state.tax_selection[dis]\n                temp.push(x)\n                var temp2 = this.state.update.invoice_items[this.state.current]['taxes']\n                temp2.push(id)\n                this.setState({\n                    ...this.state,\n                    update:{\n                        ...this.state.update,\n                        'invoice_items':{\n                            ...this.state.update.invoice_items,\n                            [this.state.current] : {\n                                ...this.state.update.invoice_items[this.state.current],\n                                'tax':temp2,\n                                'applied_tax': temp\n                            }\n                        }\n                    }\n                })\n            }\n        }\n    }\n\n\n    render() {\n        const item_selection = this.state.item_selection\n        const itemPopUp = <Popup trigger={ <button>Select Item</button>} closeOnDocumentClick>\n        <div>\n            <input placeholder=\"Item Name\" id='item_search_box' name='item_serach_box' onChange={this.searchItem}></input>\n            <div className={style.dropdown_content} id='item_dropdown'>\n                    {item_selection.map(\n                        item => (\n                            // use css to get rid of <a>\n                        <a key={item.id} onClick={() => {this.selectItem(item.id, item.name)}} >{item.name} {item.sales_price}</a>\n                        )\n                    )}\n            </div>\n        </div>\n        </Popup>\n\n        var places = this.state.place_selection\n        const selectPlace =<select name='sold_from' id=\"sold_from\" onChange={this.onChangePlace} value={this.state.update.invoice_items[this.state.current].sold_from}  >\n            <option key=\"Fake Key\" value='Fake Value'>Select Place</option>\n                {places.map(\n                    x => (\n                    <option key={x.id} value={x.id}>{x.str_placed_on}</option>\n                    )\n                )}\n            </select>\n\n            \n        var stocks  = this.state.stock_selection\n        var stockValue = this.state.update.invoice_items[this.state.current].purchase_item ? this.state.update.invoice_items[this.state.current].purchase_item : ''\n        const selectStock = <select name='purchase_item' id=\"purchase_item\" onChange={this.onChangePI} value={stockValue} >\n                <option key='Fake Key' value=\"Fake Value\">Select Stock</option>\n                {stocks.map(\n                    x => (\n                    <option key={x.id} value={parseInt(x.id)}>{x.str}</option>\n                    )\n                )}\n            </select>\n        const addPopupDiscount = <div>\n            <h3> Click To Apply New Discount</h3>\n                            <List data={this.state.discount_selection} header={this.add_discount_columns} page={false} popUp={this.addEntryDiscount} />\n                            <button onClick={()=> {this.update_table(-5,true)}}>Previous</button><span>      {this.state.discount_page}       </span><button  onClick={()=> {this.update_table(5,true)}} >Next</button>\n                        </div>\n        \n        const addPopupTax = <div>\n            <h3>Click To Apply New Tax </h3>\n                            <List data={this.state.tax_selection} header={this.add_tax_columns} page={false} popUp={this.addEntryTax} />\n                            <button onClick={()=> {this.update_table(-5,false)}}>Previous</button><span>      {this.state.tax_page}       </span><button  onClick={()=> {this.update_table(5,false)}} >Next</button>\n                        </div>\n        const discounts =this.state.update.invoice_items[this.state.current].applied_discount\n        for (var dis in discounts){\n            discounts[dis] = {\n                ...discounts[dis],\n                'removeButton':<button onClick={() => {this.removeEntry(dis,true)}}> Remove </button>\n            }\n        }\n        \n        const taxes = this.state.update.invoice_items[this.state.current].applied_tax\n        for (var dis in taxes){\n            taxes[dis] = {\n                ...taxes[dis],\n                'removeButton':<button onClick={()=>{this.removeEntry(dis,false)}}> Remove </button>\n            }\n        }\n        const popUpItem = <div>\n                <button onClick={() => {this.refreshTable()}} >Back</button><br></br><br></br>\n                Item : {this.state.update.invoice_items[this.state.current].item_name}  {itemPopUp}<br></br>\n                Sold From: \n                Place : {this.state.update.invoice_items[this.state.current].item ? selectPlace : \"Select An Item First\" } <br></br>\n                Stock :   {this.state.update.invoice_items[this.state.current].item ? selectStock : \"Select An Item First\" } <br></br>\n                <br></br>\n\n                Quantity : <input name=\"quantity\" placeholder={this.state.update.invoice_items[this.state.current].quantity} type=\"number\" onChange={this.onChangePI} required min='1' ></input><br></br>\n                Price : <input name=\"price\" placeholder={this.state.update.invoice_items[this.state.current].price} type=\"number\" onChange={this.onChangePI} required></input><br></br>\n                Tax Total : {this.state.update.invoice_items[this.state.current].tax_total} <br></br>\n                Sub Total : {this.state.update.invoice_items[this.state.current].sub_total} <br></br>\n                Discount Amount : {this.state.update.invoice_items[this.state.current].discount_amount}<br></br>\n                Total without discount : {this.state.update.invoice_items[this.state.current].total_without_discount}<br></br>\n                Total : {this.state.update.invoice_items[this.state.current].total}<br></br>\n                <br></br>\n                Applied Discounts : :<List data={discounts} header={this.discount_columns} page={false} popUp={this.popUp} removeEntry={this.removeEntry} /><button onClick={() =>{this.update_table(0, true)}} >Apply New Discount</button> <br></br><br></br>\n                {this.state.discount_loaded ? addPopupDiscount : <span></span>}<br></br>\n                Applied Taxes : :<List data={taxes} header={this.tax_columns} page={false} popUp={this.popUp} removeEntry={this.removeEntry} /><br></br><button onClick={() => {this.update_table(0, false)}}>Apply New Tax</button><br></br><br></br>\n                {this.state.tax_loaded ? addPopupTax : <span></span>}<br></br>\n                {this.state.new ? <button onClick={() => {this.postInvoiceItem(true)}} >Add</button> : <button onClick={() => {this.postInvoiceItem()}} >Update</button>}<br></br><br></br>\n                <button onClick={() => {this.deleteInvoiceItem()}} >Delete</button>\n            </div>\n        const customer_selection = this.state.customer_selection\n        const customerPopup = <Popup trigger={<Button variant=\"contained\" color=\"secondary\">Select Customer</Button>} closeOnDocumentClick>\n        <div>\n            <input placeholder=\"Customer's first name\" id='customer_serach_box' name='customer_serach_box' onChange={this.searchCustomer}></input>\n            <div className={style.dropdown_content} id='customer_dropdown'>\n                    {customer_selection.map(\n                        customer => (\n                            <a href=\"#\" key={customer.id} onClick={() => {this.selectCustomer(customer.id, customer.name)}} >{customer.name}</a>\n                        )\n                    )}\n            </div>\n        </div>\n        </Popup>\n        const status = this.state.status\n        return (\n            <div>\n            <Grid container justify='center' >\n                \n                <Grid item xm={8}>\n                    <table  cellPadding='10' cellSpacing='10' >\n                        <tbody>\n                            <tr>\n                                <th colSpan={3}>\n                                    <h1>New Invoice Order</h1>\n                                    <h4>Select customer and Date only</h4>\n                                </th>\n                            </tr>\n                        <tr>\n                        <td><b></b> <TextField\n                                value={this.state.update.invoice.customer_name}\n                                label='Customer'\n                                variant=\"outlined\"\n                                />\n                         </td>\n                        \n                        <td>{customerPopup}</td>\n                        </tr>\n                        \n                        <tr>\n                            <td>\n                            <b>Invoiced On : </b><br></br>\n                                <DatePicker\n                                name='invoiced_on'\n                                selected={this.state.update.invoice.invoiced_on}\n                                onChange={this.invoiceHandler}\n                                />\n                            </td>\n                            <td>\n                            <b>Due On : </b> <br></br>\n                            <DatePicker\n                            name='completed_on'\n                            selected={this.state.update.invoice.due_on}\n                            onChange={this.dueOnHandler}\n                            />\n                            </td>\n                        </tr>\n                            <tr>\n                                <td>\n                                <Button variant=\"contained\" color=\"primary\" onClick={() => {this.updateInvoice()}}>Create Invoice</Button>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </Grid>\n                </Grid>\n                </div>\n        //     <div>\n        //         <h1>Invoice</h1>\n        // <h3>{this.state.update.invoice.customer_name} </h3>\n        //         Added By : {this.state.update.invoice.added_by_name}<br></br>\n        //         Customer : {this.state.update.invoice.customer_name} {customerPopup}<br></br>\n        //         Order Number : {this.state.update.invoice.order_number}<br></br>\n        //         <br></br><br></br>\n        //         Invoiced On : \n        //         <DatePicker\n        //         name='invoiced_on'\n        //         selected={this.state.update.invoice.invoiced_on}\n        //         onChange={this.invoiceHandler}\n        //         />\n        //         Due On : \n        //         <DatePicker\n        //         name='completed_on'\n        //         selected={this.state.update.invoice.due_on}\n        //         onChange={this.dueOnHandler}\n        //         /><br></br><br></br>\n                \n        //         Total Amount : {this.state.update.invoice.total_amount}<br></br>\n        //         Total Tax : {this.state.update.invoice.tax_total}<br></br>\n        //         Total Discount: {this.state.update.invoice.discount_total}<br></br>\n        //         Paid Amount : {this.state.update.invoice.paid_amount}<br></br>\n\n        //         <br></br>\n        //         Additional Discount : <input placeholder={this.state.update.invoice.additional_discount} name='additional_discount' onChange={this.onChange} ></input>\n        //         <br></br><br></br>\n\n                \n        //         Status : <select name='status' id=\"status\" onChange={this.onChange} value={this.state.update.invoice.status}  >\n        //                         {status.map(\n        //                             x => (\n        //                             <option key={x.id} value={parseInt(x.id)}>{x.name}</option>\n        //                             )\n        //                         )}\n        //                     </select> <br></br><br></br>\n        //         <button onClick={() => {this.updateInvoice()}}>Add Invoice</button><br></br><br></br>\n        //         <hr></hr>\n        //     <button onClick={() => {this.stateman()}}>State</button>\n        //     </div>\n\n        )\n    }\n}\nexport default InvoiceCreation","import React, { Component } from 'react'\nimport List from '../list';\nimport { getDiscount, updateDiscount,  deleteDiscounts } from '../../api/misc';\nimport {Button, TextField, Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\nimport Swal from 'sweetalert2'\n\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\n\nclass DiscountList extends Component {\n    \n    constructor(props){\n        super(props)\n        this.popUp = this.popUp.bind(this)\n        this.state = {\n            'popUp':false,\n            'discount':{},\n            'update':{}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.back = this.back.bind(this)\n        this.discountDelete = this.discountDelete.bind(this)\n    }\n    \n    async componentDidMount(){\n        try {\n            const {id} = this.props.match.params\n            if (id){\n                await this.popUp(id,0,true)\n            }\n        }catch(e){\n        }\n    }\n\n       \n    back(){ \n        if (this.props.data){\n            this.setState({...this.state, popUp:false});\n        }else{\n            this.props.history.push('/discounts')\n        }\n    }\n    complete(){\n        this.setState({\n            ...this.state,\n            loading:false\n        })\n    }\n    loading(){\n        this.setState({\n            ...this.state,\n            loading:true\n        })\n    }\n\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value][0]\n            }\n        })\n    }\n\n    \n    async onSubmit(){\n            var data = this.state.update\n            data = {...data, 'action':'edit','discount_id':data.id}\n            console.log(data)\n            updateDiscount(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        Swal.fire(\n                            'Updated!',\n                            'Discounts details has been updated.',\n                            'success'\n                          )\n                        this.back()\n                    }\n                    else{\n                        Swal.fire({\n                            icon:'error',\n                            title:data['error']\n                        })\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    discountDelete(id){\n        var data = {\n            'discounts_id':[\n                id\n            ]\n        }\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to revert this!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, delete it!'\n          }).then((result) => {\n            if (result.value) {\n                deleteDiscounts(JSON.stringify(data)).then(data=>{\n                    try {\n                        if (data['status']){\n                            Swal.fire({\n                                icon:'success',\n                                title:'Discount entry has been deleted.',\n                                showConfirmButton: false,\n                                timer:1000\n                            })\n                            this.back()\n                        }   else{\n                            Swal.fire({\n                                icon:'error',\n                                title:data['error']\n                            })\n                        }\n                    }catch(e){\n                        console.log(e)\n                    }\n                })\n              \n            }\n          })\n    }\n    \n    async popUp(id, uuid=0, fromUrl=false){\n        if(!fromUrl){\n            this.props.pushNewId(id)\n        }\n        else{\n            const data = {\n                'action':'get',\n                'discount_id':id,\n            }\n            var data_main;\n            await getDiscount(JSON.stringify(data)).then(data => {\n                if (data['status']){\n                    data_main=data\n                }\n            })\n            await this.setState({\n                'popUp':true,\n                'discount':data_main['discounts'][0],\n                'update':data_main['discounts'][0]\n            })\n        }\n    }\n\n\n    columns = [\n        {\n            id:1,\n            name:\"Name\",\n            prop: 'name'\n        },\n        {\n            id:2,\n            name:\"Code\",\n            prop: 'code'\n        },\n        {\n            id:3,\n            name:\"Discount Type\",\n            prop: 'discount_type'\n        },\n        {\n            id:4,\n            name:\"Rate\",\n            prop: 'rate'\n        }      \n    ]\n    \n\n    render() {\n        var listData\n        if (!this.props.data){\n            listData = []\n        }else{\n            listData=this.props.data\n        }\n\n        const list = <List data={listData} header={this.columns}   popUp={this.popUp} update={this.props.update} page={this.props.page} />\n        \n        const popUpRender =\n         <div>\n            &nbsp;\n            &nbsp;\n            &nbsp;\n            &nbsp;\n            &nbsp;\n            &nbsp; <Button  variant=\"contained\" size='small' color=\"primary\" onClick={()=> {this.back()}}>\n                <ArrowLeftIcon></ArrowLeftIcon>\n         Back\n     </Button>\n        <Grid  container justify=\"center\" alignContent='center' alignItems=\"center\" spacing={3}>\n            <Grid item xm={4}>\n            \n            </Grid>\n            <Grid item xs={4}>\n            <h1>{this.state.discount.name}</h1>\n            </Grid>\n            <Grid item xm={4}>\n            </Grid>\n        </Grid>\n\n        <Grid container  justify=\"center\" alignContent='center' alignItems=\"center\"   direction={'column'} spacing={10}>\n        <Grid item xm={6}>\n            <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n                <Grid item xm={2} > \n                <TextField required id=\"name\" label=\"Name\" name='name' defaultValue={this.state.discount.name} onChange={this.onChange} autoFocus/>\n                </Grid>\n                <Grid item xm={2}>\n                <TextField required id=\"code\" label=\"code\" name='code' defaultValue={this.state.discount.code} onChange={this.onChange} />\n                </Grid>\n            </Grid>\n            \n            <Grid container spacing={3}>\n                <Grid item xm={6} md={6}>\n                    Discount Type :  \n                 <FormControl>\n                                <Select onChange={this.onChange}   value={this.state.update.discount_type}  name='discount_type' id=\"discount_type\">\n                                <MenuItem value=\"percent\">Percentage</MenuItem>\n                                <MenuItem value=\"fixed\">Fixed</MenuItem>\n                                </Select>\n                            </FormControl>\n                </Grid>\n                <Grid item xm={6} md={6} > \n                <TextField required id=\"rate\"  name=\"rate\"  label=\"rate\" defaultValue={this.state.discount.rate} onChange={this.onChange} />\n\n               </Grid>\n            </Grid>\n            <Grid container spacing={3}  alignItems='flex-end'>\n\n                <Grid item xm={3} md={6}> \n                <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={()=>{this.onSubmit()}}\n                                >\n                                Update\n                                </Button>\n                </Grid>\n                <Grid item xm={3} md={6}> \n                <Button variant=\"contained\" color=\"secondary\" onClick={() => {this.discountDelete(this.state.discount.id)}}>\n                    Delete Discount\n                </Button> \n               </Grid>\n            </Grid>\n        </Grid>\n        </Grid><br></br>\n        </div>\n\n        return (\n            <div>\n                {this.state.popUp ? popUpRender : list}\n            </div>\n        )\n    }\n}\n\n\nexport default (DiscountList)\n\n","import React, { Component } from 'react'\nimport {getDiscounts} from '../../api/misc';\nimport {  connect } from 'react-redux';\nimport  DiscountList  from './discountList';\nimport { Link} from 'react-router-dom';\n\nimport Button from '@material-ui/core/Button';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport LoadingIcon from '../loading';\n\n\n\n\nclass Discounts extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            'taxes':[],\n            'loaded':false,\n            'start':0,\n            'end':10,\n            'page':1\n        }\n        this.update_table = this.update_table.bind(this)\n        this.pushNewId = this.pushNewId.bind(this)\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n        this.update_table(0)\n    }\n\n\n    async update_table (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                'loaded':false,\n                start: 0,\n                end: 10,\n                page:1\n            })\n        }\n        else{\n            if (this.state.start+by>-1){\n                await this.setState({\n                    'loaded':false,\n                    start: this.state.start+by,\n                    end: this.state.end+by,\n                    page:this.state.page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.start,\n            'end':this.state.end\n        }\n        this.getDiscountsData(request_json)\n    }\n    \n    async getDiscountsData (request_json) {\n        await getDiscounts(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'discounts':data['discounts'],\n                    'loaded':true\n                })\n            }  \n        })\n    }\n\n    pushNewId(id){\n        this.props.history.push('/discounts/'+id)\n    }\n\n \n\n\nrender() {\n\n    const render_after_load = (\n        <div>\n            <DiscountList pushNewId={this.pushNewId} data={this.state.discounts} update={this.update_table} page={this.state.page} />\n        </div>\n    )\n\n    return(\n        <div>\n        <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n            <Grid item xs={3} >\n            <Button variant=\"contained\" color=\"primary\" onClick={() => {this.update_table(0)}}>\n              <RefreshIcon/>&nbsp;&nbsp;&nbsp;Refresh Table\n              </Button>\n            </Grid>\n            <Grid item xs={5}>\n  \n            </Grid>\n              <Grid item xs={3}>\n              <Link to='/discounts/create' style={{ textDecoration: 'none' }}>\n              <Button variant=\"contained\" color=\"secondary\">\n              <AddCircleIcon/>&nbsp;&nbsp;&nbsp;Add New Discount\n              </Button>\n              </Link>\n              </Grid>\n  \n          <Grid item xs={12}>\n            <Paper>\n            {this.state.loaded ? render_after_load : <LoadingIcon></LoadingIcon>}\n            </Paper>\n          </Grid>\n          \n        </Grid>\n      </div>\n    )\n}\n}\n\n\nconst mapStateToProps = state => ({\n    user: state.user,\n})\n\nexport default connect(mapStateToProps)(Discounts)","import React, { Component } from 'react'\nimport {  connect } from 'react-redux';\nimport { createDiscount } from '../../api/misc';\n\nimport {Button, TextField, Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\nimport Swal from 'sweetalert2'\n\nimport { withStyles } from '@material-ui/styles';\nimport PropTypes from 'prop-types';\n\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\n\n\nconst styles = makeStyles((theme) => ({\n    root: {\n    flexGrow: 12,\n    },\n    paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    },\n}));\n\n\n\nclass DiscountCreation extends Component {\n\n    constructor (props){\n        super(props)\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.state = {\n            'update':{\n                'name':'',\n                'code':'',\n                'discount_type':'percent',\n                'rate':''\n            }\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n    }\n\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value][0]\n            }\n        })\n    }\n\n\n    async onSubmit(e){\n            var data = {...this.state.update}\n            var ele;\n            for (ele in this.state.update){\n                data[ele] = this.state.update[ele]\n            }\n            data = {...data, 'action':'add'}\n            console.log(data)\n            createDiscount(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        Swal.fire(\n                            'Updated!',\n                            'Discounts details has been added.',\n                            'success'\n                          )\n                    }\n                    else{\n                        Swal.fire({\n                            icon:'error',\n                            title:data['error']\n                        })\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        const popUpRender = <div>\n           &nbsp;\n           &nbsp;\n           &nbsp;\n           &nbsp;\n           &nbsp;\n           &nbsp; \n       <Grid  container justify=\"center\" alignContent='center' alignItems=\"center\" spacing={3}>\n           <Grid item xm={4}>\n           \n           </Grid>\n           <Grid item xs={4}>\n           <h1>Add New Discounts</h1>\n           </Grid>\n           <Grid item xm={4}>\n           </Grid>\n       </Grid>\n\n       <Grid container  justify=\"center\" alignContent='center' alignItems=\"center\"   direction={'column'} spacing={10}>\n       <Grid item xm={6}>\n           <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n               <Grid item xm={2} > \n               <TextField required id=\"name\" label=\"Name\" name='name' defaultValue={this.state.update.name} onChange={this.onChange} autoFocus/>\n               </Grid>\n               <Grid item xm={2}>\n               <TextField required id=\"code\" label=\"code\" name='code' defaultValue={this.state.update.code} onChange={this.onChange} />\n               </Grid>\n           </Grid>\n           \n           <Grid container spacing={3}>\n               <Grid item xm={6} md={6}>\n                   Discount Type :  \n                <FormControl className={classes.formControl}>\n                               <Select onChange={this.onChange}   value={this.state.update.discount_type}  name='discount_type' id=\"discount_type\">\n                               <MenuItem value=\"percent\">Percentage</MenuItem>\n                               <MenuItem value=\"fixed\">Fixed</MenuItem>\n                               </Select>\n                           </FormControl>\n               </Grid>\n               <Grid item xm={6} md={6} > \n               <TextField required id=\"rate\"  name=\"rate\" onChange={this.onChange} label=\"rate\" name='rate' defaultValue={this.state.update.rate} onChange={this.onChange} />\n\n              </Grid>\n           </Grid>\n           <Grid container spacing={3}  alignItems='flex-end'>\n\n               <Grid item xm={3} md={6}> \n               <Button\n                               type='submit'\n                               variant=\"contained\"\n                               color=\"primary\"\n                               onClick={()=>{this.onSubmit()}}\n                               >\n                               Add\n                               </Button>\n               </Grid>\n               <Grid item xm={3} md={6}> \n              </Grid>\n           </Grid>\n       </Grid>\n       </Grid><br></br>\n       </div>\n\n        return (\n            popUpRender\n        )\n    }\n}\n\n\nDiscountCreation.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n\n\n  const mapStateToProps = state => ({\n    user: state.user\n})\n\n\nexport default withStyles(styles)(connect(mapStateToProps)(DiscountCreation))\n\n","import React, { Component } from 'react'\nimport List from '../list';\nimport { getTax, updateTax,  deleteTaxes } from '../../api/misc';\nimport {Button, TextField, Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\nimport Swal from 'sweetalert2'\n\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport { withStyles } from '@material-ui/styles';\nimport PropTypes from 'prop-types';\n\nconst styles = makeStyles((theme) => ({\n    root: {\n    flexGrow: 12,\n    },\n    paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    },\n}));\n\nclass TaxList extends Component {\n    \n    constructor(props){\n        super(props)\n        this.popUp = this.popUp.bind(this)\n        this.state = {\n            'popUp':false,\n            'tax':{},\n            'update':{}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.taxDelete = this.taxDelete.bind(this);\n        this.back = this.back.bind(this);\n    }\n\n    back(){ \n        if (this.props.data){\n            this.setState({...this.state, popUp:false});\n        }else{\n            this.props.history.push('/taxes')\n        }\n    }\n    async componentDidMount(){\n        try {\n            const {id} = this.props.match.params\n            if (id){\n                await this.popUp(id,0,true)\n            }\n        }catch(e){\n            console.log(e)\n        }\n    }\n\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value][0]\n            }\n        })\n    }\n\n    \n    async onSubmit(e){\n            var data = this.state.update\n            data = {...data, 'action':'edit','tax_id':data.id}\n            updateTax(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        Swal.fire(\n                            'Updated!',\n                            'Tax details has been updated.',\n                            'success'\n                          )                        \n                          this.back()\n                    }\n                    else{\n                        Swal.fire({\n                            icon:'error',\n                            title:data['error']\n                        })\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    taxDelete(id){\n        var data = {\n            'taxes_id':[\n                id\n            ]\n        }\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to revert this!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, delete it!'\n          }).then((result) => {\n        deleteTaxes(JSON.stringify(data)).then(data=>{\n            try {\n                if (data['status']){\n                    Swal.fire({\n                        icon:'success',\n                        title:'Tax entry has been deleted.',\n                        showConfirmButton: false,\n                        timer:1000\n                    })                   \n                    this.back()\n                }   else{\n                    Swal.fire({\n                        icon:'error',\n                        title:data['error']\n                    })                \n                }\n            }catch(e){\n                console.log(e)\n            }\n        })\n    })\n}\n    \n    async popUp(id, uuid=0,fromUrl){\n        if(!fromUrl){\n            this.props.pushNewId(id)\n        }else{\n        const data = {\n            'action':'get',\n            'tax_id':id,\n        }\n        var data_main;\n        await getTax(JSON.stringify(data)).then(data => {\n            if (data['status']){\n                data_main=data\n            }\n        })\n        await this.setState({\n            'popUp':true,\n            'tax':data_main['taxes'][0],\n            'update':data_main['taxes'][0]\n        })\n    }\n\n    }\n    columns = [\n        {\n            id:1,\n            name:\"Name\",\n            prop: 'name'\n        },\n        {\n            id:2,\n            name:\"Code\",\n            prop: 'code'\n        },\n        {\n            id:3,\n            name:\"Tax Type\",\n            prop: 'tax_type'\n        },\n        {\n            id:4,\n            name:\"Rate\",\n            prop: 'rate'\n        }      \n    ]\n    \n\n    render() {\n        const { classes } = this.props;\n        var listData\n        if (!this.props.data){\n            listData = []\n        }else{\n            listData=this.props.data\n        }\n        const list = <List data={listData} header={this.columns}   popUp={this.popUp} update={this.props.update} page={this.props.page} />\n        const popUpRender = <div>\n        &nbsp;\n        &nbsp;\n        &nbsp;\n        &nbsp;\n        &nbsp;\n        &nbsp; <Button  variant=\"contained\" size='small' color=\"primary\" onClick={()=> {this.back()}}>\n            <ArrowLeftIcon></ArrowLeftIcon>\n     Back\n </Button>\n    <Grid  container justify=\"center\" alignContent='center' alignItems=\"center\" spacing={3}>\n        <Grid item xm={4}>\n        \n        </Grid>\n        <Grid item xs={4}>\n        <h1>{this.state.tax.name}</h1>\n        </Grid>\n        <Grid item xm={4}>\n        </Grid>\n    </Grid>\n\n    <Grid container  justify=\"center\" alignContent='center' alignItems=\"center\"   direction={'column'} spacing={10}>\n    <Grid item xm={6}>\n        <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n            <Grid item xm={2} > \n            <TextField required id=\"name\" label=\"Name\" name='name' defaultValue={this.state.tax.name} onChange={this.onChange} autoFocus/>\n            </Grid>\n            <Grid item xm={2}>\n            <TextField required id=\"code\" label=\"code\" name='code' defaultValue={this.state.tax.code} onChange={this.onChange} />\n            </Grid>\n        </Grid>\n        \n        <Grid container spacing={3}>\n            <Grid item xm={6} md={6}>\n                Tax Type :  \n                <FormControl className={classes.formControl}>\n                                <Select onChange={this.onChange}   value={this.state.update.tax_type}  name='tax_type' id=\"tax_type\">\n                                <MenuItem value=\"normal\">Normal (Percentage)</MenuItem>\n                                <MenuItem value=\"fixed\">Fixed</MenuItem>\n                                </Select>\n                            </FormControl>\n            </Grid>\n            <Grid item xm={6} md={6} > \n            <TextField required id=\"rate\"  name=\"rate\"  label=\"rate\" defaultValue={this.state.tax.rate} onChange={this.onChange} />\n           </Grid>\n        </Grid>\n        <Grid container spacing={3}  alignItems='flex-end'>\n\n            <Grid item xm={3} md={6}> \n            <Button\n                            type='submit'\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={()=>{this.onSubmit()}}\n                            >\n                            Update\n                            </Button>\n            </Grid>\n            <Grid item xm={3} md={6}> \n            <Button variant=\"contained\" color=\"secondary\" onClick={() => {this.taxDelete(this.state.tax.id)}}>\n                Delete Tax\n            </Button> \n           </Grid>\n        </Grid>\n    </Grid>\n    </Grid>\n                    </div>\n        return (\n            <div>\n                {this.state.popUp ? popUpRender : list}\n            </div>\n        )\n    }\n}\n\nTaxList.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n\nexport default withStyles(styles)(TaxList)\n\n","import React, { Component } from 'react'\nimport {getTaxes} from '../../api/misc';\nimport {  connect } from 'react-redux';\nimport  TaxList  from './taxList';\nimport { Link} from 'react-router-dom';\n\n\nimport Button from '@material-ui/core/Button';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/styles';\nimport PropTypes from 'prop-types';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport LoadingIcon from '../loading';\n\n\nconst styles = makeStyles((theme) => ({\n    root: {\n    flexGrow: 12,\n    },\n    paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    },\n}));\n\n\nclass Taxes extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            'taxes':[],\n            'loaded':false,\n            'start':0,\n            'end':10,\n            'page':1\n        }\n        this.update_table = this.update_table.bind(this)\n        this.pushNewId = this.pushNewId.bind(this)\n    }\n\n    \n    pushNewId(id){\n        this.props.history.push('/taxes/'+id)\n    }\n\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n        this.update_table(0)\n    }\n\n    async update_table (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                'loaded':false,\n                start: 0,\n                end: 10,\n                page:1\n            })\n        }\n        else{\n            if (this.state.start+by>-1){\n                await this.setState({\n                    'loaded':false,\n                    start: this.state.start+by,\n                    end: this.state.end+by,\n                    page:this.state.page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.start,\n            'end':this.state.end\n        }\n        this.getTaxesData(request_json)\n    }\n    \n    async getTaxesData (request_json) {\n        await getTaxes(JSON.stringify(request_json)).then(data => {\n            console.log(data)\n            if (data['status']){\n                this.setState({\n                    'taxes':data['taxes'],\n                    'loaded':true\n                })\n            }  \n        })\n    }\n\n \n\nrender() {\n    const { classes } = this.props;\n\n    const render_after_load = (\n        <div>\n            <TaxList data={this.state.taxes} update={this.update_table} page={this.state.page} pushNewId={this.pushNewId}/>\n        </div>\n    )\n\n    return(\n        <div className={classes.root}>\n        <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n            <Grid item xs={3} >\n            <Button variant=\"contained\" color=\"primary\" onClick={() => {this.update_table(0)}}>\n              <RefreshIcon/>&nbsp;&nbsp;&nbsp;Refresh Table\n              </Button>\n            </Grid>\n            <Grid item xs={5}>\n  \n            </Grid>\n              <Grid item xs={3}>\n              <Link to='/taxes/create' style={{ textDecoration: 'none' }}>\n              <Button variant=\"contained\" color=\"secondary\">\n              <AddCircleIcon/>&nbsp;&nbsp;&nbsp;Add New Tax\n              </Button>\n              </Link>\n              </Grid>\n  \n          <Grid item xs={12}>\n            <Paper className={classes.paper}>\n            {this.state.loaded ? render_after_load : <LoadingIcon></LoadingIcon>}\n            </Paper>\n          </Grid>\n          \n        </Grid>\n      </div>\n    )\n}\n}\n\n\n\nTaxes.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n\n\nconst mapStateToProps = state => ({\n    user: state.user,\n})\n\nexport default withStyles(styles)(connect(mapStateToProps)(Taxes))","import React, { Component } from 'react'\nimport {  connect } from 'react-redux';\nimport {Button, TextField,Grid } from '@material-ui/core';\nimport { createTax } from '../../api/misc';\n\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\nimport Swal from 'sweetalert2'\n\nimport { withStyles } from '@material-ui/styles';\nimport PropTypes from 'prop-types';\n\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\n\n\nconst styles = makeStyles((theme) => ({\n    root: {\n    flexGrow: 12,\n    },\n    paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    },\n}));\n\n\nclass TaxCreation extends Component {\n\n    constructor (props){\n        super(props)\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.state = {\n            'update':{\n                'name':'',\n                'code':'',\n                'tax_type':'normal',\n                'rate':''\n            }\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n    }\n\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value][0]\n            }\n        })\n    }\n\n\n    async onSubmit(e){\n            var data = {...this.state.update}\n            var ele;\n            for (ele in this.state.update){\n                data[ele] = this.state.update[ele]\n            }\n            data = {...data, 'action':'add'}\n            console.log(data)\n            createTax(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        Swal.fire(\n                            'Updated!',\n                            'Tax details has been added.',\n                            'success'\n                          )\n                    }\n                    else{\n                        Swal.fire({\n                            icon:'error',\n                            title:data['error']\n                        })                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    render() {\n        const { classes } = this.props;\n\n            const popUpRender = \n                <div>\n           &nbsp;\n           &nbsp;\n           &nbsp;\n           &nbsp;\n           &nbsp;\n           &nbsp; \n       <Grid  container justify=\"center\" alignContent='center' alignItems=\"center\" spacing={3}>\n           <Grid item xm={4}>\n           \n           </Grid>\n           <Grid item xs={4}>\n           <h1>Add New Tax</h1>\n           </Grid>\n           <Grid item xm={4}>\n           </Grid>\n       </Grid>\n\n       <Grid container  justify=\"center\" alignContent='center' alignItems=\"center\"   direction={'column'} spacing={10}>\n       <Grid item xm={6}>\n           <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n               <Grid item xm={2} > \n               <TextField required id=\"name\" label=\"Name\" name='name' defaultValue={this.state.update.name} onChange={this.onChange} autoFocus/>\n               </Grid>\n               <Grid item xm={2}>\n               <TextField required id=\"code\" label=\"code\" name='code' defaultValue={this.state.update.code} onChange={this.onChange} />\n               </Grid>\n           </Grid>\n           \n           <Grid container spacing={3}>\n               <Grid item xm={6} md={6}>\n                   Tax Type :  \n                <FormControl className={classes.formControl}>\n                               <Select onChange={this.onChange}   value={this.state.update.discount_type}  name='discount_type' id=\"discount_type\">\n                               <MenuItem value=\"percent\">Percentage</MenuItem>\n                               <MenuItem value=\"fixed\">Fixed</MenuItem>\n                               </Select>\n                           </FormControl>\n               </Grid>\n               <Grid item xm={6} md={6} > \n               <TextField required id=\"rate\"  name=\"rate\" onChange={this.onChange} label=\"rate\" name='rate' defaultValue={this.state.update.rate} onChange={this.onChange} />\n\n              </Grid>\n           </Grid>\n           <Grid container spacing={3}  alignItems='flex-end'>\n\n               <Grid item xm={3} md={6}> \n               <Button\n                               type='submit'\n                               variant=\"contained\"\n                               color=\"primary\"\n                               onClick={()=>{this.onSubmit()}}\n                               >\n                               Add\n                               </Button>\n               </Grid>\n               <Grid item xm={3} md={6}> \n              </Grid>\n           </Grid>\n       </Grid>\n       </Grid><br></br>\n                    </div>\n        return (\n            popUpRender\n        )\n    }\n}\n\n\n\nTaxCreation.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n\n\nconst mapStateToProps = state => ({\n    user: state.user\n})\nexport default withStyles(styles)(connect(mapStateToProps)(TaxCreation))\n","import { baseRequest } from '../base';\n// api for items \n\nconst getItemCatagories = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/items/catagories','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  \n  const deleteItemCatagory = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/items/catagories/delete','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const createItemCatagory = async data => {\n      try {\n        return await baseRequest('apiv1/inventory/items/catagories','POST', data);\n      } catch(e){\n        alert(e)\n      }\n  };\n  \n  \n  const getItemCatagory = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/items/catagory','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const updateItemCatagory= async data => {\n    try {\n      return await baseRequest('apiv1/inventory/items/catagory','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \nexport { getItemCatagories, deleteItemCatagory, createItemCatagory, getItemCatagory, updateItemCatagory}\n  ","import React, { Component } from 'react'\nimport List from '../list';\nimport { getItem, updateItem,  deleteItems } from '../../api/inventory/itemApi';\nimport {getItemCatagories} from '../../api/inventory/itemCatagory'\nimport {Button, TextField,Grid, Card, CardActionArea } from '@material-ui/core';\nimport {getPlacements} from '../../api/misc'\n\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\nimport Swal from 'sweetalert2'\nimport url from '../../server';\n\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport { CardMedia } from '@material-ui/core';\nimport FileBase64 from 'react-filebase64';\n\n\n\nclass ItemList extends Component {\n    \n    constructor(props){\n        super(props)\n        this.popUp = this.popUp.bind(this)\n        this.state = {\n            'catagories':[],\n            'popUp':false,\n            'item':{\n                'catagory':''\n            },\n            'update':{},\n            'placements':[],\n            'thumbnail_image':false,\n            'product_image':false\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.itemDelete = this.itemDelete.bind(this)\n        this.getPlacementsData = this.getPlacementsData.bind(this);\n        this.back = this.back.bind(this)\n        this.dummy =this.dummy.bind(this)\n        this.onFileChange = this.onFileChange.bind(this)\n    }\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value][0]\n            }\n        })\n    }\n\n    back(){ \n        if (this.props.data){\n            this.setState({...this.state, popUp:false});\n        }else{\n            this.props.history.push('/items')\n        }\n    }\n    async componentDidMount(){\n        try {\n            const {id} = this.props.match.params\n            if (id){\n                await this.popUp(id,0,true)\n            }\n        }catch(e){\n            console.log(e)\n        }\n    }\n    \n    onFileChange(e){\n        \n    const toDataURL = url => fetch(url)\n        .then(response => response.blob())\n        .then(blob => new Promise((resolve, reject) => {\n        const reader = new FileReader()\n        reader.onloadend = () => resolve(reader.result)\n        reader.onerror = reject\n        reader.readAsDataURL(blob)\n        }))\n    \n    \n    toDataURL(e.target.files[0])\n        .then(dataUrl => {\n        console.log('RESULT:', dataUrl)\n        this.setState({\n            ...this.state,\n            product_image: dataUrl\n        })\n        })   \n    }\n\n    getFiles(files){\n        this.setState({ product_image: files })\n      }\n      \n    getThumbnail(files){\n        this.setState({ thumbnail_image: files })\n      }\n\n    async onSubmit(e){\n        e.preventDefault();\n        console.log(this.state)\n            var data = this.state.update\n            data = {...data, 'action':'edit','item_id':data.id}\n            data['new_product_image'] = this.state.product_image\n            data['new_thumbnail_image'] = this.state.thumbnail_image\n            updateItem(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        Swal.fire(\n                            'Updated!',\n                            'ItemData updated.',\n                            'success'\n                          )\n                        this.props.update(0)\n                    }\n                    else{\n                        Swal.fire({\n                            icon:'error',\n                            title:data['error']\n                        })                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    itemDelete(id){\n        var data = {\n            'items_id':[\n                id\n            ]\n        }\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to revert this!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, delete it!'\n          }).then((result) => {\n            if (result.value) {\n        deleteItems(JSON.stringify(data)).then(data=>{\n            try {\n                if (data['status']){\n                    Swal.fire({\n                        icon:'success',\n                        title:'Item entry has been deleted.',\n                        showConfirmButton: false,\n                        timer:1000\n                    })                    \n                    this.props.update(0)\n                }   else{\n                    Swal.fire({\n                        icon:'error',\n                        title:data['error']\n                    })                }\n            }catch(e){\n                console.log(e)\n            }\n        })\n    }\n})\n    }\n\n    async popUp(id, uuid=0, fromUrl){\n        if(!fromUrl){\n            this.props.pushNewId(id)\n        }else{\n        var data = {\n            'action':'get',\n            'item_id':id,\n        }\n        var data_main;\n        await getItem(JSON.stringify(data)).then(data => {\n            if (data['status']){\n                data_main=data\n            }\n        })\n        await this.setState({\n            'popUp':true,\n            'update':data_main['items'][0]\n        })\n        data = {\n            'action':'get',\n            'start':0,\n            'end':50\n        }\n        await getItemCatagories(JSON.stringify(data)).then(data=> {\n            try { \n                if (data['status']){\n                    this.setState({\n                        ...this.state,\n                        'catagories':data['item_catagories']\n                    })\n                }\n                else{\n                    Swal.fire({\n                        icon:'error',\n                        title:data['error']\n                    })                   }\n            }catch(e){\n                console.log(e)\n            }\n        })\n        data ={\n            'action':'get',\n            'start':0,\n            'end':10,\n            'filter':'item',\n            'item':id\n        }\n        this.getPlacementsData(data)\n    }\n}\n\n    async getPlacementsData(request){\n        await getPlacements(JSON.stringify(request)).then(data=> {\n            try { \n                if (data['status']){\n                    for(var i in data['placements']){\n                        data['placements'][i]['qr_code_image'] =  url.slice(0,-1) +data['placements'][i]['qr_code_image'];\n                    }\n                    console.log(data)\n                    this.setState({\n                       ...this.state,\n                       placements : data['placements']\n                    })\n                }\n                else{\n                    Swal.fire({\n                        icon:'error',\n                        title:data['error']\n                    })                   }\n            }catch(e){\n                console.log(e)\n            }\n        })\n    }\n\n    async update_placement_table (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                'loaded':false,\n                placementStart: 0,\n                placementEnd: 10,\n                placementPage:1\n            })\n        }\n        else{\n            if (this.state.placementStart+by>-1){\n                await this.setState({\n                    'loaded':false,\n                    placementStart: this.state.placementStart+by,\n                    placementEnd: this.state.placementEnd+by,\n                    placementPage:this.state.placementPage+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'item',\n            'item':this.state.update.id,\n            'start':this.state.placementStart,\n            'end':this.state.placementEnd\n        }\n        this.getPlacementsData(request_json)\n    }\n\n    columns = [\n        {\n            id:1,\n            name:\"Name\",\n            prop: 'name'\n        },\n        {\n            id:2,\n            name:\"Catagory\",\n            prop: 'catagory_str'\n        },\n        {\n            id:3,\n            name:\"Price\",\n            prop: 'sales_price'\n        },\n        ,\n        {\n            id:4,\n            name:\"Stock\",\n            prop: 'stock'\n        },\n        {\n            id:5,\n            name:\"Sold\",\n            prop: 'sold'\n        }      \n    ]\n\n    placementColumns = [\n        {\n            id:1,\n            name:\"Item\",\n            prop:'item_name',\n        },\n        {\n            id:2,\n            name:'Place On',\n            prop:'placed_on_str'\n        },\n        {\n            id:3,\n            name:'Stock',\n            prop:'stock'\n        },\n        {\n            id:4,\n            name:'Purchase Order ID',\n            prop:'purchase_order_uuid'\n        }\n    ]\n    dummy(id){\n        for (var x in this.state.placements){\n            if (parseInt(this.state.placements[x]['id']) === parseInt( id)){\n                window.location.href= (\"/purchaseorders/\"+this.state.placements[x]['purchase_order_id'])\n            }\n        }\n    }\n\n    render() {\n        var product_image=url.slice(0,-1) +this.state.update.product_image;\n        var thumbnail_image=url.slice(0,-1) +this.state.update.thumbnail_image;\n\n        var listData\n        if (!this.props.data){\n            listData = []\n        }else{\n            listData=this.props.data\n        }\n        const catagories = this.state.catagories\n        const list = <List data={listData} header={this.columns}   popUp={this.popUp} update={this.props.update} page={this.props.page} />\n        const popUpRender = <div>\n                    <Grid container>\n                    <Grid item xm={3}>\n                    <Button  variant=\"contained\" size='small' color=\"primary\" onClick={()=> {this.back()}}>\n                                    <ArrowLeftIcon></ArrowLeftIcon>\n                            Back\n                     </Button>        \n                     </Grid><Grid item xm={8}>  <h1>{this.state.update.name}</h1>\n                     </Grid><Grid container justify='center'><Grid item md={6}>\n\n                        <form onSubmit={this.onSubmit}>\n                            <table cellSpacing={10} cellPadding={10} >\n                                <tbody>\n                                <tr>\n                                    <td>\n                                    <TextField\n                                id ='name'\n                                name=\"name\"\n                                type='text'\n                                label=\"Item's Name\"\n                                onChange={this.onChange}  \n                                defaultValue={this.state.update.name}          \n                            />\n                                    </td>\n                                    <td>\n                                    <TextField type='number' label='Sales Price' defaultValue={this.state.update.sales_price} onChange={this.onChange}></TextField><br></br>\n                            \n                                    </td>\n                                </tr>\n                                <tr>\n                                <td colSpan={2}>\n                                    Item Catagory : \n                                <Select fullWidth lable='Item Catagory' name='catagory' id=\"catagory\" onChange={this.onChange} value={this.state.update.catagory} required >\n                                {catagories.map(\n                                    x => (\n                                    <MenuItem key={x.id} value={parseInt(x.id)}>{x.name}</MenuItem>\n                                    )\n                                )}\n                            </Select>\n                            </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                    <TextField\n          id=\"outlined-read-only-input\"\n          label=\"Current Stock\"\n          defaultValue={this.state.update.stock}\n          InputProps={{\n            readOnly: true,\n          }}\n          variant=\"outlined\"\n        />\n                                    </td>\n                                    <td>\n                                    <TextField\n          id=\"outlined-read-only-input\"\n          label=\"Number Of Sold Items\"\n          defaultValue={this.state.update.sold}\n          InputProps={{\n            readOnly: true,\n          }}\n          variant=\"outlined\"\n        />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                    <TextField\n                                id ='weight'\n                                name=\"weight\"\n                                type='number'\n                                label=\"Item's Weight (in kg)\"\n                                onChange={this.onChange}  \n                                defaultValue={this.state.update.weight}          \n                            />\n                                    </td>\n                                    <td>\n                                    <TextField\n                                id ='average_cost_price'\n                                name=\"average_cost_price\"\n                                type='number'\n                                label=\"Item's Cost Price\"\n                                onChange={this.onChange}  \n                                defaultValue={this.state.update.average_cost_price}          \n                            />\n                                    </td>\n                                    </tr>\n                                    <tr>\n                                        <td colSpan={2}>\n                                        <TextField\n                                            fullWidth\n                                            id ='description'\n                                            name=\"description\"\n                                            type='text'\n                                            label=\"Description\"\n                                            onChange={this.onChange}  \n                                            defaultValue={this.state.update.description}          \n                                        />\n                                        </td>\n                                    </tr>\n                                <tr>\n                                    <td colSpan={2}>\n                                        <h3>Product Image</h3>\n                                            <img width=\"100%\" src={product_image} alt='Product Image' ></img>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                    Upload Product Image : <FileBase64\n                                    multiple={ true } \n                                    onDone={ this.getFiles.bind(this) } />\n                                    </td>\n                                </tr>\n                                \n                                <tr>\n                                    <td colSpan={2}>\n                                        <h3>Thumbnail Image</h3>\n                                            <img width=\"100%\" src={thumbnail_image} alt='Thumbnail Image' ></img>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                    Upload Thumbnail : <FileBase64\n                                    multiple={ true } \n                                    onDone={ this.getThumbnail.bind(this) } />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n\n                                    </td>\n                                </tr>\n\n\n                                <tr>\n                                    <td>\n                                    <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                >\n                                Update\n                                </Button>\n                                    </td>\n                                    <td>\n                                    <Button variant=\"contained\" color=\"secondary\" onClick={() => {this.itemDelete(this.state.update.id)}}>\n                            Delete Item\n                        </Button> \n                                    </td>\n                                </tr>\n                                </tbody>\n                            </table>                             \n                </form>\n            \n                        <br>\n                        </br>\n                        </Grid>\n                        </Grid>\n                        </Grid>\n                        <Grid container justify='center'>\n                            <Grid item xm={6} >\n                                <u><h3>Placement Of Current Item</h3></u>\n                                <List data={this.state.placements} header={this.placementColumns}  popUp={this.dummy} update={this.update_placement_table} page={this.state.placementPage}>\n                                </List>\n                                <hr></hr>\n                                <Grid item xm={4}>\n                                {this.state.placements.map(\n                                                header => (\n                                                    <div key={header.id} >\n                                                    <h4> {header['uuid']} </h4>\n                                                    <img src={header['qr_code_image']} ></img></div>\n                                                )\n                                            )}\n                                            </Grid>\n                            </Grid>\n                        </Grid>\n                       \n                    </div>\n        return (\n            <div>\n                {this.state.popUp ? popUpRender : list}\n            </div>\n        )\n    }\n}\n\nexport default ItemList\n","import React, { Component } from 'react'\nimport {getItems} from '../../api//inventory/itemApi';\nimport {  connect } from 'react-redux';\nimport  ItemList  from './itemList';\nimport { Link} from 'react-router-dom';\n\n\nimport Button from '@material-ui/core/Button';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/styles';\nimport PropTypes from 'prop-types';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport LoadingIcon from '../loading';\n\n\n\nconst styles = makeStyles((theme) => ({\n    root: {\n    flexGrow: 12,\n    },\n    paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    },\n}));\n\n\nclass Items extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            'items':[],\n            'loaded':false,\n            'start':0,\n            'end':10,\n            'page':1\n        }\n        this.update_table = this.update_table.bind(this)\n        this.pushNewId = this.pushNewId.bind(this)\n\n    }\n    pushNewId(id){\n        this.props.history.push('/items/'+id)\n    }\n\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n        this.update_table(0)\n    }\n\n    async update_table (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                'loaded':false,\n                start: 0,\n                end: 10,\n                page:1\n            })\n        }\n        else{\n            if (this.state.start+by>-1){\n                await this.setState({\n                    'loaded':false,\n                    start: this.state.start+by,\n                    end: this.state.end+by,\n                    page:this.state.page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.start,\n            'end':this.state.end\n        }\n        this.getItemsData(request_json)\n    }\n    \n    async getItemsData (request_json) {\n        await getItems(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'items':data['items'],\n                    'loaded':true\n                })\n            }  \n        })\n    }\n\n \n\nrender() {\n    const render_after_load = (\n        <div>\n            <ItemList pushNewId={this.pushNewId} data={this.state.items} update={this.update_table} page={this.state.page} />\n        </div>\n    )\n    const { classes } = this.props;\n\n\n    return(\n        <div className={classes.root}>\n        <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n            <Grid item xs={3} >\n            <Button variant=\"contained\" color=\"primary\" onClick={() => {this.update_table(0)}}>\n              <RefreshIcon/>&nbsp;&nbsp;&nbsp;Refresh Table\n              </Button>\n            </Grid>\n            <Grid item xs={5}>\n  \n            </Grid>\n              <Grid item xs={3}>\n              <Link to='/items/create' style={{ textDecoration: 'none' }}>\n              <Button variant=\"contained\" color=\"secondary\">\n              <AddCircleIcon/>&nbsp;&nbsp;&nbsp;Add New Item\n              </Button>\n              </Link>\n              </Grid>\n  \n          <Grid item xs={12}>\n            <Paper className={classes.paper}>\n            {this.state.loaded ? render_after_load : <LoadingIcon></LoadingIcon>}\n            </Paper>\n          </Grid>\n          \n        </Grid>\n      </div>\n    )\n}\n}\n\n\nItems.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n\n\nconst mapStateToProps = state => ({\n    user: state.user,\n})\n\nexport default withStyles(styles)(connect(mapStateToProps)(Items))","import React, { Component } from 'react'\nimport {  connect } from 'react-redux';\nimport {Button, TextField,Grid } from '@material-ui/core';\nimport { createItem } from '../../api/inventory/itemApi';\nimport {getItemCatagories} from '../../api/inventory/itemCatagory'\n\nimport Swal from 'sweetalert2'\n\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\n\nclass ItemCreation extends Component {\n\n    constructor (props){\n        super(props)\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.state = {\n            'catagories':[],\n            'update':{\n            }\n        }\n    }\n\n    async componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n        var data = {\n            'action':'get',\n            'start':0,\n            'end':50\n        }\n        await getItemCatagories(JSON.stringify(data)).then(data=> {\n            try { \n                if (data['status']){\n                    this.setState({\n                        ...this.state,\n                        'catagories':data['item_catagories']\n                    })\n                }\n                else{\n                    Swal.fire({\n                        icon:'error',\n                        title:data['error']\n                    })                   }\n            }catch(e){\n                console.log(e)\n            }\n        })\n    }\n\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value][0]\n            }\n        })\n    }\n\n\n    async onSubmit(e){\n        e.preventDefault();\n            var data = {...this.state.update}\n            var ele;\n            for (ele in this.state.update){\n                data[ele] = this.state.update[ele]\n            }\n            data = {...data, 'action':'add'}\n            console.log(data)\n            createItem(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        Swal.fire(\n                            'Updated!',\n                            'Item has been added.',\n                            'success'\n                          ) \n                    }\n                    else{\n                        Swal.fire({\n                            icon:'error',\n                            title:data['error']\n                        })                       }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    render() {\n        const catagories = this.state.catagories\n        const popUpRender = \n            <div>\n            <Grid container justify='center'>\n<Grid item xm={6}>\n            \n                        <form onSubmit={this.onSubmit}>\n                            Name: <TextField\n                                id ='name'\n                                name=\"name\"\n                                type='text'\n                                onChange={this.onChange}      \n                            />\n                            Catagory : <select name='catagory' id=\"catagory\" onChange={this.onChange} required >\n                                {catagories.map(\n                                    x => (\n                                    <option key={x.id} value={parseInt(x.id)}>{x.name}</option>\n                                    )\n                                )}\n                            </select> <br></br><br></br>\n                            \n                            Sales Price : <input name='sales_price' type='float' onChange={this.onChange}></input><br></br>\n\n                            <br></br>\n                            <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                >\n                                Create</Button>\n                </form>\n            \n                        <br>\n                        </br>\n                    </Grid>\n                    </Grid>\n                    </div>\n        return (\n            popUpRender\n        )\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    user: state.user\n})\n\nexport default connect(mapStateToProps)(ItemCreation)","import React, { Component } from 'react'\nimport List from '../list';\nimport { getItemCatagory, updateItemCatagory,  deleteItemCatagory } from '../../api/inventory/itemCatagory';\nimport {Button, TextField, Grid } from '@material-ui/core';\n\n\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\nimport Swal from 'sweetalert2'\n\n\nclass ItemCatagoryList extends Component {\n    \n    constructor(props){\n        super(props)\n        this.popUp = this.popUp.bind(this)\n        this.state = {\n            'popUp':false,\n            'itemCatagory':{},\n            'update':{}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.itemCatDelete = this.itemCatDelete.bind(this)\n        this.popUptemp = this.popUptemp.bind(this)\n        this.back = this.back.bind(this)\n        this.updatetemp = this.updatetemp.bind(this)\n    }\n    popUptemp(id,uuid){\n\n    }\n    updatetemp(){\n\n    }\n    back(){ \n        if (this.props.data){\n            this.setState({...this.state, popUp:false});\n        }else{\n            this.props.history.push('/itemcatagories')\n        }\n    }\n    async componentDidMount(){\n        try {\n            const {id} = this.props.match.params\n            if (id){\n                await this.popUp(id,0,true)\n            }\n        }catch(e){\n            console.log(e)\n        }\n    }\n    onChange(e)\n    {\n        this.setState({\n            'itemCatagory': {\n                ...this.state.itemCatagory,\n                [e.target.name] : [e.target.value][0]\n            }\n        })\n    }\n\n    \n    async onSubmit(e){\n        e.preventDefault();\n            var data = this.state.itemCatagory\n            data = {...data, 'action':'edit','item_catagory_id':data.id}\n            console.log(data)\n            updateItemCatagory(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        Swal.fire(\n                            'Updated!',\n                            'ItemCatagory Data updated.',\n                            'success'\n                          )\n                        this.back()\n                    }\n                    else{\n                        Swal.fire({\n                            icon:'error',\n                            title:data['error']\n                        })\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    itemCatDelete(id){\n        var data = {\n            'item_catagories_id':[\n                id\n            ]\n        }\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to revert this!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, delete it!'\n          }).then((result) => {\n            if (result.value) {\n                \n        deleteItemCatagory(JSON.stringify(data)).then(data=>{\n            try {\n                if (data['status']){\n                    Swal.fire({\n                        icon:'success',\n                        title:'Item Catagory entry has been deleted.',\n                        showConfirmButton: false,\n                        timer:1000\n                    })\n                    this.back() \n                    }   else{\n                    Swal.fire({\n                        icon:'error',\n                        title:data['error']\n                    })\n                }\n            }catch(e){\n                console.log(e)\n            }\n        })\n    }\n})\n    }\n    \n    async popUp(id, uuid=0, fromUrl){\n        if(!fromUrl){\n            this.props.pushNewId(id)\n        }else{\n        const data = {\n            'action':'get',\n            'item_catagory_id':id,\n        }\n        var data_main;\n        await getItemCatagory(JSON.stringify(data)).then(data => {\n            console.log(data)\n            if (data['status']){\n                data_main=data\n            }\n        })\n\n        await this.setState({\n            'popUp':true,\n            'itemCatagory':data_main['item_catagories'][0]\n        })\n    }\n    }\n\n\n    columns = [\n        {\n            id:1,\n            name:\"Name\",\n            prop: 'name'\n        },\n        {\n            id:2,\n            name:'Items Under This Catagory',\n            prop:'count'\n        }\n    ]\n\n    items_c = [\n        {\n            id:1,\n            name:\"Item's Name\",\n            prop:'name'\n        },{\n            id:2,\n            name: 'Price',\n            prop: 'sales_price',\n        },\n        {\n            id:3,\n            name:'Sales Price',\n            prop:'sales_price'\n        },\n        {\n            id:4,\n            name: 'Stock',\n            prop:'stock',\n        },\n        {\n            id:5,\n            name:'Sold',\n            prop:'sold'\n        }\n\n\n    ]\n    \n\n    render() {\n        var listData\n        if (!this.props.data){\n            listData = []\n        }else{\n            listData=this.props.data\n        }\n        const list = <List data={listData} header={this.columns}   popUp={this.popUp} update={this.props.update} page={this.props.page} />\n        const popUpRender = <div>\n            <Grid container justify='center'>\n<Grid item xm={6}>\n<Button  variant=\"contained\" size='small' color=\"primary\" onClick={()=> {this.back()}}>\n                <ArrowLeftIcon></ArrowLeftIcon>\n         Back\n     </Button>\n     <h1>{this.state.update.name}</h1>\n                        <form onSubmit={this.onSubmit}>\n                            <table cellSpacing={10} cellPadding={10}>\n                                <tbody>\n                                <tr>\n                                    <td>\n                                    Name: \n                                    </td>\n                                    <td>\n                                    <TextField\n                                id ='name'\n                                name=\"name\"\n                                type='text'\n                                onChange={this.onChange}  \n                                defaultValue={this.state.itemCatagory.name}          \n                            />\n                                    </td>\n                                </tr>\n                                <tr>\n<td>\n<Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                >\n                                Update\n                                </Button>\n</td>\n<td>\n<Button variant=\"contained\" color=\"secondary\" onClick={() => {this.itemCatDelete(this.state.itemCatagory.id)}}>\n                            Delete Discount\n                        </Button> \n</td>\n                                </tr>\n                                <tr>\n                                   <td colSpan={3}>\n                                       <h1> Related Items</h1>\n                                   <List data={this.state.itemCatagory.items} header={this.items_c} popUp={this.popUptemp} update={this.updatetemp} page={false} />\n                                   </td> \n                                </tr>\n                                </tbody>\n                            </table>\n                           \n                           \n                        \n                </form>\n            \n</Grid>\n            </Grid>\n                        \n                        \n                    </div>\n        return (\n            <div>\n                {this.state.popUp ? popUpRender : list}\n            </div>\n        )\n    }\n}\n\nexport default ItemCatagoryList\n","import React, { Component } from 'react'\nimport {getItemCatagories} from '../../api//inventory/itemCatagory';\nimport {  connect } from 'react-redux';\nimport  ItemCatagoryList  from './itemCatagoryList';\nimport { Link} from 'react-router-dom';\n\n\nimport Button from '@material-ui/core/Button';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/styles';\nimport PropTypes from 'prop-types';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport LoadingIcon from '../loading';\n\n\nconst styles = makeStyles((theme) => ({\n    root: {\n    flexGrow: 12,\n    },\n    paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    },\n}));\n\n\n\nclass ItemCatagories extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            'items':[],\n            'loaded':false,\n            'start':0,\n            'end':10,\n            'page':1\n        }\n        this.update_table = this.update_table.bind(this)\n        this.pushNewId = this.pushNewId.bind(this)\n    }\n\n    \n    pushNewId(id){\n        this.props.history.push('/itemcatagories/'+id)\n    }\n\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n        this.update_table(0)\n    }\n\n    async update_table (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                'loaded':false,\n                start: 0,\n                end: 10,\n                page:1\n            })\n        }\n        else{\n            if (this.state.start+by>-1){\n                await this.setState({\n                    'loaded':false,\n                    start: this.state.start+by,\n                    end: this.state.end+by,\n                    page:this.state.page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.start,\n            'end':this.state.end\n        }\n        this.getItemCatagoriesData(request_json)\n    }\n    \n    async getItemCatagoriesData (request_json) {\n        await getItemCatagories(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                console.log(data)\n                this.setState({\n                    'item_catagories':data['item_catagories'],\n                    'loaded':true\n                })\n            }  \n        })\n    }\n\n \n\nrender() {\n    const render_after_load = (\n        <div>\n            <ItemCatagoryList data={this.state.item_catagories} update={this.update_table} page={this.state.page} pushNewId={this.pushNewId}/>\n        </div>\n    )\n    const { classes } = this.props;\n\n    return(\n        <div className={classes.root}>\n        <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n            <Grid item xs={3} >\n            <Button variant=\"contained\" color=\"primary\" onClick={() => {this.update_table(0)}}>\n              <RefreshIcon/>&nbsp;&nbsp;&nbsp;Refresh Table\n              </Button>\n            </Grid>\n            <Grid item xs={5}>\n  \n            </Grid>\n              <Grid item xs={3}>\n              <Link to='/itemcatagories/create' style={{ textDecoration: 'none' }}>\n              <Button variant=\"contained\" color=\"secondary\">\n              <AddCircleIcon/>&nbsp;&nbsp;&nbsp;Add New Item Catagories\n              </Button>\n              </Link>\n              </Grid>\n  \n          <Grid item xs={12}>\n            <Paper className={classes.paper}>\n            {this.state.loaded ? render_after_load : <LoadingIcon></LoadingIcon>}\n            </Paper>\n          </Grid>\n          \n        </Grid>\n      </div>\n    )\n}\n}\n\n\n\n\n\nItemCatagories.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\nconst mapStateToProps = state => ({\n    user: state.user,\n})\n\nexport default withStyles(styles)(connect(mapStateToProps)(ItemCatagories))","import React, { Component } from 'react'\nimport {  connect } from 'react-redux';\nimport {Button, TextField, Grid } from '@material-ui/core';\nimport { createItemCatagory } from '../../api/inventory/itemCatagory';\n\nimport Swal from 'sweetalert2'\n\nclass DiscountCreation extends Component {\n\n    constructor (props){\n        super(props)\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.state = {\n           'itemCatagory':{}\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n    }\n\n    \n    onChange(e)\n    {\n        this.setState({\n            'itemCatagory': {\n                ...this.state.itemCatagory,\n                [e.target.name] : [e.target.value][0]\n            }\n        })\n    }\n\n\n    async onSubmit(e){\n        e.preventDefault();\n            var data = {...this.state.itemCatagory}\n            data = {...data, 'action':'add'}\n            createItemCatagory(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        Swal.fire(\n                            'Updated!',\n                            'ItemCatagory Data has been added.',\n                            'success'\n                          )                    }\n                    else{\n                        Swal.fire({\n                            icon:'error',\n                            title:data['error']\n                        })                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    render() {\n        const popUpRender =\n        <div>\n        <Grid container justify='center'>\n        <Grid item xm={6}>\n                                <form onSubmit={this.onSubmit}>\n                                    <table>\n                                        <tbody>\n                                        <tr>\n                                            <td>\n                                            Name: \n                                            </td>\n                                            <td>\n                                            <TextField\n                                        id ='name'\n                                        name=\"name\"\n                                        type='text'\n                                        onChange={this.onChange}  \n                                        defaultValue={this.state.itemCatagory.name}          \n                                    />\n                                            </td>\n                                        </tr>\n                                        <tr>\n        <td>\n        <Button\n                                        type='submit'\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        >\n                                        Add\n                                        </Button>\n        </td>\n        <td>\n\n        </td>\n                                        </tr>\n                                        </tbody>\n                                    </table>\n                                   \n                                   \n                                \n                        </form>\n                    \n        </Grid>\n                    </Grid>\n                    \n                    </div>\n        return (\n            popUpRender\n        )\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    user: state.user\n})\n\nexport default connect(mapStateToProps)(DiscountCreation)","import React, { Component } from 'react'\nimport List from '../list';\nimport { getPlace, updatePlace,  deletePlaces, assignPlace } from '../../api/inventory/placeApi';\nimport {Button, TextField, Grid, Input } from '@material-ui/core';\nimport {getPlacements, deletePlacement } from '../../api/misc'\nimport {getItems} from '../../api/inventory/itemApi'\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\nimport Swal from 'sweetalert2'\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport {getPurchaseItems}  from '../../api/inventory/purchaseItem'\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\n\nclass PlaceList extends Component {\n    \n    constructor(props){\n        super(props)\n        this.popUp = this.popUp.bind(this)\n        this.state = {\n            'itemsPage':1,\n            'itemsStart':0,\n            'itemsEnd':10,\n            'newPlacementPopUpSelectItem': false,\n            'purchaseItemSelectPopUp':false,\n            'addPlacementFinal':false,\n            'page':1,\n            'start':0,\n            'end':10,\n            'popUpPlacement':false,\n            'popUp':false,\n            'place':{},\n            'update':{\n                'name':'',\n                'stock':1,\n            },\n            'placementUpdate':{},\n            'placements':[],\n            'items':[],\n            'purchaseItems':[],\n            'selectedPurchaseItem':[]\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.placeDelete = this.placeDelete.bind(this)\n        this.update = this.update.bind(this)\n        this.popUpPlacement = this.popUpPlacement.bind(this)\n        this.deletePlacement = this.deletePlacement.bind(this)\n        this.addNewItem = this.addNewItem.bind(this)\n        this.updateItemsTable = this.updateItemsTable.bind(this)\n        this.selectItem = this.selectItem.bind(this)\n        this.selectPurchaseItem = this.selectPurchaseItem.bind(this)\n        this.assignPlacement = this.assignPlacement.bind(this)\n        this.back = this.back.bind(this)\n    }\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value][0]\n            }\n        })\n    }\n    \n    back(){ \n        if (this.props.data){\n            this.setState({...this.state, popUp:false});\n        }else{\n            this.props.history.push('/places')\n        }\n    }\n    async componentDidMount(){\n        try {\n            const {id} = this.props.match.params\n            if (id){\n                await this.popUp(id,0,true)\n            }\n        }catch(e){\n            console.log(e)\n        }\n    }\n    \n    async update (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                start: 0,\n                end: 10,\n                page:1\n            })\n        }\n        else{\n            if (this.state.start+by>-1){\n                await this.setState({\n                    start: this.state.start+by,\n                    end: this.state.end+by,\n                    page:this.state.page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'place':this.state.update.id,\n            'filter':'place',\n            'start':this.state.start,\n            'end':this.state.end\n        }\n        this.getPlacementsData(request_json)\n    }\n\n    async getPlacementsData(request_json){\n        var data_main;\n        await getPlacements(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                data_main=data['placements']\n            }\n        })\n        await this.setState({\n            ...this.state,\n            'popUpPlacement':true,\n            'placements':data_main\n        })\n    }\n\n    async deletePlacement(id){\n        const request = {\n            'action':'delete',\n            'id':id\n        }\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"The remaining stock will be added to the default storage place.\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, delete it!'\n          }).then((result) =>  {\n            if (result.value) {\n        deletePlacement(JSON.stringify(request)).then(data=>{\n            if(data['status']){\n                Swal.fire('Placement is deleted and the remaining stock is added to the default storing place.')\n                this.popUp(this.state.place.id)\n            }\n            else {\n                Swal.fire(data['error'])\n            }\n        })\n    }\n})\n}\n    \n\n    popUpPlacement(){\n\n    }\n    \n    async onSubmit(){\n            var data = this.state.update\n            data = {...data, 'action':'edit','place_id':data.id}\n            updatePlace(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        alert(\"Place Data updated.\")\n                        this.back()\n                    }\n                    else{\n                        alert(data['error'])\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    placeDelete(id){\n        var data = {\n            'places_id':[\n                id\n            ]\n        }\n        deletePlaces(JSON.stringify(data)).then(data=>{\n            try {\n                if (data['status']){\n                    alert('Place data deleted.')\n                    this.back()\n                }   else{\n                    alert(data['error'])\n                }\n            }catch(e){\n                console.log(e)\n            }\n        })\n    }\n    \n    async popUp(id, uuid=0, fromUrl){\n        if(!fromUrl){\n            this.props.pushNewId(id)\n        }else{\n        const data = {\n            'action':'get',\n            'place_id':id,\n        }\n        var data_main, data_main2;\n        await getPlace(JSON.stringify(data)).then(data => {\n            if (data['status']){\n                data_main=data\n            }\n        })\n        await this.setState({\n            'popUp':true,\n            'place':data_main['places'][0],\n            'update':data_main['places'][0],\n        })\n        const req = {\n            'action':'get',\n            'place':id,\n            'filter':'place',\n            'start':0,\n            'end':10\n        }\n        this.getPlacementsData(req)\n    }\n}\n\n    async addNewItem(id){\n        var request = {\n            action:'get',\n            filter:'none',\n            start:0,\n            end:10          \n        }    \n        await getItems(JSON.stringify(request)).then(data => {\n            if (data['status']){\n                this.setState({\n                    ...this.state,\n                    newPlacementPopUpSelectItem: true,\n                    items:data['items']                                        \n                })\n            }\n            else{\n                Swal.fire(data['error'])\n            }\n        })\n    }\n\n    async assignPlacement(){\n        var request = {\n            'action':\"add\",\n            'place_id':this.state.place.id,\n            'purchase_item':this.state.selectedPurchaseItem.id,\n            'stock':this.state.update.stock\n        }\n        await assignPlace(JSON.stringify(request)).then(data => {\n            if (data['status']){\n                Swal.fire('Selected Items have been assigned to the place.')\n                this.updateItemsTable(0)\n            }else{\n                Swal.fire(data['error'])\n            }\n        })\n    }\n\n    columns = [\n        {\n            id:1,\n            name:\"Name\",\n            prop: 'name'\n        },\n        {\n            id:2,\n            name:\"Number of Items Assigned To The Place (different Purchase orders)\",\n            prop: 'count_assignment'\n        }     \n    ]\n\n    placementColumn = [\n        {\n            id:1,\n            name:\"Item\",\n            prop:'item_name',\n        },\n        {\n            id:2,\n            name:'Purchase Order ID',\n            prop:'purchase_order_uuid'\n        },\n        {\n            id:3,\n            name:'Stock',\n            prop:'stock'\n        }\n    ]\n\n    itemsColumn = [\n        {\n            id:1,\n            name:'Item',\n            prop:'name',\n        },{\n            id:2,\n            name:'Defined Sales Price',\n            prop:'sales_price',\n        },{\n            id:3,\n            name:'Stock',\n            prop:'stock'\n        },{\n            id:4,\n            name:'catagory',\n            prop:'catagory_str'\n        }\n    ]\n\n    purchaseItemsColumn = [\n        {\n            id:1,\n            name:'Vendor',\n            prop:'vendor'\n        },{\n            id:2,\n            name:'Purchase Order ID',\n            prop:'purchase_order_id',\n        },{\n            id:3,\n            name:'Purchase Price',\n            prop:'price'\n        },{\n            id:4,\n            name:'Total Stock',\n            prop:'stock'\n        },{\n            id:5,\n            name:'Unassigned Stock (On Default Place)',\n            prop:'on_default'\n        }\n    ]\n\n    async updateItemsTable (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                'itemsStart': 0,\n                'itemsEnd': 10,\n                'itemsPage':1\n            })\n        }\n        else{\n            await this.setState({\n                'itemsStart': this.state.itemsStart+by,\n                'itemsEnd': this.state.itemsEnd+by,\n                'itemsPage':this.state.itemsPage+x\n            })\n        \n        }\n        var  request = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.itemsStart,\n            'end':this.state.itemsEnd\n        }\n        await getItems(JSON.stringify(request)).then(data => {\n            if (data['status']){\n                this.setState({\n                    ...this.state,\n                    items:data['items']                                        \n                })\n            }\n            else{\n                Swal.fire(data['error'])\n            }\n        })\n    }\n    \n    async selectItem(id){\n        var request = {\n            'action':'get',\n            'filter':'itemForPlace',\n            'item_id':id,\n        }\n        var item;\n        for (var x in this.state.items){\n            if (this.state.items[x].id===id){\n                item = this.state.items[x]\n            } \n        }\n        await getPurchaseItems(JSON.stringify(request)).then(data => {\n            console.log(data)\n            if (data['status']){\n                this.setState({\n                    ...this.state,\n                    selectedItem:item,\n                    purchaseItemSelectPopUp:true,\n                    purchaseItems:data['purchase_items']                                \n                })\n            }\n            else{\n                Swal.fire(data['error'])\n            }\n        })\n    }\n\n    async selectPurchaseItem(id){\n        var purchase_item;\n        for (var x in this.state.purchaseItems){\n            if (this.state.purchaseItems[x].id===id){\n                purchase_item = this.state.purchaseItems[x]\n            } \n        }\n        await this.setState({\n            ...this.state,\n            addPlacementFinal: true,\n            placementUpdate:{\n                ...this.state.placementUpdate,\n                placementUpdate:{\n                    'purchase_item_id':id,\n                    'placed_on':this.state.place.id\n                },\n            },\n            'selectedPurchaseItem':purchase_item,\n        })\n        console.log(this.state)\n    }\n    render() {\n        var listData\n        if (!this.props.data){\n            listData = []\n        }else{\n            listData=this.props.data\n        }\n        const list = <List data={listData} header={this.columns}   popUp={this.popUp} update={this.props.update} page={this.props.page} />\n        const fianlForm = <div>\n            <table cellSpacing={10}  cellPadding={10} >\n                <tbody>\n                    <tr>\n                        <td colSpan={2}>\n                            <h2><u>Selected Item</u></h2>\n                            <List data={[this.state.selectedItem]} header={this.itemsColumn}/>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td colSpan={2}>\n                            <h2><u>Selected Stock (Purchase Order)</u></h2>\n                            <List data={[this.state.selectedPurchaseItem]} header={this.purchaseItemsColumn}/>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td> \n                            <TextField required id=\"stock\"  name=\"stock\" onChange={this.onChange} label=\"Number of Items To Assign\" fullWidth defaultValue={this.state.update.stock}  type='number' autoFocus min={1} max={this.state.selectedPurchaseItem.on_default} />\n                        </td>\n                        <td>\n                            <Button  variant=\"contained\" color=\"primary\" onClick={()=> {this.assignPlacement()}}>Assign</Button>\n                        </td>\n                    </tr>\n                </tbody>\n\n            </table>\n        </div>\n        const newPlacementForm = <div>\n            <hr></hr>\n            <table cellSpacing={10} cellPadding={10}>\n                <tbody>\n                    <tr>\n                        <th colSpan={2}>\n                            <h1>Place new item to {this.state.place.name}</h1>\n                            {this.state.purchaseItemSelectPopUp ? <h4>Select a Purchase Order</h4> : <h4>Select an Item</h4>}\n                        </th>\n                    </tr>\n                    <tr>\n                        <td colSpan={2}>\n                        {this.state.purchaseItemSelectPopUp ? this.state.addPlacementFinal ? fianlForm : <List data={this.state.purchaseItems} header={this.purchaseItemsColumn} popUp={this.selectPurchaseItem}></List> : <List data={this.state.items} header={this.itemsColumn}  popUp={this.selectItem} update={this.updateItemsTable} page={this.state.itemsPage}/> }   \n                           </td>\n                    </tr>\n                </tbody>\n\n            </table>\n        </div>\n        const popUpRender = <div>\n                         &nbsp;\n                        &nbsp;\n                        &nbsp;\n                        &nbsp;\n                        &nbsp;\n                        &nbsp;<Button  variant=\"contained\" size='small' color=\"primary\" onClick={()=> {this.back()}}>\n                            <ArrowLeftIcon></ArrowLeftIcon>\n                            Back\n                        </Button>\n                        <Grid container>\n                            <Grid item xs={3}>\n                            <span> </span>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <table cellSpacing={10}>\n                                    <tbody>\n                                        <tr>\n                                            <td colSpan={2}>\n                                            <h1>{this.state.place.name}</h1>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td colSpan={2}>\n                                            <TextField\n                                            id ='name'\n                                            name=\"name\"\n                                            label='Place Name'\n                                            autoFocus\n                                            fullWidth\n                                            required\n                                            type='text'\n                                            onChange={this.onChange}  \n                                            value={this.state.update.name}          \n                                        />\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                            <Button\n                                                type='submit'\n                                                variant=\"contained\"\n                                                color=\"primary\"\n                                                >\n                                                Update\n                                                </Button>\n                                            </td>\n                                            <td>\n                                            <Button variant=\"contained\" color=\"secondary\" onClick={() => {this.placeDelete(this.state.place.id)}}>\n                                                Delete Place\n                                            </Button> \n                                            </td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </Grid>\n                        </Grid>\n                        <Grid container justify={'center'}>\n                            <Grid item xm={8}>\n                                <table>\n                                    <tbody>\n                                    <tr>\n                                        <td>\n                                        <h1>Items Located On {this.state.update.name}</h1>\n                                        </td>\n                                        <td>\n                                            <Button variant=\"contained\" color=\"primary\" onClick={() => {this.addNewItem(this.state.place.id)}}><AddCircleIcon></AddCircleIcon></Button>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td colSpan={2}>\n                                            {this.state.newPlacementPopUpSelectItem  ? newPlacementForm : <List data={this.state.placements} header={this.placementColumn} delete={this.deletePlacement} popUp={this.popUpPlacement} update={this.update} page={this.state.page} />}\n                                            \n                                        </td>\n                                    </tr>\n                                    </tbody>\n                                </table>\n                            \n                            </Grid>\n                        </Grid>\n                        \n                    </div>\n        return (\n            <div>\n                {this.state.popUp ? popUpRender : list}\n            </div>\n        )\n    }\n}\n\nexport default PlaceList\n","import React, { Component } from 'react'\nimport {getPlaces} from '../../api/inventory/placeApi';\nimport {  connect } from 'react-redux';\nimport  PlaceList  from './placeList';\nimport { Link} from 'react-router-dom';\n\n\nimport Button from '@material-ui/core/Button';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport LoadingIcon from '../loading';\n\nclass Placements extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            'places':[],\n            'loaded':false,\n            'start':0,\n            'end':10,\n            'page':1\n        }\n        this.update_table = this.update_table.bind(this)\n        this.pushNewId = this.pushNewId.bind(this)\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n        this.update_table(0)\n    }\n    \n    pushNewId(id){\n        this.props.history.push('/places/'+id)\n    }\n\n\n    async update_table (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                'loaded':false,\n                start: 0,\n                end: 10,\n                page:1\n            })\n        }\n        else{\n            if (this.state.start+by>-1){\n                await this.setState({\n                    'loaded':false,\n                    start: this.state.start+by,\n                    end: this.state.end+by,\n                    page:this.state.page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.start,\n            'end':this.state.end\n        }\n        this.getPlacesData(request_json)\n    }\n    \n    async getPlacesData(request_json) {\n        await getPlaces(JSON.stringify(request_json)).then(data => {\n            console.log(data)\n            if (data['status']){\n                this.setState({\n                    'places':data['places'],\n                    'loaded':true\n                })\n            }  \n        })\n    }\n\n \n\nrender() {\n    const render_after_load = (\n        <div>\n            <PlaceList pushNewId={this.pushNewId} data={this.state.places} update={this.update_table} page={this.state.page} />\n        </div>\n    )\n\n    return(\n        <div>\n        <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n            <Grid item xs={3} >\n            <Button variant=\"contained\" color=\"primary\" onClick={() => {this.update_table(0)}}>\n              <RefreshIcon/>&nbsp;&nbsp;&nbsp;Refresh Table\n              </Button>\n            </Grid>\n            <Grid item xs={5}>\n  \n            </Grid>\n              <Grid item xs={3}>\n              <Link to='/places/create' style={{ textDecoration: 'none' }}>\n              <Button variant=\"contained\" color=\"secondary\">\n              <AddCircleIcon/>&nbsp;&nbsp;&nbsp;Add New Place\n              </Button>\n              </Link>\n              </Grid>\n  \n          <Grid item xs={12}>\n            <Paper>\n            {this.state.loaded ? render_after_load : <LoadingIcon></LoadingIcon>}\n            </Paper>\n          </Grid>\n          \n        </Grid>\n      </div>    )\n}\n}\n\n\n\n\nconst mapStateToProps = state => ({\n    user: state.user,\n})\n\nexport default connect(mapStateToProps)(Placements)","import React, { Component } from 'react'\nimport {  connect } from 'react-redux';\nimport {Button, TextField, Grid } from '@material-ui/core';\nimport { createPlace } from '../../api/inventory/placeApi';\nimport Swal from 'sweetalert2';\n\n\nclass PlaceCreation extends Component {\n\n    constructor (props){\n        super(props)\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.state = {\n            'update':{\n            }\n        }\n    }\n\n    async componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n    }\n\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value][0]\n            }\n        })\n    }\n\n\n    async onSubmit(e){\n        e.preventDefault();\n            var data = {...this.state.update}\n            data = {...data, 'action':'add'}\n            console.log(data)\n            createPlace(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        Swal.fire(\"New Place Added\")\n                    }\n                    else{\n                        Swal.fire(data['error'])\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    render() {\n        const popUpRender = <div>\n            <Grid container justify='center'>\n                <Grid item>\n                    \n<form onSubmit={this.onSubmit}>\n                    <table cellPadding={10} cellSpacing={10}>\n                        <tbody >\n                            <tr>\n<td>\n                            Name: <TextField\n                                id ='name'\n                                name=\"name\"\n                                type='text'\n                                onChange={this.onChange}      \n                            />\n</td>\n                            </tr>\n                            <tr>\n                                <td>\n                                <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                >\n                                Create</Button>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n               \n                            \n                           \n                </form>\n                </Grid>\n\n            </Grid>\n                    </div>\n        return (\n            popUpRender\n        )\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    user: state.user\n})\n\nexport default connect(mapStateToProps)(PlaceCreation)","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport Login from './users/login';\nimport Logout from './users/logout';\nimport VendorCreation from './vendors/vendorCreation';\nimport UserCreation from './users/userCreation';\nimport { BrowserRouter as Router, Switch , Route} from 'react-router-dom';\nimport Users from './users';\nimport Vendors from './vendors/index';\nimport Customers from './customer/index';\nimport CustomerCreation from './customer/customerCreation'\nimport PurchaseOrders from './purchaseOrder/index'\nimport PurchaseOrderCreation from './purchaseOrder/purchaseOrderCreation'\nimport Invoices from './invoices/index';\nimport InvoiceCreation from './invoices/invoiceCreation';\nimport Discounts from './discounts/index';\nimport DiscountCreation from './discounts/discountCreation'\nimport Taxes from './taxes/index';\nimport TaxCreation from './taxes/taxCreation'\nimport Items from './items/index'\nimport ItemCreation from './items/itemCreation'\nimport ItemCatagories from './itemCatagories/index';\nimport ItemCatagoryCreation from './itemCatagories/itemCreation';\nimport Places from './placement/index'\nimport PlaceCreation from './placement/placeCreation'\n\nimport { useSelector } from \"react-redux\";\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\n\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport PeopleIcon from '@material-ui/icons/People';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\nimport FeaturedPlayListIcon from '@material-ui/icons/FeaturedPlayList';\nimport SettingsIcon from '@material-ui/icons/Settings';\n\nimport CustomerList from './customer/customerList'\nimport DiscountList from './discounts/discountList'\nimport InvoiceListing from './invoices/invoiceListing'\nimport ItemCatagoryList from './itemCatagories/itemCatagoryList'\nimport ItemList from './items/itemList'\nimport PlaceList from './placement/placeList'\nimport PurchaseOrderList  from './purchaseOrder/purchaseOrderList'\nimport TaxList from './taxes/taxList'\nimport UserList from './users/userList'\nimport VendorList from './vendors/vendorList'\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24,\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    textAlign: 'center',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nfunction Dashboard() {\n  \n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n\n  };\n\n  const user = useSelector(state => state.user);\n  var isDashboard = false\n  if( (window.location.pathname) ==='/'){\n    isDashboard = true\n  }\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            Mandala IMS\n          </Typography>\n          <IconButton color=\"inherit\"  onClick={()=> {window.location.href=\"/logout\"}}>\n          <ExitToAppIcon/>\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <Typography>\n            {user.data.first_name} <span>  </span> {user.data.last_name}<br></br>\n            {user.data.user_type}\n          </Typography>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Router>\n        <Divider />\n        <List>\n    <ListItem button onClick={()=> {window.location.href=\"/\"}}>\n      <ListItemIcon>\n        <DashboardIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Dashboard\" />\n    </ListItem>\n    <ListItem button  onClick={()=> {window.location.href=\"/purchaseorders\"}}>\n      <ListItemIcon>\n        <ShoppingCartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Purchase Orders\" />\n    </ListItem>\n    <ListItem button onClick={()=> {window.location.href=\"/vendors\"}}>\n      <ListItemIcon>\n        <PeopleIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Vendors\" />\n    </ListItem>\n    <ListItem button onClick={()=> {window.location.href=\"/invoices\"}}>\n      <ListItemIcon>\n        <DescriptionIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Invoices\" />\n    </ListItem>\n    <ListItem button onClick={()=> {window.location.href=\"/customers\"}}>\n      <ListItemIcon>\n        <MonetizationOnIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Customers\" />\n    </ListItem>\n    <ListItem button onClick={()=> {window.location.href=\"/items\"}}>\n      <ListItemIcon>\n      <FeaturedPlayListIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Items\" />\n    </ListItem>\n        </List>\n        <Divider />\n        <List>\n    <ListItem button onClick={()=> {window.location.href=\"/places\"}}>\n      <ListItemIcon>\n      <SettingsIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Item Managements\" />\n    </ListItem>\n    <ListItem button onClick={()=> {window.location.href=\"/discounts\"}}>\n      <ListItemIcon>\n      <SettingsIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Discounts\" />\n    </ListItem>\n    <ListItem button onClick={()=> {window.location.href=\"/taxes\"}}>\n      <ListItemIcon>\n      <SettingsIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Taxes\" />\n    </ListItem>\n    <ListItem button onClick={()=> {window.location.href=\"/itemcatagories\"}}>\n      <ListItemIcon>\n      <SettingsIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Item Catagories\" />\n    </ListItem>\n    <ListItem button onClick={()=> {window.location.href=\"/users\"}}>\n      <ListItemIcon>\n      <SettingsIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Staff Management\" />\n    </ListItem>\n        </List>\n        </Router>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container className={classes.container}>\n          <Grid container justify=\"center\">\n            <Grid item xs={12} >\n              {/* {isDashboard ? <Hello></Hello>: <span></span>} */}\n            <Router>\n            <Switch>\n                    <Route path='/login' component={Login}></Route>\n                    <Route path='/logout' component={Logout}></Route>\n                    <Route path='/users/create' component = {UserCreation}></Route>\n                    <Route path='/users/:id' component = {UserList}></Route>\n                    <Route path='/users' component = {Users}></Route>\n\n                    <Route path='/vendors/create' component = {VendorCreation}></Route>\n                    <Route path='/vendors/:id' component = {VendorList}></Route>\n                    <Route path='/vendors' component = {Vendors}></Route>\n                    \n                    <Route path='/customers/create' component = {CustomerCreation}></Route>\n                    <Route path='/customers/:id' component = {CustomerList}></Route>\n                    <Route path='/customers' component = {Customers}></Route>\n\n                    <Route path='/purchaseorders/create' component = {PurchaseOrderCreation}></Route>\n                    <Route path='/purchaseorders/:id' component = {PurchaseOrderList}></Route>\n                    <Route path='/purchaseorders' component = {PurchaseOrders}></Route>\n                    \n                    <Route path='/invoices/create' component = {InvoiceCreation}></Route>\n                    <Route path='/invoices/:id' component = {InvoiceListing}></Route>\n                    <Route path='/invoices' component = {Invoices}></Route>\n\n                    <Route path='/discounts/create' component= {DiscountCreation}></Route>\n                    <Route path='/discounts/:id' component= {DiscountList}></Route>\n                    <Route path='/discounts' component= {Discounts}></Route>\n                    \n                    <Route path='/taxes/create' component= {TaxCreation}></Route>\n                    <Route path='/taxes/:id' component= {TaxList}></Route>\n                    <Route path='/taxes' component= {Taxes}></Route>\n                    \n                    <Route path='/items/create' component= {ItemCreation}></Route>\n                    <Route path='/items/:id' component= {ItemList}></Route>\n                    <Route path='/items' component= {Items}></Route>\n\n                    <Route path='/itemcatagories/create' component= {ItemCatagoryCreation}></Route>\n                    <Route path='/itemcatagories/:id' component= {ItemCatagoryList}></Route>\n                    <Route path='/itemcatagories' component= {ItemCatagories}></Route>\n\n                    <Route path='/places/create' component= {PlaceCreation}></Route>\n                    <Route path='/places/:id' component= {PlaceList}></Route>\n                    <Route path='/places' component= {Places}></Route>\n                    </Switch>\n            </Router>\n            </Grid>            \n          </Grid>\n        </Container>\n      </main>\n    </div>\n  );\n}\n\nexport default Dashboard","import React, { Component } from 'react'\nimport {  connect } from 'react-redux';\nimport { getCurrentUser } from '../api/user';\nimport { loggedIn } from '../actions';\nimport swal from 'sweetalert';\nimport Dashboard from './dashboard'\nimport LoadingIcon from './loading'\nimport Login from './users/login'\n\nclass Index extends Component {\n    constructor (props){\n        super(props)\n        this.state = {\n            'loading':true\n        }\n    }\n    \n    \n\n    async componentDidMount() { \n        await getCurrentUser().then(data => {\n            if (data){\n              \n              console.log(data)\n                if (data['status'])\n                {\n                    this.props.dispatch(loggedIn(data['user_data']))\n                }\n                this.setState({\n                  'loading':false\n                })\n            }\n            else{\n                swal('Cannot connet to the server, make sure you have a stable internet connection.')\n            }\n        })\n    }\n    render() {\n        var render_x=<LoadingIcon></LoadingIcon>;\n        if(this.state.loading){\n          render_x = <LoadingIcon></LoadingIcon>\n        }\n        else{\n          if (this.props.user.isLoggedIn){\n            render_x = <Dashboard></Dashboard>\n          }\n          else{\n            render_x = <Login></Login>\n          }\n        }\n        \n        return (\n          <div>\n            {render_x}\n          </div>\n          \n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    user: state.user\n})\n\nexport default connect(mapStateToProps)(Index)","import React from 'react';\nimport './App.css';\nimport Index from './components';\n\n\nfunction  App() {\n  return (\n    <div>\n      <Index></Index>\n    </div>\n  );\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","var initState = {\n    'isLoggedIn':false,\n    'data':{}\n}\nconst userReducer = (state=initState, action) => {\n    switch(action.type){\n        case 'logout':\n            state.data = {}\n            state.isLoggedIn = false;\n            return{\n                isLoggedIn: state.isLoggedIn\n            }\n        case 'loggedIn':\n            state.data = action.payload\n            state.isLoggedIn = true;\n            return {\n                data: state.data,\n                isLoggedIn: state.isLoggedIn\n            }\n        default:\n            return state;\n    }\n\n};\n\nexport default userReducer","var initState = {\n    'data':{}\n}\nconst usersReducer = (state=initState, action) => {\n    switch(action.type){\n        case 'setUsers':\n            state.users = action.payload\n            return{\n                users: state.users\n            }\n        default:\n            return state;\n    }\n\n};\n\nexport default usersReducer","import { combineReducers } from 'redux';\nimport userReducer from './userReducer';\nimport usersReducer from './usersReducer';\n\nconst rootReducers = combineReducers ({\n    user: userReducer,\n    users : usersReducer\n})\n\nexport default rootReducers","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { applyMiddleware, createStore } from 'redux';\nimport rootReducer from './reducers';\nimport { Provider } from 'react-redux';\nimport thunkMiddleware from 'redux-thunk';\n\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.getElementById('root')\n    );\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"popUp_loader__ji3PT\",\"spin\":\"popUp_spin__1nLou\",\"dropbtn\":\"popUp_dropbtn__1fyGN\",\"dropdown\":\"popUp_dropdown__2vgTr\",\"dropdown_content\":\"popUp_dropdown_content__1rTux\"};"],"sourceRoot":""}