{"version":3,"sources":["server.js","api/base.js","api/user.js","actions/index.js","components/users/login.jsx","components/users/logout.jsx","api/inventory/vendorApi.js","components/vendors/vendorCreation.jsx","components/users/userCreation.jsx","components/list.jsx","components/users/userList.jsx","components/loading.js","components/users/index.jsx","components/vendors/vendorList.jsx","components/vendors/index.jsx","api/sales/customer.js","components/customer/customerList.jsx","components/customer/index.jsx","components/customer/customerCreation.jsx","api/inventory/purchaseOrder.js","api/inventory/purchaseItem.js","api/misc.js","api/inventory/itemApi.js","components/purchaseOrder/popUpEdit.jsx","components/purchaseOrder/purchaseOrderList.jsx","components/purchaseOrder/index.jsx","components/purchaseOrder/purchaseOrderCreation.jsx","api/sales/invoice.js","api/sales/invoiceItem.js","api/inventory/placeApi.js","components/invoices/popUpEdit.jsx","components/invoices/invoiceListing.jsx","components/invoices/index.jsx","components/invoices/invoiceCreation.jsx","components/discounts/discountList.jsx","components/discounts/index.jsx","components/discounts/discountCreation.jsx","components/taxes/taxList.jsx","components/taxes/index.jsx","components/taxes/taxCreation.jsx","api/inventory/itemCatagory.js","components/items/itemList.jsx","components/items/index.jsx","components/items/itemCreation.jsx","components/itemCatagories/itemCatagoryList.jsx","components/itemCatagories/index.jsx","components/itemCatagories/itemCreation.jsx","components/placement/placeList.jsx","components/placement/index.jsx","components/placement/placeCreation.jsx","components/dashboard/hello.jsx","components/dashboard.js","components/index.jsx","App.js","serviceWorker.js","reducers/userReducer.js","reducers/usersReducer.js","reducers/index.js","index.js","components/purchaseOrder/css/popUp.module.css"],"names":["url","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","setCookie","value","days","expires","date","Date","setTime","getTime","toUTCString","getResponse","response","a","headers","get","json","baseRequest","method","body","signal","fetch","URL","serverUrl","credentials","myResponse","loginUser","data","alert","logoutUser","createUser","getUsers","getUser","updateUser","getCurrentUser","loggedIn","type","payload","Login","props","state","username","password","status","onChange","bind","onSubmit","this","current_state","user","isLoggedIn","window","location","href","e","setState","target","preventDefault","JSON","stringify","then","Container","component","maxWidth","CssBaseline","Avatar","style","padding","margin","backgroundColor","noValidate","TextField","variant","fullWidth","id","label","autoComplete","autoFocus","FormControlLabel","control","Checkbox","color","Button","Alert","severity","display","Grid","container","Box","mt","Component","connect","Logout","res","dispatch","history","push","getVendors","createVendor","deleteVendors","updateVendor","getVendor","styles","makeStyles","theme","root","flexGrow","paper","spacing","textAlign","palette","text","secondary","VendorCreation","update","ele","console","log","Swal","fire","icon","title","classes","justify","alignContent","alignItems","item","xm","xs","required","md","FormControl","InputLabel","htmlFor","Input","onClick","withStyles","UserCreation","user_type","password2","cellSpacing","cellPadding","useStyles","table","minWidth","List","page","delete_button","temp","header","rows","no_data","back","delete","pagination","IconButton","aria-label","disabled","TableContainer","Paper","Table","className","TableHead","TableRow","map","TableCell","key","TableBody","row","popUp","uuid","prop","size","UserList","columns","data_main","list","popUpRender","user_data","first_name","last_name","email","defaultValue","is_active","userDelete","userRevive","left","bottom","right","LoadingIcon","React","useState","progress","setProgress","useEffect","timer","setInterval","oldProgress","clearInterval","direction","minHeight","CircularProgress","Users","update_table","request_json","by","x","start","end","getUsersData","render_after_load","users","to","textDecoration","loaded","VendorList","vendorDelete","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","showConfirmButton","middle_name","website","phone1","phone2","address","tax_number","Vendors","getVendorsData","vendors","getCustomers","deleteCustomers","createCustomer","getCustomer","updateCustomer","CustomerList","customerDelete","customer","Customers","getCustomersData","customers","CustomerCreation","getPurchaseOrders","deletePurchaseOrder","createPurchaseOrder","getPurchaseOrder","updatePurchaseOrder","deletePurchaseItems","createPurchaseItem","updatePurchaseItem","getPurchaseItems","getDiscounts","deleteDiscounts","createDiscount","getDiscount","updateDiscount","getTaxes","deleteTaxes","createTax","getTax","updateTax","getPurchaseOrderStatus","getPlacements","deletePlacement","getItems","deleteItems","createItem","getItem","updateItem","PopUpEdit","purchase_order","converter","invoiced_on","completed_on","purchase_items","refreshTable","getItemData","selectItem","searchItem","addPurchaseItem","invoiceHandler","completeHandler","searchVendor","selectVendor","onChangePI","postPurchaseItem","deletePurchaseItem","parse","error","current","is_new","purchase_items_id","p_list","items","item_selection","itemPopUp","trigger","closeOnDocumentClick","placeholder","dropdown_content","popUpItem","colSpan","item_name","InputProps","readOnly","new","quantity","defective","Select","lable","discount_type","MenuItem","discount","purchase_price","vendor_selection","vendorPopup","vendor","vendor_name","added_by_name","selected","total_cost","parseInt","PurchaseOrderList","purchaseOrderDelete","PurchaseOrders","getPurchaseOrdersData","purchaseOrders","PurchaseOrderCreation","toISOString","addPurchaseOrder","registered","getInvoices","deleteInvoices","createInvoice","getInvoice","updateInvoice","getInvoiceStatus","deleteInvoiceItems","createInvoiceItem","updateInvoiceItem","getPlaces","deletePlaces","createPlace","getPlace","updatePlace","assignPlace","discount_columns","tax_columns","add_discount_columns","add_tax_columns","invoice","due_on","invoice_items","stateman","addInvoiceItem","dueOnHandler","getCustomerData","searchCustomer","selectCustomer","postInvoiceItem","deleteInvoiceItem","onChangePlace","removeEntry","addEntryDiscount","addEntryTax","popUpTemp","dis","temp2","applied_discount","pop","applied_tax","taxes","getPlacesData","filter","el","update_stock","sold_from","p","string","sold_from_selection","invoice_items_id","discount_start","discount_end","discount_page","getDiscountsData","tax_start","tax_end","tax_page","getTaxesData","discount_selection","tax_selection","sales_price","places","place_selection","selectPlace","str_placed_on","stocks","stock_selection","stockValue","purchase_item","selectStock","str","addPopupDiscount","addPopupTax","discounts","responsive","min","price","tax_total","sub_total","discount_amount","total_without_discount","total","discount_loaded","tax_loaded","customer_selection","customerPopup","spaceing","customer_name","order_number","total_amount","discount_total","paid_amount","additional_discount","InvoiceListing","invoiceDelete","Invoices","getInvoiceData","invoices","InvoiceCreation","pathname","DiscountList","discountDelete","code","formControl","rate","Discounts","DiscountCreation","TaxList","taxDelete","tax","tax_type","Taxes","TaxCreation","getItemCatagories","deleteItemCatagory","createItemCatagory","getItemCatagory","updateItemCatagory","ItemList","placementColumns","itemDelete","getPlacementsData","request","placements","placementStart","placementEnd","placementPage","catagories","catagory","stock","sold","dummy","update_placement_table","Items","getItemsData","ItemCreation","ItemCatagoryList","items_c","itemCatDelete","popUptemp","updatetemp","itemCatagory","ItemCatagories","getItemCatagoriesData","item_catagories","PlaceList","placementColumn","itemsColumn","purchaseItemsColumn","placeDelete","popUpPlacement","addNewItem","updateItemsTable","selectPurchaseItem","assignPlacement","place","req","action","newPlacementPopUpSelectItem","selectedPurchaseItem","itemsStart","itemsEnd","itemsPage","selectedItem","purchaseItemSelectPopUp","purchaseItems","addPlacementFinal","placementUpdate","fianlForm","max","on_default","newPlacementForm","Placements","PlaceCreation","Hello","toolbar","paddingRight","toolbarIcon","justifyContent","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","height","overflow","paddingTop","paddingBottom","flexDirection","fixedHeight","Dashboard","open","setOpen","useSelector","AppBar","clsx","Toolbar","edge","Typography","noWrap","Drawer","Divider","ListItem","button","ListItemIcon","ListItemText","primary","path","ItemCatagoryCreation","Places","Index","swal","render_x","loading","App","Boolean","hostname","match","initState","userReducer","usersReducer","rootReducers","combineReducers","store","createStore","rootReducer","applyMiddleware","thunkMiddleware","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.7e3bd2a2.chunk.js","sourcesContent":["// const prod = `${window.location.protocol}//${window.location.host}/`;\n// const url = \"http://localhost:8000/\";\nconst url =\"https://simpleim.herokuapp.com/\"\n// const serverUrl = process.env.NODE_ENV === \"development\" ? dev : prod;\nexport default url;\n","import serverUrl from \"../server\";\n\nfunction getCookie(name) {\n  var cookieValue = null;\n  if (document.cookie && document.cookie !== \"\") {\n    var cookies = document.cookie.split(\";\");\n    for (var i = 0; i < cookies.length; i++) {\n      var cookie = cookies[i].trim();\n      if (cookie.substring(0, name.length + 1) === name + \"=\") {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n  return cookieValue;\n}\n\nfunction setCookie(name,value,days) {\n  var expires = \"\";\n  if (days) {\n      var date = new Date();\n      date.setTime(date.getTime() + (days*24*60*60*1000));\n      expires = \"; expires=\" + date.toUTCString();\n  }\n  document.cookie = name + \"=\" + (value || \"\")  + expires + \"; path=/\";\n}\n\nconst getResponse = async response => {\n  const contentType = response.headers.get(\"content-type\");\n  if (contentType === \"application/json\") {\n    const json = await response.json();\n    return { response, json };\n  }\n  return { response };\n};\n\nconst baseRequest = async (url, method, body, signal) => {\n    var cookie = getCookie(\"x-csrftoken\")\n    if (cookie === null) {\n      const response = await fetch(new URL('apiv1/users/verify', serverUrl), {\n        method: 'GET'\n      });\n      const temp = await getResponse(response)\n      setCookie('x-csrftoken', temp.json['x-csrftoken'], 2)\n    }\n    cookie = getCookie(\"x-csrftoken\")\n    const response = await fetch(new URL(url, serverUrl), {\n        method: method,\n        body: body,\n        signal: signal,\n        credentials: \"include\",\n        headers: {\n        \"x-csrftoken\": cookie,\n        \"Content-Type\": \"application/json\"\n        }\n    });\n    const myResponse = await getResponse(response);\n    return myResponse.json;\n};\n\n\nexport { baseRequest };","import { baseRequest } from './base';\n\nconst loginUser = async data => {\n    try {\n      return await baseRequest(\"apiv1/users/login\", \"POST\", data);\n    } catch (e) {\n      alert(e);\n    }\n  };\n\nconst csrfToken = async () => {\n    try {\n        return await baseRequest(\"apiv1/users/verify\", \"GET\");\n      } catch (e) {\n        alert(e);\n      }\n    };\n\nconst logoutUser = async data => {\n  try {\n    return await baseRequest('apiv1/users/logout', \"GET\");\n  } catch(e){\n    alert(e);\n  }\n};\n\nconst createUser = async data => {\n  try {\n    return await baseRequest('apiv1/users/create','POST', data);\n  } catch(e){\n    alert(e)\n  }\n};\n\nconst getUsers = async data => {\n  try {\n    return await baseRequest('apiv1/users/get','POST', data);\n  } catch(e){\n    alert(e)\n  }\n};\n\n\nconst getUser = async data => {\n  try {\n    return await baseRequest('apiv1/users/get/0','POST', data);\n  } catch(e){\n    alert(e)\n  }\n};\n\nconst updateUser = async data => {\n  try{\n    return await baseRequest('apiv1/users/get/0', 'POST', data);\n  } catch (e){\n    alert(e)\n  }\n};\n\n\nconst getCurrentUser = async data => {\n  try{\n    return await baseRequest('apiv1/users/current', 'POST', data);\n  } catch (e){\n    alert(e)\n  }\n};\n\nexport { loginUser, csrfToken, logoutUser, getUsers, createUser, getUser, updateUser, getCurrentUser }","export const logout = () => {\n    return {\n        type: 'logout'\n    };\n}\n\nexport const loggedIn = (data) => {\n    return {\n        type: 'loggedIn',\n        payload: data\n    };\n}\n\nexport const setUsers = (data) => {\n    return{\n        type: 'setUsers',\n        payload: data\n    }\n}\n\n\nexport const setVendors = (data) => {\n    return{\n        type: 'setVendors',\n        payload: data\n    }\n}","import React, { Component } from 'react';\nimport { loginUser, getCurrentUser } from '../../api/user';\nimport {  connect } from 'react-redux';\nimport { loggedIn } from '../../actions';\n\n//material-ui import button\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\n\nimport Alert from '@material-ui/lab/Alert';\n\nclass Login extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            username:'',\n            password:'',\n            status:'',\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n    componentDidMount() {\n        if (this.props.current_state.user.isLoggedIn === true){\n          window.location.href=\"/\"\n        }\n    }\n    onChange(e)\n    {\n        this.setState({[e.target.name]: [e.target.value]})\n    }\n    async onSubmit(e){\n        e.preventDefault();\n        const data = {\n            username: this.state.username[0],\n            password: this.state.password[0]\n        }\n        loginUser(JSON.stringify(data)).then(data => {\n            try{\n                if (data['status']){\n                    window.location.href=\"/\"\n                  }else if ((this.state.username===\"\" && this.state.password===\"\")|\n                (this.state.username===\"\" || this.state.password===\"\")){\n                        this.setState((state) => {\n                            return {status: \"Username and password empty\"};\n                          });\n                }\n                else if (data['status']=== false){\n                    this.setState((state) => {\n                        return {status: data['msg']};\n                      });\n                }\n            }catch(e){\n                alert(e)\n            }\n        })       \n    }\n\n    render() {\n      \n        return (\n            <Container component=\"main\" maxWidth=\"xs\">\n                \n                <CssBaseline />\n                <div>\n                  <Avatar style={{padding:30,margin:'auto',backgroundColor:'#1a237e'}} >\n                    <h3>O</h3>\n                  </Avatar>\n                  {/* <Typography component=\"h1\" variant=\"h4\" style={{textAlign:'center'}}>\n                    LOGIN\n                  </Typography> */}\n                  <form  onSubmit={this.onSubmit} noValidate>\n                    <TextField\n                      variant=\"outlined\"\n                      margin=\"normal\"\n                      fullWidth\n                      id=\"uname\"\n                      label=\"Username\"\n                      name=\"username\"\n                      autoComplete=\"email\"\n                      autoFocus\n                      type='text'\n                      onChange={this.onChange}\n                      value={this.state.username}\n                    />\n                    {/* required */}\n                    <TextField\n                      variant=\"outlined\"\n                      margin=\"normal\"\n                      fullWidth\n                      name=\"password\"\n                      label=\"Password\"\n                      type=\"password\"\n                      id=\"password\"\n                      autoComplete=\"current-password\"\n                      onChange={this.onChange}\n                      value={this.state.password}\n                    />\n                    <FormControlLabel\n                      control={<Checkbox value=\"remember\" color=\"primary\" />}\n                      label=\"Remember me\"\n                    />\n                    <Button\n                      type='submit'\n                      fullWidth\n                      variant=\"contained\"\n                      color=\"primary\"\n                    >\n                      Login\n                    </Button>\n                    <br/><br/>\n                    <Alert severity=\"error\" style={{display: this.state.status ? \"\":'none'}}>\n                        {this.state.status}\n                    </Alert>\n\n                    <Grid container>\n                      {/* <Grid item xs>\n                        <Link href=\"#\" variant=\"body2\">\n                          Forgot password?\n                        </Link>\n                      </Grid> */}\n                      {/* <Grid item>\n                        <Link href=\"#\" variant=\"body2\">\n                          {\"Don't have an account? Sign Up\"}\n                        </Link>\n                      </Grid> */}\n                    </Grid>\n                  </form>\n                </div>\n                <Box mt={8}>\n                  {/* <Copyright /> */}\n                </Box>\n              </Container>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    current_state: state\n})\n\nexport default connect(mapStateToProps)(Login)","import React, { Component } from 'react'\nimport { logoutUser } from '../../api/user';\nimport {  connect } from 'react-redux';\nimport { logout } from '../../actions';\n\n\nclass Logout extends Component {\n    componentDidMount(){\n        logoutUser().then(res => {\n            this.props.dispatch(logout())\n            this.props.history.push('/')\n\n        });\n    }\n\n    render() {\n        return (\n            <div>\n            </div>\n        )\n    }\n}\n\nexport default connect()(Logout)","import { baseRequest } from '../base';\n// api for vendors\n\nconst getVendors = async data => {\n  try {\n    return await baseRequest('apiv1/inventory/vendors','POST', data);\n  } catch(e){\n    alert(e)\n  }\n};\n\nconst createVendor = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/vendors','POST', data);\n    } catch(e){\n      alert(e)\n    }\n};\n\n\nconst deleteVendors = async data => {\n  try {\n    return await baseRequest('apiv1/inventory/vendors/delete','POST', data);\n  } catch(e){\n    alert(e)\n  }\n};\n\n\nconst updateVendor = async data => {\n  try {\n    return await baseRequest('apiv1/inventory/vendor','POST', data);\n  } catch(e){\n    alert(e)\n  }\n};\n\nconst getVendor = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/vendor','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n\nexport { getVendors, createVendor, deleteVendors, updateVendor, getVendor}","import React, { Component } from 'react'\nimport {  connect } from 'react-redux';\nimport {Button, TextField , withStyles} from '@material-ui/core';\nimport { createVendor } from '../../api/inventory/vendorApi';\n\n\nimport {Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\n\n\nimport {FormControl, InputLabel, Input} from '@material-ui/core'\nimport Swal from 'sweetalert2'\n\n\nconst styles = makeStyles((theme) => ({\n    root: {\n    flexGrow: 12,\n    },\n    paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    },\n}));\n\n\nclass VendorCreation extends Component {\n\n    constructor (props){\n        super(props)\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.state = {\n            'update':{\n                'middle_name':[''],\n                'website':[''],\n                'phone2':[''],\n                'address':['']\n            }\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n    }\n\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value]\n            }\n        })\n    }\n\n\n    async onSubmit(e){\n            var data = {...this.state.update}\n            var ele;\n            for (ele in this.state.update){\n                data[ele] = this.state.update[ele][0]\n            }\n            data = {...data, 'action':'add'}\n            console.log(data)\n            createVendor(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        Swal.fire(\n                            'Updated!',\n                            'Vendor details has been added.',\n                            'success'\n                          )                    }\n                    else{\n                        Swal.fire({\n                            icon:'error',\n                            title:data['error']\n                        })                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div>\n            &nbsp;\n            &nbsp;\n            &nbsp;\n            &nbsp;\n            &nbsp;\n            &nbsp; \n        <Grid  container spacing={3} justify=\"center\" alignContent='center' alignItems=\"center\">\n            <Grid item xm={4}>\n            \n            </Grid>\n            <Grid item xs={4}>\n            <h1>Add New Customer</h1>\n            </Grid>\n            <Grid item xm={4}>\n            </Grid>\n        </Grid>\n\n        <Grid container  justify=\"center\" alignContent='center' alignItems=\"center\">\n        <Grid item xm={6}>\n            <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n                <Grid item xm={2} > \n                <TextField required id=\"first_name\" label=\"First Name\" name='first_name' autoFocus onChange={this.onChange} />\n                </Grid>\n                <Grid item xm={2}>\n                <TextField id=\"middle_name\" label=\"Middle Name\" name='middle_name'  onChange={this.onChange} />\n                </Grid>\n                <Grid item xm={2}>\n                <TextField required id=\"last_name\" label=\"Last Name\" name='last_name'  onChange={this.onChange} />\n                </Grid>\n            </Grid>\n            \n            <Grid container spacing={3}>\n                <Grid item xm={6} md={6}> \n                <FormControl fullWidth required>\n                <InputLabel htmlFor=\"email\">Email address</InputLabel>\n                <Input id=\"email\" required name='email' fullWidth onChange={this.onChange}   />\n                </FormControl>\n                </Grid>\n                <Grid item xm={6} md={6}> \n                 <TextField\n                                id ='website'\n                                name=\"website\"\n                                label='Website'\n                                type='text'\n                                fullWidth\n                                onChange={this.onChange}                                \n                            />\n\n               </Grid>\n            </Grid>\n\n\n            <Grid container spacing={3} >\n                \n                <Grid item xm={6} md={6}> \n                <TextField\n                label=\"Primary Phone Number\"\n                                id ='phone1'\n                                name=\"phone1\"\n                                fullWidth\n                                required\n                                onChange={this.onChange}                                  \n                            />\n                </Grid>\n                <Grid item xm={6} md={6}> \n                 \n                <TextField\n                    label='Second Phone Number'\n                                id ='phone2'\n                                name=\"phone2\"\n                                fullWidth\n                                onChange={this.onChange}                                \n                            />\n\n               </Grid>\n            </Grid>\n\n\n            <Grid container spacing={3}>\n\n                <Grid item xm={6} md={6}> \n                <TextField\n                                id ='address'\n                                name=\"address\"\n                                type='text'\n                                label='Address'\n                                fullWidth\n                                onChange={this.onChange}\n                                required\n                            />\n                </Grid>\n                <Grid item xm={6} md={6} > \n                <TextField\n                                id ='tax_number'\n                                name=\"tax_number\"\n                                type='number'\n                                fullWidth\n                                label='Tax Number'\n                                onChange={this.onChange}  \n                                required                              \n                            />\n               </Grid>\n            </Grid>\n            <Grid container spacing={3}  alignItems='flex-end'>\n\n                <Grid item xm={3} md={6}> \n                <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={()=>{this.onSubmit()}}\n                                >\n                                Add\n                                </Button>\n                </Grid>\n                <Grid item xm={3} md={6}> \n                \n               </Grid>\n            </Grid>\n        </Grid>\n        </Grid><br></br>\n        </div>\n        )\n    }\n}\n\nVendorCreation.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n\nconst mapStateToProps = state => ({\n    user: state.user\n})\n\nexport default withStyles(styles)(connect(mapStateToProps)(VendorCreation))\n","import React, { Component } from 'react'\nimport {  connect } from 'react-redux';\nimport { createUser } from '../../api/user';\nimport {Button, TextField, Grid } from '@material-ui/core';\nimport Swal from 'sweetalert2'\n\n\nclass UserCreation extends Component {\n\n    constructor (props){\n        super(props)\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.state = {\n            'update':{\n                'user_type':'STAFF'\n            }\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n        if (this.props.user.data.user_type !== \"MANAGER\"){\n            this.props.history.push('/')\n        }\n    }\n\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value]\n            }\n        })\n    }\n\n\n    async onSubmit(e){\n        if (this.state.update.password[0] === this.state.update.password2[0]){\n            var data = {...this.state.update}\n            var ele;\n            for (ele in this.state.update){\n                data[ele] = this.state.update[ele][0]\n            }\n            createUser(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        Swal.fire(\"New User Created\")\n                    }\n                    else{\n                        Swal.fire(data['error'])\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n        }\n        else {\n            Swal.fire(\"Password didn't match\")\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Grid container justify='center'>\n                    <Grid item xm ={6}>\n\n                    <h1>Create New User</h1><br></br>\n                    <table cellSpacing={10}  cellPadding={10}>\n                        <tbody>\n                            <tr>\n                                <td>\n                                    First Name: <TextField\n                                    id ='first_name'\n                                    name=\"first_name\"\n                                    type='text'\n                                    onChange={this.onChange}  \n                                    required                  \n                                />\n                                </td>\n                                <td>\n                                    Last Name<TextField\n                                    id ='last_name'\n                                    name=\"last_name\"\n                                    type='text'\n                                    onChange={this.onChange}\n                                    required \n                                />\n                                </td>\n                            </tr>\n\n                            <tr>\n                                <td>\n                                Username :<TextField\n                                \n                                id ='username'\n                                name=\"username\"\n                                type='text'\n                                onChange={this.onChange}\n                                required \n                            />\n                                </td>\n                            </tr>\n                            \n                            <tr>\n                                <td>\n                                Password <TextField\n                                id=\"password\"\n                                name=\"password\"\n                                type=\"password\"\n                                autoComplete=\"current-password\"\n                                onChange={this.onChange}\n                                required \n                                />\n                                </td>\n                                <td>\n                                Confirm Password <TextField\n                                id=\"password2\"\n                                type=\"password\"\n                                name=\"password2\"\n                                autoComplete=\"current-password\"\n                                onChange={this.onChange}\n                                required \n                                />\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>\n                            Email : <TextField\n                                id ='email'\n                                name=\"email\"\n                                type='email'\n                                onChange={this.onChange}\n                                required \n                            />\n                            </td>\n                            <td>\n                            User Post:\n                            <select name='user_type' id=\"user_type\" onChange={this.onChange} value={this.state.update.user_type}>\n                                <option value=\"MANAGER\">Manager</option>\n                                <option value=\"STAFF\">Staff</option>\n                            </select>\n                            </td>\n                            </tr>\n                            <td>\n                            <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={this.onSubmit}\n                                >\n                                Update\n                                </Button>\n                            </td>\n\n                        </tbody>\n\n                    </table>\n\n                    </Grid>\n\n                </Grid>\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    user: state.user\n})\n\nexport default connect(mapStateToProps)(UserCreation)","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid'\nimport IconButton from '@material-ui/core/IconButton';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport {Button } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst List = (props) => {\n  var page = true;\n  if (!props.page){\n    page=props.page\n  }\n  const classes = useStyles();\n  const headers = props.header\n  const rows = props.data\n  var delete_button;\n  var temp;\n  var no_data=false\n  var back=true\n  if (rows.length === 0){\n    no_data=true\n  } \n  if (props.page === 1){\n    back = false\n  }\n\n  if (props.delete){\n    delete_button = true\n  }\n\n  const pagination = <div>\n    {back? <IconButton color=\"secondary\" onClick={() => {props.update(-10)}} aria-label=\"pervious-button\">\n      <NavigateBeforeIcon />\n    </IconButton> : <IconButton color=\"secondary\" onClick={() => {props.update(-10)}} aria-label=\"pervious-button\" disabled>\n      <NavigateBeforeIcon />\n    </IconButton>}\n    <b>\n    Page: {props.page}</b>\n    {no_data? <IconButton color=\"secondary\" onClick={() => {props.update(10)}} aria-label=\"pervious-button\" disabled>\n      <NavigateNextIcon />\n    </IconButton> : <IconButton color=\"secondary\" onClick={() => {props.update(10)}} aria-label=\"pervious-button\">\n      <NavigateNextIcon />\n    </IconButton>}\n  </div>\n\n  return (\n      <div>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n                {headers.map(\n                    header =>(\n                    <TableCell key={header.id}><b>{header.name}</b></TableCell>\n                    )\n                )}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          {rows.map(\n              row =>(\n                  <TableRow key={row.id} onClick={() => {props.popUp(row.id, row.uuid)}}>\n                      {headers.map(\n                          header =>\n                              (\n                                  temp = header.prop,\n                              <TableCell key={header.id}>{row[temp]}</TableCell>\n                              )\n                      )}\n                      <TableCell>{delete_button ? <Button  variant=\"contained\" size='small' color=\"secondary\" onClick={()=> {props.delete(row.id)}}><DeleteForeverIcon></DeleteForeverIcon></Button>:null }</TableCell>\n                  </TableRow>\n              )\n          )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      <Grid container justify=\"center\" alignItems=\"center\">\n    <Grid item xs={\"auto\"}>\n    {no_data ? <h2>No Data Available</h2> : <span></span>}\n    </Grid>\n    </Grid>\n    <br></br>\n    <Grid container justify=\"center\" alignItems=\"center\">\n    <Grid item xs={\"auto\"}>\n    {page ? pagination : <span></span>}\n    </Grid>    \n    </Grid>\n    <br></br>\n    </div>\n  );\n}\n\nexport default List","import React, { Component } from 'react'\nimport List from '../list';\nimport { getUser, updateUser } from '../../api/user';\nimport {Button, TextField, Grid } from '@material-ui/core';\n\nimport Swal from 'sweetalert2'\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\n\n\nclass UserList extends Component {\n    constructor(props){\n        super(props)\n        this.popUp = this.popUp.bind(this)\n        this.state = {\n            'popUp':false,\n            'user_data':{},\n            'update':{}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n    \n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value][0]\n            }\n        })\n    }\n\n    onSubmit(){\n        var data = this.state.update;\n        data = {\n            ...data,\n            'action':'edit',\n            'user_id':data.id\n        }\n        updateUser(JSON.stringify(data)).then(data =>{\n            if (data['status']){\n                Swal.fire(\n                    'Updated!',\n                    'Details has been updated.',\n                    'success'\n                  )                \n                  this.props.update(0)\n            }\n        })\n    }\n\n    userDelete(id,uuid){\n        var data = {\n            'action':'delete',\n            'user_id':id,\n            'uuid':uuid\n        }\n        updateUser(JSON.stringify(data)).then(data =>{\n            if (data['status']){\n                Swal.fire('User has been deleted. They cannot login now')\n                this.props.update(0)\n            }\n        })\n    }\n\n    \n    userRevive(id,uuid){\n        var data = {\n            'action':'revive',\n            'user_id':id,\n            'uuid':uuid\n        }\n        updateUser(JSON.stringify(data)).then(data =>{\n            if (data['status']){\n                Swal.fire('User has been made active. They login now')\n                this.props.update(0)\n            }\n        })\n    }\n\n    async popUp(id, uuid=0){\n        const data = {\n            'action':'get',\n            'user_id':id,\n            'uuid':uuid\n        }\n        var data_main;\n        await getUser(JSON.stringify(data)).then(data => {\n            if (data['status']){\n                data_main=data\n            }\n        })\n        await this.setState({\n            'popUp':true,\n            'user_data':data_main,\n            'update':data_main\n        })\n    }\n\n    columns = [\n        {\n            id:1,\n            name:\"Name\",\n            prop: 'name'\n        },\n        {\n            id:2,\n            name:\"Post\",\n            prop: 'status'\n        },\n        {\n            id:3,\n            name:\"Username\",\n            prop: 'username'\n        },\n        {\n            id:4,\n            name:\"Status\",\n            prop: 'is_active_str'\n        }      \n    ]\n    \n\n    render() {\n        const list = <List data={this.props.data} header={this.columns} popUp={this.popUp} update={this.props.update} page={this.props.page}/>\n        const popUpRender = \n        \n        \n        <div>\n             <Grid  container spacing={3} justify=\"center\" alignContent='center' alignItems=\"center\">\n        \n        <Grid item xm={4}>\n        <Button  variant=\"contained\" size='small' color=\"primary\" onClick={()=> {this.setState({...this.state, popUp:false})}}>\n            <ArrowLeftIcon></ArrowLeftIcon>\n     Back\n </Button>          <h1>{this.state.user_data.name}</h1>\n        &nbsp;\n        &nbsp;\n        &nbsp;\n        &nbsp;\n        &nbsp;\n        &nbsp; \n        \n        </Grid>\n        <Grid item xm={4}>\n        </Grid>\n    </Grid>\n\n            \n    <Grid container  justify=\"center\" alignContent='center' alignItems=\"center\">\n        <Grid item xm={6}>\n        <table cellPadding={10} cellSpacing={10}>\n            <tbody>\n                <tr>\n                    <td>\n                        \n                First Name : <TextField\n                                id ='first_name'\n                                name=\"first_name\"\n                                type='text'\n                                onChange={this.onChange}\n                                value={this.state.update.first_name}                       \n                            />\n                            \n                    </td>\n                    <td>\n\n                            \n                    Last Name : <TextField\n                            \n                            id ='last_name'\n                            name=\"last_name\"\n\n                            // placeholder = {this.state.user_data.last_name}   \n                            type='text'\n                            onChange={this.onChange}\n                            value={this.state.update.last_name}                       \n                        />\n                       \n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                    Username :<TextField\n                             \n                             id ='username'\n\n                             name=\"username\"\n                            //  placeholder = {this.state.user_data.username}   \n                             type='text'\n                             onChange={this.onChange}\n                             value={this.state.update.username}                       \n                         />\n                    </td>\n                <td>\n                Email : <TextField\n                                id ='email'\n                                name=\"email\"\n                                // placeholder = {this.state.user_data.email}   \n                                type='email'\n                                onChange={this.onChange}\n                                value={this.state.update.email}                       \n                            />\n                </td>\n\n                </tr>\n                <tr>\n                    <td>\n                    User Post:\n                            <select name='user_type' onChange={this.onChange} defaultValue={this.state.user_data.user_type}>\n                                <option value=\"MANAGER\">Manager</option>\n                                <option value=\"STAFF\">Staff</option>\n                            </select>\n                    </td>\n                </tr>\n<tr>\n    <td>\n    <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={this.onSubmit}\n                                >\n                                Update\n                                </Button>\n    </td>\n    <td>\n    {this.state.user_data.is_active ? <Button variant=\"contained\" color=\"secondary\" onClick={() => {this.userDelete(this.state.user_data.id, this.state.user_data.uuid)}}>\n                            Deactivate User\n                        </Button> : <Button variant=\"contained\" color=\"secondary\" onClick={() => {this.userRevive(this.state.user_data.id, this.state.user_data.uuid)}}>\n                            Activate User\n                        </Button> }\n                        \n    </td>\n</tr>\n\n            </tbody>\n        </table>\n                            \n                            \n                       \n                        <br>\n                        </br>\n                        </Grid>\n                        </Grid>\n                    </div>\n        return (\n            <div>\n                {this.state.popUp ? popUpRender : list}\n            </div>\n        )\n    }\n}\n\nexport default  UserList","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    backgroundColor: \"black\",\n        \n    // position: 'fixed',\n    left: theme.spacing(2),\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n    },\n}));\n\nexport default function LoadingIcon() {\n  const [progress, setProgress] = React.useState(0);\n\n  React.useEffect(() => {\n    function tick() {\n      // reset when reaching 100%\n      setProgress(oldProgress => (oldProgress >= 100 ? 0 : oldProgress + 1));\n    }\n\n    const timer = setInterval(tick, 20);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  return (\n    <Grid\n    container\n    spacing={0}\n    direction=\"column\"\n    alignItems=\"center\"\n    justify=\"center\"\n    style={{ minHeight: '100vh' }}\n  >\n  \n    <Grid item xs={3}>\n    <CircularProgress variant=\"determinate\" value={progress} />\n\n    </Grid>   \n  \n  </Grid> \n        \n  );\n}","import React, { Component } from 'react'\nimport { getUsers } from '../../api/user'\nimport {  connect } from 'react-redux';\nimport UserList from './userList';\nimport { Link} from 'react-router-dom';\n\n\nimport Button from '@material-ui/core/Button';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/styles';\nimport PropTypes from 'prop-types';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport LoadingIcon from '../loading';\nimport Swal from 'sweetalert2';\n\n\nconst styles = makeStyles((theme) => ({\n    root: {\n    flexGrow: 12,\n    },\n    paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    },\n}));\n\nclass Users extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            'users':[],\n            'loaded':false,\n            'start':0,\n            'end':10,\n            'page':1\n        }\n        this.update_table = this.update_table.bind(this)\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n        if (this.props.user.data.user_type !== \"MANAGER\"){\n            console.log(\"not manager\")\n            Swal.fire({\n                icon:'error',\n                title:'Permission Denied!',\n                text:'You donont have authorization. Contact Manager or Admin'\n            })\n            this.props.history.push('/')\n            return\n        }\n        this.update_table(0)\n\n    }\n\n    async getUsersData (request_json) {\n        await getUsers(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'users':data['users'],\n                    'loaded':true\n                })\n            }  \n        })\n    }\n\n    async update_table (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                'loaded':false,\n                start: 0,\n                end: 10,\n                page:1\n            })\n        }\n        else{\n            if (this.state.start+by>-1){\n                await this.setState({\n                    'loaded':false,\n                    start: this.state.start+by,\n                    end: this.state.end+by,\n                    page:this.state.page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.start,\n            'end':this.state.end\n        }\n        this.getUsersData(request_json)\n    }\n    \n\n    render() {\n        const render_after_load = (\n            <div>\n                <UserList data={this.state.users} update={this.update_table} page={this.state.page} />\n            </div>\n        )\n        const { classes } = this.props;\n\n\n        return(\n            <div className={classes.root}>\n        <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n            <Grid item xs={3} >\n            <Button variant=\"contained\" color=\"primary\" onClick={() => {this.update_table(0)}}>\n              <RefreshIcon/>&nbsp;&nbsp;&nbsp;Refresh Table\n              </Button>\n            </Grid>\n            <Grid item xs={5}>\n  \n            </Grid>\n              <Grid item xs={3}>\n              <Link to='/users/create' style={{ textDecoration: 'none' }}>\n              <Button variant=\"contained\" color=\"secondary\">\n              <AddCircleIcon/>&nbsp;&nbsp;&nbsp;Add New Staff\n              </Button>\n              </Link>\n              </Grid>\n  \n          <Grid item xs={12}>\n            <Paper className={classes.paper}>\n            {this.state.loaded ? render_after_load : <LoadingIcon></LoadingIcon>}\n            </Paper>\n          </Grid>\n          \n        </Grid>\n      </div>\n        )\n    }\n}\n\n\nUsers.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n\n\nconst mapStateToProps = state => ({\n    user: state.user,\n})\n\nexport default withStyles(styles)(connect(mapStateToProps)(Users))\n","import React, { Component } from 'react'\nimport List from '../list';\nimport { getVendor, updateVendor,  deleteVendors } from '../../api/inventory/vendorApi';\nimport {Button, TextField, Grid } from '@material-ui/core';\n\nimport {FormControl, InputLabel, Input} from '@material-ui/core'\nimport Swal from 'sweetalert2'\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\n\nclass VendorList extends Component {\n    \n    constructor(props){\n        super(props)\n        this.popUp = this.popUp.bind(this)\n        this.state = {\n            'popUp':false,\n            'vendor':{},\n            'update':{}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.vendorDelete = this.vendorDelete.bind(this)\n    }\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value][0]\n            }\n        })\n    }\n\n    \n    async onSubmit(){\n            var data = this.state.update\n            data = {...data, 'action':'edit'}\n            console.log(data)\n            updateVendor(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        Swal.fire(\n                            'Updated!',\n                            'Vendor Details has been updated.',\n                            'success'\n                          )\n                        this.props.update(0)\n                    }\n                    else{\n                        Swal.fire({\n                            icon:'error',\n                            title:data['error']\n                        })                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    vendorDelete(id){\n        var data = {\n            'vendors_id':[\n                id\n            ]\n        }\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to revert this!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, delete it!'\n          }).then((result) => {\n        deleteVendors(JSON.stringify(data)).then(data=>{\n            try {\n                if (data['status']){\n                    Swal.fire({\n                        icon:'success',\n                        title:'Vendor entry has been deleted.',\n                        showConfirmButton: false,\n                        timer:1000\n                    })  \n                    this.props.update(0)\n                }   else{\n                    Swal.fire({\n                        icon:'error',\n                        title:data['error']\n                    })                }\n            }catch(e){\n                console.log(e)\n            }\n        })\n    })\n}\n    \n    async popUp(id, uuid=0){\n        const data = {\n            'action':'get',\n            'vendor_id':id,\n        }\n        var data_main;\n        await getVendor(JSON.stringify(data)).then(data => {\n            if (data['status']){\n                data_main=data\n            }\n        })\n        await this.setState({\n            'popUp':true,\n            'vendor':data_main['vendors'][0],\n            'update':data_main['vendors'][0]\n        })\n    }\n\n\n    columns = [\n        {\n            id:1,\n            name:\"Name\",\n            prop: 'name'\n        },\n        {\n            id:2,\n            name:\"Phone Number\",\n            prop: 'phone1'\n        },\n        {\n            id:3,\n            name:\"Email\",\n            prop: 'email'\n        },\n        {\n            id:4,\n            name:\"Address\",\n            prop: 'address'\n        }      \n    ]\n    \n\n    render() {\n        const list = <List data={this.props.data} header={this.columns}   popUp={this.popUp} update={this.props.update} page={this.props.page} />\n        const popUpRender = <div>\n             \n             \n        <Grid  container spacing={3} justify=\"center\" alignContent='center' alignItems=\"center\">\n        \n            <Grid item xm={4}>\n            <Button  variant=\"contained\" size='small' color=\"primary\" onClick={()=> {this.setState({...this.state, popUp:false})}}>\n                <ArrowLeftIcon></ArrowLeftIcon>\n         Back\n     </Button>          <h1>{this.state.update.name}</h1>\n            &nbsp;\n            &nbsp;\n            &nbsp;\n            &nbsp;\n            &nbsp;\n            &nbsp; \n            \n            </Grid>\n            <Grid item xm={4}>\n            </Grid>\n        </Grid>\n\n        <Grid container  justify=\"center\" alignContent='center' alignItems=\"center\">\n        <Grid item xm={6}>\n            <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n                <Grid item xm={2} > \n                <TextField required value={this.state.update.first_name} id=\"first_name\" label=\"First Name\" name='first_name' autoFocus onChange={this.onChange} />\n                </Grid>\n                <Grid item xm={2}>\n                <TextField id=\"middle_name\"  value={this.state.update.middle_name} label=\"Middle Name\" name='middle_name'  onChange={this.onChange} />\n                </Grid>\n                <Grid item xm={2}>\n                <TextField required id=\"last_name\" value={this.state.update.last_name} label=\"Last Name\" name='last_name'  onChange={this.onChange} />\n                </Grid>\n            </Grid>\n            \n            <Grid container spacing={3}>\n                <Grid item xm={6} md={6}> \n                <FormControl fullWidth required>\n                <InputLabel htmlFor=\"email\">Email address</InputLabel>\n                <Input id=\"email\" required name='email' value={this.state.update.email} fullWidth onChange={this.onChange}   />\n                </FormControl>\n                </Grid>\n                <Grid item xm={6} md={6}> \n                 <TextField\n                                id ='website'\n                                name=\"website\"\n                                label='Website'\n                                value={this.state.update.website}\n                                type='text'\n                                fullWidth\n                                onChange={this.onChange}                                \n                            />\n\n               </Grid>\n            </Grid>\n\n\n            <Grid container spacing={3} >\n                \n                <Grid item xm={6} md={6}> \n                <TextField\n                label=\"Primary Phone Number\"\n                                id ='phone1'\n                                value={this.state.update.phone1}\n                                name=\"phone1\"\n                                fullWidth\n                                required\n                                onChange={this.onChange}                                  \n                            />\n                </Grid>\n                <Grid item xm={6} md={6}> \n                 \n                <TextField\n                    label='Second Phone Number'\n                                id ='phone2'\n                                name=\"phone2\"\n                                value={this.state.update.phone2}\n                                fullWidth\n                                onChange={this.onChange}                                \n                            />\n\n               </Grid>\n            </Grid>\n\n\n            <Grid container spacing={3}>\n\n                <Grid item xm={6} md={6}> \n                <TextField\n                                id ='address'\n                                name=\"address\"\n                                type='text'\n                                label='Address'\n                                value={this.state.update.address}\n                                fullWidth\n                                onChange={this.onChange}\n                                required\n                            />\n                </Grid>\n                <Grid item xm={6} md={6} > \n                <TextField\n                                id ='tax_number'\n                                name=\"tax_number\"\n                                type='number'\n                                fullWidth\n                                label='Tax Number'\n                                value={this.state.update.tax_number}\n                                onChange={this.onChange}  \n                                required                              \n                            />\n               </Grid>\n            </Grid>\n            <Grid container spacing={3}  alignItems='flex-end'>\n\n                <Grid item xm={3} md={6}> \n                <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={()=>{this.onSubmit()}}\n                                >\n                                Update\n                                </Button>\n                </Grid><Grid item xm={3} md={6}> \n                <Button variant=\"contained\" color=\"secondary\" onClick={() => {this.vendorDelete(this.state.update.id)}}>\n                    Delete Vendor\n                </Button> \n               </Grid>\n            </Grid>\n        </Grid>\n        </Grid>\n            \n                        <br>\n                        </br>\n                    </div>\n        return (\n            <div>\n                {this.state.popUp ? popUpRender : list}\n            </div>\n        )\n    }\n}\n\nexport default VendorList\n","import React, { Component } from 'react'\nimport {getVendors} from '../../api/inventory/vendorApi';\nimport {  connect } from 'react-redux';\nimport  VendorList  from './vendorList';\nimport { Link} from 'react-router-dom';\n\nimport Button from '@material-ui/core/Button';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/styles';\nimport PropTypes from 'prop-types';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport LoadingIcon from '../loading';\n\n\nconst styles = makeStyles((theme) => ({\n    root: {\n    flexGrow: 12,\n    },\n    paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    },\n}));\n\nclass Vendors extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            'vendors':[],\n            'loaded':false,\n            'start':0,\n            'end':10,\n            'page':1\n        }\n        this.update_table = this.update_table.bind(this)\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n        this.update_table(0)\n    }\n\n    async update_table (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                'loaded':false,\n                start: 0,\n                end: 10,\n                page:1\n            })\n        }\n        else{\n            if (this.state.start+by>-1){\n                await this.setState({\n                    'loaded':false,\n                    start: this.state.start+by,\n                    end: this.state.end+by,\n                    page:this.state.page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.start,\n            'end':this.state.end\n        }\n        this.getVendorsData(request_json)\n    }\n    \n    async getVendorsData (request_json) {\n        await getVendors(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'vendors':data['vendors'],\n                    'loaded':true\n                })\n            }  \n        })\n    }\n\n \n\nrender() {\n    const { classes } = this.props;\n\n    const render_after_load = (\n        <div>\n            <VendorList data={this.state.vendors} update={this.update_table} page={this.state.page} />\n        </div>\n    )\n\n    return(\n        <div className={classes.root}>\n        <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n            <Grid item xs={3} >\n            <Button variant=\"contained\" color=\"primary\" onClick={() => {this.update_table(0)}}>\n              <RefreshIcon/>&nbsp;&nbsp;&nbsp;Refresh Table\n              </Button>\n            </Grid>\n            <Grid item xs={5}>\n  \n            </Grid>\n              <Grid item xs={3}>\n              <Link to='/vendors/create' style={{ textDecoration: 'none' }}>\n              <Button variant=\"contained\" color=\"secondary\">\n              <AddCircleIcon/>&nbsp;&nbsp;&nbsp;Add New Discount\n              </Button>\n              </Link>\n              </Grid>\n  \n          <Grid item xs={12}>\n            <Paper className={classes.paper}>\n            {this.state.loaded ? render_after_load : <LoadingIcon></LoadingIcon>}\n            </Paper>\n          </Grid>\n          \n        </Grid>\n      </div>\n    )\n}\n}\n\n\n\nVendors.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n\n\nconst mapStateToProps = state => ({\n    user: state.user,\n})\n\nexport default withStyles(styles)(connect(mapStateToProps)(Vendors))","import { baseRequest } from '../base';\n// api for Invoices \n\nconst getCustomers = async data => {\n    try {\n      return await baseRequest('apiv1/sales/customers','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  \n  const deleteCustomers = async data => {\n    try {\n      return await baseRequest('apiv1/sales/customers/delete','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const createCustomer = async data => {\n      try {\n        return await baseRequest('apiv1/sales/customers','POST', data);\n      } catch(e){\n        alert(e)\n      }\n  };\n  \n  \n  const getCustomer = async data => {\n    try {\n      return await baseRequest('apiv1/sales/customer','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const updateCustomer= async data => {\n    try {\n      return await baseRequest('apiv1/sales/customer','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \nexport {getCustomers, createCustomer, deleteCustomers, updateCustomer, getCustomer}\n  ","import React, { Component } from 'react'\nimport List from '../list';\nimport { getCustomer, updateCustomer,  deleteCustomers } from '../../api/sales/customer';\nimport {Button, TextField, Grid, withStyles } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\n\nimport {FormControl, InputLabel, Input} from '@material-ui/core'\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\nimport Swal from 'sweetalert2'\n\nconst styles = makeStyles((theme) => ({\n    root: {\n    flexGrow: 12,\n    },\n    paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    },\n}));\n\n\nclass CustomerList extends Component {\n    \n    constructor(props){\n        super(props)\n        this.popUp = this.popUp.bind(this)\n        this.state = {\n            'popUp':false,\n            'customer':{},\n            'update':{}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.customerDelete = this.customerDelete.bind(this)\n    }\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value][0]\n            }\n        })\n    }\n\n    \n    async onSubmit(){\n            var data = this.state.update\n            data = {...data, 'action':'edit'}\n            updateCustomer(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        Swal.fire(\n                            'Updated!',\n                            'Customer Details has been updated.',\n                            'success'\n                          )\n                        this.props.update(0)\n                    }\n                    else{\n                        Swal.fire({\n                            icon:'error',\n                            title:data['error']\n                        })\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    customerDelete(id){\n        var data = {\n            'customers_id':[\n                id\n            ]\n        }\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to revert this!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, delete it!'\n          }).then((result) => {\n            if (result.value) {\n                deleteCustomers(JSON.stringify(data)).then(data=>{\n                    try {\n                        if (data['status']){\n                            Swal.fire({\n                                icon:'success',\n                                title:'Customer entry has been deleted.',\n                                showConfirmButton: false,\n                                timer:1000\n                            })\n                            this.props.update(0)\n                        }   else{\n                            Swal.fire({\n                                icon:'error',\n                                title:data['error']\n                            })\n                        }\n                    }catch(e){\n                        console.log(e)\n                    }\n                })\n              \n            }\n          })\n        \n    }\n    \n    async popUp(id, uuid=0){\n        const data = {\n            'action':'get',\n            'customer_id':id,\n        }\n        var data_main;\n        await getCustomer(JSON.stringify(data)).then(data => {\n            if (data['status']){\n                data_main=data\n            }\n        })\n        await this.setState({\n            'popUp':true,\n            'update':data_main['customers'][0],\n            'customer':data_main['customers'][0]\n        })\n    }\n\n\n    columns = [\n        {\n            id:1,\n            name:\"Name\",\n            prop: 'name'\n        },\n        {\n            id:2,\n            name:\"Phone Number\",\n            prop: 'phone1'\n        },\n        {\n            id:3,\n            name:\"Email\",\n            prop: 'email'\n        },\n        {\n            id:4,\n            name:\"Address\",\n            prop: 'address'\n        }      \n    ]\n\n\n    render() {\n        const list = <List data={this.props.data} header={this.columns}   popUp={this.popUp} update={this.props.update} page={this.props.page} />\n         const popUpRender =\n         <div>\n            &nbsp;\n            &nbsp;\n            &nbsp;\n            &nbsp;\n            &nbsp;\n            &nbsp; <Button  variant=\"contained\" size='small' color=\"primary\" onClick={()=> {this.setState({...this.state, popUp:false})}}>\n                <ArrowLeftIcon></ArrowLeftIcon>\n         Back\n     </Button>\n        <Grid  container spacing={3} justify=\"center\" alignContent='center' alignItems=\"center\">\n            <Grid item xm={4}>\n            \n            </Grid>\n            <Grid item xs={4}>\n            <h1>{this.state.update.name}</h1>\n            </Grid>\n            <Grid item xm={4}>\n            </Grid>\n        </Grid>\n\n        <Grid container  justify=\"center\" alignContent='center' alignItems=\"center\">\n        <Grid item xm={6}>\n            <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n                <Grid item xm={2} > \n                <TextField required id=\"first_name\" label=\"First Name\" name='first_name' defaultValue={this.state.update.first_name} onChange={this.onChange} autoFocus/>\n                </Grid>\n                <Grid item xm={2}>\n                <TextField required id=\"middle_name\" label=\"Middle Name\" name='middle_name' defaultValue={this.state.update.middle_name} onChange={this.onChange} />\n                </Grid>\n                <Grid item xm={2}>\n                <TextField required id=\"last_name\" label=\"Last Name\" name='last_name' defaultValue={this.state.update.last_name} onChange={this.onChange} />\n                </Grid>\n            </Grid>\n            \n            <Grid container spacing={3}>\n                <Grid item xm={6} md={6}> \n                <FormControl fullWidth>\n                <InputLabel htmlFor=\"email\">Email address</InputLabel>\n                <Input id=\"email\" required name='email' fullWidth onChange={this.onChange} defaultValue={this.state.update.email}  />\n                </FormControl>\n                </Grid>\n                <Grid item xm={6} md={6}> \n                 <TextField\n                                id ='website'\n                                name=\"website\"\n                                label='Website'\n                                type='text'\n                                fullWidth\n                                onChange={this.onChange}                                \n                                defaultValue={this.state.update.website}\n                            />\n\n               </Grid>\n            </Grid>\n\n\n            <Grid container spacing={3} >\n                \n                <Grid item xm={6} md={6}> \n                <TextField\n                label=\"Primary Phone Number\"\n                                id ='phone1'\n                                name=\"phone1\"\n                                fullWidth\n                                onChange={this.onChange}                                  \n                                value={this.state.update.phone1}\n                            />\n                </Grid>\n                <Grid item xm={6} md={6}> \n                 \n                <TextField\n                    label='Second Phone Number'\n                                id ='phone2'\n                                name=\"phone2\"\n                                fullWidth\n                                onChange={this.onChange}                                \n                                value={this.state.update.phone2}\n                            />\n\n               </Grid>\n            </Grid>\n\n\n            <Grid container spacing={3}>\n\n                <Grid item xm={6} md={6}> \n                <TextField\n                                id ='address'\n                                name=\"address\"\n                                type='text'\n                                label='Address'\n                                fullWidth\n                                onChange={this.onChange}\n                                value={this.state.update.address}\n                            />\n                </Grid>\n                <Grid item xm={6} md={6} > \n                <TextField\n                                id ='tax_number'\n                                name=\"tax_number\"\n                                type='number'\n                                fullWidth\n                                label='Tax Number'\n                                onChange={this.onChange}                                \n                                value={this.state.update.tax_number}   \n                            />\n               </Grid>\n            </Grid>\n            <Grid container spacing={3}  alignItems='flex-end'>\n\n                <Grid item xm={3} md={6}> \n                <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={()=>{this.onSubmit()}}\n                                >\n                                Update\n                                </Button>\n                </Grid>\n                <Grid item xm={3} md={6}> \n                <Button variant=\"contained\" color=\"secondary\" onClick={() => {this.customerDelete(this.state.customer.id)}}>\n                    Delete Customer\n                </Button> \n               </Grid>\n            </Grid>\n        </Grid>\n        </Grid><br></br>\n        </div>\n        return (\n            <div>\n                {this.state.popUp ? popUpRender : list}\n            </div>\n        )\n    }\n}\n\nCustomerList.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n\n\nexport default withStyles(styles)(CustomerList)","import React, { Component } from 'react'\nimport {getCustomers} from '../../api/sales/customer';\nimport {  connect } from 'react-redux';\nimport  CustomerList  from './customerList';\nimport { Link} from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/styles';\nimport PropTypes from 'prop-types';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport LoadingIcon from '../loading';\n\nconst styles = makeStyles((theme) => ({\n    root: {\n    flexGrow: 12,\n    },\n    paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    },\n}));\n\n\nclass Customers extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            'customers':[],\n            'loaded':false,\n            'start':0,\n            'end':10,\n            'page':1\n        }\n        this.update_table = this.update_table.bind(this)\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n        this.update_table(0)\n    }\n\n    async update_table (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                'loaded':false,\n                start: 0,\n                end: 10,\n                page:1\n            })\n        }\n        else{\n            if (this.state.start+by>-1){\n                await this.setState({\n                    'loaded':false,\n                    start: this.state.start+by,\n                    end: this.state.end+by,\n                    page:this.state.page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.start,\n            'end':this.state.end\n        }\n        this.getCustomersData(request_json)\n    }\n    \n    async getCustomersData (request_json) {\n        await getCustomers(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'customers':data['customers'],\n                    'loaded':true\n                })\n            }  \n        })\n    }\n\n \n\nrender() {\n    const { classes } = this.props;\n\n    const render_after_load = (\n        <div>\n            <CustomerList data={this.state.customers} update={this.update_table} page={this.state.page} />\n        </div>\n    )\n\n    return(\n        <div className={classes.root}>\n      <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n          <Grid item xs={3} >\n          <Button variant=\"contained\" color=\"primary\" onClick={() => {this.update_table(0)}}>\n            <RefreshIcon/>&nbsp;&nbsp;&nbsp;Refresh Table\n            </Button>\n          </Grid>\n          <Grid item xs={5}>\n\n          </Grid>\n            <Grid item xs={3}>\n            <Link to='/customers/create' style={{ textDecoration: 'none' }}>\n            <Button variant=\"contained\" color=\"secondary\">\n            <AddCircleIcon/>&nbsp;&nbsp;&nbsp;Add New Customer\n            </Button>\n            </Link>\n            </Grid>\n\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n          {this.state.loaded ? render_after_load : <LoadingIcon></LoadingIcon>}\n          </Paper>\n        </Grid>\n        \n      </Grid>\n    </div>\n    )\n}\n}\n\n\n\n\n\nCustomers.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n\nconst mapStateToProps = state => ({\n    user: state.user,\n})\n\nexport default withStyles(styles)(connect(mapStateToProps)(Customers))","import React, { Component } from 'react'\n\nimport { createCustomer} from '../../api/sales/customer';\nimport {Button, TextField, Grid, withStyles } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport {  connect } from 'react-redux';\n\nimport {FormControl, InputLabel, Input} from '@material-ui/core'\nimport Swal from 'sweetalert2'\n\nconst styles = makeStyles((theme) => ({\n    root: {\n    flexGrow: 12,\n    },\n    paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    },\n}));\n\n\nclass CustomerCreation extends Component {\n    \n    constructor(props){\n        super(props)\n        this.state = {\n            'customer':{},\n            'update':{\n                'first_name':'',\n                'middle_name':'',\n                'last_name':'',\n                'email':'',\n                'phone1':'',\n                'website':'',\n                'phone2':'',\n                'address':'',\n                'tax_number':''\n            }\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n    \n    \n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n    }\n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value][0]\n            }\n        })\n    }\n\n    \n    async onSubmit(){\n            var data = this.state.update\n            data = {...data, 'action':'add'}\n            createCustomer(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        Swal.fire(\n                            'Updated!',\n                            'New Customer Has Been Added.',\n                            'success'\n                          )\n                    }\n                    else{\n                        Swal.fire({\n                            icon:'error',\n                            title:data['error']\n                        })\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n    render() {\n         const popUpRender =\n         <div>\n            &nbsp;\n            &nbsp;\n            &nbsp;\n            &nbsp;\n            &nbsp;\n            &nbsp; \n        <Grid  container spacing={3} justify=\"center\" alignContent='center' alignItems=\"center\">\n            <Grid item xm={4}>\n            \n            </Grid>\n            <Grid item xs={4}>\n            <h1>Add New Customer</h1>\n            </Grid>\n            <Grid item xm={4}>\n            </Grid>\n        </Grid>\n\n        <Grid container  justify=\"center\" alignContent='center' alignItems=\"center\">\n        <Grid item xm={6}>\n            <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n                <Grid item xm={2} > \n                <TextField required id=\"first_name\" label=\"First Name\" name='first_name' autoFocus onChange={this.onChange} />\n                </Grid>\n                <Grid item xm={2}>\n                <TextField id=\"middle_name\" label=\"Middle Name\" name='middle_name'  onChange={this.onChange} />\n                </Grid>\n                <Grid item xm={2}>\n                <TextField required id=\"last_name\" label=\"Last Name\" name='last_name'  onChange={this.onChange} />\n                </Grid>\n            </Grid>\n            \n            <Grid container spacing={3}>\n                <Grid item xm={6} md={6}> \n                <FormControl fullWidth required>\n                <InputLabel htmlFor=\"email\">Email address</InputLabel>\n                <Input id=\"email\" required name='email' fullWidth onChange={this.onChange}   />\n                </FormControl>\n                </Grid>\n                <Grid item xm={6} md={6}> \n                 <TextField\n                                id ='website'\n                                name=\"website\"\n                                label='Website'\n                                type='text'\n                                fullWidth\n                                onChange={this.onChange}                                \n                            />\n\n               </Grid>\n            </Grid>\n\n\n            <Grid container spacing={3} >\n                \n                <Grid item xm={6} md={6}> \n                <TextField\n                label=\"Primary Phone Number\"\n                                id ='phone1'\n                                name=\"phone1\"\n                                fullWidth\n                                required\n                                onChange={this.onChange}                                  \n                            />\n                </Grid>\n                <Grid item xm={6} md={6}> \n                 \n                <TextField\n                    label='Second Phone Number'\n                                id ='phone2'\n                                name=\"phone2\"\n                                fullWidth\n                                onChange={this.onChange}                                \n                            />\n\n               </Grid>\n            </Grid>\n\n\n            <Grid container spacing={3}>\n\n                <Grid item xm={6} md={6}> \n                <TextField\n                                id ='address'\n                                name=\"address\"\n                                type='text'\n                                label='Address'\n                                fullWidth\n                                onChange={this.onChange}\n                                required\n                            />\n                </Grid>\n                <Grid item xm={6} md={6} > \n                <TextField\n                                id ='tax_number'\n                                name=\"tax_number\"\n                                type='number'\n                                fullWidth\n                                label='Tax Number'\n                                onChange={this.onChange}  \n                                required                              \n                            />\n               </Grid>\n            </Grid>\n            <Grid container spacing={3}  alignItems='flex-end'>\n\n                <Grid item xm={3} md={6}> \n                <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={()=>{this.onSubmit()}}\n                                >\n                                Add\n                                </Button>\n                </Grid>\n                <Grid item xm={3} md={6}> \n                \n               </Grid>\n            </Grid>\n        </Grid>\n        </Grid><br></br>\n        </div>\n        return (\n            <div>\n                {popUpRender}\n            </div>\n        )\n    }\n}\n\nCustomerCreation.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n\n\nconst mapStateToProps = state => ({\n    user: state.user\n})\n\nexport default withStyles(styles)(connect(mapStateToProps)(CustomerCreation))\n","import { baseRequest } from '../base';\n// api for items \n\nconst getPurchaseOrders = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/porders','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  \n  const deletePurchaseOrder = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/porders/delete','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const createPurchaseOrder = async data => {\n      try {\n        return await baseRequest('apiv1/inventory/porders','POST', data);\n      } catch(e){\n        alert(e)\n      }\n  };\n  \n  \n  const getPurchaseOrder = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/porder','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const updatePurchaseOrder= async data => {\n    try {\n      return await baseRequest('apiv1/inventory/porder','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \nexport {getPurchaseOrders, deletePurchaseOrder, createPurchaseOrder, getPurchaseOrder, updatePurchaseOrder}\n  ","import { baseRequest } from '../base';\n// api for items \n\n  \n  const deletePurchaseItems = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/pitems/delete','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const createPurchaseItem = async data => {\n      try {\n        return await baseRequest('apiv1/inventory/pitems','POST', data);\n      } catch(e){\n        alert(e)\n      }\n  };\n  \n  const updatePurchaseItem= async data => {\n    try {\n      return await baseRequest('apiv1/inventory/pitem','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n\n  const getPurchaseItems = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/pitems','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \nexport { getPurchaseItems, deletePurchaseItems, createPurchaseItem, updatePurchaseItem}\n  ","import { baseRequest } from './base';\n \n\nconst getDiscounts = async data => {\n    try {\n      return await baseRequest('apiv1/sales/discounts','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  \n  const deleteDiscounts = async data => {\n    try {\n      return await baseRequest('apiv1/sales/discounts/delete','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const createDiscount = async data => {\n      try {\n        return await baseRequest('apiv1/sales/discounts','POST', data);\n      } catch(e){\n        alert(e)\n      }\n  };\n  \n  \n  const getDiscount = async data => {\n    try {\n      return await baseRequest('apiv1/sales/discount','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const updateDiscount= async data => {\n    try {\n      return await baseRequest('apiv1/sales/discount','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n\n\n  \nconst getTaxes = async data => {\n    try {\n      return await baseRequest('apiv1/sales/taxes','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  \n  const deleteTaxes = async data => {\n    try {\n      return await baseRequest('apiv1/sales/taxes/delete','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const createTax = async data => {\n      try {\n        return await baseRequest('apiv1/sales/taxes','POST', data);\n      } catch(e){\n        alert(e)\n      }\n  };\n  \n  \n  const getTax = async data => {\n    try {\n      return await baseRequest('apiv1/sales/tax','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const updateTax= async data => {\n    try {\n      return await baseRequest('apiv1/sales/tax','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n\n  const getPurchaseOrderStatus= async data => {\n    try {\n      return await baseRequest('apiv1/inventory/status/porders','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n\n  \n  const getPlacements= async data => {\n    try {\n      return await baseRequest('apiv1/inventory/placements','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n\n  const deletePlacement = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/places/assign','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  }\n\n  \nexport {deletePlacement,  getPlacements, getPurchaseOrderStatus, getDiscounts, createDiscount, deleteDiscounts, updateDiscount, getDiscount, getTaxes, createTax, deleteTaxes, updateTax, getTax}\n  ","import { baseRequest } from '../base';\n// api for items \n\nconst getItems = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/items','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  \n  const deleteItems = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/items/delete','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const createItem = async data => {\n      try {\n        return await baseRequest('apiv1/inventory/items','POST', data);\n      } catch(e){\n        alert(e)\n      }\n  };\n  \n  \n  const getItem = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/item','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const updateItem= async data => {\n    try {\n      return await baseRequest('apiv1/inventory/item','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \nexport {getItems, createItem, deleteItems, updateItem, getItem}\n  ","import React, { Component } from 'react'\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport List from '../list';\nimport Popup from \"reactjs-popup\";\nimport style from './css/popUp.module.css';\nimport {getVendors} from '../../api/inventory/vendorApi';\nimport {updatePurchaseOrder, getPurchaseOrder} from '../../api/inventory/purchaseOrder';\nimport {updatePurchaseItem, deletePurchaseItems, createPurchaseItem} from '../../api/inventory/purchaseItem'\nimport {getPurchaseOrderStatus} from '../../api/misc';\nimport {getItems} from '../../api/inventory/itemApi';\nimport { Grid, TextField, Button } from '@material-ui/core';\n\nimport Swal from 'sweetalert2'\n\nimport IconButton from '@material-ui/core/IconButton';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\n\n\n\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\n\n\nclass PopUpEdit extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            'popUp':false,\n            'new':false,\n            'current':0,\n            'status':[],\n            'vendor_selection':[\n                {\n                    'id':0,\n                    'name':'None'\n                }\n            ],\n            'item_selection':[\n                {\n                    'id':0,\n                    'name':\"None\"\n                }\n            ],\n            update : {\n                'purchase_order':{\n                    ...this.props.purchase_order,\n                    'invoiced_on': this.converter(this.props.purchase_order.invoiced_on),\n                    'completed_on': this.converter(this.props.purchase_order.completed_on)\n                },\n                'purchase_items':this.props.purchase_items\n            }\n        }\n        this.refreshTable = this.refreshTable.bind(this)\n        this.getItemData = this.getItemData.bind(this)\n        this.selectItem = this.selectItem.bind(this)\n        this.searchItem = this.searchItem.bind(this)\n        this.addPurchaseItem = this.addPurchaseItem.bind(this)\n        this.invoiceHandler = this.invoiceHandler.bind(this)\n        this.completeHandler = this.completeHandler.bind(this)\n        this.getVendorsData = this.getVendorsData.bind(this)\n        this.converter = this.converter.bind(this)\n        this.popUp = this.popUp.bind(this)\n        this.searchVendor = this.searchVendor.bind(this)\n        this.selectVendor = this.selectVendor.bind(this)\n        this.onChange = this.onChange.bind(this)\n        this.updatePurchaseOrder = this.updatePurchaseOrder.bind(this)\n        this.onChangePI = this.onChangePI.bind(this)\n        this.postPurchaseItem = this.postPurchaseItem.bind(this)\n        this.deletePurchaseItem = this.deletePurchaseItem.bind(this)\n    }\n\n\n    async componentDidMount(){\n        var request_json = {\n            'action':'get',\n        }\n        await getPurchaseOrderStatus(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    ...this.state,\n                    'status':data.data\n                })\n            }  \n        })\n    }\n\n    async getVendorsData (request_json) {\n        console.log(\"getging vendor data\")\n        await getVendors(JSON.stringify(request_json)).then(data => {\n            console.log(\"got\", data)\n            if (data['status']){\n                console.log(\"setting\")\n                this.setState({\n                    'vendor_selection':data['vendors'],\n                })\n            }  \n        })\n    }\n\n    selectVendor(id,name){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_order':{\n                    ...this.state.update.purchase_order,\n                    'vendor':id,\n                    'vendor_name':name\n                }\n            }\n        })\n    }\n\n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_order':{\n                    ...this.state.update.purchase_order,\n                    [e.target.name] : [e.target.value][0]\n                }\n            }\n        })\n    }\n\n    converter(date){\n        return ( new Date(Date.parse(date)))\n    }\n\n    popUp(id){\n        var key\n        for (key in this.state.update.purchase_items){\n            if (this.state.update.purchase_items[key].id === id){\n                this.setState({\n                    ...this.state,\n                    'current':key,\n                    'popUp':true\n                })        \n                return\n            }\n        }\n    }\n\n    searchVendor(e){\n        console.log(\"serch\")\n        if ((e.target.value).length > 2 ){\n            var request_json = {\n                'action':'get',\n                'start':0,\n                'end':10,\n                'filter':'name',\n                'first_name':(e.target.value)\n            }\n            this.getVendorsData(request_json)\n        }\n    }\n    \n    invoiceHandler(date){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_order':{\n                    ...this.state.update.purchase_order,\n                    'invoiced_on' : date\n                }\n            }\n        })\n    }\n    \n    completeHandler(date){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_order':{\n                    ...this.state.update.purchase_order,\n                    'completed_on' : date\n                }\n            }\n        })\n    }\n\n    updatePurchaseOrder(){\n        var request_json = {\n            ...this.state.update.purchase_order,\n            'action':'edit',\n            'purchase_order_id':this.state.update.purchase_order.id\n        }\n        updatePurchaseOrder(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                Swal.fire(\"Purchase Order Details Has Been Updated.\")\n                this.props.update(0)\n            }\n            else{\n                Swal.fire(\"Error : \",data.error)\n            }\n        })\n    }\n\n    onChangePI(e){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_items':{\n                    ...this.state.update.purchase_items,\n                    [this.state.current] : {\n                        ...this.state.update.purchase_items[this.state.current],\n                        [e.target.name] : [e.target.value][0]\n                    },\n                }\n            }\n        })\n    }\n\n    postPurchaseItem(is_new=false){\n        var request_json\n        if (is_new){\n            request_json = {\n                'action':'add',\n                'purchase_order':this.state.update.purchase_order.id,\n                ...this.state.update.purchase_items[this.state.current]\n            }\n            createPurchaseItem(JSON.stringify(request_json)).then(data => {\n                if (data['status']){\n                    Swal.fire(\"Purchase Item Has Been Added.\")\n                    this.refreshTable()\n                }\n                else{\n                    Swal.fire(data['error'])\n                }\n            })\n            return\n        }\n        request_json = {\n            'action':'edit',\n            ...this.state.update.purchase_items[this.state.current]\n        }\n        updatePurchaseItem(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                Swal.fire(\"Purchase Item Details Has Been Updated.\")\n                this.refreshTable()\n            }\n            else{\n                Swal.fire(data['error'])\n            }\n        })\n    }\n\n    deletePurchaseItem(){\n        var request_json = {\n            purchase_items_id : [this.state.update.purchase_items[this.state.current].id]\n        }\n        deletePurchaseItems(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                Swal.fire(\"Purchase Item Has Beed Deleted.\")\n                this.refreshTable()\n            }\n            else{\n                Swal.fire(data['error'])\n            }\n        })\n    }\n\n\n    addPurchaseItem(){\n        var current =0;\n        var item,p_list=[];\n        for (item in this.state.update.purchase_items){\n            if (item.id){\n                if (item.id !== \"Fake Key\"){\n                    current = current + 1\n                    p_list.push(item)\n                }\n            }\n        }\n        this.setState({\n            'current':current,\n            'new':true,\n            'popUp':true,\n            'update':{\n                ...this.state.update,\n                'purchase_items':[\n                    ...p_list,\n                    {\n                        'item_name':\"None\",\n                        'discount_type':'percentage',\n                        'status':'incomplete'\n                    }\n                ]\n            }\n        })\n    }\n    columns = [\n        {\n            id:1,\n            name:\"Item Name\",\n            prop: 'item_name'\n        },\n        {\n            id:2,\n            name:\"Quantity\",\n            prop: 'quantity'\n        },\n        {\n            id:3,\n            name:\"Stock\",\n            prop: 'stock'\n        },\n        {\n            id:4,\n            name:\"Defective\",\n            prop: 'defective'\n        },   \n        {\n            id:5,\n            name:\"Sold\",\n            prop: 'sold'\n        },\n        {\n            id:6,\n            name:\"Discount\",\n            prop: 'discount'\n        },\n        {\n            id:7,\n            name:\"Purchase Price\",\n            prop: 'purchase_price'\n        },\n        {\n            id:8,\n            name:\"Status\",\n            prop: 'status'\n        }\n    ]\n\n    searchItem(e){\n        if ((e.target.value).length > 2 ){\n            var request_json = {\n                'action':'get',\n                'start':0,\n                'end':10,\n                'filter':'name',\n                'name':(e.target.value)\n            }\n            this.getItemData(request_json)\n        }\n    }\n\n    async getItemData(request_json){\n        await getItems(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    ...this.state,\n                    'item_selection':data['items'],\n                })\n            }  \n        })\n    }\n    selectItem(id, name){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_items':{\n                    ...this.state.update.purchase_items,\n                    [this.state.current] : {\n                        ...this.state.update.purchase_items[this.state.current],\n                        'item_name' : name,\n                        'item':id\n                    },\n                }\n            }\n        })\n\n    }\n\n    async refreshTable(){\n        var id = this.state.update.purchase_order.id;\n        var items= [];\n        const request_json = {\n            'action':'get',\n            'purchase_order_id':id\n        }\n        await getPurchaseOrder(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                items = data['p_items']\n            }\n        })\n        if (items.length === 0){\n            items = [{\n                'id':\"Fake Key\",\n                'item_name': ''\n            }]\n        }\n        await this.setState({\n            ...this.state,\n            'popUp':false,\n            'update':{\n                ...this.state.update,\n                'purchase_items':items\n            }\n        })\n    }\n\n\n    render() {\n        const item_selection = this.state.item_selection\n        const itemPopUp = <Popup trigger={ <Button variant=\"contained\" color=\"secondary\" >Select Item</Button>} closeOnDocumentClick>\n        <div>\n            <input placeholder=\"Item Name\" id='item_search_box' name='item_serach_box' onChange={this.searchItem}></input>\n            <div className={style.dropdown_content} id='vendor_dropdown'>\n                    {item_selection.map(\n                        item => (\n                            // use css to get rid of <a>\n                            <a href=\"#\" key={item.id} onClick={() => {this.selectItem(item.id, item.name)}} >{item.name}</a>\n                        )\n                    )}\n            </div>\n        </div>\n        </Popup>\n        const popUpItem = <table cellPadding={10} cellSpacing={10}>\n            <tbody><tr>\n                    <td colSpan={2}>\n                    <IconButton color='secondary' onClick={()=> {this.refreshTable()}}><NavigateBeforeIcon /></IconButton>\n                    </td>\n                </tr>\n            <tr>\n                <td>\n                <TextField\n                    value= {this.state.update.purchase_items[this.state.current].item_name}\n                    InputProps={{\n                        readOnly: true,\n                    }}\n                    \n                    label='Item'\n                    variant=\"outlined\"\n                    />\n                </td>\n                <td>\n                {this.state.new ? itemPopUp: <span></span>}\n                </td>\n            </tr>\n            <tr>\n                <td>\n                <TextField\n                    value={this.state.update.purchase_items[this.state.current].quantity} \n                    type=\"number\" \n                    required \n                    name=\"quantity\" \n                    onChange={this.onChangePI}\n                    label='Quantity'\n                    variant=\"outlined\"\n                    />\n                </td>\n                <td>\n                <TextField\n                    name=\"defective\" \n                    value={this.state.update.purchase_items[this.state.current].defective} \n                    type=\"number\"  \n                    onChange={this.onChangePI}\n                    required\n                    label='Defective'\n                    variant=\"outlined\"\n                    />\n                </td>\n            </tr>\n            <tr>\n                    <td colSpan={2}>\n                        Discount Type  :  <Select lable='Discount Type' fullWidth name='discount_type' id=\"discount_type\"value={this.state.update.purchase_items[this.state.current].discount_type}  onChange={this.onChangePI}>\n                            <MenuItem value=\"percent\">Percentage</MenuItem>\n                            <MenuItem value=\"fixed\">Fixed</MenuItem>\n                        </Select>\n                    </td>\n            </tr>\n            <tr>\n                <td>\n                <TextField\n                    name=\"discount\" \n                    value={this.state.update.purchase_items[this.state.current].discount} \n                    type=\"number\"  \n                    onChange={this.onChangePI}\n                    required\n                    label='Discount'\n                    variant=\"outlined\"\n                    />\n                </td>\n                <td>\n                <TextField\n                    name=\"purchase_price\" \n                    value={this.state.update.purchase_items[this.state.current].purchase_price} \n                    type=\"number\"  \n                    onChange={this.onChangePI}\n                    required\n                    label='Purchase Price'\n                    variant=\"outlined\"\n                    />\n                </td>\n            </tr>\n            <tr>\n                <td colSpan={2}>\n                <Select value= {this.state.update.purchase_items[this.state.current].status} name=\"status\" onChange={this.onChangePI}>\n                    <MenuItem value=\"delivered\">Delivered</MenuItem>\n                    <MenuItem value=\"incomplete\">Incomplete</MenuItem>\n                    <MenuItem value=\"addedtocirculation\">Added To Circulation</MenuItem>\n                </Select>\n                </td>\n            </tr>\n                <tr>\n                    <td>\n                    {this.state.new ? <Button variant=\"contained\" color=\"primary\" onClick={() => {this.postPurchaseItem(true)}} >Add</Button> : <Button variant=\"contained\" color=\"primary\" onClick={() => {this.postPurchaseItem()}} >Update</Button>}\n                    </td>\n                    <td>\n                    {this.state.new ? <span></span>:<Button variant=\"contained\" color=\"secondary\" onClick={() => {this.deletePurchaseItem()}} >Delete</Button>}\n            \n                    </td>\n                </tr>\n                \n                </tbody>\n            </table>\n        const vendor_selection = this.state.vendor_selection\n        const vendorPopup = <Popup trigger={<Button variant=\"contained\" color=\"secondary\">Change Vendor</Button>} closeOnDocumentClick>\n        <div>\n            <input placeholder=\"Vendor's first name\" id='vendor_serach_box' name='vendor_serach_box' onChange={this.searchVendor}></input>\n            <div className={style.dropdown_content} id='vendor_dropdown'>\n                    {vendor_selection.map(\n                        vendor => (\n                            // use css to get rid of <a>\n                            <a href=\"#\" key={vendor.id} onClick={() => {this.selectVendor(vendor.id, vendor.name)}} >{vendor.name}</a>\n                        )\n                    )}\n            </div>\n        </div>\n        </Popup>\n        const status = this.state.status\n                \n        return (\n            <div>\n                <Grid container justify='center'>\n                    <Grid  item xm={6}>\n                    <h1>{this.props.purchase_order.vendor_name}</h1>\n                    </Grid>\n                </Grid>\n                <Grid container justify='center'>\n                    <Grid item xm={6}>\n                        <table cellPadding='10' cellSpacing='10'>\n                            <tbody>\n                                <tr>\n                                    <td>\n                                        <TextField\n                                        value={this.state.update.purchase_order.vendor_name}\n                                        InputProps={{\n                                            readOnly: true,\n                                        }}\n                                        label='Vendor'\n                                        variant=\"outlined\"\n                                        />\n                                    </td>\n                                    <td>\n                                    {vendorPopup}\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td colSpan={2}>\n                                    <TextField\n                                        value={this.state.update.purchase_order.added_by_name}\n                                        InputProps={{\n                                            readOnly: true,\n                                        }}\n                                        label='Added By'\n                                        variant=\"outlined\"\n                                        fullWidth\n                                        />\n                                    </td>\n                                </tr>\n                                \n                                <tr>\n                                    <td>\n                                    Invoiced On:<br></br>\n                                    <DatePicker\n                                    name='invoiced_on'\n                                    selected={this.state.update.purchase_order.invoiced_on}\n                                    onChange={this.invoiceHandler}\n                                    />\n                                    </td>\n                                    <td>\n                                    Completed On : <br></br>\n                                    <DatePicker\n                                    name='completed_on'\n                                    selected={this.state.update.purchase_order.completed_on}\n                                    onChange={this.completeHandler}\n                                    />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                    <TextField\n                                        value={this.state.update.purchase_order.total_cost} \n                                        name=\"total_cost\" \n                                        onChange={this.onChange}\n                                        label='Total Cost'\n                                        variant=\"outlined\"\n                                        fullWidth\n                                        />\n                                    </td>\n                                    <td>\n                                    <TextField\n                                        value= {this.state.update.purchase_order.discount} \n                                        name=\"discount\"\n                                        onChange={this.onChange}\n                                        label='Discount'\n                                        variant=\"outlined\"\n                                        fullWidth\n                                        />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td colSpan={2}>\n                                        Discount Type  :  <Select lable='Discount Type' fullWidth name='discount_type' id=\"discount_type\" onChange={this.onChange} value={this.state.update.purchase_order.discount_type}>\n                                            <MenuItem value=\"percent\">Percentage</MenuItem>\n                                            <MenuItem value=\"fixed\">Fixed</MenuItem>\n                                        </Select>\n                                    </td>\n                                </tr>\n                                <tr >\n                                    <td colSpan={2}>\n                                    Status : <Select name='status' id=\"status\" fullWidth onChange={this.onChange} value={this.state.update.purchase_order.status} required >\n                                    {status.map(\n                                        x => (\n                                        <MenuItem key={x.id} value={parseInt(x.id)}>{x.name}</MenuItem>\n                                        )\n                                    )}\n                                    </Select> \n                            </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <Button  variant=\"contained\" color=\"primary\"  onClick={() => {this.updatePurchaseOrder()}}>\n                                        Update\n                                        </Button>\n                                       \n                                    </td>\n                                    <td>\n                                    <Button  variant=\"contained\" color=\"secondary\"  onClick={() => {this.props.delete(this.props.purchase_order.id)}}>\n                                        Delete\n                                        </Button>\n                                    </td>\n                                </tr>\n\n                            </tbody>\n                        </table><br></br>\n                       </Grid>\n                </Grid>\n                <hr></hr>\n                <Grid container>\n                    <Grid item md={1}>\n\n                    </Grid>\n                    <Grid item md={3}>             \n                        <h1>Items</h1>   \n                    </Grid>\n\n                </Grid>\n                <Grid container justify='center'>\n                    <Grid item xm={8}>\n                    <table cellSpacing={10} cellPadding={10}>\n                    <tbody>\n                        <tr>\n                            <td>\n                            </td>\n                            <td>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td colSpan={3}>\n                            {this.state.popUp ? popUpItem :<div> <Button  variant=\"contained\" color=\"primary\" onClick={() => {this.addPurchaseItem()}}>Add New Items</Button><br></br>\n                            <List data={this.state.update.purchase_items} header={this.columns} page={false} popUp={this.popUp} /></div>}\n                            </td>\n                        </tr>\n                    </tbody>\n                    </table>\n                 \n                \n                </Grid>\n\n                </Grid>\n                </div>\n        )\n    }\n}\nexport default PopUpEdit","import React, { Component } from 'react'\nimport List from '../list';\nimport { getPurchaseOrder, deletePurchaseOrder, updatePurchaseOrder } from '../../api/inventory/purchaseOrder';\nimport PopUpEdit from './popUpEdit';\nimport Swal from 'sweetalert2'\n\nclass PurchaseOrderList extends Component {\n    \n    constructor(props){\n        super(props)\n        this.popUp = this.popUp.bind(this)\n        this.state = {\n            'popUp':false,\n            'purchase_order':{},\n            'purchase_items':[],\n            'update':{}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.purchaseOrderDelete = this.purchaseOrderDelete.bind(this)\n    }\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value]\n            }\n        })\n    }\n\n    \n    async onSubmit(e){\n        e.preventDefault();\n            var data = this.state.vendor\n            var ele;\n            for (ele in this.state.update){\n                data[ele] = this.state.update[ele][0]\n            }\n            data = {...data, 'action':'edit'}\n            updatePurchaseOrder(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        Swal.fire({\n                            title:'Updated',\n                            icon:'success',\n                            text:\"Purchase Order Details updated.\"\n                        })\n                        this.props.update(0)\n                    }\n                    else{\n                        Swal.fire(data['error'])\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    purchaseOrderDelete(id){\n        var data = {\n            'purchase_orders_id':[\n                id\n            ]\n        }\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to revert this!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, delete it!'\n          }).then((result) => {\n              if(result['value']==true){\n                deletePurchaseOrder(JSON.stringify(data)).then(data=>{\n                    try {\n                        if (data['status']){\n                            Swal.fire('Purchase Order Deleted.')\n                            this.props.update(0)\n                        }   else{\n                            Swal.fire(data['error'])\n                        }\n                    }catch(e){\n                        console.log(e)\n                    }\n                })\n            }\n         })\n    }\n    \n    async popUp(id, uuid=0){\n        const data = {\n            'action':'get',\n            'purchase_order_id':id,\n        }\n        var data_main;\n        await getPurchaseOrder(JSON.stringify(data)).then(data => {\n            if (data['status']){\n                data_main=data\n            }\n        })\n        if (data_main['p_items'].length === 0) {\n            console.log(\"blank\")\n            data_main['p_items'] = [{\n                id:0\n            }]\n        }\n        await this.setState({\n            'popUp':true,\n            'purchase_order':data_main['p_order'][0],\n            'purchase_items':data_main['p_items']\n        })\n    }\n\n\n    columns = [\n        {\n            id:1,\n            name:\"Vendor Name\",\n            prop: 'vendor_name'\n        },\n        {\n            id:2,\n            name:\"Items\",\n            prop: 'items'\n        },\n        {\n            id:3,\n            name:\"Invoiced On\",\n            prop: 'invoiced_on'\n        },\n        {\n            id:4,\n            name:\"Total Cost\",\n            prop: 'total_cost'\n        },   \n        {\n            id:5,\n            name:\"Status\",\n            prop: 'status_name'\n        }      \n    ]\n    \n\n    render() {\n        const list = <List data={this.props.data} header={this.columns}   popUp={this.popUp} update={this.props.update} page={this.props.page} />\n        const popUpRender = <PopUpEdit purchase_order={this.state.purchase_order} purchase_items={this.state.purchase_items} update={this.props.update} delete={this.purchaseOrderDelete} ></PopUpEdit>\n        return (\n            <div>\n                {this.state.popUp ? popUpRender : list}\n            </div>\n        )\n    }\n}\n\nexport default PurchaseOrderList\n","import React, { Component } from 'react'\nimport {getPurchaseOrders} from '../../api/inventory/purchaseOrder';\nimport {  connect } from 'react-redux';\nimport  PurchaseOrderList  from './purchaseOrderList';\nimport { Link} from 'react-router-dom';\n\n\n\nimport Button from '@material-ui/core/Button';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/styles';\nimport PropTypes from 'prop-types';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport LoadingIcon from '../loading';\n\nimport Swal from 'sweetalert2'\n\n\n\nclass PurchaseOrders extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            'purchaseOrders':[],\n            'loaded':false,\n            'start':0,\n            'end':10,\n            'page':1\n        }\n        this.update_table = this.update_table.bind(this)\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n        this.update_table(0)\n    }\n\n    async update_table (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                'loaded':false,\n                start: 0,\n                end: 10,\n                page:1\n            })\n        }\n        else{\n            if (this.state.start+by>-1){\n                await this.setState({\n                    'loaded':false,\n                    start: this.state.start+by,\n                    end: this.state.end+by,\n                    page:this.state.page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.start,\n            'end':this.state.end\n        }\n        this.getPurchaseOrdersData(request_json)\n    }\n    \n    async getPurchaseOrdersData (request_json) {\n        await getPurchaseOrders(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'purchaseOrders':data['p_orders'],\n                    'loaded':true\n                })\n            } \n            else{\n                Swal.fire(data['error'])\n            } \n        })\n    }\n\n \n\nrender() {\n    const render_after_load = (\n        <div>\n            <PurchaseOrderList data={this.state.purchaseOrders} update={this.update_table} page={this.state.page} />\n        </div>\n    )\n\n    return(\n        <div>\n        <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n            <Grid item xs={3} >\n            <Button variant=\"contained\" color=\"primary\" onClick={() => {this.update_table(0)}}>\n              <RefreshIcon/>&nbsp;&nbsp;&nbsp;Refresh Table\n              </Button>\n            </Grid>\n            <Grid item xs={5}>\n  \n            </Grid>\n              <Grid item xs={3}>\n              <Link to='/purchaseorders/create' style={{ textDecoration: 'none' }}>\n              <Button variant=\"contained\" color=\"secondary\">\n              <AddCircleIcon/>&nbsp;&nbsp;&nbsp;Add New Purchase Order\n              </Button>\n              </Link>\n              </Grid>\n  \n          <Grid item xs={12}>\n            <Paper>\n            {this.state.loaded ? render_after_load : <LoadingIcon></LoadingIcon>}\n            </Paper>\n          </Grid>\n          \n        </Grid>\n        </div>\n    )\n}\n}\n\n\n\nconst mapStateToProps = state => ({\n    user: state.user,\n})\n\nexport default connect(mapStateToProps)(PurchaseOrders)\n","import React, { Component } from 'react'\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport List from '../list';\nimport Popup from \"reactjs-popup\";\nimport style from './css/popUp.module.css';\nimport {getVendors} from '../../api/inventory/vendorApi';\nimport {getPurchaseOrder , updatePurchaseOrder, createPurchaseOrder} from '../../api/inventory/purchaseOrder';\nimport {updatePurchaseItem, deletePurchaseItems, createPurchaseItem} from '../../api/inventory/purchaseItem'\nimport {getPurchaseOrderStatus} from '../../api/misc';\nimport {getItems} from '../../api/inventory/itemApi';\n\nimport { Grid, TextField, Button } from '@material-ui/core';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport Swal from 'sweetalert2'\n\n\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\n\nclass PurchaseOrderCreation extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            'registered':false,\n            'popUp':false,\n            'new':false,\n            'current':0,\n            'status':[],\n            'vendor_selection':[\n                {\n                    'id':0,\n                    'name':'None'\n                }\n            ],\n            'item_selection':[\n                {\n                    'id':0,\n                    'name':\"None\"\n                }\n            ],\n            update : {\n                'purchase_order':{\n                    'vendor_name':'',\n                    'total_cost':0,\n                    'discount':0,\n                    'invoiced_on': this.converter((new Date()).toISOString()),\n                    'completed_on': this.converter((new Date()).toISOString()),\n                    'discount_type':'percent'\n                },\n                'purchase_items':[{\n                    'id':\"Fake Key\"\n                }]\n            }\n        }\n        this.converter = this.converter.bind(this)\n        this.addPurchaseOrder = this.addPurchaseOrder.bind(this)\n        this.getItemData = this.getItemData.bind(this)\n        this.selectItem = this.selectItem.bind(this)\n        this.searchItem = this.searchItem.bind(this)\n        this.addPurchaseItem = this.addPurchaseItem.bind(this)\n        this.invoiceHandler = this.invoiceHandler.bind(this)\n        this.completeHandler = this.completeHandler.bind(this)\n        this.getVendorsData = this.getVendorsData.bind(this)\n        this.popUp = this.popUp.bind(this)\n        this.searchVendor = this.searchVendor.bind(this)\n        this.selectVendor = this.selectVendor.bind(this)\n        this.onChange = this.onChange.bind(this)\n        this.updatePurchaseOrder = this.updatePurchaseOrder.bind(this)\n        this.onChangePI = this.onChangePI.bind(this)\n        this.postPurchaseItem = this.postPurchaseItem.bind(this)\n        this.deletePurchaseItem = this.deletePurchaseItem.bind(this)\n        this.refreshTable = this.refreshTable.bind(this)\n    }\n\n    async componentDidMount(){\n        var request_json = {\n            'action':'get',\n        }\n        await getPurchaseOrderStatus(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    ...this.state,\n                    'status':data.data\n                })\n            }  \n        })\n    }\n\n    async getVendorsData (request_json) {\n        await getVendors(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'vendor_selection':data['vendors'],\n                })\n            }  \n        })\n    }\n\n    selectVendor(id,name){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_order':{\n                    ...this.state.update.purchase_order,\n                    'vendor':id,\n                    'vendor_name':name\n                }\n            }\n        })\n    }\n\n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_order':{\n                    ...this.state.update.purchase_order,\n                    [e.target.name] : [e.target.value][0]\n                }\n            }\n        })\n    }\n\n    converter(date){\n        return ( new Date(Date.parse(date)))\n    }\n\n    popUp(id){\n        var key\n        for (key in this.state.update.purchase_items){\n            if (this.state.update.purchase_items[key].id === id){\n                this.setState({\n                    ...this.state,\n                    'current':key,\n                    'popUp':true\n                })        \n                return\n            }\n        }\n    }\n\n    searchVendor(e){\n        if ((e.target.value).length > 2 ){\n            var request_json = {\n                'action':'get',\n                'start':0,\n                'end':10,\n                'filter':'name',\n                'first_name':(e.target.value)\n            }\n            this.getVendorsData(request_json)\n        }\n    }\n    \n    invoiceHandler(date){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_order':{\n                    ...this.state.update.purchase_order,\n                    'invoiced_on' : date\n                }\n            }\n        })\n    }\n    \n    completeHandler(date){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_order':{\n                    ...this.state.update.purchase_order,\n                    'completed_on' : date\n                }\n            }\n        })\n    }\n\n    updatePurchaseOrder(){\n        if (this.state.registered){\n            console.log(this.state)\n            var request_json = {\n                ...this.state.update.purchase_order,\n                'action':'edit',\n                'purchase_order_id':this.state.update.purchase_order.id\n            }\n            updatePurchaseOrder(JSON.stringify(request_json)).then(data => {\n                if (data['status']){\n                    Swal.fire(\"Purchase Order Details Has Been Updated.\")\n                }\n                else{\n                    Swal.fire(data['error'])\n                }\n            })\n        }\n        else{\n            var request_json = {\n                ...this.state.update.purchase_order,\n                'action':'add',\n                'purchase_order_id':this.state.update.purchase_order.id\n            }\n            createPurchaseOrder(JSON.stringify(request_json)).then(data => {\n                if (data['status']){\n                    console.log(data)\n                    Swal.fire(\"Purchase Order Has Been Added.\")\n                    this.setState({\n                        ...this.state,\n                        'registered':true,\n                        'update':{\n                            ...this.state.update,\n                            'purchase_order':{\n                                ...this.state.update.purchase_order,\n                                'id':data['p_orders'][0]['id'],\n                                'added_by':data['p_orders'][0]['added_by_name']\n                            }\n                        }\n                    })\n                }\n                else{\n                    Swal.fire(data['error'])\n                }\n            })\n        }\n        \n    }\n    addPurchaseOrder(){\n        var request_json = {\n            ...this.state.update.purchase_order,\n            'action':'add',\n        }\n        createPurchaseOrder(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                Swal.fire(\"Purchase Order Has Been Added.\")\n                data['p_orders'][0]['invoiced_on'] = this.converter(data['p_orders'][0]['invoiced_on'])\n                data['p_orders'][0]['completed_on'] = this.converter(data['p_orders'][0]['completed_on'])\n                this.setState({\n                    ...this.state,\n                    'update':{\n                        ...this.state.update,\n                        'purchase_order':data['p_orders'][0]\n                    }\n                })\n            }\n            else{\n                Swal.fire(\"Error : \",data.error)\n            }\n        })\n    }\n\n    onChangePI(e){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_items':{\n                    ...this.state.update.purchase_items,\n                    [this.state.current] : {\n                        ...this.state.update.purchase_items[this.state.current],\n                        [e.target.name] : [e.target.value][0]\n                    },\n                }\n            }\n        })\n    }\n\n    postPurchaseItem(is_new=false){\n        var request_json;\n        if (is_new){\n            request_json = {\n                'action':'add',\n                'purchase_order':this.state.update.purchase_order.id,\n                ...this.state.update.purchase_items[this.state.current]\n            }\n            createPurchaseItem(JSON.stringify(request_json)).then(data => {\n                if (data['status']){\n                    Swal.fire(\"Purchase Item Has Been Added.\")\n                    this.refreshTable()\n                }\n                else{\n                    Swal.fire(data['error'])\n                }\n            })\n            return\n        }\n        request_json = {\n            'action':'edit',\n            ...this.state.update.purchase_items[this.state.current]\n        }\n        updatePurchaseItem(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                Swal.fire(\"Purchase Item Details Has Been Updated.\")\n                this.refreshTable()\n            }\n            else{\n                Swal.fire(data['error'])\n            }\n        })\n    }\n\n  \n    deletePurchaseItem(){\n        var request_json = {\n            purchase_items_id : [this.state.update.purchase_items[this.state.current].id]\n        }\n        deletePurchaseItems(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                Swal.fire(\"Purchase Item Has Beed Deleted.\")\n                this.refreshTable()\n            }\n            else{\n                Swal.fire(data['error'])\n            }\n        })\n    }\n\n\n    addPurchaseItem(){\n        var current =0;\n        var item,p_list=[];\n        for (item in this.state.update.purchase_items){\n            if (item.id){\n                if (item.id !== \"Fake Key\"){\n                    current = current + 1\n                    p_list.push(item)\n                }\n            }\n        }\n        this.setState({\n            'current':current,\n            'new':true,\n            'popUp':true,\n            'update':{\n                ...this.state.update,\n                'purchase_items':[\n                    ...p_list,\n                    {\n                        'item_name':\"None\",\n                        'discount_type':'percentage',\n                        'status':'incomplete'\n                    }\n                ]\n            }\n        })\n    }\n\n    columns = [\n        {\n            id:1,\n            name:\"Item Name\",\n            prop: 'item_name'\n        },\n        {\n            id:2,\n            name:\"Quantity\",\n            prop: 'quantity'\n        },\n        {\n            id:3,\n            name:\"Stock\",\n            prop: 'stock'\n        },\n        {\n            id:4,\n            name:\"Defective\",\n            prop: 'defective'\n        },   \n        {\n            id:5,\n            name:\"Sold\",\n            prop: 'sold'\n        },\n        {\n            id:6,\n            name:\"Discount\",\n            prop: 'discount'\n        },\n        {\n            id:7,\n            name:\"Purchase Price\",\n            prop: 'purchase_price'\n        },\n        {\n            id:8,\n            name:\"Status\",\n            prop: 'status'\n        }\n    ]\n\n    searchItem(e){\n        if ((e.target.value).length > 2 ){\n            var request_json = {\n                'action':'get',\n                'start':0,\n                'end':10,\n                'filter':'name',\n                'name':(e.target.value)\n            }\n            this.getItemData(request_json)\n        }\n    }\n\n    async getItemData(request_json){\n        await getItems(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    ...this.state,\n                    'item_selection':data['items'],\n                })\n            }  \n        })\n    }\n    selectItem(id, name){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_items':{\n                    ...this.state.update.purchase_items,\n                    [this.state.current] : {\n                        ...this.state.update.purchase_items[this.state.current],\n                        'item_name' : name,\n                        'item':id\n                    },\n                }\n            }\n        })\n\n    }\n\n    async refreshTable(){\n        var id = this.state.update.purchase_order.id;\n        var items= [];\n        const request_json = {\n            'action':'get',\n            'purchase_order_id':id\n        }\n        await getPurchaseOrder(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                items = data['p_items']\n            }\n        })\n        if (items.length === 0){\n            items = [{\n                'id':\"Fake Key\",\n                'item_name': ''\n            }]\n        }\n        await this.setState({\n            ...this.state,\n            'popUp':false,\n            'update':{\n                ...this.state.update,\n                'purchase_items':items\n            }\n        })\n    }\n\n\n    render() {\n        const item_selection = this.state.item_selection\n        const itemPopUp = <Popup trigger={ <Button variant=\"contained\" color=\"secondary\">Select Item</Button>} closeOnDocumentClick>\n        <div>\n            <input placeholder=\"Item Name\" id='item_search_box' name='item_serach_box' onChange={this.searchItem}></input>\n            <div className={style.dropdown_content} id='vendor_dropdown'>\n                    {item_selection.map(\n                        item => (\n                            // use css to get rid of <a>\n                            <a key={item.id} onClick={() => {this.selectItem(item.id, item.name)}} >{item.name}</a>\n                        )\n                    )}\n            </div>\n        </div>\n        </Popup>\n        const popUpItem = <table cellPadding={10} cellSpacing={10}>\n        <tbody><tr>\n                <td colSpan={2}>\n                <IconButton color='secondary' onClick={()=> {this.refreshTable()}}><NavigateBeforeIcon /></IconButton>\n                </td>\n            </tr>\n        <tr>\n            <td>\n            <TextField\n                value= {this.state.update.purchase_items[this.state.current].item_name}\n                InputProps={{\n                    readOnly: true,\n                }}\n                \n                label='Item'\n                variant=\"outlined\"\n                />\n            </td>\n            <td>\n            {this.state.new ? itemPopUp: <span></span>}\n            </td>\n        </tr>\n        <tr>\n            <td>\n            <TextField\n                value={this.state.update.purchase_items[this.state.current].quantity} \n                type=\"number\" \n                required \n                name=\"quantity\" \n                onChange={this.onChangePI}\n                label='Quantity'\n                variant=\"outlined\"\n                />\n            </td>\n            <td>\n            <TextField\n                name=\"defective\" \n                value={this.state.update.purchase_items[this.state.current].defective} \n                type=\"number\"  \n                onChange={this.onChangePI}\n                required\n                label='Defective'\n                variant=\"outlined\"\n                />\n            </td>\n        </tr>\n        <tr>\n                <td colSpan={2}>\n                    Discount Type  :  <Select lable='Discount Type' fullWidth name='discount_type' id=\"discount_type\"value={this.state.update.purchase_items[this.state.current].discount_type}  onChange={this.onChangePI}>\n                        <MenuItem value=\"percent\">Percentage</MenuItem>\n                        <MenuItem value=\"fixed\">Fixed</MenuItem>\n                    </Select>\n                </td>\n        </tr>\n        <tr>\n            <td>\n            <TextField\n                name=\"discount\" \n                value={this.state.update.purchase_items[this.state.current].discount} \n                type=\"number\"  \n                onChange={this.onChangePI}\n                required\n                label='Discount'\n                variant=\"outlined\"\n                />\n            </td>\n            <td>\n            <TextField\n                name=\"purchase_price\" \n                value={this.state.update.purchase_items[this.state.current].purchase_price} \n                type=\"number\"  \n                onChange={this.onChangePI}\n                required\n                label='Purchase Price'\n                variant=\"outlined\"\n                />\n            </td>\n        </tr>\n        <tr>\n            <td colSpan={2}>\n            <Select value= {this.state.update.purchase_items[this.state.current].status} name=\"status\" onChange={this.onChangePI}>\n                <MenuItem value=\"delivered\">Delivered</MenuItem>\n                <MenuItem value=\"incomplete\">Incomplete</MenuItem>\n                <MenuItem value=\"addedtocirculation\">Added To Circulation</MenuItem>\n            </Select>\n            </td>\n        </tr>\n            <tr>\n                <td>\n                {this.state.new ? <Button variant=\"contained\" color=\"primary\" onClick={() => {this.postPurchaseItem(true)}} >Add</Button> : <Button variant=\"contained\" color=\"primary\" onClick={() => {this.postPurchaseItem()}} >Update</Button>}\n                </td>\n                <td>\n                {this.state.new ? <span></span>:<Button variant=\"contained\" color=\"secondary\" onClick={() => {this.deletePurchaseItem()}} >Delete</Button>}\n        \n                </td>\n            </tr>\n            \n            </tbody>\n        </table>\n        const vendor_selection = this.state.vendor_selection\n        const vendorPopup = <Popup trigger={this.state.update.purchase_order.id ?<Button variant=\"contained\" color=\"secondary\">Change Vendor</Button> :<Button variant=\"contained\" color=\"secondary\">Select Vendor</Button> } closeOnDocumentClick>\n        <div>\n            <input placeholder=\"Vendor's first name\" id='vendor_serach_box' name='vendor_serach_box' onChange={this.searchVendor}></input>\n            <div className={style.dropdown_content} id='vendor_dropdown'>\n                    {vendor_selection.map(\n                        vendor => (\n                            // use css to get rid of <a>\n                            <a key={vendor.id} onClick={() => {this.selectVendor(vendor.id, vendor.name)}} >{vendor.name}</a>\n                        )\n                    )}\n            </div>\n        </div>\n        </Popup>\n        const status = this.state.status\n        return (\n            <div>\n                <Grid container justify='center'>\n                    <Grid  item xm={6}>\n                    <h1>Create New Purchase Order</h1>\n                    </Grid>\n                </Grid>\n                <Grid container justify='center'>\n                    <Grid item xm={6}>\n                        <table cellPadding='10' cellSpacing='10'>\n                            <tbody>\n                                <tr>\n                                    <td>\n                                        <TextField\n                                        value={this.state.update.purchase_order.vendor_name}\n                                        InputProps={{\n                                            readOnly: true,\n                                        }}\n                                        label='Vendor'\n                                        variant=\"outlined\"\n                                        />\n                                    </td>\n                                    <td>\n                                    {vendorPopup}\n                                    </td>\n                                </tr>\n                                \n                                <tr>\n                                    <td>\n                                    Invoiced On:<br></br>\n                                    <DatePicker\n                                    name='invoiced_on'\n                                    selected={this.state.update.purchase_order.invoiced_on}\n                                    onChange={this.invoiceHandler}\n                                    />\n                                    </td>\n                                    <td>\n                                    Completed On : <br></br>\n                                    <DatePicker\n                                    name='completed_on'\n                                    selected={this.state.update.purchase_order.completed_on}\n                                    onChange={this.completeHandler}\n                                    />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                    <TextField\n                                        value={this.state.update.purchase_order.total_cost} \n                                        name=\"total_cost\" \n                                        onChange={this.onChange}\n                                        label='Total Cost'\n                                        variant=\"outlined\"\n                                        fullWidth\n                                        />\n                                    </td>\n                                    <td>\n                                    <TextField\n                                        value= {this.state.update.purchase_order.discount} \n                                        name=\"discount\"\n                                        onChange={this.onChange}\n                                        label='Discount'\n                                        variant=\"outlined\"\n                                        fullWidth\n                                        />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td colSpan={2}>\n                                        Discount Type  :  <Select lable='Discount Type' fullWidth name='discount_type' id=\"discount_type\" onChange={this.onChange} value={this.state.update.purchase_order.discount_type}>\n                                            <MenuItem value=\"percent\">Percentage</MenuItem>\n                                            <MenuItem value=\"fixed\">Fixed</MenuItem>\n                                        </Select>\n                                    </td>\n                                </tr>\n                                <tr >\n                                    <td colSpan={2}>\n                                    Status : <Select name='status' id=\"status\" fullWidth onChange={this.onChange} value={this.state.update.purchase_order.status} required >\n                                    {status.map(\n                                        x => (\n                                        <MenuItem key={x.id} value={parseInt(x.id)}>{x.name}</MenuItem>\n                                        )\n                                    )}\n                                    </Select> \n                            </td>\n                                </tr>\n\n                                <tr>\n                                    <td>\n                                        <Button  variant=\"contained\" color=\"primary\"  onClick={() => {this.updatePurchaseOrder()}}>\n                                        {this.state.registered? 'Update': 'Add'} \n                                        </Button>\n                                       \n                                    </td>\n                                    <td>\n                                    \n                                    </td>\n                                </tr>\n\n                            </tbody>\n                        </table><br></br>\n                       </Grid>\n                </Grid>\n                <hr></hr>\n                <Grid container>\n                    <Grid item md={1}>\n\n                    </Grid>\n                    <Grid item md={3}>             \n                        <h1>Items</h1>   \n                    </Grid>\n\n                </Grid>\n                <Grid container justify='center'>\n                    <Grid item xm={8}>\n                    <table cellSpacing={10} cellPadding={10}>\n                    <tbody>\n                        <tr>\n                            <td>\n                            </td>\n                            <td>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td colSpan={3}>\n                            {this.state.popUp ? popUpItem :<div> <Button  variant=\"contained\" color=\"primary\" onClick={() => {this.addPurchaseItem()}}>Add New Items</Button><br></br>\n                            <List data={this.state.update.purchase_items} header={this.columns} page={false} popUp={this.popUp} /></div>}\n                            </td>\n                        </tr>\n                    </tbody>\n                    </table>\n                 \n                \n                </Grid>\n\n                </Grid>\n                </div>\n        )\n    }\n}\nexport default PurchaseOrderCreation","import { baseRequest } from '../base';\n// api for Invoices \n\nconst getInvoices = async data => {\n    try {\n      return await baseRequest('apiv1/sales/invoices','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  \n  const deleteInvoices = async data => {\n    try {\n      return await baseRequest('apiv1/sales/invoices/delete','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const createInvoice = async data => {\n      try {\n        return await baseRequest('apiv1/sales/invoices','POST', data);\n      } catch(e){\n        alert(e)\n      }\n  };\n  \n  \n  const getInvoice = async data => {\n    try {\n      return await baseRequest('apiv1/sales/invoice','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const updateInvoice= async data => {\n    try {\n      return await baseRequest('apiv1/sales/invoice','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  const getInvoiceStatus= async data => {\n    try {\n      return await baseRequest('apiv1/sales/invoices/status','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \nexport {getInvoiceStatus, getInvoices, createInvoice, deleteInvoices, updateInvoice, getInvoice}\n  ","import { baseRequest } from '../base';\n// api for Invoices \n\nconst getInvoiceItems = async data => {\n    try {\n      return await baseRequest('apiv1/sales/invoiceitems','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  \n  const deleteInvoiceItems = async data => {\n    try {\n      return await baseRequest('apiv1/sales/invoiceitems/delete','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const createInvoiceItem = async data => {\n      try {\n        return await baseRequest('apiv1/sales/invoiceitems','POST', data);\n      } catch(e){\n        alert(e)\n      }\n  };\n  \n  \n  const getInvoiceItem = async data => {\n    try {\n      return await baseRequest('apiv1/sales/invoiceitem','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const updateInvoiceItem= async data => {\n    try {\n      return await baseRequest('apiv1/sales/invoiceitem','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \nexport {getInvoiceItems, createInvoiceItem, deleteInvoiceItems, updateInvoiceItem, getInvoiceItem}\n  ","import { baseRequest } from '../base';\n// api for items \n\nconst getPlaces = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/places','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  \n  const deletePlaces = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/places/delete','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const createPlace = async data => {\n      try {\n        return await baseRequest('apiv1/inventory/places','POST', data);\n      } catch(e){\n        alert(e)\n      }\n  };\n  \n  \n  const getPlace = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/place','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const updatePlace = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/place','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n\n  const assignPlace = async data => {\n    try { \n      return await  baseRequest('apiv1/inventory/places/assign','POST', data);\n    } catch (e){\n      alert(e)\n    }\n  }\n  \nexport {getPlaces, createPlace, deletePlaces, updatePlace, getPlace, assignPlace}\n  ","import React, { Component } from 'react'\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport List from '../list';\nimport Popup from \"reactjs-popup\";\nimport style from '../purchaseOrder/css/popUp.module.css';\nimport {getCustomers} from '../../api/sales/customer';\nimport {updateInvoice, getInvoice, deleteInvoices, getInvoiceStatus} from '../../api/sales/invoice';\nimport {updateInvoiceItem, deleteInvoiceItems, createInvoiceItem} from '../../api/sales/invoiceItem'\nimport {getItems} from '../../api/inventory/itemApi';\nimport {getPlaces} from '../../api/inventory/placeApi';\nimport { getDiscounts, getTaxes } from '../../api/misc'\nimport { Grid } from '@material-ui/core';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport Table from 'react-bootstrap/Table'\n\nimport IconButton from '@material-ui/core/IconButton';\n\nimport {Button, TextField } from '@material-ui/core';\n\nimport Swal from 'sweetalert2'\n\n\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\n\n\nclass PopUpEdit extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            'tax_start':0,\n            'tax_end':5,\n            'discount_start':0,\n            'discount_end':5,\n            'tax_loaded':false,\n            'discount_loaded':false,\n            'discount_page':[],\n            'tax_page':[],\n            'discount_selection':[],\n            'tax_selection':[],\n            'place_selection':[],\n            'stock_selection':[],\n            'sold_from_selection':[],\n            'popUp':false,\n            'new':false,\n            'current':0,\n            'status':[],\n            'customer_selection':[\n                {\n                    'id':0,\n                    'name':'None'\n                }\n            ],\n            'item_selection':[\n                {\n                    'id':0,\n                    'name':\"None\"\n                }\n            ],\n            update : {\n                'invoice':{\n                    ...this.props.invoice,\n                    'invoiced_on': this.converter(this.props.invoice.invoiced_on),\n                    'due_on': this.converter(this.props.invoice.due_on)\n                },\n                'invoice_items':this.props.invoice_items\n            }\n        }\n        this.update_table = this.update_table.bind(this)\n        this.stateman = this.stateman.bind(this)\n        this.refreshTable = this.refreshTable.bind(this)\n        this.getItemData = this.getItemData.bind(this)\n        this.selectItem = this.selectItem.bind(this)\n        this.searchItem = this.searchItem.bind(this)\n        this.addInvoiceItem = this.addInvoiceItem.bind(this)\n        this.invoiceHandler = this.invoiceHandler.bind(this)\n        this.dueOnHandler = this.dueOnHandler.bind(this)\n        this.getCustomerData = this.getCustomerData.bind(this)\n        this.converter = this.converter.bind(this)\n        this.popUp = this.popUp.bind(this)\n        this.searchCustomer = this.searchCustomer.bind(this)\n        this.selectCustomer = this.selectCustomer.bind(this)\n        this.onChange = this.onChange.bind(this)\n        this.updateInvoice = this.updateInvoice.bind(this)\n        this.onChangePI = this.onChangePI.bind(this)\n        this.postInvoiceItem = this.postInvoiceItem.bind(this)\n        this.deleteInvoiceItem = this.deleteInvoiceItem.bind(this)\n        this.onChangePlace = this.onChangePlace.bind(this)\n        this.removeEntry = this.removeEntry.bind(this)\n        this.addEntryDiscount = this.addEntryDiscount.bind(this)\n        this.addEntryTax = this.addEntryTax.bind(this)\n        this.popUpTemp = this.popUpTemp.bind(this)\n    }\n    popUpTemp(){\n\n    }\n    removeEntry(id, dis){\n        if (dis){\n            var temp = this.state.update.invoice_items[this.state.current].applied_discount\n            temp.pop(dis)\n            var temp2 = this.state.update.invoice_items[this.state.current].discount\n            temp2.pop(temp.id)\n            this.setState({\n                ...this.state,\n                'update':{\n                    ...this.state.update,\n                    invoice_items:{\n                        ...this.state.update.invoice_items,\n                        [dis]:{\n                            'applied_discount':temp,\n                            'discount':temp2\n                            }\n                        }\n                    }\n                })\n            }\n        else {\n                var temp = this.state.update.invoice_items[this.state.current].applied_tax\n                temp.pop(dis)\n                var temp2 = this.state.update.invoice_items[this.state.current].taxes\n                temp2.pop(temp.id)\n                this.setState({\n                    ...this.state,\n                    'update':{\n                        ...this.state.update,\n                        invoice_items:{\n                            ...this.state.update.invoice_items,\n                            [dis]:{\n                                'applied_tax':temp,\n                                'taxes':temp2\n                            }\n                        }\n                    }\n                })\n    }\n}\n\n    async componentDidMount(){\n        var request_json = {\n            'action':'get',\n        }\n        await getInvoiceStatus(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    ...this.state,\n                    'status':data.data\n                })\n            }\n        })\n    }\n\n    async getCustomerData (request_json) {\n        await getCustomers(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'customer_selection':data['customers'],\n                })\n            } \n            \n            else{\n                Swal.fire({\n                    icon:'error',\n                    title:data['error']\n                })\n            } \n        })\n    }\n\n    selectCustomer(id,name){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice':{\n                    ...this.state.update.invoice,\n                    'customer':id,\n                    'customer_name':name\n                }\n            }\n        })\n    }\n\n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice':{\n                    ...this.state.update.invoice,\n                    [e.target.name] : [e.target.value][0]\n                }\n            }\n        })\n    }\n\n    converter(date){\n        return ( new Date(Date.parse(date)))\n    }\n\n    popUp(id){\n        var key\n        for (key in this.state.update.invoice_items){\n            if (this.state.update.invoice_items[key].id === id){\n                this.setState({\n                    ...this.state,\n                    'current':key,\n                    'popUp':true\n                }) \n                break;       \n            }\n        }\n        var request_json = {\n            'action':'get',\n            'filter':'item',\n            'item_id':this.state.update.invoice_items[key].item  \n        }\n        this.getPlacesData(request_json)\n    }\n\n    async getPlacesData(request_json) {\n        await getPlaces(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'sold_from_selection':data['placements'],\n                })\n                var temp = [], key, x;\n                for(key in data['placements']){\n                    x = {'id': data['placements'][key]['placed_on'], 'str_placed_on':data['placements'][key]['str_placed_on']}\n                    temp[data['placements'][key]['placed_on']] = x\n                    }\n                temp = temp.filter(function (el) {\n                    return el != null;\n                });\n                this.setState({\n                    'place_selection':temp\n                })\n                this.update_stock(data)\n            }\n            else{\n                Swal.fire({\n                    icon:'error',\n                    title:data['error']\n                })\n            }\n        })\n\n    }\n\n    // data = sold_From_selection\n    update_stock(data){\n        var sold_from;\n        if (this.state.update.invoice_items[this.state.current]['sold_from']){\n            sold_from = this.state.update.invoice_items[this.state.current]['sold_from']\n        }else {\n            sold_from = data['placements'][0]['placed_on']\n        }\n        var temp=[];\n        var p ;\n        for (p in data['placements']){\n            if (sold_from === data['placements'][p]['placed_on']){\n                var string  = data['placements'][p]['purchase_item_details']['purchase_price'] + \"/-  \" + data['placements'][p]['purchase_item_details']['quantity'] + \" \" + data['placements'][p]['purchase_item_details']['vendor'] \n                temp.push({\n                    'id': data['placements'][p]['purchase_item'],\n                    'str':string\n                })\n            }\n            \n        }\n        this.setState({\n            ...this.state,\n            'stock_selection': temp\n        })\n    }  \n    \n\n    async onChangePlace(e){\n        await this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice_items':{\n                    ...this.state.update.invoice_items,\n                    [this.state.current] : {\n                        ...this.state.update.invoice_items[this.state.current],\n                        [e.target.name] : [e.target.value][0]\n                    },\n                }\n            }\n        })\n        var temp=[],p;\n                for (p in this.state.sold_from_selection){\n                    if ( parseInt( this.state.update.invoice_items[this.state.current]['sold_from']) ===parseInt( this.state.sold_from_selection[p]['placed_on'])){\n                        var string  = this.state.sold_from_selection[p]['purchase_item_details']['purchase_price'] + \"/-  \" + this.state.sold_from_selection[p]['purchase_item_details']['quantity'] + \" \" + this.state.sold_from_selection[p]['purchase_item_details']['vendor'] \n                        temp.push({\n                            'id': this.state.sold_from_selection[p]['purchase_item'],\n                            'str':string\n                        })\n                    }\n                }\n                this.setState({\n                    ...this.state,\n                    'stock_selection': temp\n                }) \n    }\n\n    searchCustomer(e){\n        if ((e.target.value).length > 2 ){\n            var request_json = {\n                'action':'get',\n                'start':0,\n                'end':10,\n                'filter':'name',\n                'name':(e.target.value)\n            }\n            this.getCustomerData(request_json)\n        }\n    }\n    \n    invoiceHandler(date){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice':{\n                    ...this.state.update.invoice,\n                    'invoiced_on' : date\n                }\n            }\n        })\n    }\n    \n    dueOnHandler(date){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice':{\n                    ...this.state.update.invoice,\n                    'due_on' : date\n                }\n            }\n        })\n    }\n\n    updateInvoice(){\n        var request_json = {\n            ...this.state.update.invoice,\n            'action':'edit',\n            'invoice_id':this.state.update.invoice.id\n        }\n        updateInvoice(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                Swal.fire(\"Invoice Details Has Been Updated.\")\n                this.props.update(0)\n            }\n            else{\n                Swal.fire({\n                    icon:'error',\n                    title:data['error']\n                })            }\n        })\n    }\n\n    onChangePI(e){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice_items':{\n                    ...this.state.update.invoice_items,\n                    [this.state.current] : {\n                        ...this.state.update.invoice_items[this.state.current],\n                        [e.target.name] : [e.target.value][0]\n                    },\n                }\n            }\n        })\n    }\n\n    postInvoiceItem(is_new=false){\n        var request_json\n        if (is_new){\n            request_json = {\n                'action':'add',\n                'invoice':this.state.update.invoice.id,\n                ...this.state.update.invoice_items[this.state.current],\n            }\n            request_json['applied_tax'] = []\n            request_json['applied_discount'] = []\n            createInvoiceItem(JSON.stringify(request_json)).then(data => {\n                if (data['status']){\n                    Swal.fire(\"Invoice Item Has Been Added.\")\n                    this.refreshTable()\n                }\n                else{\n                    Swal.fire({\n                        icon:'error',\n                        title:data['error']\n                    })                   }\n            })\n            return\n        }\n        request_json = {\n            'action':'edit',\n            'invoice':this.state.update.invoice.id,\n            'invoice_item_id':this.state.update.invoice_items[this.state.current].id,\n            ...this.state.update.invoice_items[this.state.current]\n        }\n        request_json['applied_tax'] = []\n        request_json['applied_discount'] = []\n        updateInvoiceItem(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                Swal.fire(\"Invoice Item Details Has Been Updated.\")\n                this.refreshTable()\n            }\n            else{\n                Swal.fire({\n                    icon:'error',\n                    title:data['error']\n                })               }\n        })\n    }\n\n    deleteInvoiceItem(){\n        var request_json = {\n            invoice_items_id : [this.state.update.invoice_items[this.state.current].id]\n        }\n        \n    Swal.fire({\n        title: 'Are you sure?',\n        text: \"You won't be able to revert this!\",\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Yes, delete it!'\n      }).then((result) => {\n        deleteInvoiceItems(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                Swal.fire(\"Invoice Item Has Beed Deleted.\")\n                this.refreshTable()\n            }\n            else{\n                Swal.fire({\n                    icon:'error',\n                    title:data['error']\n                })               }\n        })\n    })\n    }\n\n    addInvoiceItem(){\n        var current =0;\n        var item,p_list=[];\n        for (item in this.state.update.invoice_items){\n            if (item.id){\n                if (item.id !== \"Fake Key\"){\n                    current = current + 1\n                    p_list.push(item)\n                }\n            }\n        }\n        this.setState({\n            'current':current,\n            'new':true,\n            'popUp':true,\n            'update':{\n                ...this.state.update,\n                'invoice_items':[\n                    ...p_list,\n                    {\n                        'item_name':\"None\",\n                        'discount_type':'percentage',\n                        'status':'incomplete',\n                        'discount':[],\n                        'taxes':[],\n                        'applied_tax':[],\n                        'applied_discount':[],\n                        'purchase_item':'',\n                    }\n                ]\n            }\n        })\n    }\n    columns = [\n        {\n            id:1,\n            name:\"Item Name\",\n            prop: 'item_name'\n        },\n        {\n            id:2,\n            name:\"Quantity\",\n            prop: 'quantity'\n        },\n        {\n            id:8,\n            name:\"Price\",\n            prop: 'price'\n        },\n        {\n            id:3,\n            name:\"Sold From\",\n            prop: 'sold_from_name'\n        },\n        {\n            id:4,\n            name:\"Tax Total\",\n            prop: 'tax_total'\n        },\n        ,\n        {\n            id:5,\n            name:\"Disount Amount\",\n            prop: 'discount_amount'\n        },   \n        {\n            id:6,\n            name:\"Sub Total\",\n            prop: 'sub_total'\n        },\n        {\n            id:7,\n            name:\"Total\",\n            prop: 'total'\n        }\n    ]\n\n    searchItem(e){\n        if ((e.target.value).length > 2 ){\n            var request_json = {\n                'action':'get',\n                'start':0,\n                'end':10,\n                'filter':'name',\n                'name':(e.target.value)\n            }\n            this.getItemData(request_json)\n        }\n    }\n\n    async getItemData(request_json){\n        await getItems(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    ...this.state,\n                    'item_selection':data['items'],\n                })\n            }  \n            \n            else{\n                Swal.fire({\n                    icon:'error',\n                    title:data['error']\n                })            }\n        })\n    }\n    selectItem(id, name){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice_items':{\n                    ...this.state.update.invoice_items,\n                    [this.state.current] : {\n                        ...this.state.update.invoice_items[this.state.current],\n                        'item_name' : name,\n                        'item':id\n                    },\n                }\n            }\n        })\n        var request_json = {\n            'action':'get',\n            'filter':'item',\n            'item_id':id\n        }\n        this.getPlacesData(request_json)\n    }\n\n    async refreshTable(){\n        var id = this.state.update.invoice.id;\n        var items= [];\n        const request_json = {\n            'action':'get',\n            'invoice_id':id\n        }\n        await getInvoice(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                items = data['invoice_items']\n            }\n            \n            else{\n                Swal.fire({\n                    icon:'error',\n                    title:data['error']\n                })            }\n        })\n        if (items.length === 0){\n            items = [{\n                'id':\"Fake Key\",\n                'item_name': ''\n            }]\n        }\n        await this.setState({\n            ...this.state,\n            'popUp':false,\n            'update':{\n                ...this.state.update,\n                'invoice_items':items\n            }\n        })\n    }\n\n\n    stateman(){\n    }\n\n\n    discount_columns =[\n        {\n            'id':1,\n            'name':'Name',\n            'prop':'name'\n        },{\n            'id':2,\n            'name':'Rate',\n            'prop':'rate'\n        },{\n            'id':3,\n            'name':'Code',\n            'prop':'code'\n        },{\n            'id':4,\n            'name':'Type',\n            'prop':'discount_type'\n        },{\n            'id':5,\n            'name':'Remove',\n            'prop':'removeButton'\n        },\n    ]\n\n    tax_columns =[\n        {\n            'id':1,\n            'name':'Name',\n            'prop':'name'\n        },{\n            'id':2,\n            'name':'Rate',\n            'prop':'rate'\n        },{\n            'id':3,\n            'name':'Code',\n            'prop':'code'\n        },{\n            'id':4,\n            'name':'Type',\n            'prop':'tax_type'\n        },{\n            'id':5,\n            'name':'Remove',\n            'prop':'removeButton'\n        },\n    ]\n\n    \n    add_discount_columns =[\n        {\n            'id':1,\n            'name':'Name',\n            'prop':'name'\n        },{\n            'id':2,\n            'name':'Rate',\n            'prop':'rate'\n        },{\n            'id':3,\n            'name':'Code',\n            'prop':'code'\n        },{\n            'id':4,\n            'name':'Type',\n            'prop':'discount_type'\n        }\n    ]\n\n    add_tax_columns =[\n        {\n            'id':1,\n            'name':'Name',\n            'prop':'name'\n        },{\n            'id':2,\n            'name':'Rate',\n            'prop':'rate'\n        },{\n            'id':3,\n            'name':'Code',\n            'prop':'code'\n        },{\n            'id':4,\n            'name':'Type',\n            'prop':'tax_type'\n        }\n    ]\n\n    async update_table (by,dis) {\n        var x = by<0?-1:1\n        if (dis){\n            if (by===0){\n                await this.setState({\n                    'discoount_loaded':false,\n                    discount_start: 0,\n                    discount_end: 10,\n                    discount_page:1\n                })\n            }\n            else{\n                if (this.state.discount_start+by>-1){\n                    await this.setState({\n                        'discount_loaded':false,\n                        discount_start: this.state.discount_start+by,\n                        discount_end: this.state.discount_end+by,\n                        discount_page:this.state.discount_page+x\n                    })\n                }\n                else{\n                    alert(\"Cannot move futher from here.\")\n                    return\n                }\n            }\n            var  request_json = {\n                'action':'get',\n                'filter':'none',\n                'start':this.state.discount_start,\n                'end':this.state.discount_end\n            }\n            this.getDiscountsData(request_json)\n        }\n    else { \n        if (by===0){\n            await this.setState({\n                'tax_loaded':false,\n                tax_start: 0,\n                tax_end: 10,\n                tax_page:1\n            })\n        }\n        else{\n            if (this.state.tax_start+by>-1){\n                await this.setState({\n                    'tax_loaded':false,\n                    tax_start: this.state.tax_start+by,\n                    tax_end: this.state.tax_end+by,\n                    tax_page:this.state.tax_page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.tax_start,\n            'end':this.state.tax_end\n        }\n        this.getTaxesData(request_json)\n\n    }\n    }\n    \n    async getDiscountsData (request_json) {\n        await getDiscounts(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'discount_selection':data['discounts'],\n                    'discount_loaded':true\n                })\n            }\n            else{\n                Swal.fire({\n                    icon:'error',\n                    title:data['error']\n                })            }\n        })\n    }\n    async getTaxesData (request_json) {\n        await getTaxes(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'tax_selection':data['taxes'],\n                    'tax_loaded':true\n                })\n            }  \n        })\n    }\n \n    addEntryDiscount(id){\n        var dis;\n        var temp,temp2;\n        for (dis in this.state.discount_selection){\n            if (this.state.discount_selection[dis].id === id){\n                temp = this.state.update.invoice_items[this.state.current]['applied_discount']\n                var x = this.state.discount_selection[dis]\n                temp.push(x)\n                temp2 = this.state.update.invoice_items[this.state.current]['discount']\n                temp2.push(id)\n                this.setState({\n                    ...this.state,\n                    update:{\n                        ...this.state.update,\n                        'invoice_items':{\n                            ...this.state.update.invoice_items,\n                            [this.state.current] : {\n                                ...this.state.update.invoice_items[this.state.current],\n                                'discount':temp2,\n                                'applied_discount': temp\n                            }\n                        }\n                    }\n                })\n            }\n        }\n    }\n\n    addEntryTax(id){\n        var dis;\n        for (dis in this.state.tax_selection){\n            if (this.state.tax_selection[dis].id === id){\n                var temp = this.state.update.invoice_items[this.state.current]['applied_tax']\n                var x = this.state.tax_selection[dis]\n                temp.push(x)\n                var temp2 = this.state.update.invoice_items[this.state.current]['taxes']\n                temp2.push(id)\n                this.setState({\n                    ...this.state,\n                    update:{\n                        ...this.state.update,\n                        'invoice_items':{\n                            ...this.state.update.invoice_items,\n                            [this.state.current] : {\n                                ...this.state.update.invoice_items[this.state.current],\n                                'tax':temp2,\n                                'applied_tax': temp\n                            }\n                        }\n                    }\n                })\n            }\n        }\n    }\n\n\n    render() {\n        const item_selection = this.state.item_selection\n        const itemPopUp = <Popup trigger={ <Button variant=\"contained\" color=\"primary\" size='small'>Select Item</Button>} closeOnDocumentClick>\n        <div>\n            <input placeholder=\"Item Name\" id='item_search_box' name='item_serach_box' onChange={this.searchItem}></input>\n            <div className={style.dropdown_content} id='item_dropdown'>\n                    {item_selection.map(\n                        item => (\n                        <a key={item.id} onClick={() => {this.selectItem(item.id, item.name)}} >{item.name} {item.sales_price}</a>\n                        )\n                    )}\n            </div>\n        </div>\n        </Popup>\n\n        var places = this.state.place_selection\n        const selectPlace =<select name='sold_from' id=\"sold_from\" onChange={this.onChangePlace} value={this.state.update.invoice_items[this.state.current].sold_from}  >\n            <option key=\"Fake Key\" value='Fake Value'>Select Place</option>\n                {places.map(\n                    x => (\n                    <option key={x.id} value={x.id}>{x.str_placed_on}</option>\n                    )\n                )}\n            </select>\n\n            \n        var stocks  = this.state.stock_selection\n        var stockValue = this.state.update.invoice_items[this.state.current].purchase_item ? this.state.update.invoice_items[this.state.current].purchase_item : ''\n        const selectStock = <select name='purchase_item' id=\"purchase_item\" onChange={this.onChangePI} value={stockValue} >\n                <option key='Fake Key' value=\"Fake Value\">Select Stock</option>\n                {stocks.map(\n                    x => (\n                    <option key={x.id} value={parseInt(x.id)}>{x.str}</option>\n                    )\n                )}\n            </select>\n        const addPopupDiscount = <div>\n\n            <h3> Click To Apply New Discount</h3>\n            <Grid container justify='center'>\n                <Grid item xm={12} md={12}>\n            <List data={this.state.discount_selection} header={this.add_discount_columns} page={false} popUp={this.addEntryDiscount} />\n            </Grid>\n            <Grid item xm={12} md={3}>\n            <IconButton onClick={()=> {this.update_table(-5,true)}}><NavigateBeforeIcon /></IconButton><span>      {this.state.discount_page}       </span><IconButton  onClick={()=> {this.update_table(5,true)}} ><NavigateNextIcon /></IconButton>\n            </Grid>\n                            \n            </Grid>\n                            </div>\n        \n        const addPopupTax = <div>\n            <h3>Click To Apply New Tax </h3>\n            <Grid container justify='center'>\n                <Grid item xm={12} md={12}>\n            <List data={this.state.tax_selection} header={this.add_tax_columns} page={false} popUp={this.addEntryTax} />\n            </Grid>\n            <Grid item xm={12} md={3}>\n            <IconButton onClick={()=> {this.update_table(-5,false)}}><NavigateBeforeIcon /></IconButton><span>      {this.state.discount_page}       </span><IconButton  onClick={()=> {this.update_table(5,false)}} ><NavigateNextIcon /></IconButton>\n            </Grid>\n                            \n            </Grid>\n            </div>\n        \n\n        var dis;\n        const discounts =this.state.update.invoice_items[this.state.current].applied_discount\n        for (dis in discounts){\n            discounts[dis] = {\n                ...discounts[dis],\n                'removeButton':<button onClick={() => {this.removeEntry(dis,true)}}> Remove </button>\n            }\n        }\n        \n        const taxes = this.state.update.invoice_items[this.state.current].applied_tax\n        for (dis in taxes){\n            taxes[dis] = {\n                ...taxes[dis],\n                'removeButton':<button onClick={()=>{this.removeEntry(dis,false)}}> Remove </button>\n            }\n        }\n        const popUpItem = <div>\n            <Grid container justify='center'>\n                <Grid item md={'auto'}>\n\n            <Table cellSpacing={10} cellPadding={10} responsive=\"sm\" >\n                <tbody>\n\n               \n                <tr>\n                    <td>\n                    <Button  variant=\"contained\" color=\"secondary\" onClick={() => {this.refreshTable()}} >Back</Button>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                    <h3>Item :  {this.state.update.invoice_items[this.state.current].item_name}</h3>\n                    </td>\n                    <td>\n                    {itemPopUp}\n                    </td>\n                </tr>\n                <tr>\n                    <th colSpan={2} >\n                        <b>Sold From </b>\n                    </th>\n                </tr>\n\n                <tr>\n                    <td>\n                        Place: \n                    </td>\n                    <td>\n                    {this.state.update.invoice_items[this.state.current].item ? selectPlace : \"Select An Item First\" }\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                    Stock :\n                    </td>\n                    <td>\n                    {this.state.update.invoice_items[this.state.current].item ? selectStock : \"Select An Item First\" }\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                    Quantity : <input name=\"quantity\" placeholder={this.state.update.invoice_items[this.state.current].quantity} type=\"number\" onChange={this.onChangePI} required min='1' ></input><br></br>\n                \n                    </td>\n                    <td>\n                    Price : <input name=\"price\" placeholder={this.state.update.invoice_items[this.state.current].price} type=\"number\" onChange={this.onChangePI} required></input><br></br>\n                \n                    </td>\n                    </tr>\n                    <tr>\n                    <td>\n                    Tax Total : {this.state.update.invoice_items[this.state.current].tax_total} <br></br>\n                    </td>\n                    <td>\n                    Sub Total : {this.state.update.invoice_items[this.state.current].sub_total} <br></br>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                    Discount Amount : {this.state.update.invoice_items[this.state.current].discount_amount}<br></br>\n                    </td>\n                    <td>\n                    Total without discount : {this.state.update.invoice_items[this.state.current].total_without_discount}<br></br>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                    Total : {this.state.update.invoice_items[this.state.current].total}<br></br>\n                    </td>\n                </tr>\n                <tr>\n                    \n                <td>\n                    Applied Discounts \n                    </td>\n                    <th>\n                    <Button onClick={() =>{this.update_table(0, true)}}  variant=\"contained\" color=\"secondary\" size='small'>Apply New Discount</Button>\n                    </th>\n                </tr>\n                <tr>\n                    <td colSpan={3} >\n                    <List data={discounts} header={this.discount_columns} page={false} popUp={this.popUpTemp} removeEntry={this.removeEntry} />\n                    </td>\n                </tr>\n                <tr>\n                    <td colSpan={3}>\n                {this.state.discount_loaded ? addPopupDiscount : <span></span>}\n                </td>\n                </tr>\n            <tr>\n                <td>\n                    Applied Taxes \n                </td>\n                <td>\n                <Button variant=\"contained\" color=\"secondary\" size='small' onClick={() => {this.update_table(0, false)}}>Apply New Tax</Button>\n                </td>\n            </tr>\n                <tr>\n                    <td colSpan={3}>\n                    <List data={taxes} header={this.tax_columns} page={false} popUp={this.popUpTemp} removeEntry={this.removeEntry} />\n                    </td>\n                </tr>\n                <tr>\n                    <td colSpan={3}>\n                    {this.state.tax_loaded ? addPopupTax : <span></span>}<br></br>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                    {this.state.new ? <Button variant=\"contained\" color=\"primary\" size='small' onClick={() => {this.postInvoiceItem(true)}} >Add</Button> : <Button  variant=\"contained\" color=\"primary\" size='small' onClick={() => {this.postInvoiceItem()}} >Update</Button>}\n                    </td>\n                    <td>\n                    <Button  variant=\"contained\" color=\"secondary\" size='small' onClick={() => {this.deleteInvoiceItem()}} >Delete</Button>\n                    </td>\n                </tr>\n                </tbody>\n            </Table>\n            \n            </Grid>\n            </Grid>\n            </div>\n\n        const customer_selection = this.state.customer_selection\n        const customerPopup = <Popup trigger={<Button variant=\"contained\" color=\"primary\">Change Customer</Button>} closeOnDocumentClick>\n        <div>\n            <input placeholder=\"Customer's first name\" id='customer_serach_box' name='customer_serach_box' onChange={this.searchCustomer}></input>\n            <div className={style.dropdown_content} id='customer_dropdown'>\n                    {customer_selection.map(\n                        customer => (\n                            <a href=\"#\" key={customer.id} onClick={() => {this.selectCustomer(customer.id, customer.name)}} >{customer.name}</a>\n                        )\n                    )}\n            </div>\n        </div>\n        </Popup>\n        const status = this.state.status\n        return (\n            <div>\n                \n            <Grid container justify='center' alignContent='center' alignItems='center' spaceing={6}>\n                <Grid item xm={12} >\n                    <h2>{this.state.update.invoice.customer_name}</h2>\n                </Grid>\n            </Grid>\n\n            <Grid container justify='center' >\n                <Grid item xm={8}>\n                    <Table  cellPadding='10' cellSpacing='10' >\n                        <tbody>\n                        <tr>\n                        <td>\n                                <TextField\n                                defaultValue={this.state.update.invoice.added_by_name}\n                                InputProps={{\n                                    readOnly: true,\n                                }}\n                                label='Added By'\n                                variant=\"outlined\"\n                                />\n                                </td>\n                        <td> <TextField\n                                defaultValue={this.state.update.invoice.customer_name}\n                                InputProps={{\n                                    readOnly: true,\n                                }}\n                                label='Customer'\n                                variant=\"outlined\"\n                                \n                                />\n                         </td>\n                        </tr>\n                        <tr>\n                            <td></td><td>{customerPopup}</td>\n                        </tr>\n                        <tr>\n                            <td colSpan=\"2\">\n                            <TextField\n                                defaultValue= {this.state.update.invoice.order_number}\n                                InputProps={{\n                                    readOnly: true,\n                                }}\n                                fullWidth\n                                label='Order Number'\n                                variant=\"outlined\"\n                                />\n                        </td>\n                        </tr>\n\n                        <tr>\n                            <td>\n                            <TextField\n                                defaultValue= {this.state.update.invoice.total_amount}\n                                InputProps={{\n                                    readOnly: true,\n                                }}\n                                \n                                label='Total Amount'\n                                variant=\"outlined\"\n                                />\n                            </td>\n                            <td>\n                            <TextField\n                                defaultValue= {this.state.update.invoice.tax_total}\n                                InputProps={{\n                                    readOnly: true,\n                                }}\n                                \n                                label='Tax Total'\n                                variant=\"outlined\"\n                                />\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                            <TextField\n                                defaultValue={this.state.update.invoice.discount_total}\n                                InputProps={{\n                                    readOnly: true,\n                                }}\n                                \n                                label='Discount Total'\n                                variant=\"outlined\"\n                                />\n                            </td>\n                            <td>\n                            <TextField\n                                defaultValue= {this.state.update.invoice.paid_amount}\n                                InputProps={{\n                                    readOnly: true,\n                                }}\n                                \n                                label='Paid Amount'\n                                variant=\"outlined\"\n                                />\n                            </td>\n                        </tr>\n\n                        <tr>\n                            <td>\n                            <TextField variant=\"outlined\" value={this.state.update.invoice.additional_discount} name='additional_discount' onChange={this.onChange} type='float' label='Additional Discount'></TextField>\n                            </td>\n                        </tr>\n                        \n                        <tr>\n                            <td>\n                            <b>Invoiced On : </b><br></br>\n                                <DatePicker\n                                name='invoiced_on'\n                                selected={this.state.update.invoice.invoiced_on}\n                                onChange={this.invoiceHandler}\n                                />\n                            </td>\n                            <td>\n                            <b>Due On : </b> <br></br>\n                            <DatePicker\n                            name='completed_on'\n                            selected={this.state.update.invoice.due_on}\n                            onChange={this.dueOnHandler}\n                            />\n                            </td>\n                        </tr>\n                        <tr>\n                    \n                            <td >\n                            <b>Status : </b> \n                                    <Select label='Status' fullWidth name='status' id=\"status\" onChange={this.onChange} value={this.state.update.invoice.status}>\n                                        {status.map(\n                                            x=>(\n                                            <MenuItem key={x.id} value={parseInt(x.id)}>{x.name}</MenuItem>\n                                            )\n                                        )}\n                                    </Select>\n                            </td>\n                        </tr>\n                            <tr>\n                                <td>\n                                <Button variant=\"contained\" color=\"primary\" onClick={() => {this.updateInvoice()}}>Update Invoice</Button>\n                                </td>\n                                <td>\n                                <Button variant=\"contained\" color=\"secondary\"  onClick={() => {this.props.delete(this.props.invoice.id)}}>Delete</Button>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </Table>\n                </Grid>\n                </Grid>\n                <Grid container justify='center'>\n                    <Grid item xs={8} >\n                    <h3>Items</h3> <Button variant=\"contained\" color=\"secondary\"  onClick={() => {this.addInvoiceItem()}}>Add New Items</Button>\n                    {this.state.popUp ? popUpItem :<List data={this.state.update.invoice_items} header={this.columns} page={false} popUp={this.popUp} />}\n                    </Grid>\n                </Grid>\n            </div>\n        )\n    }\n}\nexport default PopUpEdit","import React, { Component } from 'react'\nimport List from '../list';\nimport { getInvoice, deleteInvoices, updateInvoice } from '../../api/sales/invoice';\nimport PopUpEdit from './popUpEdit';\nimport Swal from 'sweetalert2'\n\nclass InvoiceListing extends Component {\n    \n    constructor(props){\n        super(props)\n        this.popUp = this.popUp.bind(this)\n        this.state = {\n            'popUp':false,\n            'invoices':{},\n            'invoice_items':[],\n            'update':{}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.invoiceDelete = this.invoiceDelete.bind(this)\n    }\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value]\n            }\n        })\n    }\n\n    \n    async onSubmit(e){\n        e.preventDefault();\n            var data = this.state.vendor\n            var ele;\n            for (ele in this.state.update){\n                data[ele] = this.state.update[ele][0]\n            }\n            data = {...data, 'action':'edit'}\n            updateInvoice(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        Swal.fire(\"Vendor Data updated.\")\n                        this.props.update(0)\n                    }\n                    else{\n                        Swal.fire({\n                            icon:'error',\n                            title:data['error']\n                        })\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    invoiceDelete(id){\n        var data = {\n            'invoices_id':[\n                id\n            ]\n        }\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to revert this!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, delete it!'\n          }).then((result) => {\n              if (result['value'] == true){\n        deleteInvoices(JSON.stringify(data)).then(data=>{\n            try {\n                if (data['status']){\n                    Swal.fire('Invoice has been Deleted.')\n                    this.props.update(0)\n                }   else{\n                    Swal.fire({\n                        icon:'error',\n                        title:data['error']\n                    })\n                }\n            }catch(e){\n                console.log(e)\n            }\n        })\n    }\n    })\n}\n    \n    async popUp(id, uuid=0){\n        const data = {\n            'action':'get',\n            'invoice_id':id,\n        }\n        var data_main;\n        await getInvoice(JSON.stringify(data)).then(data => {\n            if (data['status']){\n                console.log(data)\n                data_main=data\n            }\n            else{\n                Swal.fire({\n                    icon:'error',\n                    title:data['error']\n                })\n            }\n        })\n        if (data_main['invoice_items'].length === 0) {\n            console.log(\"blank\")\n            data_main['invoice_items'] = [{\n                id:0\n            }]\n        }\n        await this.setState({\n            'popUp':true,\n            'invoice':data_main['invoice'][0],\n            'invoice_items':data_main['invoice_items']\n        })\n    }\n\n\n    columns = [\n        {\n            id:1,\n            name:\"Customer's Name\",\n            prop: 'customer_name'\n        },\n        {\n            id:2,\n            name:\"Sold By\",\n            prop: 'added_by_name'\n        },\n        {\n            id:3,\n            name:\"Paid Amount\",\n            prop: 'paid_amount'\n        },\n        {\n            id:4,\n            name:\"Order Number\",\n            prop: 'order_number'\n        },\n        {\n            id:5,\n            name:'Invoiced On',\n            prop:'invoiced_on_str'\n        },\n        {\n            id:6,\n            name:'Status',\n            prop:'status_name'\n        }\n    ]\n    \n\n    render() {\n        const list = <List data={this.props.data} header={this.columns}   popUp={this.popUp} update={this.props.update} page={this.props.page} />\n        const popUpRender = <PopUpEdit invoice={this.state.invoice} invoice_items={this.state.invoice_items} update={this.props.update} delete={this.invoiceDelete} ></PopUpEdit>\n        return (\n            <div>\n                {this.state.popUp ? popUpRender : list}\n            </div>\n        )\n    }\n}\n\nexport default InvoiceListing\n","import React, { Component } from 'react'\nimport {getInvoices} from '../../api/sales/invoice';\nimport {  connect } from 'react-redux';\nimport  InvoiceListing  from './invoiceListing';\nimport { Link} from 'react-router-dom';\n\n\nimport Button from '@material-ui/core/Button';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/styles';\nimport PropTypes from 'prop-types';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport LoadingIcon from '../loading';\n\nimport Swal from 'sweetalert2'\n\n\n\nconst styles = makeStyles((theme) => ({\n    root: {\n    flexGrow: 12,\n    },\n    paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    },\n}));\n\n\nclass Invoices extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            'invoices':[],\n            'loaded':false,\n            'start':0,\n            'end':10,\n            'page':1\n        }\n        this.update_table = this.update_table.bind(this)\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n        this.update_table(0)\n    }\n\n    async update_table (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                'loaded':false,\n                start: 0,\n                end: 10,\n                page:1\n            })\n        }\n        else{\n            if (this.state.start+by>-1){\n                await this.setState({\n                    'loaded':false,\n                    start: this.state.start+by,\n                    end: this.state.end+by,\n                    page:this.state.page+x\n                })\n            }\n            else{\n                Swal.fire({\n                    icon:'error',\n                    title:'cannot go any further'\n                })\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.start,\n            'end':this.state.end\n        }\n        this.getInvoiceData(request_json)\n    }\n    \n    async getInvoiceData (request_json) {\n        var invoice\n        await getInvoices(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                for (invoice in data['invoices']){\n                    data['invoices'][invoice]['invoiced_on_str']=(data['invoices'][invoice]['invoiced_on']).split('T')[0]\n                    data['invoices'][invoice]['due_on_str']=(data['invoices'][invoice]['due_on']).split('T')[0]\n                }\n                this.setState({\n                    'invoices':data['invoices'],\n                    'loaded':true\n                })\n            }\n            else{\n                Swal.fire(data['error'])\n            }  \n        })\n    }\n\n \n\nrender() {\n    const { classes } = this.props;\n\n    const render_after_load = (\n        <div>\n            <InvoiceListing data={this.state.invoices} update={this.update_table} page={this.state.page} />\n        </div>\n    )\n\n    return(\n        <div className={classes.root}>\n        <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n            <Grid item xs={3} >\n            <Button variant=\"contained\" color=\"primary\" onClick={() => {this.update_table(0)}}>\n              <RefreshIcon/>&nbsp;&nbsp;&nbsp;Refresh Table\n              </Button>\n            </Grid>\n            <Grid item xs={5}>\n  \n            </Grid>\n              <Grid item xs={3}>\n              <Link to='/invoices/create' style={{ textDecoration: 'none' }}>\n              <Button variant=\"contained\" color=\"secondary\">\n              <AddCircleIcon/>&nbsp;&nbsp;&nbsp;Add New Invoice\n              </Button>\n              </Link>\n              </Grid>\n  \n          <Grid item xs={12}>\n            <Paper className={classes.paper}>\n            {this.state.loaded ? render_after_load : <LoadingIcon></LoadingIcon>}\n            </Paper>\n          </Grid>\n          \n        </Grid>\n      </div>\n    )\n}\n}\n\n\nInvoices.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n\nconst mapStateToProps = state => ({\n    user: state.user,\n})\nexport default withStyles(styles)(connect(mapStateToProps)(Invoices))\n","import React, { Component } from 'react'\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport List from '../list';\nimport Popup from \"reactjs-popup\";\nimport style from '../purchaseOrder/css/popUp.module.css';\nimport {getCustomers} from '../../api/sales/customer';\nimport {createInvoice,  getInvoice, getInvoiceStatus} from '../../api/sales/invoice';\nimport {updateInvoiceItem, deleteInvoiceItems, createInvoiceItem} from '../../api/sales/invoiceItem'\nimport {getItems} from '../../api/inventory/itemApi';\nimport {getPlaces} from '../../api/inventory/placeApi';\nimport { getDiscounts, getTaxes } from '../../api/misc'\nimport { Grid, Button, TextField } from '@material-ui/core';\nimport Swal from 'sweetalert2';\n\n\nclass InvoiceCreation extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            'tax_start':0,\n            'tax_end':5,\n            'discount_start':0,\n            'discount_end':5,\n            'tax_loaded':false,\n            'discount_loaded':false,\n            'discount_page':[],\n            'tax_page':[],\n            'discount_selection':[],\n            'tax_selection':[],\n            'place_selection':[],\n            'stock_selection':[],\n            'sold_from_selection':[],\n            'popUp':false,\n            'new':false,\n            'current':0,\n            'status':[],\n            'customer_selection':[\n                {\n                    'id':0,\n                    'name':'None'\n                }\n            ],\n            'item_selection':[\n                {\n                    'id':0,\n                    'name':\"None\"\n                }\n            ],\n            update : {\n                'invoice':{\n                    'customer_name':'',\n                    'invoiced_on': new Date(),\n                    'due_on': new Date()\n                },\n                'invoice_items':[[{\n                    'id':'Fake Key',\n                    'discount':[],\n                    'applied_discount':[],\n                    'tax':[],\n                    'applied_tax':[]\n                }]]\n            }\n        }\n        this.update_table = this.update_table.bind(this)\n        this.stateman = this.stateman.bind(this)\n        this.refreshTable = this.refreshTable.bind(this)\n        this.getItemData = this.getItemData.bind(this)\n        this.selectItem = this.selectItem.bind(this)\n        this.searchItem = this.searchItem.bind(this)\n        this.addInvoiceItem = this.addInvoiceItem.bind(this)\n        this.invoiceHandler = this.invoiceHandler.bind(this)\n        this.dueOnHandler = this.dueOnHandler.bind(this)\n        this.getCustomerData = this.getCustomerData.bind(this)\n        this.converter = this.converter.bind(this)\n        this.popUp = this.popUp.bind(this)\n        this.searchCustomer = this.searchCustomer.bind(this)\n        this.selectCustomer = this.selectCustomer.bind(this)\n        this.onChange = this.onChange.bind(this)\n        this.updateInvoice = this.updateInvoice.bind(this)\n        this.onChangePI = this.onChangePI.bind(this)\n        this.postInvoiceItem = this.postInvoiceItem.bind(this)\n        this.deleteInvoiceItem = this.deleteInvoiceItem.bind(this)\n        this.onChangePlace = this.onChangePlace.bind(this)\n        this.removeEntry = this.removeEntry.bind(this)\n        this.addEntryDiscount = this.addEntryDiscount.bind(this)\n        this.addEntryTax = this.addEntryTax.bind(this)\n    }\n\n    removeEntry(id, dis){\n        var temp,temp2\n        if (dis){\n             temp = this.state.update.invoice_items[this.state.current].applied_discount\n            temp.pop(dis)\n             temp2 = this.state.update.invoice_items[this.state.current].discount\n            temp2.pop(temp.id)\n            this.setState({\n                ...this.state,\n                'update':{\n                    ...this.state.update,\n                    invoice_items:{\n                        ...this.state.update.invoice_items,\n                        [dis]:{\n                            'applied_discount':temp,\n                            'discount':temp2\n                        }\n                    }\n                }\n            })\n        }\n        else {\n            \n                 temp = this.state.update.invoice_items[this.state.current].applied_tax\n                temp.pop(dis)\n                 temp2 = this.state.update.invoice_items[this.state.current].taxes\n                temp2.pop(temp.id)\n                this.setState({\n                    ...this.state,\n                    'update':{\n                        ...this.state.update,\n                        invoice_items:{\n                            ...this.state.update.invoice_items,\n                            [dis]:{\n                                'applied_tax':temp,\n                                'taxes':temp2\n                            }\n                        }\n                    }\n                })\n            \n        }\n    }\n\n    async componentDidMount(){\n        var request_json = {\n            'action':'get',\n        }\n        await getInvoiceStatus(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    ...this.state,\n                    'status':data.data\n                })\n            }\n            else{\n                Swal.fire(data['error'])\n            }\n        })\n    }\n\n    async getCustomerData (request_json) {\n        await getCustomers(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'customer_selection':data['customers'],\n                })\n            } \n            \n            else{\n                Swal.fire(data['error'])\n            } \n        })\n    }\n\n    selectCustomer(id,name){\n        console.log(id,name)\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice':{\n                    ...this.state.update.invoice,\n                    'customer':id,\n                    'customer_name':name\n                }\n            }\n        })\n    }\n\n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice':{\n                    ...this.state.update.invoice,\n                    [e.target.name] : [e.target.value][0]\n                }\n            }\n        })\n    }\n\n    converter(date){\n        return ( new Date(Date.parse(date)))\n    }\n\n    popUp(id){\n        var key\n        for (key in this.state.update.invoice_items){\n            if (this.state.update.invoice_items[key].id === id){\n                this.setState({\n                    ...this.state,\n                    'current':key,\n                    'popUp':true\n                }) \n                break;       \n            }\n        }\n        var request_json = {\n            'action':'get',\n            'filter':'item',\n            'item_id':this.state.update.invoice_items[key].item  \n        }\n        this.getPlacesData(request_json)\n    }\n\n    async getPlacesData(request_json) {\n        await getPlaces(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'sold_from_selection':data['placements'],\n                })\n                var temp = [], key, x;\n                for(key in data['placements']){\n                    x = {'id': data['placements'][key]['placed_on'], 'str_placed_on':data['placements'][key]['str_placed_on']}\n                    temp[data['placements'][key]['placed_on']] = x\n                    }\n                temp = temp.filter(function (el) {\n                    return el != null;\n                });\n                this.setState({\n                    'place_selection':temp\n                })\n                this.update_stock(data)\n            }\n        })\n\n    }\n\n    // data = sold_From_selection\n    update_stock(data){\n        console.log('data',data)\n        var sold_from\n        if (this.state.update.invoice_items[this.state.current]['sold_from']){\n            sold_from = this.state.update.invoice_items[this.state.current]['sold_from']\n        }else {\n            sold_from = data['placements'][0]['placed_on']\n            console.log('default',sold_from)\n        }\n        var temp=[];\n        var p ;\n        for (p in data['placements']){\n            console.log(sold_from, \"  \", data['placements'][p]['placed_on'])\n            if (parseInt(sold_from) === parseInt(data['placements'][p]['placed_on'])){\n                var string  = data['placements'][p]['purchase_item_details']['purchase_price'] + \"/-  \" + data['placements'][p]['purchase_item_details']['quantity'] + \" \" + data['placements'][p]['purchase_item_details']['vendor'] \n                temp.push({\n                    'id': data['placements'][p]['purchase_item'],\n                    'str':string\n                })\n                console.log(temp)\n            }\n            \n        }\n        this.setState({\n            ...this.state,\n            'stock_selection': temp\n        })\n    }  \n    \n\n    async onChangePlace(e){\n        await this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice_items':{\n                    ...this.state.update.invoice_items,\n                    [this.state.current] : {\n                        ...this.state.update.invoice_items[this.state.current],\n                        [e.target.name] : [e.target.value][0]\n                    },\n                }\n            }\n        })\n        var temp=[],p,sold_from;\n        if (this.state.update.invoice_items[this.state.current]['sold_from']){\n            sold_from = this.state.update.invoice_items[this.state.current]['sold_from']\n        }else {\n            sold_from = this.state.sold_from[0]['placed_on']\n            console.log('default',sold_from)\n        }\n        for (p in this.state.sold_from_selection){\n            if ( parseInt(sold_from) === parseInt(this.state.sold_from_selection[p]['placed_on'])){\n                var string  = this.state.sold_from_selection[p]['purchase_item_details']['purchase_price'] + \"/-  \" + this.state.sold_from_selection[p]['purchase_item_details']['quantity'] + \" \" + this.state.sold_from_selection[p]['purchase_item_details']['vendor'] \n                temp.push({\n                    'id': this.state.sold_from_selection[p]['purchase_item'],\n                    'str':string\n                })\n            }\n            \n        }\n        this.setState({\n            ...this.state,\n            'stock_selection': temp\n        }) \n    }\n\n    searchCustomer(e){\n        if ((e.target.value).length > 2 ){\n            var request_json = {\n                'action':'get',\n                'start':0,\n                'end':10,\n                'filter':'name',\n                'name':(e.target.value)\n            }\n            this.getCustomerData(request_json)\n        }\n    }\n    \n    invoiceHandler(date){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice':{\n                    ...this.state.update.invoice,\n                    'invoiced_on' : date\n                }\n            }\n        })\n    }\n    \n    dueOnHandler(date){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice':{\n                    ...this.state.update.invoice,\n                    'due_on' : date\n                }\n            }\n        })\n    }\n\n    updateInvoice(){\n        var request_json = {\n            ...this.state.update.invoice,\n            'action':'add',\n            'status':'',\n        }\n        console.log(request_json)\n        createInvoice(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                Swal.fire(\"Invoice Details Has Been Updated.\")\n                window.location.pathname = '/invoices'\n            }\n            else{\n                Swal.fire(data['error'])\n            }\n        })\n    }\n\n    onChangePI(e){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice_items':{\n                    ...this.state.update.invoice_items,\n                    [this.state.current] : {\n                        ...this.state.update.invoice_items[this.state.current],\n                        [e.target.name] : [e.target.value][0]\n                    },\n                }\n            }\n        })\n    }\n\n    postInvoiceItem(is_new=false){\n        var request_json\n        if (is_new){\n            request_json = {\n                'action':'add',\n                'invoice':this.state.update.invoice.id,\n                ...this.state.update.invoice_items[this.state.current],\n            }\n            request_json['applied_tax'] = []\n            request_json['applied_discount'] = []\n            createInvoiceItem(JSON.stringify(request_json)).then(data => {\n                if (data['status']){\n                    Swal.fire(\"Invoice Item Has Been Added.\")\n                    this.refreshTable()\n                }\n                else{\n                    Swal.fire(data['error'])\n                }\n            })\n            return\n        }\n        request_json = {\n            'action':'edit',\n            'invoice':this.state.update.invoice.id,\n            'invoice_item_id':this.state.update.invoice_items[this.state.current].id,\n            ...this.state.update.invoice_items[this.state.current]\n        }\n        request_json['applied_tax'] = []\n        request_json['applied_discount'] = []\n        updateInvoiceItem(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                Swal.fire(\"Invoice Item Details Has Been Updated.\")\n                this.refreshTable()\n            }\n            else{\n                Swal.fire(data['error'])\n            }\n        })\n    }\n\n    deleteInvoiceItem(){\n        var request_json = {\n            invoice_items_id : [this.state.update.invoice_items[this.state.current].id]\n        }\n        deleteInvoiceItems(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                Swal.fire(\"Invoice Item Has Beed Deleted.\")\n                this.refreshTable()\n            }\n            else{\n                Swal.fire(data['error'])\n            }\n        })\n    }\n\n\n    addInvoiceItem(){\n        var current =0;\n        var item,p_list=[];\n        for (item in this.state.update.invoice_items){\n            if (item.id){\n                if (item.id !== \"Fake Key\"){\n                    current = current + 1\n                    p_list.push(item)\n                }\n            }\n        }\n        this.setState({\n            'current':current,\n            'new':true,\n            'popUp':true,\n            'update':{\n                ...this.state.update,\n                'invoice_items':[\n                    ...p_list,\n                    {\n                        'item_name':\"None\",\n                        'discount_type':'percentage',\n                        'status':'incomplete',\n                        'applied_tax':[],\n                        'applied_discount':[],\n                        'purchase_item':'',\n                        'discount':[],\n                        'taxes':[]\n                    }\n                ]\n            }\n        })\n    }\n    columns = [\n        {\n            id:1,\n            name:\"Item Name\",\n            prop: 'item_name'\n        },\n        {\n            id:2,\n            name:\"Quantity\",\n            prop: 'quantity'\n        },\n        {\n            id:8,\n            name:\"Price\",\n            prop: 'price'\n        },\n        {\n            id:3,\n            name:\"Sold From\",\n            prop: 'sold_from_name'\n        },\n        {\n            id:4,\n            name:\"Tax Total\",\n            prop: 'tax_total'\n        },\n        ,\n        {\n            id:5,\n            name:\"Disount Amount\",\n            prop: 'discount_amount'\n        },   \n        {\n            id:6,\n            name:\"Sub Total\",\n            prop: 'sub_total'\n        },\n        {\n            id:7,\n            name:\"Total\",\n            prop: 'total'\n        }\n    ]\n\n    searchItem(e){\n        if ((e.target.value).length > 2 ){\n            var request_json = {\n                'action':'get',\n                'start':0,\n                'end':10,\n                'filter':'name',\n                'name':(e.target.value)\n            }\n            this.getItemData(request_json)\n        }\n    }\n\n    async getItemData(request_json){\n        await getItems(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    ...this.state,\n                    'item_selection':data['items'],\n                })\n            }  \n            \n            else{\n                Swal.fire(data['error'])\n            }\n        })\n    }\n    selectItem(id, name){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice_items':{\n                    ...this.state.update.invoice_items,\n                    [this.state.current] : {\n                        ...this.state.update.invoice_items[this.state.current],\n                        'item_name' : name,\n                        'item':id\n                    },\n                }\n            }\n        })\n        var request_json = {\n            'action':'get',\n            'filter':'item',\n            'item_id':id\n        }\n        this.getPlacesData(request_json)\n    }\n\n    async refreshTable(){\n        var id = this.state.update.invoice.id;\n        var items= [];\n        const request_json = {\n            'action':'get',\n            'invoice_id':id\n        }\n        await getInvoice(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                items = data['invoice_items']\n            }\n            \n            else{\n                Swal.fire(data['error'])\n            }\n        })\n        if (items.length === 0){\n            items = [{\n                'id':\"Fake Key\",\n                'item_name': ''\n            }]\n        }\n        await this.setState({\n            ...this.state,\n            'popUp':false,\n            'update':{\n                ...this.state.update,\n                'invoice_items':items\n            }\n        })\n    }\n\n\n    stateman(){\n        console.log(this.state)\n    }\n\n\n    discount_columns =[\n        {\n            'id':1,\n            'name':'Name',\n            'prop':'name'\n        },{\n            'id':2,\n            'name':'Rate',\n            'prop':'rate'\n        },{\n            'id':3,\n            'name':'Code',\n            'prop':'code'\n        },{\n            'id':4,\n            'name':'Type',\n            'prop':'discount_type'\n        },{\n            'id':5,\n            'name':'Remove',\n            'prop':'removeButton'\n        },\n    ]\n\n    tax_columns =[\n        {\n            'id':1,\n            'name':'Name',\n            'prop':'name'\n        },{\n            'id':2,\n            'name':'Rate',\n            'prop':'rate'\n        },{\n            'id':3,\n            'name':'Code',\n            'prop':'code'\n        },{\n            'id':4,\n            'name':'Type',\n            'prop':'tax_type'\n        },{\n            'id':5,\n            'name':'Remove',\n            'prop':'removeButton'\n        },\n    ]\n\n    \n    add_discount_columns =[\n        {\n            'id':1,\n            'name':'Name',\n            'prop':'name'\n        },{\n            'id':2,\n            'name':'Rate',\n            'prop':'rate'\n        },{\n            'id':3,\n            'name':'Code',\n            'prop':'code'\n        },{\n            'id':4,\n            'name':'Type',\n            'prop':'discount_type'\n        }\n    ]\n\n    add_tax_columns =[\n        {\n            'id':1,\n            'name':'Name',\n            'prop':'name'\n        },{\n            'id':2,\n            'name':'Rate',\n            'prop':'rate'\n        },{\n            'id':3,\n            'name':'Code',\n            'prop':'code'\n        },{\n            'id':4,\n            'name':'Type',\n            'prop':'tax_type'\n        }\n    ]\n\n    async update_table (by,dis) {\n        var x = by<0?-1:1\n        var request_json\n        if (dis){\n            if (by===0){\n                await this.setState({\n                    'discoount_loaded':false,\n                    discount_start: 0,\n                    discount_end: 10,\n                    discount_page:1\n                })\n            }\n            else{\n                if (this.state.discount_start+by>-1){\n                    await this.setState({\n                        'discount_loaded':false,\n                        discount_start: this.state.discount_start+by,\n                        discount_end: this.state.discount_end+by,\n                        discount_page:this.state.discount_page+x\n                    })\n                }\n                else{\n                    Swal.fire(\"Cannot move futher from here.\")\n                    return\n                }\n            }\n            request_json = {\n                'action':'get',\n                'filter':'none',\n                'start':this.state.discount_start,\n                'end':this.state.discount_end\n            }\n            this.getDiscountsData(request_json)\n        }\n    else { \n        if (by===0){\n            await this.setState({\n                'tax_loaded':false,\n                tax_start: 0,\n                tax_end: 10,\n                tax_page:1\n            })\n        }\n        else{\n            if (this.state.tax_start+by>-1){\n                await this.setState({\n                    'tax_loaded':false,\n                    tax_start: this.state.tax_start+by,\n                    tax_end: this.state.tax_end+by,\n                    tax_page:this.state.tax_page+x\n                })\n            }\n            else{\n                Swal.fire(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.tax_start,\n            'end':this.state.tax_end\n        }\n        this.getTaxesData(request_json)\n\n    }\n    }\n    \n    async getDiscountsData (request_json) {\n        await getDiscounts(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'discount_selection':data['discounts'],\n                    'discount_loaded':true\n                })\n            }\n            else{\n                Swal.fire(data['error'])\n            }\n        })\n    }\n    async getTaxesData (request_json) {\n        await getTaxes(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'tax_selection':data['taxes'],\n                    'tax_loaded':true\n                })\n            }  \n        })\n    }\n \n    addEntryDiscount(id){\n        var dis;\n        for (dis in this.state.discount_selection){\n            if (this.state.discount_selection[dis].id === id){\n                var temp = this.state.update.invoice_items[this.state.current]['applied_discount']\n                var x = this.state.discount_selection[dis]\n                temp.push(x)\n                var temp2 = this.state.update.invoice_items[this.state.current]['discount']\n                temp2.push(id)\n                this.setState({\n                    ...this.state,\n                    update:{\n                        ...this.state.update,\n                        'invoice_items':{\n                            ...this.state.update.invoice_items,\n                            [this.state.current] : {\n                                ...this.state.update.invoice_items[this.state.current],\n                                'discount':temp2,\n                                'applied_discount': temp\n                            }\n                        }\n                    }\n                })\n            }\n        }\n    }\n\n    addEntryTax(id){\n        var dis;\n        for (dis in this.state.tax_selection){\n            if (this.state.tax_selection[dis].id === id){\n                var temp = this.state.update.invoice_items[this.state.current]['applied_tax']\n                var x = this.state.tax_selection[dis]\n                temp.push(x)\n                var temp2 = this.state.update.invoice_items[this.state.current]['taxes']\n                temp2.push(id)\n                this.setState({\n                    ...this.state,\n                    update:{\n                        ...this.state.update,\n                        'invoice_items':{\n                            ...this.state.update.invoice_items,\n                            [this.state.current] : {\n                                ...this.state.update.invoice_items[this.state.current],\n                                'tax':temp2,\n                                'applied_tax': temp\n                            }\n                        }\n                    }\n                })\n            }\n        }\n    }\n\n\n    render() {\n        const item_selection = this.state.item_selection\n        const itemPopUp = <Popup trigger={ <button>Select Item</button>} closeOnDocumentClick>\n        <div>\n            <input placeholder=\"Item Name\" id='item_search_box' name='item_serach_box' onChange={this.searchItem}></input>\n            <div className={style.dropdown_content} id='item_dropdown'>\n                    {item_selection.map(\n                        item => (\n                            // use css to get rid of <a>\n                        <a key={item.id} onClick={() => {this.selectItem(item.id, item.name)}} >{item.name} {item.sales_price}</a>\n                        )\n                    )}\n            </div>\n        </div>\n        </Popup>\n\n        var places = this.state.place_selection\n        const selectPlace =<select name='sold_from' id=\"sold_from\" onChange={this.onChangePlace} value={this.state.update.invoice_items[this.state.current].sold_from}  >\n            <option key=\"Fake Key\" value='Fake Value'>Select Place</option>\n                {places.map(\n                    x => (\n                    <option key={x.id} value={x.id}>{x.str_placed_on}</option>\n                    )\n                )}\n            </select>\n\n            \n        var stocks  = this.state.stock_selection\n        var stockValue = this.state.update.invoice_items[this.state.current].purchase_item ? this.state.update.invoice_items[this.state.current].purchase_item : ''\n        const selectStock = <select name='purchase_item' id=\"purchase_item\" onChange={this.onChangePI} value={stockValue} >\n                <option key='Fake Key' value=\"Fake Value\">Select Stock</option>\n                {stocks.map(\n                    x => (\n                    <option key={x.id} value={parseInt(x.id)}>{x.str}</option>\n                    )\n                )}\n            </select>\n        const addPopupDiscount = <div>\n            <h3> Click To Apply New Discount</h3>\n                            <List data={this.state.discount_selection} header={this.add_discount_columns} page={false} popUp={this.addEntryDiscount} />\n                            <button onClick={()=> {this.update_table(-5,true)}}>Previous</button><span>      {this.state.discount_page}       </span><button  onClick={()=> {this.update_table(5,true)}} >Next</button>\n                        </div>\n        \n        const addPopupTax = <div>\n            <h3>Click To Apply New Tax </h3>\n                            <List data={this.state.tax_selection} header={this.add_tax_columns} page={false} popUp={this.addEntryTax} />\n                            <button onClick={()=> {this.update_table(-5,false)}}>Previous</button><span>      {this.state.tax_page}       </span><button  onClick={()=> {this.update_table(5,false)}} >Next</button>\n                        </div>\n        const discounts =this.state.update.invoice_items[this.state.current].applied_discount\n        for (var dis in discounts){\n            discounts[dis] = {\n                ...discounts[dis],\n                'removeButton':<button onClick={() => {this.removeEntry(dis,true)}}> Remove </button>\n            }\n        }\n        \n        const taxes = this.state.update.invoice_items[this.state.current].applied_tax\n        for (var dis in taxes){\n            taxes[dis] = {\n                ...taxes[dis],\n                'removeButton':<button onClick={()=>{this.removeEntry(dis,false)}}> Remove </button>\n            }\n        }\n        const popUpItem = <div>\n                <button onClick={() => {this.refreshTable()}} >Back</button><br></br><br></br>\n                Item : {this.state.update.invoice_items[this.state.current].item_name}  {itemPopUp}<br></br>\n                Sold From: \n                Place : {this.state.update.invoice_items[this.state.current].item ? selectPlace : \"Select An Item First\" } <br></br>\n                Stock :   {this.state.update.invoice_items[this.state.current].item ? selectStock : \"Select An Item First\" } <br></br>\n                <br></br>\n\n                Quantity : <input name=\"quantity\" placeholder={this.state.update.invoice_items[this.state.current].quantity} type=\"number\" onChange={this.onChangePI} required min='1' ></input><br></br>\n                Price : <input name=\"price\" placeholder={this.state.update.invoice_items[this.state.current].price} type=\"number\" onChange={this.onChangePI} required></input><br></br>\n                Tax Total : {this.state.update.invoice_items[this.state.current].tax_total} <br></br>\n                Sub Total : {this.state.update.invoice_items[this.state.current].sub_total} <br></br>\n                Discount Amount : {this.state.update.invoice_items[this.state.current].discount_amount}<br></br>\n                Total without discount : {this.state.update.invoice_items[this.state.current].total_without_discount}<br></br>\n                Total : {this.state.update.invoice_items[this.state.current].total}<br></br>\n                <br></br>\n                Applied Discounts : :<List data={discounts} header={this.discount_columns} page={false} popUp={this.popUp} removeEntry={this.removeEntry} /><button onClick={() =>{this.update_table(0, true)}} >Apply New Discount</button> <br></br><br></br>\n                {this.state.discount_loaded ? addPopupDiscount : <span></span>}<br></br>\n                Applied Taxes : :<List data={taxes} header={this.tax_columns} page={false} popUp={this.popUp} removeEntry={this.removeEntry} /><br></br><button onClick={() => {this.update_table(0, false)}}>Apply New Tax</button><br></br><br></br>\n                {this.state.tax_loaded ? addPopupTax : <span></span>}<br></br>\n                {this.state.new ? <button onClick={() => {this.postInvoiceItem(true)}} >Add</button> : <button onClick={() => {this.postInvoiceItem()}} >Update</button>}<br></br><br></br>\n                <button onClick={() => {this.deleteInvoiceItem()}} >Delete</button>\n            </div>\n        const customer_selection = this.state.customer_selection\n        const customerPopup = <Popup trigger={<Button variant=\"contained\" color=\"secondary\">Select Customer</Button>} closeOnDocumentClick>\n        <div>\n            <input placeholder=\"Customer's first name\" id='customer_serach_box' name='customer_serach_box' onChange={this.searchCustomer}></input>\n            <div className={style.dropdown_content} id='customer_dropdown'>\n                    {customer_selection.map(\n                        customer => (\n                            <a href=\"#\" key={customer.id} onClick={() => {this.selectCustomer(customer.id, customer.name)}} >{customer.name}</a>\n                        )\n                    )}\n            </div>\n        </div>\n        </Popup>\n        const status = this.state.status\n        return (\n            <div>\n            <Grid container justify='center' >\n                \n                <Grid item xm={8}>\n                    <table  cellPadding='10' cellSpacing='10' >\n                        <tbody>\n                            <tr>\n                                <th colSpan={3}>\n                                    <h1>New Invoice Order</h1>\n                                    <h4>Select customer and Date only</h4>\n                                </th>\n                            </tr>\n                        <tr>\n                        <td><b></b> <TextField\n                                value={this.state.update.invoice.customer_name}\n                                label='Customer'\n                                variant=\"outlined\"\n                                />\n                         </td>\n                        \n                        <td>{customerPopup}</td>\n                        </tr>\n                        \n                        <tr>\n                            <td>\n                            <b>Invoiced On : </b><br></br>\n                                <DatePicker\n                                name='invoiced_on'\n                                selected={this.state.update.invoice.invoiced_on}\n                                onChange={this.invoiceHandler}\n                                />\n                            </td>\n                            <td>\n                            <b>Due On : </b> <br></br>\n                            <DatePicker\n                            name='completed_on'\n                            selected={this.state.update.invoice.due_on}\n                            onChange={this.dueOnHandler}\n                            />\n                            </td>\n                        </tr>\n                            <tr>\n                                <td>\n                                <Button variant=\"contained\" color=\"primary\" onClick={() => {this.updateInvoice()}}>Create Invoice</Button>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </Grid>\n                </Grid>\n                </div>\n        //     <div>\n        //         <h1>Invoice</h1>\n        // <h3>{this.state.update.invoice.customer_name} </h3>\n        //         Added By : {this.state.update.invoice.added_by_name}<br></br>\n        //         Customer : {this.state.update.invoice.customer_name} {customerPopup}<br></br>\n        //         Order Number : {this.state.update.invoice.order_number}<br></br>\n        //         <br></br><br></br>\n        //         Invoiced On : \n        //         <DatePicker\n        //         name='invoiced_on'\n        //         selected={this.state.update.invoice.invoiced_on}\n        //         onChange={this.invoiceHandler}\n        //         />\n        //         Due On : \n        //         <DatePicker\n        //         name='completed_on'\n        //         selected={this.state.update.invoice.due_on}\n        //         onChange={this.dueOnHandler}\n        //         /><br></br><br></br>\n                \n        //         Total Amount : {this.state.update.invoice.total_amount}<br></br>\n        //         Total Tax : {this.state.update.invoice.tax_total}<br></br>\n        //         Total Discount: {this.state.update.invoice.discount_total}<br></br>\n        //         Paid Amount : {this.state.update.invoice.paid_amount}<br></br>\n\n        //         <br></br>\n        //         Additional Discount : <input placeholder={this.state.update.invoice.additional_discount} name='additional_discount' onChange={this.onChange} ></input>\n        //         <br></br><br></br>\n\n                \n        //         Status : <select name='status' id=\"status\" onChange={this.onChange} value={this.state.update.invoice.status}  >\n        //                         {status.map(\n        //                             x => (\n        //                             <option key={x.id} value={parseInt(x.id)}>{x.name}</option>\n        //                             )\n        //                         )}\n        //                     </select> <br></br><br></br>\n        //         <button onClick={() => {this.updateInvoice()}}>Add Invoice</button><br></br><br></br>\n        //         <hr></hr>\n        //     <button onClick={() => {this.stateman()}}>State</button>\n        //     </div>\n\n        )\n    }\n}\nexport default InvoiceCreation","import React, { Component } from 'react'\nimport List from '../list';\nimport { getDiscount, updateDiscount,  deleteDiscounts } from '../../api/misc';\nimport {Button, TextField, Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\nimport Swal from 'sweetalert2'\n\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport { withStyles } from '@material-ui/styles';\nimport PropTypes from 'prop-types';\n\nconst styles = makeStyles((theme) => ({\n    root: {\n    flexGrow: 12,\n    },\n    paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    },\n}));\n\n\nclass DiscountList extends Component {\n    \n    constructor(props){\n        super(props)\n        this.popUp = this.popUp.bind(this)\n        this.state = {\n            'popUp':false,\n            'discount':{},\n            'update':{}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.discountDelete = this.discountDelete.bind(this)\n    }\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value][0]\n            }\n        })\n    }\n\n    \n    async onSubmit(){\n            var data = this.state.update\n            data = {...data, 'action':'edit','discount_id':data.id}\n            console.log(data)\n            updateDiscount(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        Swal.fire(\n                            'Updated!',\n                            'Discounts details has been updated.',\n                            'success'\n                          )\n                        this.props.update(0)\n                    }\n                    else{\n                        Swal.fire({\n                            icon:'error',\n                            title:data['error']\n                        })\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    discountDelete(id){\n        var data = {\n            'discounts_id':[\n                id\n            ]\n        }\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to revert this!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, delete it!'\n          }).then((result) => {\n            if (result.value) {\n                deleteDiscounts(JSON.stringify(data)).then(data=>{\n                    try {\n                        if (data['status']){\n                            Swal.fire({\n                                icon:'success',\n                                title:'Discount entry has been deleted.',\n                                showConfirmButton: false,\n                                timer:1000\n                            })\n                            this.props.update(0)\n                        }   else{\n                            Swal.fire({\n                                icon:'error',\n                                title:data['error']\n                            })\n                        }\n                    }catch(e){\n                        console.log(e)\n                    }\n                })\n              \n            }\n          })\n    }\n    \n    async popUp(id, uuid=0){\n        const data = {\n            'action':'get',\n            'discount_id':id,\n        }\n        var data_main;\n        await getDiscount(JSON.stringify(data)).then(data => {\n            if (data['status']){\n                data_main=data\n            }\n        })\n        await this.setState({\n            'popUp':true,\n            'discount':data_main['discounts'][0],\n            'update':data_main['discounts'][0]\n        })\n    }\n\n\n    columns = [\n        {\n            id:1,\n            name:\"Name\",\n            prop: 'name'\n        },\n        {\n            id:2,\n            name:\"Code\",\n            prop: 'code'\n        },\n        {\n            id:3,\n            name:\"Discount Type\",\n            prop: 'discount_type'\n        },\n        {\n            id:4,\n            name:\"Rate\",\n            prop: 'rate'\n        }      \n    ]\n    \n\n    render() {\n        const { classes } = this.props;\n\n        const list = <List data={this.props.data} header={this.columns}   popUp={this.popUp} update={this.props.update} page={this.props.page} />\n        \n        const popUpRender =\n         <div>\n            &nbsp;\n            &nbsp;\n            &nbsp;\n            &nbsp;\n            &nbsp;\n            &nbsp; <Button  variant=\"contained\" size='small' color=\"primary\" onClick={()=> {this.setState({...this.state, popUp:false})}}>\n                <ArrowLeftIcon></ArrowLeftIcon>\n         Back\n     </Button>\n        <Grid  container justify=\"center\" alignContent='center' alignItems=\"center\" spacing={3}>\n            <Grid item xm={4}>\n            \n            </Grid>\n            <Grid item xs={4}>\n            <h1>{this.state.discount.name}</h1>\n            </Grid>\n            <Grid item xm={4}>\n            </Grid>\n        </Grid>\n\n        <Grid container  justify=\"center\" alignContent='center' alignItems=\"center\"   direction={'column'} spacing={10}>\n        <Grid item xm={6}>\n            <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n                <Grid item xm={2} > \n                <TextField required id=\"name\" label=\"Name\" name='name' defaultValue={this.state.discount.name} onChange={this.onChange} autoFocus/>\n                </Grid>\n                <Grid item xm={2}>\n                <TextField required id=\"code\" label=\"code\" name='code' defaultValue={this.state.discount.code} onChange={this.onChange} />\n                </Grid>\n            </Grid>\n            \n            <Grid container spacing={3}>\n                <Grid item xm={6} md={6}>\n                    Discount Type :  \n                 <FormControl className={classes.formControl}>\n                                <Select onChange={this.onChange}   value={this.state.update.discount_type}  name='discount_type' id=\"discount_type\">\n                                <MenuItem value=\"percent\">Percentage</MenuItem>\n                                <MenuItem value=\"fixed\">Fixed</MenuItem>\n                                </Select>\n                            </FormControl>\n                </Grid>\n                <Grid item xm={6} md={6} > \n                <TextField required id=\"rate\"  name=\"rate\"  label=\"rate\" defaultValue={this.state.discount.rate} onChange={this.onChange} />\n\n               </Grid>\n            </Grid>\n            <Grid container spacing={3}  alignItems='flex-end'>\n\n                <Grid item xm={3} md={6}> \n                <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={()=>{this.onSubmit()}}\n                                >\n                                Update\n                                </Button>\n                </Grid>\n                <Grid item xm={3} md={6}> \n                <Button variant=\"contained\" color=\"secondary\" onClick={() => {this.discountDelete(this.state.discount.id)}}>\n                    Delete Discount\n                </Button> \n               </Grid>\n            </Grid>\n        </Grid>\n        </Grid><br></br>\n        </div>\n\n\n\n\n        return (\n            <div>\n                {this.state.popUp ? popUpRender : list}\n            </div>\n        )\n    }\n}\n\nDiscountList.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n\n\nexport default withStyles(styles)(DiscountList)\n\n","import React, { Component } from 'react'\nimport {getDiscounts} from '../../api/misc';\nimport {  connect } from 'react-redux';\nimport  DiscountList  from './discountList';\nimport { Link} from 'react-router-dom';\n\nimport Button from '@material-ui/core/Button';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/styles';\nimport PropTypes from 'prop-types';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport LoadingIcon from '../loading';\n\n\nconst styles = makeStyles((theme) => ({\n    root: {\n    flexGrow: 12,\n    },\n    paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    },\n}));\n\n\nclass Discounts extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            'taxes':[],\n            'loaded':false,\n            'start':0,\n            'end':10,\n            'page':1\n        }\n        this.update_table = this.update_table.bind(this)\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n        this.update_table(0)\n    }\n\n\n    async update_table (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                'loaded':false,\n                start: 0,\n                end: 10,\n                page:1\n            })\n        }\n        else{\n            if (this.state.start+by>-1){\n                await this.setState({\n                    'loaded':false,\n                    start: this.state.start+by,\n                    end: this.state.end+by,\n                    page:this.state.page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.start,\n            'end':this.state.end\n        }\n        this.getDiscountsData(request_json)\n    }\n    \n    async getDiscountsData (request_json) {\n        await getDiscounts(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'discounts':data['discounts'],\n                    'loaded':true\n                })\n            }  \n        })\n    }\n\n \n\nrender() {\n    const { classes } = this.props;\n\n    const render_after_load = (\n        <div>\n            <DiscountList data={this.state.discounts} update={this.update_table} page={this.state.page} />\n        </div>\n    )\n\n    return(\n        <div className={classes.root}>\n        <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n            <Grid item xs={3} >\n            <Button variant=\"contained\" color=\"primary\" onClick={() => {this.update_table(0)}}>\n              <RefreshIcon/>&nbsp;&nbsp;&nbsp;Refresh Table\n              </Button>\n            </Grid>\n            <Grid item xs={5}>\n  \n            </Grid>\n              <Grid item xs={3}>\n              <Link to='/discounts/create' style={{ textDecoration: 'none' }}>\n              <Button variant=\"contained\" color=\"secondary\">\n              <AddCircleIcon/>&nbsp;&nbsp;&nbsp;Add New Discount\n              </Button>\n              </Link>\n              </Grid>\n  \n          <Grid item xs={12}>\n            <Paper className={classes.paper}>\n            {this.state.loaded ? render_after_load : <LoadingIcon></LoadingIcon>}\n            </Paper>\n          </Grid>\n          \n        </Grid>\n      </div>\n    )\n}\n}\n\n\n\nDiscounts.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n\nconst mapStateToProps = state => ({\n    user: state.user,\n})\n\nexport default withStyles(styles)(connect(mapStateToProps)(Discounts))","import React, { Component } from 'react'\nimport {  connect } from 'react-redux';\nimport { createDiscount } from '../../api/misc';\n\nimport {Button, TextField, Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\nimport Swal from 'sweetalert2'\n\nimport { withStyles } from '@material-ui/styles';\nimport PropTypes from 'prop-types';\n\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\n\n\nconst styles = makeStyles((theme) => ({\n    root: {\n    flexGrow: 12,\n    },\n    paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    },\n}));\n\n\n\nclass DiscountCreation extends Component {\n\n    constructor (props){\n        super(props)\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.state = {\n            'update':{\n                'name':'',\n                'code':'',\n                'discount_type':'percent',\n                'rate':''\n            }\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n    }\n\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value][0]\n            }\n        })\n    }\n\n\n    async onSubmit(e){\n            var data = {...this.state.update}\n            var ele;\n            for (ele in this.state.update){\n                data[ele] = this.state.update[ele]\n            }\n            data = {...data, 'action':'add'}\n            console.log(data)\n            createDiscount(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        Swal.fire(\n                            'Updated!',\n                            'Discounts details has been added.',\n                            'success'\n                          )\n                    }\n                    else{\n                        Swal.fire({\n                            icon:'error',\n                            title:data['error']\n                        })\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        const popUpRender = <div>\n           &nbsp;\n           &nbsp;\n           &nbsp;\n           &nbsp;\n           &nbsp;\n           &nbsp; \n       <Grid  container justify=\"center\" alignContent='center' alignItems=\"center\" spacing={3}>\n           <Grid item xm={4}>\n           \n           </Grid>\n           <Grid item xs={4}>\n           <h1>Add New Discounts</h1>\n           </Grid>\n           <Grid item xm={4}>\n           </Grid>\n       </Grid>\n\n       <Grid container  justify=\"center\" alignContent='center' alignItems=\"center\"   direction={'column'} spacing={10}>\n       <Grid item xm={6}>\n           <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n               <Grid item xm={2} > \n               <TextField required id=\"name\" label=\"Name\" name='name' defaultValue={this.state.update.name} onChange={this.onChange} autoFocus/>\n               </Grid>\n               <Grid item xm={2}>\n               <TextField required id=\"code\" label=\"code\" name='code' defaultValue={this.state.update.code} onChange={this.onChange} />\n               </Grid>\n           </Grid>\n           \n           <Grid container spacing={3}>\n               <Grid item xm={6} md={6}>\n                   Discount Type :  \n                <FormControl className={classes.formControl}>\n                               <Select onChange={this.onChange}   value={this.state.update.discount_type}  name='discount_type' id=\"discount_type\">\n                               <MenuItem value=\"percent\">Percentage</MenuItem>\n                               <MenuItem value=\"fixed\">Fixed</MenuItem>\n                               </Select>\n                           </FormControl>\n               </Grid>\n               <Grid item xm={6} md={6} > \n               <TextField required id=\"rate\"  name=\"rate\" onChange={this.onChange} label=\"rate\" name='rate' defaultValue={this.state.update.rate} onChange={this.onChange} />\n\n              </Grid>\n           </Grid>\n           <Grid container spacing={3}  alignItems='flex-end'>\n\n               <Grid item xm={3} md={6}> \n               <Button\n                               type='submit'\n                               variant=\"contained\"\n                               color=\"primary\"\n                               onClick={()=>{this.onSubmit()}}\n                               >\n                               Add\n                               </Button>\n               </Grid>\n               <Grid item xm={3} md={6}> \n              </Grid>\n           </Grid>\n       </Grid>\n       </Grid><br></br>\n       </div>\n\n        return (\n            popUpRender\n        )\n    }\n}\n\n\nDiscountCreation.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n\n\n  const mapStateToProps = state => ({\n    user: state.user\n})\n\n\nexport default withStyles(styles)(connect(mapStateToProps)(DiscountCreation))\n\n","import React, { Component } from 'react'\nimport List from '../list';\nimport { getTax, updateTax,  deleteTaxes } from '../../api/misc';\nimport {Button, TextField, Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\nimport Swal from 'sweetalert2'\n\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport { withStyles } from '@material-ui/styles';\nimport PropTypes from 'prop-types';\n\nconst styles = makeStyles((theme) => ({\n    root: {\n    flexGrow: 12,\n    },\n    paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    },\n}));\n\nclass TaxList extends Component {\n    \n    constructor(props){\n        super(props)\n        this.popUp = this.popUp.bind(this)\n        this.state = {\n            'popUp':false,\n            'tax':{},\n            'update':{}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.taxDelete = this.taxDelete.bind(this)\n    }\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value][0]\n            }\n        })\n    }\n\n    \n    async onSubmit(e){\n            var data = this.state.update\n            data = {...data, 'action':'edit','tax_id':data.id}\n            updateTax(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        Swal.fire(\n                            'Updated!',\n                            'Tax details has been updated.',\n                            'success'\n                          )                        \n                          this.props.update(0)\n                    }\n                    else{\n                        Swal.fire({\n                            icon:'error',\n                            title:data['error']\n                        })\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    taxDelete(id){\n        var data = {\n            'taxes_id':[\n                id\n            ]\n        }\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to revert this!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, delete it!'\n          }).then((result) => {\n        deleteTaxes(JSON.stringify(data)).then(data=>{\n            try {\n                if (data['status']){\n                    Swal.fire({\n                        icon:'success',\n                        title:'Tax entry has been deleted.',\n                        showConfirmButton: false,\n                        timer:1000\n                    })                   \n                    this.props.update(0)\n                }   else{\n                    Swal.fire({\n                        icon:'error',\n                        title:data['error']\n                    })                \n                }\n            }catch(e){\n                console.log(e)\n            }\n        })\n    })\n}\n    \n    async popUp(id, uuid=0){\n        const data = {\n            'action':'get',\n            'tax_id':id,\n        }\n        var data_main;\n        await getTax(JSON.stringify(data)).then(data => {\n            if (data['status']){\n                data_main=data\n            }\n        })\n        await this.setState({\n            'popUp':true,\n            'tax':data_main['taxes'][0],\n            'update':data_main['taxes'][0]\n        })\n    }\n\n\n    columns = [\n        {\n            id:1,\n            name:\"Name\",\n            prop: 'name'\n        },\n        {\n            id:2,\n            name:\"Code\",\n            prop: 'code'\n        },\n        {\n            id:3,\n            name:\"Tax Type\",\n            prop: 'tax_type'\n        },\n        {\n            id:4,\n            name:\"Rate\",\n            prop: 'rate'\n        }      \n    ]\n    \n\n    render() {\n        const { classes } = this.props;\n\n        const list = <List data={this.props.data} header={this.columns}   popUp={this.popUp} update={this.props.update} page={this.props.page} />\n        const popUpRender = <div>\n        &nbsp;\n        &nbsp;\n        &nbsp;\n        &nbsp;\n        &nbsp;\n        &nbsp; <Button  variant=\"contained\" size='small' color=\"primary\" onClick={()=> {this.setState({...this.state, popUp:false})}}>\n            <ArrowLeftIcon></ArrowLeftIcon>\n     Back\n </Button>\n    <Grid  container justify=\"center\" alignContent='center' alignItems=\"center\" spacing={3}>\n        <Grid item xm={4}>\n        \n        </Grid>\n        <Grid item xs={4}>\n        <h1>{this.state.tax.name}</h1>\n        </Grid>\n        <Grid item xm={4}>\n        </Grid>\n    </Grid>\n\n    <Grid container  justify=\"center\" alignContent='center' alignItems=\"center\"   direction={'column'} spacing={10}>\n    <Grid item xm={6}>\n        <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n            <Grid item xm={2} > \n            <TextField required id=\"name\" label=\"Name\" name='name' defaultValue={this.state.tax.name} onChange={this.onChange} autoFocus/>\n            </Grid>\n            <Grid item xm={2}>\n            <TextField required id=\"code\" label=\"code\" name='code' defaultValue={this.state.tax.code} onChange={this.onChange} />\n            </Grid>\n        </Grid>\n        \n        <Grid container spacing={3}>\n            <Grid item xm={6} md={6}>\n                Tax Type :  \n                <FormControl className={classes.formControl}>\n                                <Select onChange={this.onChange}   value={this.state.update.tax_type}  name='tax_type' id=\"tax_type\">\n                                <MenuItem value=\"normal\">Normal (Percentage)</MenuItem>\n                                <MenuItem value=\"fixed\">Fixed</MenuItem>\n                                </Select>\n                            </FormControl>\n            </Grid>\n            <Grid item xm={6} md={6} > \n            <TextField required id=\"rate\"  name=\"rate\"  label=\"rate\" defaultValue={this.state.tax.rate} onChange={this.onChange} />\n           </Grid>\n        </Grid>\n        <Grid container spacing={3}  alignItems='flex-end'>\n\n            <Grid item xm={3} md={6}> \n            <Button\n                            type='submit'\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={()=>{this.onSubmit()}}\n                            >\n                            Update\n                            </Button>\n            </Grid>\n            <Grid item xm={3} md={6}> \n            <Button variant=\"contained\" color=\"secondary\" onClick={() => {this.taxDelete(this.state.tax.id)}}>\n                Delete Tax\n            </Button> \n           </Grid>\n        </Grid>\n    </Grid>\n    </Grid>\n                    </div>\n        return (\n            <div>\n                {this.state.popUp ? popUpRender : list}\n            </div>\n        )\n    }\n}\n\nTaxList.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n\nexport default withStyles(styles)(TaxList)\n\n","import React, { Component } from 'react'\nimport {getTaxes} from '../../api/misc';\nimport {  connect } from 'react-redux';\nimport  TaxList  from './taxList';\nimport { Link} from 'react-router-dom';\n\n\nimport Button from '@material-ui/core/Button';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/styles';\nimport PropTypes from 'prop-types';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport LoadingIcon from '../loading';\n\n\nconst styles = makeStyles((theme) => ({\n    root: {\n    flexGrow: 12,\n    },\n    paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    },\n}));\n\n\nclass Taxes extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            'taxes':[],\n            'loaded':false,\n            'start':0,\n            'end':10,\n            'page':1\n        }\n        this.update_table = this.update_table.bind(this)\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n        this.update_table(0)\n    }\n\n    async update_table (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                'loaded':false,\n                start: 0,\n                end: 10,\n                page:1\n            })\n        }\n        else{\n            if (this.state.start+by>-1){\n                await this.setState({\n                    'loaded':false,\n                    start: this.state.start+by,\n                    end: this.state.end+by,\n                    page:this.state.page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.start,\n            'end':this.state.end\n        }\n        this.getTaxesData(request_json)\n    }\n    \n    async getTaxesData (request_json) {\n        await getTaxes(JSON.stringify(request_json)).then(data => {\n            console.log(data)\n            if (data['status']){\n                this.setState({\n                    'taxes':data['taxes'],\n                    'loaded':true\n                })\n            }  \n        })\n    }\n\n \n\nrender() {\n    const { classes } = this.props;\n\n    const render_after_load = (\n        <div>\n            <TaxList data={this.state.taxes} update={this.update_table} page={this.state.page} />\n        </div>\n    )\n\n    return(\n        <div className={classes.root}>\n        <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n            <Grid item xs={3} >\n            <Button variant=\"contained\" color=\"primary\" onClick={() => {this.update_table(0)}}>\n              <RefreshIcon/>&nbsp;&nbsp;&nbsp;Refresh Table\n              </Button>\n            </Grid>\n            <Grid item xs={5}>\n  \n            </Grid>\n              <Grid item xs={3}>\n              <Link to='/taxes/create' style={{ textDecoration: 'none' }}>\n              <Button variant=\"contained\" color=\"secondary\">\n              <AddCircleIcon/>&nbsp;&nbsp;&nbsp;Add New Tax\n              </Button>\n              </Link>\n              </Grid>\n  \n          <Grid item xs={12}>\n            <Paper className={classes.paper}>\n            {this.state.loaded ? render_after_load : <LoadingIcon></LoadingIcon>}\n            </Paper>\n          </Grid>\n          \n        </Grid>\n      </div>\n    )\n}\n}\n\n\n\nTaxes.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n\n\nconst mapStateToProps = state => ({\n    user: state.user,\n})\n\nexport default withStyles(styles)(connect(mapStateToProps)(Taxes))","import React, { Component } from 'react'\nimport {  connect } from 'react-redux';\nimport {Button, TextField,Grid } from '@material-ui/core';\nimport { createTax } from '../../api/misc';\n\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\nimport Swal from 'sweetalert2'\n\nimport { withStyles } from '@material-ui/styles';\nimport PropTypes from 'prop-types';\n\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\n\n\nconst styles = makeStyles((theme) => ({\n    root: {\n    flexGrow: 12,\n    },\n    paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    },\n}));\n\n\nclass TaxCreation extends Component {\n\n    constructor (props){\n        super(props)\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.state = {\n            'update':{\n                'name':'',\n                'code':'',\n                'tax_type':'normal',\n                'rate':''\n            }\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n    }\n\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value][0]\n            }\n        })\n    }\n\n\n    async onSubmit(e){\n            var data = {...this.state.update}\n            var ele;\n            for (ele in this.state.update){\n                data[ele] = this.state.update[ele]\n            }\n            data = {...data, 'action':'add'}\n            console.log(data)\n            createTax(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        Swal.fire(\n                            'Updated!',\n                            'Tax details has been added.',\n                            'success'\n                          )\n                    }\n                    else{\n                        Swal.fire({\n                            icon:'error',\n                            title:data['error']\n                        })                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    render() {\n        const { classes } = this.props;\n\n            const popUpRender = \n                <div>\n           &nbsp;\n           &nbsp;\n           &nbsp;\n           &nbsp;\n           &nbsp;\n           &nbsp; \n       <Grid  container justify=\"center\" alignContent='center' alignItems=\"center\" spacing={3}>\n           <Grid item xm={4}>\n           \n           </Grid>\n           <Grid item xs={4}>\n           <h1>Add New Tax</h1>\n           </Grid>\n           <Grid item xm={4}>\n           </Grid>\n       </Grid>\n\n       <Grid container  justify=\"center\" alignContent='center' alignItems=\"center\"   direction={'column'} spacing={10}>\n       <Grid item xm={6}>\n           <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n               <Grid item xm={2} > \n               <TextField required id=\"name\" label=\"Name\" name='name' defaultValue={this.state.update.name} onChange={this.onChange} autoFocus/>\n               </Grid>\n               <Grid item xm={2}>\n               <TextField required id=\"code\" label=\"code\" name='code' defaultValue={this.state.update.code} onChange={this.onChange} />\n               </Grid>\n           </Grid>\n           \n           <Grid container spacing={3}>\n               <Grid item xm={6} md={6}>\n                   Tax Type :  \n                <FormControl className={classes.formControl}>\n                               <Select onChange={this.onChange}   value={this.state.update.discount_type}  name='discount_type' id=\"discount_type\">\n                               <MenuItem value=\"percent\">Percentage</MenuItem>\n                               <MenuItem value=\"fixed\">Fixed</MenuItem>\n                               </Select>\n                           </FormControl>\n               </Grid>\n               <Grid item xm={6} md={6} > \n               <TextField required id=\"rate\"  name=\"rate\" onChange={this.onChange} label=\"rate\" name='rate' defaultValue={this.state.update.rate} onChange={this.onChange} />\n\n              </Grid>\n           </Grid>\n           <Grid container spacing={3}  alignItems='flex-end'>\n\n               <Grid item xm={3} md={6}> \n               <Button\n                               type='submit'\n                               variant=\"contained\"\n                               color=\"primary\"\n                               onClick={()=>{this.onSubmit()}}\n                               >\n                               Add\n                               </Button>\n               </Grid>\n               <Grid item xm={3} md={6}> \n              </Grid>\n           </Grid>\n       </Grid>\n       </Grid><br></br>\n                    </div>\n        return (\n            popUpRender\n        )\n    }\n}\n\n\n\nTaxCreation.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n\n\nconst mapStateToProps = state => ({\n    user: state.user\n})\nexport default withStyles(styles)(connect(mapStateToProps)(TaxCreation))\n","import { baseRequest } from '../base';\n// api for items \n\nconst getItemCatagories = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/items/catagories','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  \n  const deleteItemCatagory = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/items/catagories/delete','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const createItemCatagory = async data => {\n      try {\n        return await baseRequest('apiv1/inventory/items/catagories','POST', data);\n      } catch(e){\n        alert(e)\n      }\n  };\n  \n  \n  const getItemCatagory = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/items/catagory','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const updateItemCatagory= async data => {\n    try {\n      return await baseRequest('apiv1/inventory/items/catagory','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \nexport { getItemCatagories, deleteItemCatagory, createItemCatagory, getItemCatagory, updateItemCatagory}\n  ","import React, { Component } from 'react'\nimport List from '../list';\nimport { getItem, updateItem,  deleteItems } from '../../api/inventory/itemApi';\nimport {getItemCatagories} from '../../api/inventory/itemCatagory'\nimport {Button, TextField,Grid } from '@material-ui/core';\nimport {getPlacements} from '../../api/misc'\n\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\nimport Swal from 'sweetalert2'\n\n\n\nclass ItemList extends Component {\n    \n    constructor(props){\n        super(props)\n        this.popUp = this.popUp.bind(this)\n        this.state = {\n            'catagories':[],\n            'popUp':false,\n            'item':{\n                'catagory':''\n            },\n            'update':{},\n            'placements':[]\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.itemDelete = this.itemDelete.bind(this)\n        this.getPlacementsData = this.getPlacementsData.bind(this);\n    }\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value][0]\n            }\n        })\n    }\n\n    \n    async onSubmit(e){\n        e.preventDefault();\n            var data = this.state.update\n            data = {...data, 'action':'edit','item_id':data.id}\n            updateItem(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        Swal.fire(\n                            'Updated!',\n                            'ItemData updated.',\n                            'success'\n                          )\n                        this.props.update(0)\n                    }\n                    else{\n                        Swal.fire({\n                            icon:'error',\n                            title:data['error']\n                        })                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    itemDelete(id){\n        var data = {\n            'items_id':[\n                id\n            ]\n        }\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to revert this!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, delete it!'\n          }).then((result) => {\n            if (result.value) {\n        deleteItems(JSON.stringify(data)).then(data=>{\n            try {\n                if (data['status']){\n                    Swal.fire({\n                        icon:'success',\n                        title:'Item entry has been deleted.',\n                        showConfirmButton: false,\n                        timer:1000\n                    })                    \n                    this.props.update(0)\n                }   else{\n                    Swal.fire({\n                        icon:'error',\n                        title:data['error']\n                    })                }\n            }catch(e){\n                console.log(e)\n            }\n        })\n    }\n})\n    }\n\n    async popUp(id, uuid=0){\n        var data = {\n            'action':'get',\n            'item_id':id,\n        }\n        var data_main;\n        await getItem(JSON.stringify(data)).then(data => {\n            if (data['status']){\n                data_main=data\n            }\n        })\n        await this.setState({\n            'popUp':true,\n            'update':data_main['items'][0]\n        })\n        data = {\n            'action':'get',\n            'start':0,\n            'end':50\n        }\n        await getItemCatagories(JSON.stringify(data)).then(data=> {\n            try { \n                if (data['status']){\n                    this.setState({\n                        ...this.state,\n                        'catagories':data['item_catagories']\n                    })\n                }\n                else{\n                    Swal.fire({\n                        icon:'error',\n                        title:data['error']\n                    })                   }\n            }catch(e){\n                console.log(e)\n            }\n        })\n        data ={\n            'action':'get',\n            'start':0,\n            'end':10,\n            'filter':'item',\n            'item':id\n        }\n        this.getPlacementsData(data)\n    }\n\n    async getPlacementsData(request){\n        await getPlacements(JSON.stringify(request)).then(data=> {\n            try { \n                console.log(data)\n                if (data['status']){\n                    this.setState({\n                       ...this.state,\n                       placements : data['placements']\n                    })\n                }\n                else{\n                    Swal.fire({\n                        icon:'error',\n                        title:data['error']\n                    })                   }\n            }catch(e){\n                console.log(e)\n            }\n        })\n    }\n\n    async update_placement_table (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                'loaded':false,\n                placementStart: 0,\n                placementEnd: 10,\n                placementPage:1\n            })\n        }\n        else{\n            if (this.state.placementStart+by>-1){\n                await this.setState({\n                    'loaded':false,\n                    placementStart: this.state.placementStart+by,\n                    placementEnd: this.state.placementEnd+by,\n                    placementPage:this.state.placementPage+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'item',\n            'item':this.state.update.id,\n            'start':this.state.placementStart,\n            'end':this.state.placementEnd\n        }\n        this.getPlacementsData(request_json)\n    }\n\n    columns = [\n        {\n            id:1,\n            name:\"Name\",\n            prop: 'name'\n        },\n        {\n            id:2,\n            name:\"Catagory\",\n            prop: 'catagory_str'\n        },\n        {\n            id:3,\n            name:\"Price\",\n            prop: 'sales_price'\n        },\n        ,\n        {\n            id:4,\n            name:\"Stock\",\n            prop: 'stock'\n        },\n        {\n            id:5,\n            name:\"Sold\",\n            prop: 'sold'\n        }      \n    ]\n\n    placementColumns = [\n        {\n            id:1,\n            name:\"Item\",\n            prop:'item_name',\n        },\n        {\n            id:2,\n            name:'Place On',\n            prop:'placed_on_str'\n        },\n        {\n            id:3,\n            name:'Stock',\n            prop:'stock'\n        },\n        {\n            id:4,\n            name:'Purchase Order ID',\n            prop:'purchase_order_uuid'\n        }\n    ]\n    dummy(){}\n\n    render() {\n        const catagories = this.state.catagories\n        const list = <List data={this.props.data} header={this.columns}   popUp={this.popUp} update={this.props.update} page={this.props.page} />\n        const popUpRender = <div>\n            <Grid container justify='center'>\n<Grid item xm={6}>\n<Button  variant=\"contained\" size='small' color=\"primary\" onClick={()=> {this.setState({...this.state, popUp:false})}}>\n                <ArrowLeftIcon></ArrowLeftIcon>\n         Back\n     </Button>          <h1>{this.state.item.name}</h1>\n                        <form onSubmit={this.onSubmit}>\n                            <table>\n                                <tbody>\n                                <tr>\n                                    <td>\n                                    Name:\n                                    </td>\n                                    <td>\n                                    <TextField\n                                id ='name'\n                                name=\"name\"\n                                type='text'\n                                onChange={this.onChange}  \n                                placeholder={this.state.update.name}          \n                            />\n                                    </td>\n                                </tr>\n                                <tr>\n<td>\nCatagory :\n</td>\n<td>\n<select name='catagory' id=\"catagory\" onChange={this.onChange} value={this.state.update.catagory} required >\n                                {catagories.map(\n                                    x => (\n                                    <option key={x.id} value={parseInt(x.id)}>{x.name}</option>\n                                    )\n                                )}\n                            </select>\n</td>\n                                </tr>\n                                </tbody>\n                            </table>\n                             \n                              <br></br><br></br>\n                            \n                            Sales Price : <input placeholder={this.state.update.sales_price} onChange={this.onChange}></input><br></br>\n                            Stock : {this.state.update.stock} <br></br>\n                            Sold : {this.state.update.sold} <br></br>\n\n                            <br></br>\n                            <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                >\n                                Update\n                                </Button> <Button variant=\"contained\" color=\"secondary\" onClick={() => {this.itemDelete(this.state.update.id)}}>\n                            Delete Item\n                        </Button> \n                        \n                </form>\n            \n                        <br>\n                        </br>\n                        </Grid>\n                        </Grid>\n                        <Grid container justify='center'>\n                            <Grid item xm={8} >\n                                <List data={this.state.placements} header={this.placementColumns}  popUp={this.dummy} update={this.update_placement_table} page={this.state.placementPage}>\n\n                                </List>\n                            </Grid>\n\n                        </Grid>\n                    </div>\n        return (\n            <div>\n                {this.state.popUp ? popUpRender : list}\n            </div>\n        )\n    }\n}\n\nexport default ItemList\n","import React, { Component } from 'react'\nimport {getItems} from '../../api//inventory/itemApi';\nimport {  connect } from 'react-redux';\nimport  ItemList  from './itemList';\nimport { Link} from 'react-router-dom';\n\n\nimport Button from '@material-ui/core/Button';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/styles';\nimport PropTypes from 'prop-types';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport LoadingIcon from '../loading';\n\n\n\nconst styles = makeStyles((theme) => ({\n    root: {\n    flexGrow: 12,\n    },\n    paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    },\n}));\n\n\nclass Items extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            'items':[],\n            'loaded':false,\n            'start':0,\n            'end':10,\n            'page':1\n        }\n        this.update_table = this.update_table.bind(this)\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n        this.update_table(0)\n    }\n\n    async update_table (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                'loaded':false,\n                start: 0,\n                end: 10,\n                page:1\n            })\n        }\n        else{\n            if (this.state.start+by>-1){\n                await this.setState({\n                    'loaded':false,\n                    start: this.state.start+by,\n                    end: this.state.end+by,\n                    page:this.state.page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.start,\n            'end':this.state.end\n        }\n        this.getItemsData(request_json)\n    }\n    \n    async getItemsData (request_json) {\n        await getItems(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'items':data['items'],\n                    'loaded':true\n                })\n            }  \n        })\n    }\n\n \n\nrender() {\n    const render_after_load = (\n        <div>\n            <ItemList data={this.state.items} update={this.update_table} page={this.state.page} />\n        </div>\n    )\n    const { classes } = this.props;\n\n\n    return(\n        <div className={classes.root}>\n        <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n            <Grid item xs={3} >\n            <Button variant=\"contained\" color=\"primary\" onClick={() => {this.update_table(0)}}>\n              <RefreshIcon/>&nbsp;&nbsp;&nbsp;Refresh Table\n              </Button>\n            </Grid>\n            <Grid item xs={5}>\n  \n            </Grid>\n              <Grid item xs={3}>\n              <Link to='/items/create' style={{ textDecoration: 'none' }}>\n              <Button variant=\"contained\" color=\"secondary\">\n              <AddCircleIcon/>&nbsp;&nbsp;&nbsp;Add New Item\n              </Button>\n              </Link>\n              </Grid>\n  \n          <Grid item xs={12}>\n            <Paper className={classes.paper}>\n            {this.state.loaded ? render_after_load : <LoadingIcon></LoadingIcon>}\n            </Paper>\n          </Grid>\n          \n        </Grid>\n      </div>\n    )\n}\n}\n\n\nItems.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n\n\nconst mapStateToProps = state => ({\n    user: state.user,\n})\n\nexport default withStyles(styles)(connect(mapStateToProps)(Items))","import React, { Component } from 'react'\nimport {  connect } from 'react-redux';\nimport {Button, TextField,Grid } from '@material-ui/core';\nimport { createItem } from '../../api/inventory/itemApi';\nimport {getItemCatagories} from '../../api/inventory/itemCatagory'\n\nimport Swal from 'sweetalert2'\n\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\n\nclass ItemCreation extends Component {\n\n    constructor (props){\n        super(props)\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.state = {\n            'catagories':[],\n            'update':{\n            }\n        }\n    }\n\n    async componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n        var data = {\n            'action':'get',\n            'start':0,\n            'end':50\n        }\n        await getItemCatagories(JSON.stringify(data)).then(data=> {\n            try { \n                if (data['status']){\n                    this.setState({\n                        ...this.state,\n                        'catagories':data['item_catagories']\n                    })\n                }\n                else{\n                    Swal.fire({\n                        icon:'error',\n                        title:data['error']\n                    })                   }\n            }catch(e){\n                console.log(e)\n            }\n        })\n    }\n\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value][0]\n            }\n        })\n    }\n\n\n    async onSubmit(e){\n        e.preventDefault();\n            var data = {...this.state.update}\n            var ele;\n            for (ele in this.state.update){\n                data[ele] = this.state.update[ele]\n            }\n            data = {...data, 'action':'add'}\n            console.log(data)\n            createItem(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        Swal.fire(\n                            'Updated!',\n                            'Item has been added.',\n                            'success'\n                          ) \n                    }\n                    else{\n                        Swal.fire({\n                            icon:'error',\n                            title:data['error']\n                        })                       }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    render() {\n        const catagories = this.state.catagories\n        const popUpRender = \n            <div>\n            <Grid container justify='center'>\n<Grid item xm={6}>\n            \n                        <form onSubmit={this.onSubmit}>\n                            Name: <TextField\n                                id ='name'\n                                name=\"name\"\n                                type='text'\n                                onChange={this.onChange}      \n                            />\n                            Catagory : <select name='catagory' id=\"catagory\" onChange={this.onChange} required >\n                                {catagories.map(\n                                    x => (\n                                    <option key={x.id} value={parseInt(x.id)}>{x.name}</option>\n                                    )\n                                )}\n                            </select> <br></br><br></br>\n                            \n                            Sales Price : <input name='sales_price' type='float' onChange={this.onChange}></input><br></br>\n\n                            <br></br>\n                            <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                >\n                                Create</Button>\n                </form>\n            \n                        <br>\n                        </br>\n                    </Grid>\n                    </Grid>\n                    </div>\n        return (\n            popUpRender\n        )\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    user: state.user\n})\n\nexport default connect(mapStateToProps)(ItemCreation)","import React, { Component } from 'react'\nimport List from '../list';\nimport { getItemCatagory, updateItemCatagory,  deleteItemCatagory } from '../../api/inventory/itemCatagory';\nimport {Button, TextField, Grid } from '@material-ui/core';\n\n\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\nimport Swal from 'sweetalert2'\n\n\nclass ItemCatagoryList extends Component {\n    \n    constructor(props){\n        super(props)\n        this.popUp = this.popUp.bind(this)\n        this.state = {\n            'popUp':false,\n            'itemCatagory':{},\n            'update':{}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.itemCatDelete = this.itemCatDelete.bind(this)\n        this.popUptemp = this.popUptemp.bind(this)\n        this.updatetemp = this.updatetemp.bind(this)\n    }\n    popUptemp(id,uuid){\n\n    }\n    updatetemp(){\n\n    }\n    onChange(e)\n    {\n        this.setState({\n            'itemCatagory': {\n                ...this.state.itemCatagory,\n                [e.target.name] : [e.target.value][0]\n            }\n        })\n    }\n\n    \n    async onSubmit(e){\n        e.preventDefault();\n            var data = this.state.itemCatagory\n            data = {...data, 'action':'edit','item_catagory_id':data.id}\n            console.log(data)\n            updateItemCatagory(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        Swal.fire(\n                            'Updated!',\n                            'ItemCatagory Data updated.',\n                            'success'\n                          )\n                        this.props.update(0)\n                    }\n                    else{\n                        Swal.fire({\n                            icon:'error',\n                            title:data['error']\n                        })\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    itemCatDelete(id){\n        var data = {\n            'item_catagories_id':[\n                id\n            ]\n        }\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to revert this!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, delete it!'\n          }).then((result) => {\n            if (result.value) {\n                \n        deleteItemCatagory(JSON.stringify(data)).then(data=>{\n            try {\n                if (data['status']){\n                    Swal.fire({\n                        icon:'success',\n                        title:'Item Catagory entry has been deleted.',\n                        showConfirmButton: false,\n                        timer:1000\n                    })\n                    this.props.update(0)\n                }   else{\n                    Swal.fire({\n                        icon:'error',\n                        title:data['error']\n                    })\n                }\n            }catch(e){\n                console.log(e)\n            }\n        })\n    }\n})\n    }\n    \n    async popUp(id, uuid=0){\n        const data = {\n            'action':'get',\n            'item_catagory_id':id,\n        }\n        var data_main;\n        await getItemCatagory(JSON.stringify(data)).then(data => {\n            console.log(data)\n            if (data['status']){\n                data_main=data\n            }\n        })\n\n        await this.setState({\n            'popUp':true,\n            'itemCatagory':data_main['item_catagories'][0]\n        })\n    }\n\n\n    columns = [\n        {\n            id:1,\n            name:\"Name\",\n            prop: 'name'\n        },\n        {\n            id:2,\n            name:'Items Under This Catagory',\n            prop:'count'\n        }\n    ]\n\n    items_c = [\n        {\n            id:1,\n            name:\"Item's Name\",\n            prop:'name'\n        },{\n            id:2,\n            name: 'Price',\n            prop: 'sales_price',\n        },\n        {\n            id:3,\n            name:'Sales Price',\n            prop:'sales_price'\n        },\n        {\n            id:4,\n            name: 'Stock',\n            prop:'stock',\n        },\n        {\n            id:5,\n            name:'Sold',\n            prop:'sold'\n        }\n\n\n    ]\n    \n\n    render() {\n        const list = <List data={this.props.data} header={this.columns}   popUp={this.popUp} update={this.props.update} page={this.props.page} />\n        const popUpRender = <div>\n            <Grid container justify='center'>\n<Grid item xm={6}>\n<Button  variant=\"contained\" size='small' color=\"primary\" onClick={()=> {this.setState({...this.state, popUp:false})}}>\n                <ArrowLeftIcon></ArrowLeftIcon>\n         Back\n     </Button>\n     <h1>{this.state.update.name}</h1>\n                        <form onSubmit={this.onSubmit}>\n                            <table cellSpacing={10} cellPadding={10}>\n                                <tbody>\n                                <tr>\n                                    <td>\n                                    Name: \n                                    </td>\n                                    <td>\n                                    <TextField\n                                id ='name'\n                                name=\"name\"\n                                type='text'\n                                onChange={this.onChange}  \n                                defaultValue={this.state.itemCatagory.name}          \n                            />\n                                    </td>\n                                </tr>\n                                <tr>\n<td>\n<Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                >\n                                Update\n                                </Button>\n</td>\n<td>\n<Button variant=\"contained\" color=\"secondary\" onClick={() => {this.itemCatDelete(this.state.itemCatagory.id)}}>\n                            Delete Discount\n                        </Button> \n</td>\n                                </tr>\n                                <tr>\n                                   <td colSpan={3}>\n                                       <h1> Related Items</h1>\n                                   <List data={this.state.itemCatagory.items} header={this.items_c} popUp={this.popUptemp} update={this.updatetemp} page={false} />\n                                   </td> \n                                </tr>\n                                </tbody>\n                            </table>\n                           \n                           \n                        \n                </form>\n            \n</Grid>\n            </Grid>\n                        \n                        \n                    </div>\n        return (\n            <div>\n                {this.state.popUp ? popUpRender : list}\n            </div>\n        )\n    }\n}\n\nexport default ItemCatagoryList\n","import React, { Component } from 'react'\nimport {getItemCatagories} from '../../api//inventory/itemCatagory';\nimport {  connect } from 'react-redux';\nimport  ItemCatagoryList  from './itemCatagoryList';\nimport { Link} from 'react-router-dom';\n\n\nimport Button from '@material-ui/core/Button';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/styles';\nimport PropTypes from 'prop-types';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport LoadingIcon from '../loading';\n\n\nconst styles = makeStyles((theme) => ({\n    root: {\n    flexGrow: 12,\n    },\n    paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    },\n}));\n\n\n\nclass ItemCatagories extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            'items':[],\n            'loaded':false,\n            'start':0,\n            'end':10,\n            'page':1\n        }\n        this.update_table = this.update_table.bind(this)\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n        this.update_table(0)\n    }\n\n    async update_table (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                'loaded':false,\n                start: 0,\n                end: 10,\n                page:1\n            })\n        }\n        else{\n            if (this.state.start+by>-1){\n                await this.setState({\n                    'loaded':false,\n                    start: this.state.start+by,\n                    end: this.state.end+by,\n                    page:this.state.page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.start,\n            'end':this.state.end\n        }\n        this.getItemCatagoriesData(request_json)\n    }\n    \n    async getItemCatagoriesData (request_json) {\n        await getItemCatagories(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'item_catagories':data['item_catagories'],\n                    'loaded':true\n                })\n            }  \n        })\n    }\n\n \n\nrender() {\n    const render_after_load = (\n        <div>\n            <ItemCatagoryList data={this.state.item_catagories} update={this.update_table} page={this.state.page} />\n        </div>\n    )\n    const { classes } = this.props;\n\n    return(\n        <div className={classes.root}>\n        <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n            <Grid item xs={3} >\n            <Button variant=\"contained\" color=\"primary\" onClick={() => {this.update_table(0)}}>\n              <RefreshIcon/>&nbsp;&nbsp;&nbsp;Refresh Table\n              </Button>\n            </Grid>\n            <Grid item xs={5}>\n  \n            </Grid>\n              <Grid item xs={3}>\n              <Link to='/itemcatagories/create' style={{ textDecoration: 'none' }}>\n              <Button variant=\"contained\" color=\"secondary\">\n              <AddCircleIcon/>&nbsp;&nbsp;&nbsp;Add New Item Catagories\n              </Button>\n              </Link>\n              </Grid>\n  \n          <Grid item xs={12}>\n            <Paper className={classes.paper}>\n            {this.state.loaded ? render_after_load : <LoadingIcon></LoadingIcon>}\n            </Paper>\n          </Grid>\n          \n        </Grid>\n      </div>\n    )\n}\n}\n\n\n\n\n\nItemCatagories.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\nconst mapStateToProps = state => ({\n    user: state.user,\n})\n\nexport default withStyles(styles)(connect(mapStateToProps)(ItemCatagories))","import React, { Component } from 'react'\nimport {  connect } from 'react-redux';\nimport {Button, TextField, Grid } from '@material-ui/core';\nimport { createItemCatagory } from '../../api/inventory/itemCatagory';\n\nimport Swal from 'sweetalert2'\n\nclass DiscountCreation extends Component {\n\n    constructor (props){\n        super(props)\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.state = {\n           'itemCatagory':{}\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n    }\n\n    \n    onChange(e)\n    {\n        this.setState({\n            'itemCatagory': {\n                ...this.state.itemCatagory,\n                [e.target.name] : [e.target.value][0]\n            }\n        })\n    }\n\n\n    async onSubmit(e){\n        e.preventDefault();\n            var data = {...this.state.itemCatagory}\n            data = {...data, 'action':'add'}\n            createItemCatagory(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        Swal.fire(\n                            'Updated!',\n                            'ItemCatagory Data has been added.',\n                            'success'\n                          )                    }\n                    else{\n                        Swal.fire({\n                            icon:'error',\n                            title:data['error']\n                        })                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    render() {\n        const popUpRender =\n        <div>\n        <Grid container justify='center'>\n        <Grid item xm={6}>\n                                <form onSubmit={this.onSubmit}>\n                                    <table>\n                                        <tbody>\n                                        <tr>\n                                            <td>\n                                            Name: \n                                            </td>\n                                            <td>\n                                            <TextField\n                                        id ='name'\n                                        name=\"name\"\n                                        type='text'\n                                        onChange={this.onChange}  \n                                        defaultValue={this.state.itemCatagory.name}          \n                                    />\n                                            </td>\n                                        </tr>\n                                        <tr>\n        <td>\n        <Button\n                                        type='submit'\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        >\n                                        Add\n                                        </Button>\n        </td>\n        <td>\n\n        </td>\n                                        </tr>\n                                        </tbody>\n                                    </table>\n                                   \n                                   \n                                \n                        </form>\n                    \n        </Grid>\n                    </Grid>\n                    \n                    </div>\n        return (\n            popUpRender\n        )\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    user: state.user\n})\n\nexport default connect(mapStateToProps)(DiscountCreation)","import React, { Component } from 'react'\nimport List from '../list';\nimport { getPlace, updatePlace,  deletePlaces, assignPlace } from '../../api/inventory/placeApi';\nimport {Button, TextField, Grid, Input } from '@material-ui/core';\nimport {getPlacements, deletePlacement } from '../../api/misc'\nimport {getItems} from '../../api/inventory/itemApi'\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\nimport Swal from 'sweetalert2'\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport {getPurchaseItems}  from '../../api/inventory/purchaseItem'\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\n\nclass PlaceList extends Component {\n    \n    constructor(props){\n        super(props)\n        this.popUp = this.popUp.bind(this)\n        this.state = {\n            'itemsPage':1,\n            'itemsStart':0,\n            'itemsEnd':10,\n            'newPlacementPopUpSelectItem': false,\n            'purchaseItemSelectPopUp':false,\n            'addPlacementFinal':false,\n            'page':1,\n            'start':0,\n            'end':10,\n            'popUpPlacement':false,\n            'popUp':false,\n            'place':{},\n            'update':{\n                'name':'',\n                'stock':1,\n            },\n            'placementUpdate':{},\n            'placements':[],\n            'items':[],\n            'purchaseItems':[],\n            'selectedPurchaseItem':[]\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.placeDelete = this.placeDelete.bind(this)\n        this.update = this.update.bind(this)\n        this.popUpPlacement = this.popUpPlacement.bind(this)\n        this.deletePlacement = this.deletePlacement.bind(this)\n        this.addNewItem = this.addNewItem.bind(this)\n        this.updateItemsTable = this.updateItemsTable.bind(this)\n        this.selectItem = this.selectItem.bind(this)\n        this.selectPurchaseItem = this.selectPurchaseItem.bind(this)\n        this.assignPlacement = this.assignPlacement.bind(this)\n    }\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value][0]\n            }\n        })\n    }\n\n    \n    async update (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                start: 0,\n                end: 10,\n                page:1\n            })\n        }\n        else{\n            if (this.state.start+by>-1){\n                await this.setState({\n                    start: this.state.start+by,\n                    end: this.state.end+by,\n                    page:this.state.page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'place':this.state.update.id,\n            'filter':'place',\n            'start':this.state.start,\n            'end':this.state.end\n        }\n        this.getPlacementsData(request_json)\n    }\n\n    async getPlacementsData(request_json){\n        var data_main;\n        await getPlacements(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                data_main=data['placements']\n            }\n        })\n        await this.setState({\n            ...this.state,\n            'popUpPlacement':true,\n            'placements':data_main\n        })\n    }\n\n    async deletePlacement(id){\n        const request = {\n            'action':'delete',\n            'id':id\n        }\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"The remaining stock will be added to the default storage place.\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, delete it!'\n          }).then((result) =>  {\n            if (result.value) {\n        deletePlacement(JSON.stringify(request)).then(data=>{\n            if(data['status']){\n                Swal.fire('Placement is deleted and the remaining stock is added to the default storing place.')\n                this.popUp(this.state.place.id)\n            }\n            else {\n                Swal.fire(data['error'])\n            }\n        })\n    }\n})\n}\n    \n\n    popUpPlacement(){\n\n    }\n    \n    async onSubmit(){\n            var data = this.state.update\n            data = {...data, 'action':'edit','place_id':data.id}\n            updatePlace(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        alert(\"Place Data updated.\")\n                        this.props.update(0)\n                    }\n                    else{\n                        alert(data['error'])\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    placeDelete(id){\n        var data = {\n            'places_id':[\n                id\n            ]\n        }\n        deletePlaces(JSON.stringify(data)).then(data=>{\n            try {\n                if (data['status']){\n                    alert('Place data deleted.')\n                    this.props.update(0)\n                }   else{\n                    alert(data['error'])\n                }\n            }catch(e){\n                console.log(e)\n            }\n        })\n    }\n    \n    async popUp(id, uuid=0){\n        const data = {\n            'action':'get',\n            'place_id':id,\n        }\n        var data_main, data_main2;\n        await getPlace(JSON.stringify(data)).then(data => {\n            if (data['status']){\n                data_main=data\n            }\n        })\n        await this.setState({\n            'popUp':true,\n            'place':data_main['places'][0],\n            'update':data_main['places'][0],\n        })\n        const req = {\n            'action':'get',\n            'place':id,\n            'filter':'place',\n            'start':0,\n            'end':10\n        }\n        this.getPlacementsData(req)\n    }\n\n    async addNewItem(id){\n        var request = {\n            action:'get',\n            filter:'none',\n            start:0,\n            end:10          \n        }    \n        await getItems(JSON.stringify(request)).then(data => {\n            if (data['status']){\n                this.setState({\n                    ...this.state,\n                    newPlacementPopUpSelectItem: true,\n                    items:data['items']                                        \n                })\n            }\n            else{\n                Swal.fire(data['error'])\n            }\n        })\n    }\n\n    async assignPlacement(){\n        var request = {\n            'action':\"add\",\n            'place_id':this.state.place.id,\n            'purchase_item':this.state.selectedPurchaseItem.id,\n            'stock':this.state.update.stock\n        }\n        await assignPlace(JSON.stringify(request)).then(data => {\n            if (data['status']){\n                Swal.fire('Selected Items have been assigned to the place.')\n                this.updateItemsTable(0)\n            }else{\n                Swal.fire(data['error'])\n            }\n        })\n    }\n\n    columns = [\n        {\n            id:1,\n            name:\"Name\",\n            prop: 'name'\n        },\n        {\n            id:2,\n            name:\"Number of Items Assigned To The Place (different Purchase orders)\",\n            prop: 'count_assignment'\n        }     \n    ]\n\n    placementColumn = [\n        {\n            id:1,\n            name:\"Item\",\n            prop:'item_name',\n        },\n        {\n            id:2,\n            name:'Purchase Order ID',\n            prop:'purchase_order_uuid'\n        },\n        {\n            id:3,\n            name:'Stock',\n            prop:'stock'\n        }\n    ]\n\n    itemsColumn = [\n        {\n            id:1,\n            name:'Item',\n            prop:'name',\n        },{\n            id:2,\n            name:'Defined Sales Price',\n            prop:'sales_price',\n        },{\n            id:3,\n            name:'Stock',\n            prop:'stock'\n        },{\n            id:4,\n            name:'catagory',\n            prop:'catagory_str'\n        }\n    ]\n\n    purchaseItemsColumn = [\n        {\n            id:1,\n            name:'Vendor',\n            prop:'vendor'\n        },{\n            id:2,\n            name:'Purchase Order ID',\n            prop:'purchase_order_id',\n        },{\n            id:3,\n            name:'Purchase Price',\n            prop:'price'\n        },{\n            id:4,\n            name:'Total Stock',\n            prop:'stock'\n        },{\n            id:5,\n            name:'Unassigned Stock (On Default Place)',\n            prop:'on_default'\n        }\n    ]\n\n    async updateItemsTable (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                'itemsStart': 0,\n                'itemsEnd': 10,\n                'itemsPage':1\n            })\n        }\n        else{\n            await this.setState({\n                'itemsStart': this.state.itemsStart+by,\n                'itemsEnd': this.state.itemsEnd+by,\n                'itemsPage':this.state.itemsPage+x\n            })\n        \n        }\n        var  request = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.itemsStart,\n            'end':this.state.itemsEnd\n        }\n        await getItems(JSON.stringify(request)).then(data => {\n            if (data['status']){\n                this.setState({\n                    ...this.state,\n                    items:data['items']                                        \n                })\n            }\n            else{\n                Swal.fire(data['error'])\n            }\n        })\n    }\n    \n    async selectItem(id){\n        var request = {\n            'action':'get',\n            'filter':'itemForPlace',\n            'item_id':id,\n        }\n        var item;\n        for (var x in this.state.items){\n            if (this.state.items[x].id===id){\n                item = this.state.items[x]\n            } \n        }\n        await getPurchaseItems(JSON.stringify(request)).then(data => {\n            console.log(data)\n            if (data['status']){\n                this.setState({\n                    ...this.state,\n                    selectedItem:item,\n                    purchaseItemSelectPopUp:true,\n                    purchaseItems:data['purchase_items']                                \n                })\n            }\n            else{\n                Swal.fire(data['error'])\n            }\n        })\n    }\n\n    async selectPurchaseItem(id){\n        var purchase_item;\n        for (var x in this.state.purchaseItems){\n            if (this.state.purchaseItems[x].id===id){\n                purchase_item = this.state.purchaseItems[x]\n            } \n        }\n        await this.setState({\n            ...this.state,\n            addPlacementFinal: true,\n            placementUpdate:{\n                ...this.state.placementUpdate,\n                placementUpdate:{\n                    'purchase_item_id':id,\n                    'placed_on':this.state.place.id\n                },\n            },\n            'selectedPurchaseItem':purchase_item,\n        })\n        console.log(this.state)\n    }\n    render() {\n        const list = <List data={this.props.data} header={this.columns}   popUp={this.popUp} update={this.props.update} page={this.props.page} />\n        const fianlForm = <div>\n            <table cellSpacing={10}  cellPadding={10} >\n                <tbody>\n                    <tr>\n                        <td colSpan={2}>\n                            <h2><u>Selected Item</u></h2>\n                            <List data={[this.state.selectedItem]} header={this.itemsColumn}/>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td colSpan={2}>\n                            <h2><u>Selected Stock (Purchase Order)</u></h2>\n                            <List data={[this.state.selectedPurchaseItem]} header={this.purchaseItemsColumn}/>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td> \n                            <TextField required id=\"stock\"  name=\"stock\" onChange={this.onChange} label=\"Number of Items To Assign\" fullWidth defaultValue={this.state.update.stock}  type='number' autoFocus min={1} max={this.state.selectedPurchaseItem.on_default} />\n                        </td>\n                        <td>\n                            <Button  variant=\"contained\" color=\"primary\" onClick={()=> {this.assignPlacement()}}>Assign</Button>\n                        </td>\n                    </tr>\n                </tbody>\n\n            </table>\n        </div>\n        const newPlacementForm = <div>\n            <hr></hr>\n            <table cellSpacing={10} cellPadding={10}>\n                <tbody>\n                    <tr>\n                        <th colSpan={2}>\n                            <h1>Place new item to {this.state.place.name}</h1>\n                            {this.state.purchaseItemSelectPopUp ? <h4>Select a Purchase Order</h4> : <h4>Select an Item</h4>}\n                        </th>\n                    </tr>\n                    <tr>\n                        <td colSpan={2}>\n                        {this.state.purchaseItemSelectPopUp ? this.state.addPlacementFinal ? fianlForm : <List data={this.state.purchaseItems} header={this.purchaseItemsColumn} popUp={this.selectPurchaseItem}></List> : <List data={this.state.items} header={this.itemsColumn}  popUp={this.selectItem} update={this.updateItemsTable} page={this.state.itemsPage}/> }   \n                           </td>\n                    </tr>\n                </tbody>\n\n            </table>\n        </div>\n        const popUpRender = <div>\n                         &nbsp;\n                        &nbsp;\n                        &nbsp;\n                        &nbsp;\n                        &nbsp;\n                        &nbsp;<Button  variant=\"contained\" size='small' color=\"primary\" onClick={()=> {this.setState({...this.state, popUp:false})}}>\n                            <ArrowLeftIcon></ArrowLeftIcon>\n                            Back\n                        </Button>\n                        <Grid container>\n                            <Grid item xs={3}>\n                            <span> </span>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <table cellSpacing={10}>\n                                    <tbody>\n                                        <tr>\n                                            <td colSpan={2}>\n                                            <h1>{this.state.place.name}</h1>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td colSpan={2}>\n                                            <TextField\n                                            id ='name'\n                                            name=\"name\"\n                                            label='Place Name'\n                                            autoFocus\n                                            fullWidth\n                                            required\n                                            type='text'\n                                            onChange={this.onChange}  \n                                            value={this.state.update.name}          \n                                        />\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                            <Button\n                                                type='submit'\n                                                variant=\"contained\"\n                                                color=\"primary\"\n                                                >\n                                                Update\n                                                </Button>\n                                            </td>\n                                            <td>\n                                            <Button variant=\"contained\" color=\"secondary\" onClick={() => {this.placeDelete(this.state.place.id)}}>\n                                                Delete Place\n                                            </Button> \n                                            </td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </Grid>\n                        </Grid>\n                        <Grid container justify={'center'}>\n                            <Grid item xm={8}>\n                                <table>\n                                    <tbody>\n                                    <tr>\n                                        <td>\n                                        <h1>Items Located On {this.state.update.name}</h1>\n                                        </td>\n                                        <td>\n                                            <Button variant=\"contained\" color=\"primary\" onClick={() => {this.addNewItem(this.state.place.id)}}><AddCircleIcon></AddCircleIcon></Button>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td colSpan={2}>\n                                            {this.state.newPlacementPopUpSelectItem  ? newPlacementForm : <List data={this.state.placements} header={this.placementColumn} delete={this.deletePlacement} popUp={this.popUpPlacement} update={this.update} page={this.state.page} />}\n                                            \n                                        </td>\n                                    </tr>\n                                    </tbody>\n                                </table>\n                            \n                            </Grid>\n                        </Grid>\n                        \n                    </div>\n        return (\n            <div>\n                {this.state.popUp ? popUpRender : list}\n            </div>\n        )\n    }\n}\n\nexport default PlaceList\n","import React, { Component } from 'react'\nimport {getPlaces} from '../../api/inventory/placeApi';\nimport {  connect } from 'react-redux';\nimport  PlaceList  from './placeList';\nimport { Link} from 'react-router-dom';\n\n\nimport Button from '@material-ui/core/Button';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport LoadingIcon from '../loading';\n\nclass Placements extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            'places':[],\n            'loaded':false,\n            'start':0,\n            'end':10,\n            'page':1\n        }\n        this.update_table = this.update_table.bind(this)\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n        this.update_table(0)\n    }\n\n    async update_table (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                'loaded':false,\n                start: 0,\n                end: 10,\n                page:1\n            })\n        }\n        else{\n            if (this.state.start+by>-1){\n                await this.setState({\n                    'loaded':false,\n                    start: this.state.start+by,\n                    end: this.state.end+by,\n                    page:this.state.page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.start,\n            'end':this.state.end\n        }\n        this.getPlacesData(request_json)\n    }\n    \n    async getPlacesData(request_json) {\n        await getPlaces(JSON.stringify(request_json)).then(data => {\n            console.log(data)\n            if (data['status']){\n                this.setState({\n                    'places':data['places'],\n                    'loaded':true\n                })\n            }  \n        })\n    }\n\n \n\nrender() {\n    const render_after_load = (\n        <div>\n            <PlaceList data={this.state.places} update={this.update_table} page={this.state.page} />\n        </div>\n    )\n\n    return(\n        <div>\n        <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n            <Grid item xs={3} >\n            <Button variant=\"contained\" color=\"primary\" onClick={() => {this.update_table(0)}}>\n              <RefreshIcon/>&nbsp;&nbsp;&nbsp;Refresh Table\n              </Button>\n            </Grid>\n            <Grid item xs={5}>\n  \n            </Grid>\n              <Grid item xs={3}>\n              <Link to='/places/create' style={{ textDecoration: 'none' }}>\n              <Button variant=\"contained\" color=\"secondary\">\n              <AddCircleIcon/>&nbsp;&nbsp;&nbsp;Add New Place\n              </Button>\n              </Link>\n              </Grid>\n  \n          <Grid item xs={12}>\n            <Paper>\n            {this.state.loaded ? render_after_load : <LoadingIcon></LoadingIcon>}\n            </Paper>\n          </Grid>\n          \n        </Grid>\n      </div>    )\n}\n}\n\n\n\n\nconst mapStateToProps = state => ({\n    user: state.user,\n})\n\nexport default connect(mapStateToProps)(Placements)","import React, { Component } from 'react'\nimport {  connect } from 'react-redux';\nimport {Button, TextField, Grid } from '@material-ui/core';\nimport { createPlace } from '../../api/inventory/placeApi';\nimport Swal from 'sweetalert2';\n\n\nclass PlaceCreation extends Component {\n\n    constructor (props){\n        super(props)\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.state = {\n            'update':{\n            }\n        }\n    }\n\n    async componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n    }\n\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value][0]\n            }\n        })\n    }\n\n\n    async onSubmit(e){\n        e.preventDefault();\n            var data = {...this.state.update}\n            data = {...data, 'action':'add'}\n            console.log(data)\n            createPlace(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        Swal.fire(\"New Place Added\")\n                    }\n                    else{\n                        Swal.fire(data['error'])\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    render() {\n        const popUpRender = <div>\n            <Grid container justify='center'>\n                <Grid item>\n                    \n<form onSubmit={this.onSubmit}>\n                    <table cellPadding={10} cellSpacing={10}>\n                        <tbody >\n                            <tr>\n<td>\n                            Name: <TextField\n                                id ='name'\n                                name=\"name\"\n                                type='text'\n                                onChange={this.onChange}      \n                            />\n</td>\n                            </tr>\n                            <tr>\n                                <td>\n                                <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                >\n                                Create</Button>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n               \n                            \n                           \n                </form>\n                </Grid>\n\n            </Grid>\n                    </div>\n        return (\n            popUpRender\n        )\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    user: state.user\n})\n\nexport default connect(mapStateToProps)(PlaceCreation)","import React from 'react'\n\nfunction Hello() {\n    console.log(\"here\")\n    return (\n        <div>\n            <h1>Dashboard</h1>\n            <h4>Some generic analytics will be showen here.</h4>\n        </div>\n    )\n}\nexport default Hello\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport Login from './users/login';\nimport Logout from './users/logout';\nimport VendorCreation from './vendors/vendorCreation';\nimport UserCreation from './users/userCreation';\nimport { BrowserRouter as Router, Switch , Route} from 'react-router-dom';\nimport Users from './users';\nimport Vendors from './vendors/index';\nimport Customers from './customer/index';\nimport CustomerCreation from './customer/customerCreation'\nimport PurchaseOrders from './purchaseOrder/index'\nimport PurchaseOrderCreation from './purchaseOrder/purchaseOrderCreation'\nimport Invoices from './invoices/index';\nimport InvoiceCreation from './invoices/invoiceCreation';\nimport Discounts from './discounts/index';\nimport DiscountCreation from './discounts/discountCreation'\nimport Taxes from './taxes/index';\nimport TaxCreation from './taxes/taxCreation'\nimport Items from './items/index'\nimport ItemCreation from './items/itemCreation'\nimport ItemCatagories from './itemCatagories/index';\nimport ItemCatagoryCreation from './itemCatagories/itemCreation';\nimport Places from './placement/index'\nimport PlaceCreation from './placement/placeCreation'\n\nimport { useSelector } from \"react-redux\";\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\n\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport PeopleIcon from '@material-ui/icons/People';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\nimport FeaturedPlayListIcon from '@material-ui/icons/FeaturedPlayList';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport Hello from './dashboard/hello';\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24,\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    textAlign: 'center',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nfunction Dashboard() {\n  \n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n\n  };\n\n  const user = useSelector(state => state.user);\n  var isDashboard = false\n  if( (window.location.pathname) ==='/'){\n    isDashboard = true\n  }\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            Mandala IMS\n          </Typography>\n          <IconButton color=\"inherit\"  onClick={()=> {window.location.href=\"/logout\"}}>\n          <ExitToAppIcon/>\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <Typography>\n            {user.data.first_name} <span>  </span> {user.data.last_name}<br></br>\n            {user.data.user_type}\n          </Typography>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Router>\n        <Divider />\n        <List>\n    <ListItem button onClick={()=> {window.location.href=\"/\"}}>\n      <ListItemIcon>\n        <DashboardIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Dashboard\" />\n    </ListItem>\n    <ListItem button  onClick={()=> {window.location.href=\"/purchaseorders\"}}>\n      <ListItemIcon>\n        <ShoppingCartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Purchase Orders\" />\n    </ListItem>\n    <ListItem button onClick={()=> {window.location.href=\"/vendors\"}}>\n      <ListItemIcon>\n        <PeopleIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Vendors\" />\n    </ListItem>\n    <ListItem button onClick={()=> {window.location.href=\"/invoices\"}}>\n      <ListItemIcon>\n        <DescriptionIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Invoices\" />\n    </ListItem>\n    <ListItem button onClick={()=> {window.location.href=\"/customers\"}}>\n      <ListItemIcon>\n        <MonetizationOnIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Customers\" />\n    </ListItem>\n    <ListItem button onClick={()=> {window.location.href=\"/items\"}}>\n      <ListItemIcon>\n      <FeaturedPlayListIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Items\" />\n    </ListItem>\n        </List>\n        <Divider />\n        <List>\n    <ListItem button onClick={()=> {window.location.href=\"/places\"}}>\n      <ListItemIcon>\n      <SettingsIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Item Managements\" />\n    </ListItem>\n    <ListItem button onClick={()=> {window.location.href=\"/discounts\"}}>\n      <ListItemIcon>\n      <SettingsIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Discounts\" />\n    </ListItem>\n    <ListItem button onClick={()=> {window.location.href=\"/taxes\"}}>\n      <ListItemIcon>\n      <SettingsIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Taxes\" />\n    </ListItem>\n    <ListItem button onClick={()=> {window.location.href=\"/itemcatagories\"}}>\n      <ListItemIcon>\n      <SettingsIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Item Catagories\" />\n    </ListItem>\n    <ListItem button onClick={()=> {window.location.href=\"/users\"}}>\n      <ListItemIcon>\n      <SettingsIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Staff Management\" />\n    </ListItem>\n        </List>\n        </Router>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container className={classes.container}>\n          <Grid container justify=\"center\">\n            <Grid item xs={12} >\n              {/* {isDashboard ? <Hello></Hello>: <span></span>} */}\n            <Router>\n            <Switch>\n                    <Route path='/login' component={Login}></Route>\n                    <Route path='/logout' component={Logout}></Route>\n                    <Route path='/users/create' component = {UserCreation}></Route>\n                    <Route path='/users' component = {Users}></Route>\n                    <Route path='/vendors/create' component = {VendorCreation}></Route>\n                    <Route path='/vendors' component = {Vendors}></Route>\n                    \n                    <Route path='/customers/create' component = {CustomerCreation}></Route>\n                    <Route path='/customers' component = {Customers}></Route>\n\n                    <Route path='/purchaseorders/create' component = {PurchaseOrderCreation}></Route>\n                    <Route path='/purchaseorders' component = {PurchaseOrders}></Route>\n                    \n                    <Route path='/invoices/create' component = {InvoiceCreation}></Route>\n                    <Route path='/invoices' component = {Invoices}></Route>\n\n                    <Route path='/discounts/create' component= {DiscountCreation}></Route>\n                    <Route path='/discounts' component= {Discounts}></Route>\n                    \n                    <Route path='/taxes/create' component= {TaxCreation}></Route>\n                    <Route path='/taxes' component= {Taxes}></Route>\n                    \n                    <Route path='/items/create' component= {ItemCreation}></Route>\n                    <Route path='/items' component= {Items}></Route>\n\n                    <Route path='/itemcatagories/create' component= {ItemCatagoryCreation}></Route>\n                    <Route path='/itemcatagories' component= {ItemCatagories}></Route>\n\n                    <Route path='/places/create' component= {PlaceCreation}></Route>\n                    <Route path='/places' component= {Places}></Route>\n                    </Switch>\n            </Router>\n            </Grid>            \n          </Grid>\n        </Container>\n      </main>\n    </div>\n  );\n}\n\nexport default Dashboard","import React, { Component } from 'react'\nimport {  connect } from 'react-redux';\nimport { getCurrentUser } from '../api/user';\nimport { loggedIn } from '../actions';\nimport swal from 'sweetalert';\nimport Dashboard from './dashboard'\nimport LoadingIcon from './loading'\nimport Login from './users/login'\n\nclass Index extends Component {\n    constructor (props){\n        super(props)\n        this.state = {\n            'loading':true\n        }\n    }\n    \n    \n\n    async componentDidMount() { \n        await getCurrentUser().then(data => {\n            if (data){\n              \n              console.log(data)\n                if (data['status'])\n                {\n                    this.props.dispatch(loggedIn(data['user_data']))\n                }\n                this.setState({\n                  'loading':false\n                })\n            }\n            else{\n                swal('Cannot connet to the server, make sure you have a stable internet connection.')\n            }\n        })\n    }\n    render() {\n        var render_x=<LoadingIcon></LoadingIcon>;\n        if(this.state.loading){\n          render_x = <LoadingIcon></LoadingIcon>\n        }\n        else{\n          if (this.props.user.isLoggedIn){\n            render_x = <Dashboard></Dashboard>\n          }\n          else{\n            render_x = <Login></Login>\n          }\n        }\n        \n        return (\n          <div>\n            {render_x}\n          </div>\n          \n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    user: state.user\n})\n\nexport default connect(mapStateToProps)(Index)","import React from 'react';\nimport './App.css';\nimport Index from './components';\n\n\nfunction  App() {\n  return (\n    <div>\n      <Index></Index>\n    </div>\n  );\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","var initState = {\n    'isLoggedIn':false,\n    'data':{}\n}\nconst userReducer = (state=initState, action) => {\n    switch(action.type){\n        case 'logout':\n            state.data = {}\n            state.isLoggedIn = false;\n            return{\n                isLoggedIn: state.isLoggedIn\n            }\n        case 'loggedIn':\n            state.data = action.payload\n            state.isLoggedIn = true;\n            return {\n                data: state.data,\n                isLoggedIn: state.isLoggedIn\n            }\n        default:\n            return state;\n    }\n\n};\n\nexport default userReducer","var initState = {\n    'data':{}\n}\nconst usersReducer = (state=initState, action) => {\n    switch(action.type){\n        case 'setUsers':\n            state.users = action.payload\n            return{\n                users: state.users\n            }\n        default:\n            return state;\n    }\n\n};\n\nexport default usersReducer","import { combineReducers } from 'redux';\nimport userReducer from './userReducer';\nimport usersReducer from './usersReducer';\n\nconst rootReducers = combineReducers ({\n    user: userReducer,\n    users : usersReducer\n})\n\nexport default rootReducers","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { applyMiddleware, createStore } from 'redux';\nimport rootReducer from './reducers';\nimport { Provider } from 'react-redux';\nimport thunkMiddleware from 'redux-thunk';\n\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.getElementById('root')\n    );\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"popUp_loader__ji3PT\",\"spin\":\"popUp_spin__1nLou\",\"dropbtn\":\"popUp_dropbtn__1fyGN\",\"dropdown\":\"popUp_dropdown__2vgTr\",\"dropdown_content\":\"popUp_dropdown_content__1rTux\"};"],"sourceRoot":""}