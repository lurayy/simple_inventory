{"version":3,"sources":["server.js","api/base.js","api/user.js","actions/index.js","components/users/login.jsx","components/users/logout.jsx","api/inventory/vendorApi.js","components/vendors/vendorCreation.jsx","components/users/userCreation.jsx","components/list.jsx","components/users/userList.jsx","components/loading.js","components/users/index.jsx","components/vendors/vendorList.jsx","components/vendors/index.jsx","api/sales/customer.js","components/customer/customerList.jsx","components/customer/index.jsx","components/customer/customerCreation.jsx","api/inventory/purchaseOrder.js","api/inventory/purchaseItem.js","api/misc.js","api/inventory/itemApi.js","components/purchaseOrder/popUpEdit.jsx","components/purchaseOrder/purchaseOrderList.jsx","components/purchaseOrder/index.jsx","components/purchaseOrder/purchaseOrderCreation.jsx","api/sales/invoice.js","api/sales/invoiceItem.js","api/inventory/placeApi.js","components/invoices/popUpEdit.jsx","components/invoices/invoiceListing.jsx","components/invoices/index.jsx","components/invoices/invoiceCreation.jsx","components/discounts/discountList.jsx","components/discounts/index.jsx","components/discounts/discountCreation.jsx","components/taxes/taxList.jsx","components/taxes/index.jsx","components/taxes/taxCreation.jsx","api/inventory/itemCatagory.js","qrScanner.js","components/items/itemList.jsx","components/items/index.jsx","components/items/itemCreation.jsx","components/itemCatagories/itemCatagoryList.jsx","components/itemCatagories/index.jsx","components/itemCatagories/itemCreation.jsx","components/placement/placeList.jsx","components/placement/index.jsx","components/placement/placeCreation.jsx","components/export/index.jsx","components/export/exportPurchaseOrders.jsx","components/export/exportInvoices.jsx","components/export/exportItems.jsx","components/dashboard.js","components/index.jsx","App.js","serviceWorker.js","reducers/userReducer.js","reducers/usersReducer.js","reducers/index.js","index.js","components/purchaseOrder/css/popUp.module.css"],"names":["url","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","setCookie","value","days","expires","date","Date","setTime","getTime","toUTCString","getResponse","response","a","contentType","headers","get","json","blob","then","window","URL","createObjectURL","Blob","link","createElement","href","setAttribute","body","appendChild","click","parentNode","removeChild","baseRequest","method","signal","fetch","serverUrl","credentials","myResponse","loginUser","data","alert","logoutUser","createUser","getUsers","getUser","updateUser","getCurrentUser","loggedIn","type","payload","Login","props","state","username","password","status","onChange","bind","onSubmit","this","current_state","user","isLoggedIn","location","e","setState","target","preventDefault","JSON","stringify","Container","component","maxWidth","CssBaseline","Avatar","style","padding","margin","backgroundColor","noValidate","TextField","variant","fullWidth","id","label","autoComplete","autoFocus","FormControlLabel","control","Checkbox","color","Button","Alert","severity","display","Grid","container","Box","mt","Component","connect","Logout","res","dispatch","history","push","getVendors","createVendor","deleteVendors","updateVendor","getVendor","styles","makeStyles","theme","root","flexGrow","paper","spacing","textAlign","palette","text","secondary","VendorCreation","update","ele","console","log","Swal","fire","icon","title","classes","justify","alignContent","alignItems","item","xm","xs","required","md","FormControl","InputLabel","htmlFor","Input","onClick","withStyles","UserCreation","user_type","password2","cellSpacing","cellPadding","useStyles","table","minWidth","List","page","delete_button","temp","header","rows","no_data","back","delete","pagination","IconButton","aria-label","disabled","TableContainer","Paper","Table","className","TableHead","TableRow","map","TableCell","key","TableBody","row","popUp","uuid","prop","size","UserList","columns","match","params","pushNewId","data_main","listData","list","popUpRender","user_data","first_name","last_name","email","defaultValue","is_active","userDelete","userRevive","left","bottom","right","LoadingIcon","React","useState","progress","setProgress","useEffect","timer","setInterval","oldProgress","clearInterval","direction","minHeight","CircularProgress","Users","update_table","request_json","by","x","start","end","getUsersData","render_after_load","users","to","textDecoration","loaded","VendorList","vendorDelete","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","showConfirmButton","middle_name","website","phone1","phone2","address","tax_number","Vendors","getVendorsData","vendors","getCustomers","deleteCustomers","createCustomer","getCustomer","updateCustomer","CustomerList","customerDelete","loading","complete","fromUrl","customer","Customers","context","getCustomersData","ref","child","customers","CustomerCreation","getPurchaseOrders","deletePurchaseOrder","createPurchaseOrder","getPurchaseOrder","updatePurchaseOrder","deletePurchaseItems","createPurchaseItem","updatePurchaseItem","getPurchaseItems","getDiscounts","deleteDiscounts","createDiscount","getDiscount","updateDiscount","getTaxes","deleteTaxes","createTax","getTax","updateTax","getPurchaseOrderStatus","getPlacements","deletePlacement","getExportFields","getExport","getItems","deleteItems","createItem","getItem","updateItem","PopUpEdit","purchase_order","converter","invoiced_on","completed_on","purchase_items","refreshTable","getItemData","selectItem","searchItem","addPurchaseItem","invoiceHandler","completeHandler","searchVendor","selectVendor","onChangePI","postPurchaseItem","deletePurchaseItem","parse","error","current","is_new","purchase_items_id","p_list","items","item_selection","itemPopUp","trigger","closeOnDocumentClick","placeholder","dropdown_content","popUpItem","colSpan","item_name","InputProps","readOnly","new","quantity","defective","Select","lable","discount_type","MenuItem","discount","purchase_price","vendor_selection","vendorPopup","vendor","vendor_name","added_by_name","third_party_invoice_number","selected","total_cost","parseInt","PurchaseOrderList","purchaseOrderDelete","PurchaseOrders","getPurchaseOrdersData","purchaseOrders","PurchaseOrderCreation","toISOString","addPurchaseOrder","registered","getInvoices","deleteInvoices","createInvoice","getInvoice","updateInvoice","getInvoiceStatus","deleteInvoiceItems","createInvoiceItem","updateInvoiceItem","getPlaces","deletePlaces","createPlace","getPlace","updatePlace","assignPlace","discount_columns","tax_columns","add_discount_columns","add_tax_columns","invoice","due_on","invoice_items","stateman","addInvoiceItem","dueOnHandler","getCustomerData","searchCustomer","selectCustomer","postInvoiceItem","deleteInvoiceItem","onChangePlace","removeEntry","addEntryDiscount","addEntryTax","popUpTemp","dis","temp2","applied_discount","pop","applied_tax","taxes","getPlacesData","filter","el","update_stock","sold_from","p","string","sold_from_selection","invoice_items_id","discount_start","discount_end","discount_page","getDiscountsData","tax_start","tax_end","tax_page","getTaxesData","discount_selection","tax_selection","sales_price","places","place_selection","selectPlace","str_placed_on","stocks","stock_selection","stockValue","purchase_item","selectStock","str","addPopupDiscount","addPopupTax","discounts","responsive","min","price","tax_total","sub_total","discount_amount","total_without_discount","total","discount_loaded","tax_loaded","customer_selection","customerPopup","spaceing","customer_name","invoice_number","total_amount","discount_total","paid_amount","additional_discount","InvoiceListing","invoiceDelete","Invoices","getInvoiceData","invoices","InvoiceCreation","pathname","DiscountList","discountDelete","code","rate","Discounts","DiscountCreation","formControl","TaxList","taxDelete","tax","tax_type","Taxes","TaxCreation","getItemCatagories","deleteItemCatagory","createItemCatagory","getItemCatagory","updateItemCatagory","SimpleDialog","onClose","open","handleClose","Dialog","aria-labelledby","DialogTitle","delay","onError","onScan","onFind","width","QrScanner","setOpen","ItemList","placementColumns","itemDelete","getPlacementsData","dummy","onFileChange","handleQR","getDataFromQR","files","Promise","resolve","reject","reader","FileReader","onloadend","onerror","readAsDataURL","dataUrl","product_image","thumbnail_image","request","slice","placements","placementStart","placementEnd","placementPage","catagories","catagory","stock","sold","weight","average_cost_price","description","src","alt","multiple","onDone","getFiles","getThumbnail","update_placement_table","Items","handleScan","handleError","err","getItemsData","ItemCreation","ItemCatagoryList","items_c","itemCatDelete","popUptemp","updatetemp","itemCatagory","ItemCatagories","getItemCatagoriesData","item_catagories","PlaceList","placementColumn","itemsColumn","purchaseItemsColumn","placeDelete","popUpPlacement","addNewItem","updateItemsTable","selectPurchaseItem","assignPlacement","place","req","action","newPlacementPopUpSelectItem","selectedPurchaseItem","itemsStart","itemsEnd","itemsPage","selectedItem","purchaseItemSelectPopUp","purchaseItems","addPlacementFinal","placementUpdate","fianlForm","max","on_default","newPlacementForm","Placements","PlaceCreation","Export","fields","docs","em","index_redner","redirect","ExportPurchaseOrders","ExportInvoices","ExportItems","exact_name","is_applied_name","is_applied_weight_from","is_applied_weight_upto","is_applied_average_cost_price_from","is_applied_average_cost_price_upto","is_applied_catagory","is_applied_stock_from","is_applied_stock_upto","is_applied_sales_price_from","is_applied_sales_price_upto","is_applied_sold_from","is_applied_sold_upto","handleChange","handleFilterChange","handlePopUp","old","show_fields","field","y","charAt","toUpperCase","filters","loadingTable","showItems","main_render","Switch","checked","exportData","weight_from","weight_upto","average_cost_price_from","average_cost_price_upto","stock_from","stock_upto","sales_price_from","sales_price_upto","sold_upto","toolbar","paddingRight","toolbarIcon","justifyContent","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","menuButtonHidden","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","height","overflow","paddingTop","paddingBottom","flexDirection","fixedHeight","Dashboard","useSelector","AppBar","clsx","Toolbar","edge","Typography","noWrap","Drawer","Divider","ListItem","button","ListItemIcon","ListItemText","primary","path","ItemCatagoryCreation","Places","Index","swal","render_x","App","Boolean","hostname","initState","userReducer","usersReducer","rootReducers","combineReducers","store","createStore","rootReducer","applyMiddleware","thunkMiddleware","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.345505ee.chunk.js","sourcesContent":["// const prod = `${window.location.protocol}//${window.location.host}/`;\n// const url = \"http://localhost:8000/\";\n// const url = \"http://192.168.100.5:8000/\";\nconst url =\"https://simpleim.herokuapp.com/\"\n// const serverUrl = process.env.NODE_ENV === \"development\" ? dev : prod;\nexport default url;\n","import serverUrl from \"../server\";\n\nfunction getCookie(name) {\n  var cookieValue = null;\n  if (document.cookie && document.cookie !== \"\") {\n    var cookies = document.cookie.split(\";\");\n    for (var i = 0; i < cookies.length; i++) {\n      var cookie = cookies[i].trim();\n      if (cookie.substring(0, name.length + 1) === name + \"=\") {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n  return cookieValue;\n}\n\nfunction setCookie(name,value,days) {\n  var expires = \"\";\n  if (days) {\n      var date = new Date();\n      date.setTime(date.getTime() + (days*24*60*60*1000));\n      expires = \"; expires=\" + date.toUTCString();\n  }\n  document.cookie = name + \"=\" + (value || \"\")  + expires + \"; path=/\";\n}\n\nconst getResponse = async response => {\n  const contentType = response.headers.get(\"content-type\");\n  if (contentType === \"application/json\") {\n    const json = await response.json();\n    return { response, json };\n  }\n  if (contentType === 'application/pdf'){\n    response.blob().then(\n      (blob) =>{\n        const url = window.URL.createObjectURL(new Blob([blob]));\n        const link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', `export.pdf`);\n        document.body.appendChild(link);\n        link.click();\n        link.parentNode.removeChild(link);\n      }\n    )\n    const json = {'status':true}\n    return {response, json}\n  }\n  return { response };\n};\n\nconst baseRequest = async (url, method, body, signal) => {\n    var cookie = getCookie(\"x-csrftoken\")\n    if (cookie === null) {\n      const response = await fetch(new URL('apiv1/users/verify', serverUrl), {\n        method: 'GET'\n      });\n      const temp = await getResponse(response)\n      setCookie('x-csrftoken', temp.json['x-csrftoken'], 2)\n    }\n    cookie = getCookie(\"x-csrftoken\")\n    const response = await fetch(new URL(url, serverUrl), {\n        method: method,\n        body: body,\n        signal: signal,\n        credentials: \"include\",\n        headers: {\n        \"x-csrftoken\": cookie,\n        \"Content-Type\": \"application/json\"\n        }\n    });\n    const myResponse = await getResponse(response);\n    return myResponse.json;\n};\n\n\nexport { baseRequest };","import { baseRequest } from './base';\n\nconst loginUser = async data => {\n    try {\n      return await baseRequest(\"apiv1/users/login\", \"POST\", data);\n    } catch (e) {\n      alert(e);\n    }\n  };\n\nconst csrfToken = async () => {\n    try {\n        return await baseRequest(\"apiv1/users/verify\", \"GET\");\n      } catch (e) {\n        alert(e);\n      }\n    };\n\nconst logoutUser = async data => {\n  try {\n    return await baseRequest('apiv1/users/logout', \"GET\");\n  } catch(e){\n    alert(e);\n  }\n};\n\nconst createUser = async data => {\n  try {\n    return await baseRequest('apiv1/users/create','POST', data);\n  } catch(e){\n    alert(e)\n  }\n};\n\nconst getUsers = async data => {\n  try {\n    return await baseRequest('apiv1/users/get','POST', data);\n  } catch(e){\n    alert(e)\n  }\n};\n\n\nconst getUser = async data => {\n  try {\n    return await baseRequest('apiv1/users/get/0','POST', data);\n  } catch(e){\n    alert(e)\n  }\n};\n\nconst updateUser = async data => {\n  try{\n    return await baseRequest('apiv1/users/get/0', 'POST', data);\n  } catch (e){\n    alert(e)\n  }\n};\n\n\nconst getCurrentUser = async data => {\n  try{\n    return await baseRequest('apiv1/users/current', 'POST', data);\n  } catch (e){\n    alert(e)\n  }\n};\n\nexport { loginUser, csrfToken, logoutUser, getUsers, createUser, getUser, updateUser, getCurrentUser }","export const logout = () => {\n    return {\n        type: 'logout'\n    };\n}\n\nexport const loggedIn = (data) => {\n    return {\n        type: 'loggedIn',\n        payload: data\n    };\n}\n\nexport const setUsers = (data) => {\n    return{\n        type: 'setUsers',\n        payload: data\n    }\n}\n\n\nexport const setVendors = (data) => {\n    return{\n        type: 'setVendors',\n        payload: data\n    }\n}","import React, { Component } from 'react';\nimport { loginUser, getCurrentUser } from '../../api/user';\nimport {  connect } from 'react-redux';\nimport { loggedIn } from '../../actions';\n\n//material-ui import button\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\n\nimport Alert from '@material-ui/lab/Alert';\n\nclass Login extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            username:'',\n            password:'',\n            status:'',\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n    componentDidMount() {\n        if (this.props.current_state.user.isLoggedIn === true){\n          window.location.href=\"/\"\n        }\n    }\n    onChange(e)\n    {\n        this.setState({[e.target.name]: [e.target.value]})\n    }\n    async onSubmit(e){\n        e.preventDefault();\n        const data = {\n            username: this.state.username[0],\n            password: this.state.password[0]\n        }\n        loginUser(JSON.stringify(data)).then(data => {\n            try{\n                if (data['status']){\n                    window.location.href=\"/\"\n                  }else if ((this.state.username===\"\" && this.state.password===\"\")|\n                (this.state.username===\"\" || this.state.password===\"\")){\n                        this.setState((state) => {\n                            return {status: \"Username and password empty\"};\n                          });\n                }\n                else if (data['status']=== false){\n                    this.setState((state) => {\n                        return {status: data['msg']};\n                      });\n                }\n            }catch(e){\n                alert(e)\n            }\n        })       \n    }\n\n    render() {\n      \n        return (\n            <Container component=\"main\" maxWidth=\"xs\">\n                \n                <CssBaseline />\n                <div>\n                  <Avatar style={{padding:30,margin:'auto',backgroundColor:'#1a237e'}} >\n                    <h3>O</h3>\n                  </Avatar>\n                  {/* <Typography component=\"h1\" variant=\"h4\" style={{textAlign:'center'}}>\n                    LOGIN\n                  </Typography> */}\n                  <form  onSubmit={this.onSubmit} noValidate>\n                    <TextField\n                      variant=\"outlined\"\n                      margin=\"normal\"\n                      fullWidth\n                      id=\"uname\"\n                      label=\"Username\"\n                      name=\"username\"\n                      autoComplete=\"email\"\n                      autoFocus\n                      type='text'\n                      onChange={this.onChange}\n                      value={this.state.username}\n                    />\n                    {/* required */}\n                    <TextField\n                      variant=\"outlined\"\n                      margin=\"normal\"\n                      fullWidth\n                      name=\"password\"\n                      label=\"Password\"\n                      type=\"password\"\n                      id=\"password\"\n                      autoComplete=\"current-password\"\n                      onChange={this.onChange}\n                      value={this.state.password}\n                    />\n                    <FormControlLabel\n                      control={<Checkbox value=\"remember\" color=\"primary\" />}\n                      label=\"Remember me\"\n                    />\n                    <Button\n                      type='submit'\n                      fullWidth\n                      variant=\"contained\"\n                      color=\"primary\"\n                    >\n                      Login\n                    </Button>\n                    <br/><br/>\n                    <Alert severity=\"error\" style={{display: this.state.status ? \"\":'none'}}>\n                        {this.state.status}\n                    </Alert>\n\n                    <Grid container>\n                      {/* <Grid item xs>\n                        <Link href=\"#\" variant=\"body2\">\n                          Forgot password?\n                        </Link>\n                      </Grid> */}\n                      {/* <Grid item>\n                        <Link href=\"#\" variant=\"body2\">\n                          {\"Don't have an account? Sign Up\"}\n                        </Link>\n                      </Grid> */}\n                    </Grid>\n                  </form>\n                </div>\n                <Box mt={8}>\n                  {/* <Copyright /> */}\n                </Box>\n              </Container>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    current_state: state\n})\n\nexport default connect(mapStateToProps)(Login)","import React, { Component } from 'react'\nimport { logoutUser } from '../../api/user';\nimport {  connect } from 'react-redux';\nimport { logout } from '../../actions';\n\n\nclass Logout extends Component {\n    componentDidMount(){\n        logoutUser().then(res => {\n            this.props.dispatch(logout())\n            this.props.history.push('/')\n\n        });\n    }\n\n    render() {\n        return (\n            <div>\n            </div>\n        )\n    }\n}\n\nexport default connect()(Logout)","import { baseRequest } from '../base';\n// api for vendors\n\nconst getVendors = async data => {\n  try {\n    return await baseRequest('apiv1/inventory/vendors','POST', data);\n  } catch(e){\n    alert(e)\n  }\n};\n\nconst createVendor = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/vendors','POST', data);\n    } catch(e){\n      alert(e)\n    }\n};\n\n\nconst deleteVendors = async data => {\n  try {\n    return await baseRequest('apiv1/inventory/vendors/delete','POST', data);\n  } catch(e){\n    alert(e)\n  }\n};\n\n\nconst updateVendor = async data => {\n  try {\n    return await baseRequest('apiv1/inventory/vendor','POST', data);\n  } catch(e){\n    alert(e)\n  }\n};\n\nconst getVendor = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/vendor','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n\nexport { getVendors, createVendor, deleteVendors, updateVendor, getVendor}","import React, { Component } from 'react'\nimport {  connect } from 'react-redux';\nimport {Button, TextField , withStyles} from '@material-ui/core';\nimport { createVendor } from '../../api/inventory/vendorApi';\n\n\nimport {Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\n\n\nimport {FormControl, InputLabel, Input} from '@material-ui/core'\nimport Swal from 'sweetalert2'\n\n\nconst styles = makeStyles((theme) => ({\n    root: {\n    flexGrow: 12,\n    },\n    paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    },\n}));\n\n\nclass VendorCreation extends Component {\n\n    constructor (props){\n        super(props)\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.state = {\n            'update':{\n                'middle_name':[''],\n                'website':[''],\n                'phone2':[''],\n                'address':['']\n            }\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n    }\n\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value]\n            }\n        })\n    }\n\n\n    async onSubmit(e){\n            var data = {...this.state.update}\n            var ele;\n            for (ele in this.state.update){\n                data[ele] = this.state.update[ele][0]\n            }\n            data = {...data, 'action':'add'}\n            console.log(data)\n            createVendor(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        Swal.fire(\n                            'Updated!',\n                            'Vendor details has been added.',\n                            'success'\n                          )                    }\n                    else{\n                        Swal.fire({\n                            icon:'error',\n                            title:data['error']\n                        })                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div>\n            &nbsp;\n            &nbsp;\n            &nbsp;\n            &nbsp;\n            &nbsp;\n            &nbsp; \n        <Grid  container spacing={3} justify=\"center\" alignContent='center' alignItems=\"center\">\n            <Grid item xm={4}>\n            \n            </Grid>\n            <Grid item xs={4}>\n            <h1>Add New Customer</h1>\n            </Grid>\n            <Grid item xm={4}>\n            </Grid>\n        </Grid>\n\n        <Grid container  justify=\"center\" alignContent='center' alignItems=\"center\">\n        <Grid item xm={6}>\n            <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n                <Grid item xm={2} > \n                <TextField required id=\"first_name\" label=\"First Name\" name='first_name' autoFocus onChange={this.onChange} />\n                </Grid>\n                <Grid item xm={2}>\n                <TextField id=\"middle_name\" label=\"Middle Name\" name='middle_name'  onChange={this.onChange} />\n                </Grid>\n                <Grid item xm={2}>\n                <TextField required id=\"last_name\" label=\"Last Name\" name='last_name'  onChange={this.onChange} />\n                </Grid>\n            </Grid>\n            \n            <Grid container spacing={3}>\n                <Grid item xm={6} md={6}> \n                <FormControl fullWidth required>\n                <InputLabel htmlFor=\"email\">Email address</InputLabel>\n                <Input id=\"email\" required name='email' fullWidth onChange={this.onChange}   />\n                </FormControl>\n                </Grid>\n                <Grid item xm={6} md={6}> \n                 <TextField\n                                id ='website'\n                                name=\"website\"\n                                label='Website'\n                                type='text'\n                                fullWidth\n                                onChange={this.onChange}                                \n                            />\n\n               </Grid>\n            </Grid>\n\n\n            <Grid container spacing={3} >\n                \n                <Grid item xm={6} md={6}> \n                <TextField\n                label=\"Primary Phone Number\"\n                                id ='phone1'\n                                name=\"phone1\"\n                                fullWidth\n                                required\n                                onChange={this.onChange}                                  \n                            />\n                </Grid>\n                <Grid item xm={6} md={6}> \n                 \n                <TextField\n                    label='Second Phone Number'\n                                id ='phone2'\n                                name=\"phone2\"\n                                fullWidth\n                                onChange={this.onChange}                                \n                            />\n\n               </Grid>\n            </Grid>\n\n\n            <Grid container spacing={3}>\n\n                <Grid item xm={6} md={6}> \n                <TextField\n                                id ='address'\n                                name=\"address\"\n                                type='text'\n                                label='Address'\n                                fullWidth\n                                onChange={this.onChange}\n                                required\n                            />\n                </Grid>\n                <Grid item xm={6} md={6} > \n                <TextField\n                                id ='tax_number'\n                                name=\"tax_number\"\n                                type='number'\n                                fullWidth\n                                label='Tax Number'\n                                onChange={this.onChange}  \n                                required                              \n                            />\n               </Grid>\n            </Grid>\n            <Grid container spacing={3}  alignItems='flex-end'>\n\n                <Grid item xm={3} md={6}> \n                <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={()=>{this.onSubmit()}}\n                                >\n                                Add\n                                </Button>\n                </Grid>\n                <Grid item xm={3} md={6}> \n                \n               </Grid>\n            </Grid>\n        </Grid>\n        </Grid><br></br>\n        </div>\n        )\n    }\n}\n\nVendorCreation.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n\nconst mapStateToProps = state => ({\n    user: state.user\n})\n\nexport default withStyles(styles)(connect(mapStateToProps)(VendorCreation))\n","import React, { Component } from 'react'\nimport {  connect } from 'react-redux';\nimport { createUser } from '../../api/user';\nimport {Button, TextField, Grid } from '@material-ui/core';\nimport Swal from 'sweetalert2'\n\n\nclass UserCreation extends Component {\n\n    constructor (props){\n        super(props)\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.state = {\n            'update':{\n                'user_type':'STAFF'\n            }\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n        if (this.props.user.data.user_type !== \"MANAGER\"){\n            this.props.history.push('/')\n        }\n    }\n\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value]\n            }\n        })\n    }\n\n\n    async onSubmit(e){\n        if (this.state.update.password[0] === this.state.update.password2[0]){\n            var data = {...this.state.update}\n            var ele;\n            for (ele in this.state.update){\n                data[ele] = this.state.update[ele][0]\n            }\n            createUser(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        Swal.fire(\"New User Created\")\n                    }\n                    else{\n                        Swal.fire(data['error'])\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n        }\n        else {\n            Swal.fire(\"Password didn't match\")\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Grid container justify='center'>\n                    <Grid item xm ={6}>\n\n                    <h1>Create New User</h1><br></br>\n                    <table cellSpacing={10}  cellPadding={10}>\n                        <tbody>\n                            <tr>\n                                <td>\n                                    First Name: <TextField\n                                    id ='first_name'\n                                    name=\"first_name\"\n                                    type='text'\n                                    onChange={this.onChange}  \n                                    required                  \n                                />\n                                </td>\n                                <td>\n                                    Last Name<TextField\n                                    id ='last_name'\n                                    name=\"last_name\"\n                                    type='text'\n                                    onChange={this.onChange}\n                                    required \n                                />\n                                </td>\n                            </tr>\n\n                            <tr>\n                                <td>\n                                Username :<TextField\n                                \n                                id ='username'\n                                name=\"username\"\n                                type='text'\n                                onChange={this.onChange}\n                                required \n                            />\n                                </td>\n                            </tr>\n                            \n                            <tr>\n                                <td>\n                                Password <TextField\n                                id=\"password\"\n                                name=\"password\"\n                                type=\"password\"\n                                autoComplete=\"current-password\"\n                                onChange={this.onChange}\n                                required \n                                />\n                                </td>\n                                <td>\n                                Confirm Password <TextField\n                                id=\"password2\"\n                                type=\"password\"\n                                name=\"password2\"\n                                autoComplete=\"current-password\"\n                                onChange={this.onChange}\n                                required \n                                />\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>\n                            Email : <TextField\n                                id ='email'\n                                name=\"email\"\n                                type='email'\n                                onChange={this.onChange}\n                                required \n                            />\n                            </td>\n                            <td>\n                            User Post:\n                            <select name='user_type' id=\"user_type\" onChange={this.onChange} value={this.state.update.user_type}>\n                                <option value=\"MANAGER\">Manager</option>\n                                <option value=\"STAFF\">Staff</option>\n                            </select>\n                            </td>\n                            </tr>\n                            <td>\n                            <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={this.onSubmit}\n                                >\n                                Update\n                                </Button>\n                            </td>\n\n                        </tbody>\n\n                    </table>\n\n                    </Grid>\n\n                </Grid>\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    user: state.user\n})\n\nexport default connect(mapStateToProps)(UserCreation)","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid'\nimport IconButton from '@material-ui/core/IconButton';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport {Button } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst List = (props) => {\n  var page = true;\n  if (!props.page){\n    page=props.page\n  }\n  const classes = useStyles();\n  const headers = props.header\n  const rows = props.data\n  var delete_button;\n  var temp;\n  var no_data=false\n  var back=true\n  if (rows.length === 0){\n    no_data=true\n  } \n  if (props.page === 1){\n    back = false\n  }\n\n  if (props.delete){\n    delete_button = true\n  }\n\n  const pagination = <div>\n    {back? <IconButton color=\"secondary\" onClick={() => {props.update(-10)}} aria-label=\"pervious-button\">\n      <NavigateBeforeIcon />\n    </IconButton> : <IconButton color=\"secondary\" onClick={() => {props.update(-10)}} aria-label=\"pervious-button\" disabled>\n      <NavigateBeforeIcon />\n    </IconButton>}\n    <b>\n    Page: {props.page}</b>\n    {no_data? <IconButton color=\"secondary\" onClick={() => {props.update(10)}} aria-label=\"pervious-button\" disabled>\n      <NavigateNextIcon />\n    </IconButton> : <IconButton color=\"secondary\" onClick={() => {props.update(10)}} aria-label=\"pervious-button\">\n      <NavigateNextIcon />\n    </IconButton>}\n  </div>\n\n  return (\n      <div>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n                {headers.map(\n                    header =>(\n                    <TableCell key={header.id}><b>{header.name}</b></TableCell>\n                    )\n                )}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          {rows.map(\n              row =>(\n                  <TableRow key={row.id} onClick={() => {props.popUp(row.id, row.uuid)}}>\n                      {headers.map(\n                          header =>\n                              (\n                                  temp = header.prop,\n                              <TableCell key={header.id}>{row[temp]}</TableCell>\n                              )\n                      )}\n                      <TableCell>{delete_button ? <Button  variant=\"contained\" size='small' color=\"secondary\" onClick={()=> {props.delete(row.id)}}><DeleteForeverIcon></DeleteForeverIcon></Button>:null }</TableCell>\n                  </TableRow>\n              )\n          )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      <Grid container justify=\"center\" alignItems=\"center\">\n    <Grid item xs={\"auto\"}>\n    {no_data ? <h2>No Data Available</h2> : <span></span>}\n    </Grid>\n    </Grid>\n    <br></br>\n    <Grid container justify=\"center\" alignItems=\"center\">\n    <Grid item xs={\"auto\"}>\n    {page ? pagination : <span></span>}\n    </Grid>    \n    </Grid>\n    <br></br>\n    </div>\n  );\n}\n\nexport default List","import React, { Component } from 'react'\nimport List from '../list';\nimport { getUser, updateUser } from '../../api/user';\nimport {Button, TextField, Grid } from '@material-ui/core';\n\nimport Swal from 'sweetalert2'\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\n\n\nclass UserList extends Component {\n    constructor(props){\n        super(props)\n        this.popUp = this.popUp.bind(this)\n        this.state = {\n            'popUp':false,\n            'user_data':{},\n            'update':{}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.back = this.back.bind(this);\n    }\n    \n    back(){ \n        if (this.props.data){\n            this.setState({...this.state, popUp:false});\n        }else{\n            this.props.history.push('/users')\n        }\n    }\n    async componentDidMount(){\n        try {\n            const {id} = this.props.match.params\n            if (id){\n                await this.popUp(id,0,true)\n            }\n        }catch(e){\n            console.log(e)\n        }\n    }\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value][0]\n            }\n        })\n    }\n\n    onSubmit(){\n        var data = this.state.update;\n        data = {\n            ...data,\n            'action':'edit',\n            'user_id':data.id\n        }\n        updateUser(JSON.stringify(data)).then(data =>{\n            if (data['status']){\n                Swal.fire(\n                    'Updated!',\n                    'Details has been updated.',\n                    'success'\n                  )                \n                  this.back()\n            }\n        })\n    }\n\n    userDelete(id,uuid){\n        var data = {\n            'action':'delete',\n            'user_id':id,\n            'uuid':uuid\n        }\n        updateUser(JSON.stringify(data)).then(data =>{\n            if (data['status']){\n                Swal.fire('User has been deleted. They cannot login now')\n                this.back()\n            }\n        })\n    }\n\n    \n    userRevive(id,uuid){\n        var data = {\n            'action':'revive',\n            'user_id':id,\n            'uuid':uuid\n        }\n        updateUser(JSON.stringify(data)).then(data =>{\n            if (data['status']){\n                Swal.fire('User has been made active. They login now')\n                this.back()\n            }\n        })\n    }\n\n    async popUp(id, uuid=0, fromUrl){\n        if(!fromUrl){\n            this.props.pushNewId(id)\n        }else{\n        const data = {\n            'action':'get',\n            'user_id':id,\n            'uuid':uuid\n        }\n        var data_main;\n        await getUser(JSON.stringify(data)).then(data => {\n            if (data['status']){\n                data_main=data\n            }\n        })\n        await this.setState({\n            'popUp':true,\n            'user_data':data_main,\n            'update':data_main\n        })\n    }\n}\n\n    columns = [\n        {\n            id:1,\n            name:\"Name\",\n            prop: 'name'\n        },\n        {\n            id:2,\n            name:\"Post\",\n            prop: 'status'\n        },\n        {\n            id:3,\n            name:\"Username\",\n            prop: 'username'\n        },\n        {\n            id:4,\n            name:\"Status\",\n            prop: 'is_active_str'\n        }      \n    ]\n    \n\n    render() {var listData\n        if (!this.props.data){\n            listData = []\n        }else{\n            listData=this.props.data\n        }\n        const list = <List data={listData} header={this.columns} popUp={this.popUp} update={this.props.update} page={this.props.page}/>\n        const popUpRender = \n        \n        \n        <div>\n             <Grid  container spacing={3} justify=\"center\" alignContent='center' alignItems=\"center\">\n        \n        <Grid item xm={4}>\n        <Button  variant=\"contained\" size='small' color=\"primary\" onClick={()=> {this.back()}}>\n            <ArrowLeftIcon></ArrowLeftIcon>\n     Back\n </Button>          <h1>{this.state.user_data.name}</h1>\n        &nbsp;\n        &nbsp;\n        &nbsp;\n        &nbsp;\n        &nbsp;\n        &nbsp; \n        \n        </Grid>\n        <Grid item xm={4}>\n        </Grid>\n    </Grid>\n\n            \n    <Grid container  justify=\"center\" alignContent='center' alignItems=\"center\">\n        <Grid item xm={6}>\n        <table cellPadding={10} cellSpacing={10}>\n            <tbody>\n                <tr>\n                    <td>\n                        \n                First Name : <TextField\n                                id ='first_name'\n                                name=\"first_name\"\n                                type='text'\n                                onChange={this.onChange}\n                                value={this.state.update.first_name}                       \n                            />\n                            \n                    </td>\n                    <td>\n\n                            \n                    Last Name : <TextField\n                            \n                            id ='last_name'\n                            name=\"last_name\"\n\n                            // placeholder = {this.state.user_data.last_name}   \n                            type='text'\n                            onChange={this.onChange}\n                            value={this.state.update.last_name}                       \n                        />\n                       \n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                    Username :<TextField\n                             \n                             id ='username'\n\n                             name=\"username\"\n                            //  placeholder = {this.state.user_data.username}   \n                             type='text'\n                             onChange={this.onChange}\n                             value={this.state.update.username}                       \n                         />\n                    </td>\n                <td>\n                Email : <TextField\n                                id ='email'\n                                name=\"email\"\n                                // placeholder = {this.state.user_data.email}   \n                                type='email'\n                                onChange={this.onChange}\n                                value={this.state.update.email}                       \n                            />\n                </td>\n\n                </tr>\n                <tr>\n                    <td>\n                    User Post:\n                            <select name='user_type' onChange={this.onChange} defaultValue={this.state.user_data.user_type}>\n                                <option value=\"MANAGER\">Manager</option>\n                                <option value=\"STAFF\">Staff</option>\n                            </select>\n                    </td>\n                </tr>\n<tr>\n    <td>\n    <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={this.onSubmit}\n                                >\n                                Update\n                                </Button>\n    </td>\n    <td>\n    {this.state.user_data.is_active ? <Button variant=\"contained\" color=\"secondary\" onClick={() => {this.userDelete(this.state.user_data.id, this.state.user_data.uuid)}}>\n                            Deactivate User\n                        </Button> : <Button variant=\"contained\" color=\"secondary\" onClick={() => {this.userRevive(this.state.user_data.id, this.state.user_data.uuid)}}>\n                            Activate User\n                        </Button> }\n                        \n    </td>\n</tr>\n\n            </tbody>\n        </table>\n                            \n                            \n                       \n                        <br>\n                        </br>\n                        </Grid>\n                        </Grid>\n                    </div>\n        return (\n            <div>\n                {this.state.popUp ? popUpRender : list}\n            </div>\n        )\n    }\n}\n\nexport default  UserList","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    backgroundColor: \"black\",\n        \n    // position: 'fixed',\n    left: theme.spacing(2),\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n    },\n}));\n\nexport default function LoadingIcon() {\n  const [progress, setProgress] = React.useState(0);\n\n  React.useEffect(() => {\n    function tick() {\n      // reset when reaching 100%\n      setProgress(oldProgress => (oldProgress >= 100 ? 0 : oldProgress + 1));\n    }\n\n    const timer = setInterval(tick, 20);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  return (\n    <Grid\n    container\n    spacing={0}\n    direction=\"column\"\n    alignItems=\"center\"\n    justify=\"center\"\n    style={{ minHeight: '100vh' }}\n  >\n  \n    <Grid item xs={3}>\n    <CircularProgress variant=\"determinate\" value={progress} />\n\n    </Grid>   \n  \n  </Grid> \n        \n  );\n}","import React, { Component } from 'react'\nimport { getUsers } from '../../api/user'\nimport {  connect } from 'react-redux';\nimport UserList from './userList';\nimport { Link} from 'react-router-dom';\n\n\nimport Button from '@material-ui/core/Button';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/styles';\nimport PropTypes from 'prop-types';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport LoadingIcon from '../loading';\nimport Swal from 'sweetalert2';\n\n\nconst styles = makeStyles((theme) => ({\n    root: {\n    flexGrow: 12,\n    },\n    paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    },\n}));\n\nclass Users extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            'users':[],\n            'loaded':false,\n            'start':0,\n            'end':10,\n            'page':1\n        }\n        this.update_table = this.update_table.bind(this)\n        this.pushNewId = this.pushNewId.bind(this)\n    }\n\n    \n    pushNewId(id){\n        this.props.history.push('/users/'+id)\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n        if (this.props.user.data.user_type !== \"MANAGER\"){\n            console.log(\"not manager\")\n            Swal.fire({\n                icon:'error',\n                title:'Permission Denied!',\n                text:'You donont have authorization. Contact Manager or Admin'\n            })\n            this.props.history.push('/')\n            return\n        }\n        this.update_table(0)\n\n    }\n\n    async getUsersData (request_json) {\n        await getUsers(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'users':data['users'],\n                    'loaded':true\n                })\n            }  \n        })\n    }\n\n    async update_table (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                'loaded':false,\n                start: 0,\n                end: 10,\n                page:1\n            })\n        }\n        else{\n            if (this.state.start+by>-1){\n                await this.setState({\n                    'loaded':false,\n                    start: this.state.start+by,\n                    end: this.state.end+by,\n                    page:this.state.page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.start,\n            'end':this.state.end\n        }\n        this.getUsersData(request_json)\n    }\n    \n\n    render() {\n        const render_after_load = (\n            <div>\n                <UserList pushNewId={this.pushNewId} data={this.state.users} update={this.update_table} page={this.state.page} />\n            </div>\n        )\n        const { classes } = this.props;\n\n\n        return(\n            <div className={classes.root}>\n        <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n            <Grid item xs={3} >\n            <Button variant=\"contained\" color=\"primary\" onClick={() => {this.update_table(0)}}>\n              <RefreshIcon/>&nbsp;&nbsp;&nbsp;Refresh Table\n              </Button>\n            </Grid>\n            <Grid item xs={5}>\n  \n            </Grid>\n              <Grid item xs={3}>\n              <Link to='/users/create' style={{ textDecoration: 'none' }}>\n              <Button variant=\"contained\" color=\"secondary\">\n              <AddCircleIcon/>&nbsp;&nbsp;&nbsp;Add New Staff\n              </Button>\n              </Link>\n              </Grid>\n  \n          <Grid item xs={12}>\n            <Paper className={classes.paper}>\n            {this.state.loaded ? render_after_load : <LoadingIcon></LoadingIcon>}\n            </Paper>\n          </Grid>\n          \n        </Grid>\n      </div>\n        )\n    }\n}\n\n\nUsers.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n\n\nconst mapStateToProps = state => ({\n    user: state.user,\n})\n\nexport default withStyles(styles)(connect(mapStateToProps)(Users))\n","import React, { Component } from 'react'\nimport List from '../list';\nimport { getVendor, updateVendor,  deleteVendors } from '../../api/inventory/vendorApi';\nimport {Button, TextField, Grid } from '@material-ui/core';\n\nimport {FormControl, InputLabel, Input} from '@material-ui/core'\nimport Swal from 'sweetalert2'\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\n\nclass VendorList extends Component {\n    \n    constructor(props){\n        super(props)\n        this.popUp = this.popUp.bind(this)\n        this.state = {\n            'popUp':false,\n            'vendor':{},\n            'update':{}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.back = this.back.bind(this)\n        this.vendorDelete = this.vendorDelete.bind(this)\n    }\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value][0]\n            }\n        })\n    }\n\n    back(){ \n        if (this.props.data){\n            this.setState({...this.state, popUp:false});\n        }else{\n            this.props.history.push('/vendors')\n        }\n    }\n    async componentDidMount(){\n        try {\n            const {id} = this.props.match.params\n            if (id){\n                await this.popUp(id,0,true)\n            }\n        }catch(e){\n            console.log(e)\n        }\n    }\n    async onSubmit(){\n            var data = this.state.update\n            data = {...data, 'action':'edit'}\n            console.log(data)\n            updateVendor(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        Swal.fire(\n                            'Updated!',\n                            'Vendor Details has been updated.',\n                            'success'\n                          )\n                        this.back()\n                    }\n                    else{\n                        Swal.fire({\n                            icon:'error',\n                            title:data['error']\n                        })                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    vendorDelete(id){\n        var data = {\n            'vendors_id':[\n                id\n            ]\n        }\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to revert this!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, delete it!'\n          }).then((result) => {\n        deleteVendors(JSON.stringify(data)).then(data=>{\n            try {\n                if (data['status']){\n                    Swal.fire({\n                        icon:'success',\n                        title:'Vendor entry has been deleted.',\n                        showConfirmButton: false,\n                        timer:1000\n                    })  \n                    this.back()\n                }   else{\n                    Swal.fire({\n                        icon:'error',\n                        title:data['error']\n                    })                }\n            }catch(e){\n                console.log(e)\n            }\n        })\n    })\n}\n    \n    async popUp(id, uuid=0, fromUrl){\n        if(!fromUrl){\n            this.props.pushNewId(id)\n        }else{\n        const data = {\n            'action':'get',\n            'vendor_id':id,\n        }\n        var data_main;\n        await getVendor(JSON.stringify(data)).then(data => {\n            if (data['status']){\n                data_main=data\n            }\n        })\n        await this.setState({\n            'popUp':true,\n            'vendor':data_main['vendors'][0],\n            'update':data_main['vendors'][0]\n        })\n    }\n}\n\n\n    columns = [\n        {\n            id:1,\n            name:\"Name\",\n            prop: 'name'\n        },\n        {\n            id:2,\n            name:\"Phone Number\",\n            prop: 'phone1'\n        },\n        {\n            id:3,\n            name:\"Email\",\n            prop: 'email'\n        },\n        {\n            id:4,\n            name:\"Address\",\n            prop: 'address'\n        }      \n    ]\n    \n\n    render() {\n        var listData\n        if (!this.props.data){\n            listData = []\n        }else{\n            listData=this.props.data\n        }\n        const list = <List data={listData} header={this.columns}   popUp={this.popUp} update={this.props.update} page={this.props.page} />\n        const popUpRender = <div>\n             \n             \n        <Grid  container spacing={3} justify=\"center\" alignContent='center' alignItems=\"center\">\n        \n            <Grid item xm={4}>\n            <Button  variant=\"contained\" size='small' color=\"primary\" onClick={()=> {this.back()}}>\n                <ArrowLeftIcon></ArrowLeftIcon>\n         Back\n     </Button>          <h1>{this.state.update.name}</h1>\n            &nbsp;\n            &nbsp;\n            &nbsp;\n            &nbsp;\n            &nbsp;\n            &nbsp; \n            \n            </Grid>\n            <Grid item xm={4}>\n            </Grid>\n        </Grid>\n\n        <Grid container  justify=\"center\" alignContent='center' alignItems=\"center\">\n        <Grid item xm={6}>\n            <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n                <Grid item xm={2} > \n                <TextField required value={this.state.update.first_name} id=\"first_name\" label=\"First Name\" name='first_name' autoFocus onChange={this.onChange} />\n                </Grid>\n                <Grid item xm={2}>\n                <TextField id=\"middle_name\"  value={this.state.update.middle_name} label=\"Middle Name\" name='middle_name'  onChange={this.onChange} />\n                </Grid>\n                <Grid item xm={2}>\n                <TextField required id=\"last_name\" value={this.state.update.last_name} label=\"Last Name\" name='last_name'  onChange={this.onChange} />\n                </Grid>\n            </Grid>\n            \n            <Grid container spacing={3}>\n                <Grid item xm={6} md={6}> \n                <FormControl fullWidth required>\n                <InputLabel htmlFor=\"email\">Email address</InputLabel>\n                <Input id=\"email\" required name='email' value={this.state.update.email} fullWidth onChange={this.onChange}   />\n                </FormControl>\n                </Grid>\n                <Grid item xm={6} md={6}> \n                 <TextField\n                                id ='website'\n                                name=\"website\"\n                                label='Website'\n                                value={this.state.update.website}\n                                type='text'\n                                fullWidth\n                                onChange={this.onChange}                                \n                            />\n\n               </Grid>\n            </Grid>\n\n\n            <Grid container spacing={3} >\n                \n                <Grid item xm={6} md={6}> \n                <TextField\n                label=\"Primary Phone Number\"\n                                id ='phone1'\n                                value={this.state.update.phone1}\n                                name=\"phone1\"\n                                fullWidth\n                                required\n                                onChange={this.onChange}                                  \n                            />\n                </Grid>\n                <Grid item xm={6} md={6}> \n                 \n                <TextField\n                    label='Second Phone Number'\n                                id ='phone2'\n                                name=\"phone2\"\n                                value={this.state.update.phone2}\n                                fullWidth\n                                onChange={this.onChange}                                \n                            />\n\n               </Grid>\n            </Grid>\n\n\n            <Grid container spacing={3}>\n\n                <Grid item xm={6} md={6}> \n                <TextField\n                                id ='address'\n                                name=\"address\"\n                                type='text'\n                                label='Address'\n                                value={this.state.update.address}\n                                fullWidth\n                                onChange={this.onChange}\n                                required\n                            />\n                </Grid>\n                <Grid item xm={6} md={6} > \n                <TextField\n                                id ='tax_number'\n                                name=\"tax_number\"\n                                type='number'\n                                fullWidth\n                                label='Tax Number'\n                                value={this.state.update.tax_number}\n                                onChange={this.onChange}  \n                                required                              \n                            />\n               </Grid>\n            </Grid>\n            <Grid container spacing={3}  alignItems='flex-end'>\n\n                <Grid item xm={3} md={6}> \n                <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={()=>{this.onSubmit()}}\n                                >\n                                Update\n                                </Button>\n                </Grid><Grid item xm={3} md={6}> \n                <Button variant=\"contained\" color=\"secondary\" onClick={() => {this.vendorDelete(this.state.update.id)}}>\n                    Delete Vendor\n                </Button> \n               </Grid>\n            </Grid>\n        </Grid>\n        </Grid>\n            \n                        <br>\n                        </br>\n                    </div>\n        return (\n            <div>\n                {this.state.popUp ? popUpRender : list}\n            </div>\n        )\n    }\n}\n\nexport default VendorList\n","import React, { Component } from 'react'\nimport {getVendors} from '../../api/inventory/vendorApi';\nimport {  connect } from 'react-redux';\nimport  VendorList  from './vendorList';\nimport { Link} from 'react-router-dom';\n\nimport Button from '@material-ui/core/Button';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/styles';\nimport PropTypes from 'prop-types';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport LoadingIcon from '../loading';\n\n\nconst styles = makeStyles((theme) => ({\n    root: {\n    flexGrow: 12,\n    },\n    paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    },\n}));\n\nclass Vendors extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            'vendors':[],\n            'loaded':false,\n            'start':0,\n            'end':10,\n            'page':1\n        }\n        this.update_table = this.update_table.bind(this)\n        this.pushNewId = this.pushNewId.bind(this)\n    }\n\n    \n    pushNewId(id){\n        this.props.history.push('/vendors/'+id)\n    }\n    \n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n        this.update_table(0)\n    }\n\n    async update_table (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                'loaded':false,\n                start: 0,\n                end: 10,\n                page:1\n            })\n        }\n        else{\n            if (this.state.start+by>-1){\n                await this.setState({\n                    'loaded':false,\n                    start: this.state.start+by,\n                    end: this.state.end+by,\n                    page:this.state.page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.start,\n            'end':this.state.end\n        }\n        this.getVendorsData(request_json)\n    }\n    \n    async getVendorsData (request_json) {\n        await getVendors(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'vendors':data['vendors'],\n                    'loaded':true\n                })\n            }  \n        })\n    }\n\n \n\nrender() {\n    const { classes } = this.props;\n\n    const render_after_load = (\n        <div>\n            <VendorList data={this.state.vendors} update={this.update_table} page={this.state.page}  pushNewId={this.pushNewId}/>\n        </div>\n    )\n\n    return(\n        <div className={classes.root}>\n        <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n            <Grid item xs={3} >\n            <Button variant=\"contained\" color=\"primary\" onClick={() => {this.update_table(0)}}>\n              <RefreshIcon/>&nbsp;&nbsp;&nbsp;Refresh Table\n              </Button>\n            </Grid>\n            <Grid item xs={5}>\n  \n            </Grid>\n              <Grid item xs={3}>\n              <Link to='/vendors/create' style={{ textDecoration: 'none' }}>\n              <Button variant=\"contained\" color=\"secondary\">\n              <AddCircleIcon/>&nbsp;&nbsp;&nbsp;Add New Discount\n              </Button>\n              </Link>\n              </Grid>\n  \n          <Grid item xs={12}>\n            <Paper className={classes.paper}>\n            {this.state.loaded ? render_after_load : <LoadingIcon></LoadingIcon>}\n            </Paper>\n          </Grid>\n          \n        </Grid>\n      </div>\n    )\n}\n}\n\n\n\nVendors.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n\n\nconst mapStateToProps = state => ({\n    user: state.user,\n})\n\nexport default withStyles(styles)(connect(mapStateToProps)(Vendors))","import { baseRequest } from '../base';\n// api for Invoices \n\nconst getCustomers = async data => {\n    try {\n      return await baseRequest('apiv1/sales/customers','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  \n  const deleteCustomers = async data => {\n    try {\n      return await baseRequest('apiv1/sales/customers/delete','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const createCustomer = async data => {\n      try {\n        return await baseRequest('apiv1/sales/customers','POST', data);\n      } catch(e){\n        alert(e)\n      }\n  };\n  \n  \n  const getCustomer = async data => {\n    try {\n      return await baseRequest('apiv1/sales/customer','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const updateCustomer= async data => {\n    try {\n      return await baseRequest('apiv1/sales/customer','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \nexport {getCustomers, createCustomer, deleteCustomers, updateCustomer, getCustomer}\n  ","import React, { Component } from 'react'\nimport List from '../list';\nimport { getCustomer, updateCustomer,  deleteCustomers } from '../../api/sales/customer';\nimport {Button, TextField, Grid, withStyles } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\n\nimport {FormControl, InputLabel, Input} from '@material-ui/core'\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\nimport Swal from 'sweetalert2'\nimport LoadingIcon from '../loading';\n\n\nconst styles = makeStyles((theme) => ({\n    root: {\n    flexGrow: 12,\n    },\n    paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    },\n}));\n\n\nclass CustomerList extends Component {\n    \n    constructor(props){\n        super(props)\n        this.popUp = this.popUp.bind(this)\n        this.state = {\n            'loading':false,\n            'popUp':false,\n            'customer':{},\n            'update':{}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.customerDelete = this.customerDelete.bind(this)\n        this.back = this.back.bind(this)\n        this.popUp= this.popUp.bind(this)\n    }\n    \n    back(){ \n        if (this.props.data){\n            this.setState({...this.state, popUp:false});\n        }else{\n            this.props.history.push('/customers')\n        }\n    }\n\n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value][0]\n            }\n        })\n    }\n\n    async componentDidMount(){\n        try {\n            const {id} = this.props.match.params\n            if (id){\n                await this.popUp(id,0,true)\n            }\n        }catch(e){\n            console.log(e)\n        }\n    }\n\n    complete(){\n        this.setState({\n            ...this.state,\n            loading:false\n        })\n    }\n    loading(){\n        this.setState({\n            ...this.state,\n            loading:true\n        })\n    }\n\n    async onSubmit(){\n            this.loading()\n            var data = this.state.update\n            data = {...data, 'action':'edit'}\n            updateCustomer(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        Swal.fire(\n                            'Updated!',\n                            'Customer Details has been updated.',\n                            'success'\n                          )\n                            this.back()\n                        }\n                    else{\n                        Swal.fire({\n                            icon:'error',\n                            title:data['error']\n                        })\n                        this.complete()\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n        this.complete()\n    }\n\n    customerDelete(id){\n        this.loading()\n        var data = {\n            'customers_id':[\n                id\n            ]\n        }\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to revert this!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, delete it!'\n          }).then((result) => {\n            if (result.value) {\n                deleteCustomers(JSON.stringify(data)).then(data=>{\n                    try {\n                        if (data['status']){\n                            Swal.fire({\n                                icon:'success',\n                                title:'Customer entry has been deleted.',\n                                showConfirmButton: false,\n                                timer:1000\n                            })\n                            this.back()\n                        }   else{\n                            Swal.fire({\n                                icon:'error',\n                                title:data['error']\n                            })\n                            this.complete()\n                            this.back()\n                        }\n                    }catch(e){\n                        console.log(e)\n                    }\n                })\n              \n            }\n          })\n          this.complete()\n        \n    }\n    \n    async popUp(id, uuid=0, fromUrl=false){\n        this.loading()\n        if(!fromUrl){\n            this.props.pushNewId(id)\n        }else{\n            const data = {\n                'action':'get',\n                'customer_id':id,\n            }\n            var data_main;\n            await getCustomer(JSON.stringify(data)).then(data => {\n                if (data['status']){\n                    data_main=data\n                }\n                else {\n                    Swal.fire(data['error'])\n                    return\n                }\n            })\n            await this.setState({\n                'popUp':true,\n                'update':data_main['customers'][0],\n                'customer':data_main['customers'][0]\n            })\n        }\n        this.complete()\n    }\n\n\n    columns = [\n        {\n            id:1,\n            name:\"Name\",\n            prop: 'name'\n        },\n        {\n            id:2,\n            name:\"Phone Number\",\n            prop: 'phone1'\n        },\n        {\n            id:3,\n            name:\"Email\",\n            prop: 'email'\n        },\n        {\n            id:4,\n            name:\"Address\",\n            prop: 'address'\n        }      \n    ]\n\n\n\n    render() {\n        var listData\n        if (!this.props.data){\n            listData = []\n        }else{\n            listData=this.props.data\n        }\n        const list = <List data={listData} header={this.columns}   popUp={this.popUp} update={this.props.update} page={this.props.page} />\n         const popUpRender =\n         <div>\n            &nbsp;\n            &nbsp;\n            &nbsp;\n            &nbsp;\n            &nbsp;\n            &nbsp; <Button  variant=\"contained\" size='small' color=\"primary\" onClick={()=> {this.back()}}>\n                <ArrowLeftIcon></ArrowLeftIcon>\n         Back\n     </Button>\n        <Grid  container spacing={3} justify=\"center\" alignContent='center' alignItems=\"center\">\n            <Grid item xm={4}>\n            \n            </Grid>\n            <Grid item xs={4}>\n            <h1>{this.state.update.name}</h1>\n            </Grid>\n            <Grid item xm={4}>\n            </Grid>\n        </Grid>\n\n        <Grid container  justify=\"center\" alignContent='center' alignItems=\"center\">\n        <Grid item xm={6}>\n            <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n                <Grid item xm={2} > \n                <TextField required id=\"first_name\" label=\"First Name\" name='first_name' defaultValue={this.state.update.first_name} onChange={this.onChange} autoFocus/>\n                </Grid>\n                <Grid item xm={2}>\n                <TextField required id=\"middle_name\" label=\"Middle Name\" name='middle_name' defaultValue={this.state.update.middle_name} onChange={this.onChange} />\n                </Grid>\n                <Grid item xm={2}>\n                <TextField required id=\"last_name\" label=\"Last Name\" name='last_name' defaultValue={this.state.update.last_name} onChange={this.onChange} />\n                </Grid>\n            </Grid>\n            \n            <Grid container spacing={3}>\n                <Grid item xm={6} md={6}> \n                <FormControl fullWidth>\n                <InputLabel htmlFor=\"email\">Email address</InputLabel>\n                <Input id=\"email\" required name='email' fullWidth onChange={this.onChange} defaultValue={this.state.update.email}  />\n                </FormControl>\n                </Grid>\n                <Grid item xm={6} md={6}> \n                 <TextField\n                                id ='website'\n                                name=\"website\"\n                                label='Website'\n                                type='text'\n                                fullWidth\n                                onChange={this.onChange}                                \n                                defaultValue={this.state.update.website}\n                            />\n\n               </Grid>\n            </Grid>\n\n\n            <Grid container spacing={3} >\n                \n                <Grid item xm={6} md={6}> \n                <TextField\n                label=\"Primary Phone Number\"\n                                id ='phone1'\n                                name=\"phone1\"\n                                fullWidth\n                                onChange={this.onChange}                                  \n                                value={this.state.update.phone1}\n                            />\n                </Grid>\n                <Grid item xm={6} md={6}> \n                 \n                <TextField\n                    label='Second Phone Number'\n                                id ='phone2'\n                                name=\"phone2\"\n                                fullWidth\n                                onChange={this.onChange}                                \n                                value={this.state.update.phone2}\n                            />\n\n               </Grid>\n            </Grid>\n\n\n            <Grid container spacing={3}>\n\n                <Grid item xm={6} md={6}> \n                <TextField\n                                id ='address'\n                                name=\"address\"\n                                type='text'\n                                label='Address'\n                                fullWidth\n                                onChange={this.onChange}\n                                value={this.state.update.address}\n                            />\n                </Grid>\n                <Grid item xm={6} md={6} > \n                <TextField\n                                id ='tax_number'\n                                name=\"tax_number\"\n                                type='number'\n                                fullWidth\n                                label='Tax Number'\n                                onChange={this.onChange}                                \n                                value={this.state.update.tax_number}   \n                            />\n               </Grid>\n            </Grid>\n            <Grid container spacing={3}  alignItems='flex-end'>\n\n                <Grid item xm={3} md={6}> \n                <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={()=>{this.onSubmit()}}\n                                >\n                                Update\n                                </Button>\n                </Grid>\n                <Grid item xm={3} md={6}> \n                <Button variant=\"contained\" color=\"secondary\" onClick={() => {this.customerDelete(this.state.customer.id)}}>\n                    Delete Customer\n                </Button> \n               </Grid>\n            </Grid>\n        </Grid>\n        </Grid><br></br>\n        </div>\n        return (\n            <div>\n                {this.state.loading ?  <LoadingIcon></LoadingIcon> :this.state.popUp ? popUpRender : list}\n            </div>\n        )\n    }\n}\n\nCustomerList.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n\n\nexport default withStyles(styles)(CustomerList)","import React, { Component } from 'react'\nimport {getCustomers} from '../../api/sales/customer';\nimport {  connect } from 'react-redux';\nimport  CustomerList  from './customerList';\nimport { Link} from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/styles';\nimport PropTypes from 'prop-types';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport LoadingIcon from '../loading';\n\nconst styles = makeStyles((theme) => ({\n    root: {\n    flexGrow: 12,\n    },\n    paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    },\n}));\n\n\nclass Customers extends Component {\n    constructor(props, context ){\n        super(props, context)\n        this.state = {\n            'customers':[],\n            'loaded':false,\n            'start':0,\n            'end':10,\n            'page':1\n        }\n        this.update_table = this.update_table.bind(this)\n        this.pushNewId = this.pushNewId.bind(this)\n    }\n\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n        this.update_table(0)    \n    }\n\n    async update_table (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                'loaded':false,\n                start: 0,\n                end: 10,\n                page:1\n            })\n        }\n        else{\n            if (this.state.start+by>-1){\n                await this.setState({\n                    'loaded':false,\n                    start: this.state.start+by,\n                    end: this.state.end+by,\n                    page:this.state.page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.start,\n            'end':this.state.end\n        }\n        this.getCustomersData(request_json)\n    }\n    \n    async getCustomersData (request_json) {\n        await getCustomers(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'customers':data['customers'],\n                    'loaded':true\n                })\n            }  \n        })\n    }\n\n    pushNewId(id){\n        this.props.history.push('/customers/'+id)\n    }\n\n \n\nrender() {\n    const { classes } = this.props;\n\n    const render_after_load = (\n        <div>\n            <CustomerList ref={this.child} data={this.state.customers} update={this.update_table} page={this.state.page} pushNewId={this.pushNewId} />\n        </div>\n    )\n\n    return(\n        <div className={classes.root}>\n      <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n          <Grid item xs={3} >\n          <Button variant=\"contained\" color=\"primary\" onClick={() => {this.update_table(0)}}>\n            <RefreshIcon/>&nbsp;&nbsp;&nbsp;Refresh Table\n            </Button>\n          </Grid>\n          <Grid item xs={5}>\n\n          </Grid>\n            <Grid item xs={3}>\n            <Link to='/customers/create' style={{ textDecoration: 'none' }}>\n            <Button variant=\"contained\" color=\"secondary\">\n            <AddCircleIcon/>&nbsp;&nbsp;&nbsp;Add New Customer\n            </Button>\n            </Link>\n            </Grid>\n\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n          {this.state.loaded ? render_after_load : <LoadingIcon></LoadingIcon>}\n          </Paper>\n        </Grid>\n        \n      </Grid>\n    </div>\n    )\n}\n}\n\n\n\n\n\nCustomers.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n\nconst mapStateToProps = state => ({\n    user: state.user,\n})\n\nexport default withStyles(styles)(connect(mapStateToProps)(Customers))","import React, { Component } from 'react'\n\nimport { createCustomer} from '../../api/sales/customer';\nimport {Button, TextField, Grid, withStyles } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport {  connect } from 'react-redux';\n\nimport {FormControl, InputLabel, Input} from '@material-ui/core'\nimport Swal from 'sweetalert2'\n\nconst styles = makeStyles((theme) => ({\n    root: {\n    flexGrow: 12,\n    },\n    paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    },\n}));\n\n\nclass CustomerCreation extends Component {\n    \n    constructor(props){\n        super(props)\n        this.state = {\n            'customer':{},\n            'update':{\n                'first_name':'',\n                'middle_name':'',\n                'last_name':'',\n                'email':'',\n                'phone1':'',\n                'website':'',\n                'phone2':'',\n                'address':'',\n                'tax_number':''\n            }\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n    \n    \n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n    }\n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value][0]\n            }\n        })\n    }\n\n    \n    async onSubmit(){\n            var data = this.state.update\n            data = {...data, 'action':'add'}\n            createCustomer(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        Swal.fire(\n                            'Updated!',\n                            'New Customer Has Been Added.',\n                            'success'\n                          )\n                    }\n                    else{\n                        Swal.fire({\n                            icon:'error',\n                            title:data['error']\n                        })\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n    render() {\n         const popUpRender =\n         <div>\n            &nbsp;\n            &nbsp;\n            &nbsp;\n            &nbsp;\n            &nbsp;\n            &nbsp; \n        <Grid  container spacing={3} justify=\"center\" alignContent='center' alignItems=\"center\">\n            <Grid item xm={4}>\n            \n            </Grid>\n            <Grid item xs={4}>\n            <h1>Add New Customer</h1>\n            </Grid>\n            <Grid item xm={4}>\n            </Grid>\n        </Grid>\n\n        <Grid container  justify=\"center\" alignContent='center' alignItems=\"center\">\n        <Grid item xm={6}>\n            <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n                <Grid item xm={2} > \n                <TextField required id=\"first_name\" label=\"First Name\" name='first_name' autoFocus onChange={this.onChange} />\n                </Grid>\n                <Grid item xm={2}>\n                <TextField id=\"middle_name\" label=\"Middle Name\" name='middle_name'  onChange={this.onChange} />\n                </Grid>\n                <Grid item xm={2}>\n                <TextField required id=\"last_name\" label=\"Last Name\" name='last_name'  onChange={this.onChange} />\n                </Grid>\n            </Grid>\n            \n            <Grid container spacing={3}>\n                <Grid item xm={6} md={6}> \n                <FormControl fullWidth required>\n                <InputLabel htmlFor=\"email\">Email address</InputLabel>\n                <Input id=\"email\" required name='email' fullWidth onChange={this.onChange}   />\n                </FormControl>\n                </Grid>\n                <Grid item xm={6} md={6}> \n                 <TextField\n                                id ='website'\n                                name=\"website\"\n                                label='Website'\n                                type='text'\n                                fullWidth\n                                onChange={this.onChange}                                \n                            />\n\n               </Grid>\n            </Grid>\n\n\n            <Grid container spacing={3} >\n                \n                <Grid item xm={6} md={6}> \n                <TextField\n                label=\"Primary Phone Number\"\n                                id ='phone1'\n                                name=\"phone1\"\n                                fullWidth\n                                required\n                                onChange={this.onChange}                                  \n                            />\n                </Grid>\n                <Grid item xm={6} md={6}> \n                 \n                <TextField\n                    label='Second Phone Number'\n                                id ='phone2'\n                                name=\"phone2\"\n                                fullWidth\n                                onChange={this.onChange}                                \n                            />\n\n               </Grid>\n            </Grid>\n\n\n            <Grid container spacing={3}>\n\n                <Grid item xm={6} md={6}> \n                <TextField\n                                id ='address'\n                                name=\"address\"\n                                type='text'\n                                label='Address'\n                                fullWidth\n                                onChange={this.onChange}\n                                required\n                            />\n                </Grid>\n                <Grid item xm={6} md={6} > \n                <TextField\n                                id ='tax_number'\n                                name=\"tax_number\"\n                                type='number'\n                                fullWidth\n                                label='Tax Number'\n                                onChange={this.onChange}  \n                                required                              \n                            />\n               </Grid>\n            </Grid>\n            <Grid container spacing={3}  alignItems='flex-end'>\n\n                <Grid item xm={3} md={6}> \n                <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={()=>{this.onSubmit()}}\n                                >\n                                Add\n                                </Button>\n                </Grid>\n                <Grid item xm={3} md={6}> \n                \n               </Grid>\n            </Grid>\n        </Grid>\n        </Grid><br></br>\n        </div>\n        return (\n            <div>\n                {popUpRender}\n            </div>\n        )\n    }\n}\n\nCustomerCreation.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n\n\nconst mapStateToProps = state => ({\n    user: state.user\n})\n\nexport default withStyles(styles)(connect(mapStateToProps)(CustomerCreation))\n","import { baseRequest } from '../base';\n// api for items \n\nconst getPurchaseOrders = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/porders','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  \n  const deletePurchaseOrder = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/porders/delete','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const createPurchaseOrder = async data => {\n      try {\n        return await baseRequest('apiv1/inventory/porders','POST', data);\n      } catch(e){\n        alert(e)\n      }\n  };\n  \n  \n  const getPurchaseOrder = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/porder','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const updatePurchaseOrder= async data => {\n    try {\n      return await baseRequest('apiv1/inventory/porder','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \nexport {getPurchaseOrders, deletePurchaseOrder, createPurchaseOrder, getPurchaseOrder, updatePurchaseOrder}\n  ","import { baseRequest } from '../base';\n// api for items \n\n  \n  const deletePurchaseItems = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/pitems/delete','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const createPurchaseItem = async data => {\n      try {\n        return await baseRequest('apiv1/inventory/pitems','POST', data);\n      } catch(e){\n        alert(e)\n      }\n  };\n  \n  const updatePurchaseItem= async data => {\n    try {\n      return await baseRequest('apiv1/inventory/pitem','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n\n  const getPurchaseItems = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/pitems','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \nexport { getPurchaseItems, deletePurchaseItems, createPurchaseItem, updatePurchaseItem}\n  ","import { baseRequest } from './base';\n \n\nconst getDiscounts = async data => {\n    try {\n      return await baseRequest('apiv1/sales/discounts','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  \n  const deleteDiscounts = async data => {\n    try {\n      return await baseRequest('apiv1/sales/discounts/delete','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const createDiscount = async data => {\n      try {\n        return await baseRequest('apiv1/sales/discounts','POST', data);\n      } catch(e){\n        alert(e)\n      }\n  };\n  \n  \n  const getDiscount = async data => {\n    try {\n      return await baseRequest('apiv1/sales/discount','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const updateDiscount= async data => {\n    try {\n      return await baseRequest('apiv1/sales/discount','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n\n\n  \nconst getTaxes = async data => {\n    try {\n      return await baseRequest('apiv1/sales/taxes','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  \n  const deleteTaxes = async data => {\n    try {\n      return await baseRequest('apiv1/sales/taxes/delete','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const createTax = async data => {\n      try {\n        return await baseRequest('apiv1/sales/taxes','POST', data);\n      } catch(e){\n        alert(e)\n      }\n  };\n  \n  \n  const getTax = async data => {\n    try {\n      return await baseRequest('apiv1/sales/tax','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const updateTax= async data => {\n    try {\n      return await baseRequest('apiv1/sales/tax','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n\n  const getPurchaseOrderStatus= async data => {\n    try {\n      return await baseRequest('apiv1/inventory/status/porders','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n\n  \n  const getPlacements= async data => {\n    try {\n      return await baseRequest('apiv1/inventory/placements','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n\n  const deletePlacement = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/places/assign','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  }\n\n  \n  const getExportFields = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/export','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  }\n\n  const getExport = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/export','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  }\n\n  \nexport {getExport, getExportFields, deletePlacement,  getPlacements, getPurchaseOrderStatus, getDiscounts, createDiscount, deleteDiscounts, updateDiscount, getDiscount, getTaxes, createTax, deleteTaxes, updateTax, getTax}\n  ","import { baseRequest } from '../base';\n// api for items \n\nconst getItems = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/items','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  \n  const deleteItems = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/items/delete','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const createItem = async data => {\n      try {\n        return await baseRequest('apiv1/inventory/items','POST', data);\n      } catch(e){\n        alert(e)\n      }\n  };\n  \n  \n  const getItem = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/item','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const updateItem= async data => {\n    try {\n      return await baseRequest('apiv1/inventory/item','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \nexport {getItems, createItem, deleteItems, updateItem, getItem}\n  ","import React, { Component } from 'react'\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport List from '../list';\nimport Popup from \"reactjs-popup\";\nimport style from './css/popUp.module.css';\nimport {getVendors} from '../../api/inventory/vendorApi';\nimport {updatePurchaseOrder, getPurchaseOrder} from '../../api/inventory/purchaseOrder';\nimport {updatePurchaseItem, deletePurchaseItems, createPurchaseItem} from '../../api/inventory/purchaseItem'\nimport {getPurchaseOrderStatus} from '../../api/misc';\nimport {getItems} from '../../api/inventory/itemApi';\nimport { Grid, TextField, Button } from '@material-ui/core';\n\nimport Swal from 'sweetalert2'\n\nimport IconButton from '@material-ui/core/IconButton';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\n\n\n\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\n\n\nclass PopUpEdit extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            'popUp':false,\n            'new':false,\n            'current':0,\n            'status':[],\n            'vendor_selection':[\n                {\n                    'id':0,\n                    'name':'None'\n                }\n            ],\n            'item_selection':[\n                {\n                    'id':0,\n                    'name':\"None\"\n                }\n            ],\n            update : {\n                'purchase_order':{\n                    ...this.props.purchase_order,\n                    'invoiced_on': this.converter(this.props.purchase_order.invoiced_on),\n                    'completed_on': this.converter(this.props.purchase_order.completed_on)\n                },\n                'purchase_items':this.props.purchase_items\n            }\n        }\n        this.refreshTable = this.refreshTable.bind(this)\n        this.getItemData = this.getItemData.bind(this)\n        this.selectItem = this.selectItem.bind(this)\n        this.searchItem = this.searchItem.bind(this)\n        this.addPurchaseItem = this.addPurchaseItem.bind(this)\n        this.invoiceHandler = this.invoiceHandler.bind(this)\n        this.completeHandler = this.completeHandler.bind(this)\n        this.getVendorsData = this.getVendorsData.bind(this)\n        this.converter = this.converter.bind(this)\n        this.popUp = this.popUp.bind(this)\n        this.searchVendor = this.searchVendor.bind(this)\n        this.selectVendor = this.selectVendor.bind(this)\n        this.onChange = this.onChange.bind(this)\n        this.updatePurchaseOrder = this.updatePurchaseOrder.bind(this)\n        this.onChangePI = this.onChangePI.bind(this)\n        this.postPurchaseItem = this.postPurchaseItem.bind(this)\n        this.deletePurchaseItem = this.deletePurchaseItem.bind(this)\n    }\n\n\n    async componentDidMount(){\n        var request_json = {\n            'action':'get',\n        }\n        await getPurchaseOrderStatus(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    ...this.state,\n                    'status':data.data\n                })\n            }  \n        })\n    }\n\n    async getVendorsData (request_json) {\n        console.log(\"getging vendor data\")\n        await getVendors(JSON.stringify(request_json)).then(data => {\n            console.log(\"got\", data)\n            if (data['status']){\n                console.log(\"setting\")\n                this.setState({\n                    'vendor_selection':data['vendors'],\n                })\n            }  \n        })\n    }\n\n    selectVendor(id,name){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_order':{\n                    ...this.state.update.purchase_order,\n                    'vendor':id,\n                    'vendor_name':name\n                }\n            }\n        })\n    }\n\n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_order':{\n                    ...this.state.update.purchase_order,\n                    [e.target.name] : [e.target.value][0]\n                }\n            }\n        })\n    }\n\n    converter(date){\n        return ( new Date(Date.parse(date)))\n    }\n\n    popUp(id){\n        var key\n        for (key in this.state.update.purchase_items){\n            if (this.state.update.purchase_items[key].id === id){\n                this.setState({\n                    ...this.state,\n                    'current':key,\n                    'popUp':true\n                })        \n                return\n            }\n        }\n    }\n\n    searchVendor(e){\n        console.log(\"serch\")\n        if ((e.target.value).length > 2 ){\n            var request_json = {\n                'action':'get',\n                'start':0,\n                'end':10,\n                'filter':'name',\n                'first_name':(e.target.value)\n            }\n            this.getVendorsData(request_json)\n        }\n    }\n    \n    invoiceHandler(date){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_order':{\n                    ...this.state.update.purchase_order,\n                    'invoiced_on' : date\n                }\n            }\n        })\n    }\n    \n    completeHandler(date){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_order':{\n                    ...this.state.update.purchase_order,\n                    'completed_on' : date\n                }\n            }\n        })\n    }\n\n    updatePurchaseOrder(){\n        var request_json = {\n            ...this.state.update.purchase_order,\n            'action':'edit',\n            'purchase_order_id':this.state.update.purchase_order.id\n        }\n        updatePurchaseOrder(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                Swal.fire(\"Purchase Order Details Has Been Updated.\")\n            }\n            else{\n                Swal.fire(\"Error : \",data.error)\n            }\n        })\n    }\n\n    onChangePI(e){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_items':{\n                    ...this.state.update.purchase_items,\n                    [this.state.current] : {\n                        ...this.state.update.purchase_items[this.state.current],\n                        [e.target.name] : [e.target.value][0]\n                    },\n                }\n            }\n        })\n    }\n\n    postPurchaseItem(is_new=false){\n        var request_json\n        if (is_new){\n            request_json = {\n                'action':'add',\n                'purchase_order':this.state.update.purchase_order.id,\n                ...this.state.update.purchase_items[this.state.current]\n            }\n            createPurchaseItem(JSON.stringify(request_json)).then(data => {\n                if (data['status']){\n                    Swal.fire(\"Purchase Item Has Been Added.\")\n                    this.refreshTable()\n                }\n                else{\n                    Swal.fire(data['error'])\n                }\n            })\n            return\n        }\n        request_json = {\n            'action':'edit',\n            ...this.state.update.purchase_items[this.state.current]\n        }\n        updatePurchaseItem(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                Swal.fire(\"Purchase Item Details Has Been Updated.\")\n                this.refreshTable()\n            }\n            else{\n                Swal.fire(data['error'])\n            }\n        })\n    }\n\n    deletePurchaseItem(){\n        var request_json = {\n            purchase_items_id : [this.state.update.purchase_items[this.state.current].id]\n        }\n        deletePurchaseItems(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                Swal.fire(\"Purchase Item Has Beed Deleted.\")\n                this.refreshTable()\n            }\n            else{\n                Swal.fire(data['error'])\n            }\n        })\n    }\n\n\n    addPurchaseItem(){\n        var current =0;\n        var item,p_list=[];\n        for (item in this.state.update.purchase_items){\n            if (item.id){\n                if (item.id !== \"Fake Key\"){\n                    current = current + 1\n                    p_list.push(item)\n                }\n            }\n        }\n        this.setState({\n            'current':current,\n            'new':true,\n            'popUp':true,\n            'update':{\n                ...this.state.update,\n                'purchase_items':[\n                    ...p_list,\n                    {\n                        'item_name':\"None\",\n                        'discount_type':'percentage',\n                        'status':'incomplete'\n                    }\n                ]\n            }\n        })\n    }\n    columns = [\n        {\n            id:1,\n            name:\"Item Name\",\n            prop: 'item_name'\n        },\n        {\n            id:2,\n            name:\"Quantity\",\n            prop: 'quantity'\n        },\n        {\n            id:3,\n            name:\"Stock\",\n            prop: 'stock'\n        },\n        {\n            id:4,\n            name:\"Defective\",\n            prop: 'defective'\n        },   \n        {\n            id:5,\n            name:\"Sold\",\n            prop: 'sold'\n        },\n        {\n            id:6,\n            name:\"Discount\",\n            prop: 'discount'\n        },\n        {\n            id:7,\n            name:\"Purchase Price\",\n            prop: 'purchase_price'\n        },\n        {\n            id:8,\n            name:\"Status\",\n            prop: 'status'\n        }\n    ]\n\n    searchItem(e){\n        if ((e.target.value).length > 2 ){\n            var request_json = {\n                'action':'get',\n                'start':0,\n                'end':10,\n                'filter':'name',\n                'name':(e.target.value)\n            }\n            this.getItemData(request_json)\n        }\n    }\n\n    async getItemData(request_json){\n        await getItems(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    ...this.state,\n                    'item_selection':data['items'],\n                })\n            }  \n        })\n    }\n    selectItem(id, name){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_items':{\n                    ...this.state.update.purchase_items,\n                    [this.state.current] : {\n                        ...this.state.update.purchase_items[this.state.current],\n                        'item_name' : name,\n                        'item':id\n                    },\n                }\n            }\n        })\n\n    }\n\n    async refreshTable(){\n        var id = this.state.update.purchase_order.id;\n        var items= [];\n        const request_json = {\n            'action':'get',\n            'purchase_order_id':id\n        }\n        await getPurchaseOrder(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                items = data['p_items']\n            }\n        })\n        if (items.length === 0){\n            items = [{\n                'id':\"Fake Key\",\n                'item_name': ''\n            }]\n        }\n        await this.setState({\n            ...this.state,\n            'popUp':false,\n            'update':{\n                ...this.state.update,\n                'purchase_items':items\n            }\n        })\n    }\n\n\n    render() {\n        const item_selection = this.state.item_selection\n        const itemPopUp = <Popup trigger={ <Button variant=\"contained\" color=\"secondary\" >Select Item</Button>} closeOnDocumentClick>\n        <div>\n            <input placeholder=\"Item Name\" id='item_search_box' name='item_serach_box' onChange={this.searchItem}></input>\n            <div className={style.dropdown_content} id='vendor_dropdown'>\n                    {item_selection.map(\n                        item => (\n                            // use css to get rid of <a>\n                            <a href=\"#\" key={item.id} onClick={() => {this.selectItem(item.id, item.name)}} >{item.name}</a>\n                        )\n                    )}\n            </div>\n        </div>\n        </Popup>\n        const popUpItem = <table cellPadding={10} cellSpacing={10}>\n            <tbody><tr>\n                    <td colSpan={2}>\n                    <IconButton color='secondary' onClick={()=> {this.refreshTable()}}><NavigateBeforeIcon /></IconButton>\n                    </td>\n                </tr>\n            <tr>\n                <td>\n                <TextField\n                    value= {this.state.update.purchase_items[this.state.current].item_name}\n                    InputProps={{\n                        readOnly: true,\n                    }}\n                    \n                    label='Item'\n                    variant=\"outlined\"\n                    />\n                </td>\n                <td>\n                {this.state.new ? itemPopUp: <span></span>}\n                </td>\n            </tr>\n            <tr>\n                <td>\n                <TextField\n                    value={this.state.update.purchase_items[this.state.current].quantity} \n                    type=\"number\" \n                    required \n                    name=\"quantity\" \n                    onChange={this.onChangePI}\n                    label='Quantity'\n                    variant=\"outlined\"\n                    />\n                </td>\n                <td>\n                <TextField\n                    name=\"defective\" \n                    value={this.state.update.purchase_items[this.state.current].defective} \n                    type=\"number\"  \n                    onChange={this.onChangePI}\n                    required\n                    label='Defective'\n                    variant=\"outlined\"\n                    />\n                </td>\n            </tr>\n            <tr>\n                    <td colSpan={2}>\n                        Discount Type  :  <Select lable='Discount Type' fullWidth name='discount_type' id=\"discount_type\"value={this.state.update.purchase_items[this.state.current].discount_type}  onChange={this.onChangePI}>\n                            <MenuItem value=\"percent\">Percentage</MenuItem>\n                            <MenuItem value=\"fixed\">Fixed</MenuItem>\n                        </Select>\n                    </td>\n            </tr>\n            <tr>\n                <td>\n                <TextField\n                    name=\"discount\" \n                    value={this.state.update.purchase_items[this.state.current].discount} \n                    type=\"number\"  \n                    onChange={this.onChangePI}\n                    required\n                    label='Discount'\n                    variant=\"outlined\"\n                    />\n                </td>\n                <td>\n                <TextField\n                    name=\"purchase_price\" \n                    value={this.state.update.purchase_items[this.state.current].purchase_price} \n                    type=\"number\"  \n                    onChange={this.onChangePI}\n                    required\n                    label='Purchase Price'\n                    variant=\"outlined\"\n                    />\n                </td>\n            </tr>\n            <tr>\n                <td colSpan={2}>\n                <Select value= {this.state.update.purchase_items[this.state.current].status} name=\"status\" onChange={this.onChangePI}>\n                    <MenuItem value=\"delivered\">Delivered</MenuItem>\n                    <MenuItem value=\"incomplete\">Incomplete</MenuItem>\n                    <MenuItem value=\"addedtocirculation\">Added To Circulation</MenuItem>\n                </Select>\n                </td>\n            </tr>\n                <tr>\n                    <td>\n                    {this.state.new ? <Button variant=\"contained\" color=\"primary\" onClick={() => {this.postPurchaseItem(true)}} >Add</Button> : <Button variant=\"contained\" color=\"primary\" onClick={() => {this.postPurchaseItem()}} >Update</Button>}\n                    </td>\n                    <td>\n                    {this.state.new ? <span></span>:<Button variant=\"contained\" color=\"secondary\" onClick={() => {this.deletePurchaseItem()}} >Delete</Button>}\n            \n                    </td>\n                </tr>\n                \n                </tbody>\n            </table>\n        const vendor_selection = this.state.vendor_selection\n        const vendorPopup = <Popup trigger={<Button variant=\"contained\" color=\"secondary\">Change Vendor</Button>} closeOnDocumentClick>\n        <div>\n            <input placeholder=\"Vendor's first name\" id='vendor_serach_box' name='vendor_serach_box' onChange={this.searchVendor}></input>\n            <div className={style.dropdown_content} id='vendor_dropdown'>\n                    {vendor_selection.map(\n                        vendor => (\n                            // use css to get rid of <a>\n                            <a href=\"#\" key={vendor.id} onClick={() => {this.selectVendor(vendor.id, vendor.name)}} >{vendor.name}</a>\n                        )\n                    )}\n            </div>\n        </div>\n        </Popup>\n        const status = this.state.status\n                \n        return (\n            <div>\n                <Grid container justify='center'>\n                    <Grid  item xm={6}>\n                    <h1>{this.props.purchase_order.vendor_name}</h1>\n                    </Grid>\n                </Grid>\n                <Grid container justify='center'>\n                    <Grid item xm={6}>\n                        <table cellPadding='10' cellSpacing='10'>\n                            <tbody>\n                                <tr>\n                                    <td>\n                                        <TextField\n                                        value={this.state.update.purchase_order.vendor_name}\n                                        InputProps={{\n                                            readOnly: true,\n                                        }}\n                                        label='Vendor'\n                                        variant=\"outlined\"\n                                        />\n                                    </td>\n                                    <td>\n                                    {vendorPopup}\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td colSpan={2}>\n                                    <TextField\n                                        value={this.state.update.purchase_order.added_by_name}\n                                        InputProps={{\n                                            readOnly: true,\n                                        }}\n                                        label='Added By'\n                                        variant=\"outlined\"\n                                        fullWidth\n                                        />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td colSpan={2}>\n                                    <TextField\n                                        value={this.state.update.purchase_order.third_party_invoice_number}\n                                        label='Third Party Invoice Number'\n                                        variant=\"outlined\"\n                                        name = 'third_party_invoice_number'\n                                        onChange={this.onChange}\n                                        fullWidth\n                                        />\n                                    </td>\n                                </tr>\n                                \n                                <tr>\n                                    <td>\n                                    Invoiced On:<br></br>\n                                    <DatePicker\n                                    name='invoiced_on'\n                                    selected={this.state.update.purchase_order.invoiced_on}\n                                    onChange={this.invoiceHandler}\n                                    />\n                                    </td>\n                                    <td>\n                                    Completed On : <br></br>\n                                    <DatePicker\n                                    name='completed_on'\n                                    selected={this.state.update.purchase_order.completed_on}\n                                    onChange={this.completeHandler}\n                                    />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                    <TextField\n                                        value={this.state.update.purchase_order.total_cost} \n                                        name=\"total_cost\" \n                                        onChange={this.onChange}\n                                        label='Total Cost'\n                                        variant=\"outlined\"\n                                        fullWidth\n                                        />\n                                    </td>\n                                    <td>\n                                    <TextField\n                                        value= {this.state.update.purchase_order.discount} \n                                        name=\"discount\"\n                                        onChange={this.onChange}\n                                        label='Discount'\n                                        variant=\"outlined\"\n                                        fullWidth\n                                        />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td colSpan={2}>\n                                        Discount Type  :  <Select lable='Discount Type' fullWidth name='discount_type' id=\"discount_type\" onChange={this.onChange} value={this.state.update.purchase_order.discount_type}>\n                                            <MenuItem value=\"percent\">Percentage</MenuItem>\n                                            <MenuItem value=\"fixed\">Fixed</MenuItem>\n                                        </Select>\n                                    </td>\n                                </tr>\n                                <tr >\n                                    <td colSpan={2}>\n                                    Status : <Select name='status' id=\"status\" fullWidth onChange={this.onChange} value={this.state.update.purchase_order.status} required >\n                                    {status.map(\n                                        x => (\n                                        <MenuItem key={x.id} value={parseInt(x.id)}>{x.name}</MenuItem>\n                                        )\n                                    )}\n                                    </Select> \n                            </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <Button  variant=\"contained\" color=\"primary\"  onClick={() => {this.updatePurchaseOrder()}}>\n                                        Update\n                                        </Button>\n                                       \n                                    </td>\n                                    <td>\n                                    <Button  variant=\"contained\" color=\"secondary\"  onClick={() => {this.props.delete(this.props.purchase_order.id)}}>\n                                        Delete\n                                        </Button>\n                                    </td>\n                                </tr>\n\n                            </tbody>\n                        </table><br></br>\n                       </Grid>\n                </Grid>\n                <hr></hr>\n                <Grid container>\n                    <Grid item md={1}>\n\n                    </Grid>\n                    <Grid item md={3}>             \n                        <h1>Items</h1>   \n                    </Grid>\n\n                </Grid>\n                <Grid container justify='center'>\n                    <Grid item xm={8}>\n                    <table cellSpacing={10} cellPadding={10}>\n                    <tbody>\n                        <tr>\n                            <td>\n                            </td>\n                            <td>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td colSpan={3}>\n                            {this.state.popUp ? popUpItem :<div> <Button  variant=\"contained\" color=\"primary\" onClick={() => {this.addPurchaseItem()}}>Add New Items</Button><br></br>\n                            <List data={this.state.update.purchase_items} header={this.columns} page={false} popUp={this.popUp} /></div>}\n                            </td>\n                        </tr>\n                    </tbody>\n                    </table>\n                 \n                \n                </Grid>\n\n                </Grid>\n                </div>\n        )\n    }\n}\nexport default PopUpEdit","import React, { Component } from 'react'\nimport List from '../list';\nimport { getPurchaseOrder, deletePurchaseOrder, updatePurchaseOrder } from '../../api/inventory/purchaseOrder';\nimport PopUpEdit from './popUpEdit';\nimport Swal from 'sweetalert2'\n\nclass PurchaseOrderList extends Component {\n    \n    constructor(props){\n        super(props)\n        this.popUp = this.popUp.bind(this)\n        this.state = {\n            'popUp':false,\n            'purchase_order':{},\n            'purchase_items':[],\n            'update':{}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.purchaseOrderDelete = this.purchaseOrderDelete.bind(this)\n        this.back = this.back.bind(this)\n    }\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value]\n            }\n        })\n    }\n\n    back(){ \n        if (this.props.data){\n            this.setState({...this.state, popUp:false});\n        }else{\n            this.props.history.push('/purchaseorders')\n        }\n    }\n    async componentDidMount(){\n        try {\n            const {id} = this.props.match.params\n            if (id){\n                await this.popUp(id,0,true)\n            }\n        }catch(e){\n            console.log(e)\n        }\n    }\n\n    async onSubmit(e){\n        e.preventDefault();\n            var data = this.state.vendor\n            var ele;\n            for (ele in this.state.update){\n                data[ele] = this.state.update[ele][0]\n            }\n            data = {...data, 'action':'edit'}\n            updatePurchaseOrder(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        Swal.fire({\n                            title:'Updated',\n                            icon:'success',\n                            text:\"Purchase Order Details updated.\"\n                        })\n                        this.back()\n                    }\n                    else{\n                        Swal.fire(data['error'])\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    purchaseOrderDelete(id){\n        var data = {\n            'purchase_orders_id':[\n                id\n            ]\n        }\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to revert this!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, delete it!'\n          }).then((result) => {\n              if(result['value']==true){\n                deletePurchaseOrder(JSON.stringify(data)).then(data=>{\n                    try {\n                        if (data['status']){\n                            Swal.fire('Purchase Order Deleted.')\n                            this.back()\n                        }   else{\n                            Swal.fire(data['error'])\n                        }\n                    }catch(e){\n                        console.log(e)\n                    }\n                })\n            }\n         })\n    }\n    \n    async popUp(id, uuid=0, fromUrl){\n        if(!fromUrl){\n            this.props.pushNewId(id)\n        }else{\n        const data = {\n            'action':'get',\n            'purchase_order_id':id,\n        }\n        var data_main;\n        await getPurchaseOrder(JSON.stringify(data)).then(data => {\n            if (data['status']){\n                data_main=data\n            }\n        })\n        if (data_main['p_items'].length === 0) {\n            console.log(\"blank\")\n            data_main['p_items'] = [{\n                id:0\n            }]\n        }\n        await this.setState({\n            'popUp':true,\n            'purchase_order':data_main['p_order'][0],\n            'purchase_items':data_main['p_items']\n        })\n    }\n}\n\n\n    columns = [\n        {\n            id:1,\n            name:\"Vendor Name\",\n            prop: 'vendor_name'\n        },\n        {\n            id:2,\n            name:\"Items\",\n            prop: 'items'\n        },\n        {\n            id:3,\n            name:\"Invoiced On\",\n            prop: 'invoiced_on'\n        },\n        {\n            id:4,\n            name:\"Total Cost\",\n            prop: 'total_cost'\n        },   \n        {\n            id:5,\n            name:\"Status\",\n            prop: 'status_name'\n        }      \n    ]\n    \n\n    render() {\n        var listData\n        if (!this.props.data){\n            listData = []\n        }else{\n            listData=this.props.data\n        }\n        const list = <List data={listData} header={this.columns}   popUp={this.popUp} update={this.props.update} page={this.props.page} />\n        const popUpRender = <PopUpEdit purchase_order={this.state.purchase_order} purchase_items={this.state.purchase_items} update={this.props.update} delete={this.purchaseOrderDelete} ></PopUpEdit>\n        return (\n            <div>\n                {this.state.popUp ? popUpRender : list}\n            </div>\n        )\n    }\n}\n\nexport default PurchaseOrderList\n","import React, { Component } from 'react'\nimport {getPurchaseOrders} from '../../api/inventory/purchaseOrder';\nimport {  connect } from 'react-redux';\nimport  PurchaseOrderList  from './purchaseOrderList';\nimport { Link} from 'react-router-dom';\n\n\n\nimport Button from '@material-ui/core/Button';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/styles';\nimport PropTypes from 'prop-types';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport LoadingIcon from '../loading';\n\nimport Swal from 'sweetalert2'\n\n\n\nclass PurchaseOrders extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            'purchaseOrders':[],\n            'loaded':false,\n            'start':0,\n            'end':10,\n            'page':1\n        }\n        this.update_table = this.update_table.bind(this)\n        this.pushNewId = this.pushNewId.bind(this)\n    }\n\n    \n    pushNewId(id){\n        this.props.history.push('/purchaseorders/'+id)\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n        this.update_table(0)\n    }\n\n    async update_table (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                'loaded':false,\n                start: 0,\n                end: 10,\n                page:1\n            })\n        }\n        else{\n            if (this.state.start+by>-1){\n                await this.setState({\n                    'loaded':false,\n                    start: this.state.start+by,\n                    end: this.state.end+by,\n                    page:this.state.page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.start,\n            'end':this.state.end\n        }\n        this.getPurchaseOrdersData(request_json)\n    }\n    \n    async getPurchaseOrdersData (request_json) {\n        await getPurchaseOrders(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'purchaseOrders':data['p_orders'],\n                    'loaded':true\n                })\n            } \n            else{\n                Swal.fire(data['error'])\n            } \n        })\n    }\n\n \n\nrender() {\n    const render_after_load = (\n        <div>\n            <PurchaseOrderList pushNewId={this.pushNewId} data={this.state.purchaseOrders} update={this.update_table} page={this.state.page} />\n        </div>\n    )\n\n    return(\n        <div>\n        <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n            <Grid item xs={3} >\n            <Button variant=\"contained\" color=\"primary\" onClick={() => {this.update_table(0)}}>\n              <RefreshIcon/>&nbsp;&nbsp;&nbsp;Refresh Table\n              </Button>\n            </Grid>\n            <Grid item xs={5}>\n  \n            </Grid>\n              <Grid item xs={3}>\n              <Link to='/purchaseorders/create' style={{ textDecoration: 'none' }}>\n              <Button variant=\"contained\" color=\"secondary\">\n              <AddCircleIcon/>&nbsp;&nbsp;&nbsp;Add New Purchase Order\n              </Button>\n              </Link>\n              </Grid>\n  \n          <Grid item xs={12}>\n            <Paper>\n            {this.state.loaded ? render_after_load : <LoadingIcon></LoadingIcon>}\n            </Paper>\n          </Grid>\n          \n        </Grid>\n        </div>\n    )\n}\n}\n\n\n\nconst mapStateToProps = state => ({\n    user: state.user,\n})\n\nexport default connect(mapStateToProps)(PurchaseOrders)\n","import React, { Component } from 'react'\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport List from '../list';\nimport Popup from \"reactjs-popup\";\nimport style from './css/popUp.module.css';\nimport {getVendors} from '../../api/inventory/vendorApi';\nimport {getPurchaseOrder , updatePurchaseOrder, createPurchaseOrder} from '../../api/inventory/purchaseOrder';\nimport {updatePurchaseItem, deletePurchaseItems, createPurchaseItem} from '../../api/inventory/purchaseItem'\nimport {getPurchaseOrderStatus} from '../../api/misc';\nimport {getItems} from '../../api/inventory/itemApi';\n\nimport { Grid, TextField, Button } from '@material-ui/core';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport Swal from 'sweetalert2'\n\n\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\n\nclass PurchaseOrderCreation extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            'registered':false,\n            'popUp':false,\n            'new':false,\n            'current':0,\n            'status':[],\n            'vendor_selection':[\n                {\n                    'id':0,\n                    'name':'None'\n                }\n            ],\n            'item_selection':[\n                {\n                    'id':0,\n                    'name':\"None\"\n                }\n            ],\n            update : {\n                'purchase_order':{\n                    'vendor_name':'',\n                    'total_cost':0,\n                    'discount':0,\n                    'invoiced_on': this.converter((new Date()).toISOString()),\n                    'completed_on': this.converter((new Date()).toISOString()),\n                    'discount_type':'percent'\n                },\n                'purchase_items':[{\n                    'id':\"Fake Key\"\n                }]\n            }\n        }\n        this.converter = this.converter.bind(this)\n        this.addPurchaseOrder = this.addPurchaseOrder.bind(this)\n        this.getItemData = this.getItemData.bind(this)\n        this.selectItem = this.selectItem.bind(this)\n        this.searchItem = this.searchItem.bind(this)\n        this.addPurchaseItem = this.addPurchaseItem.bind(this)\n        this.invoiceHandler = this.invoiceHandler.bind(this)\n        this.completeHandler = this.completeHandler.bind(this)\n        this.getVendorsData = this.getVendorsData.bind(this)\n        this.popUp = this.popUp.bind(this)\n        this.searchVendor = this.searchVendor.bind(this)\n        this.selectVendor = this.selectVendor.bind(this)\n        this.onChange = this.onChange.bind(this)\n        this.updatePurchaseOrder = this.updatePurchaseOrder.bind(this)\n        this.onChangePI = this.onChangePI.bind(this)\n        this.postPurchaseItem = this.postPurchaseItem.bind(this)\n        this.deletePurchaseItem = this.deletePurchaseItem.bind(this)\n        this.refreshTable = this.refreshTable.bind(this)\n    }\n\n    async componentDidMount(){\n        var request_json = {\n            'action':'get',\n        }\n        await getPurchaseOrderStatus(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    ...this.state,\n                    'status':data.data\n                })\n            }  \n        })\n    }\n\n    async getVendorsData (request_json) {\n        await getVendors(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'vendor_selection':data['vendors'],\n                })\n            }  \n        })\n    }\n\n    selectVendor(id,name){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_order':{\n                    ...this.state.update.purchase_order,\n                    'vendor':id,\n                    'vendor_name':name\n                }\n            }\n        })\n    }\n\n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_order':{\n                    ...this.state.update.purchase_order,\n                    [e.target.name] : [e.target.value][0]\n                }\n            }\n        })\n    }\n\n    converter(date){\n        return ( new Date(Date.parse(date)))\n    }\n\n    popUp(id){\n        var key\n        for (key in this.state.update.purchase_items){\n            if (this.state.update.purchase_items[key].id === id){\n                this.setState({\n                    ...this.state,\n                    'current':key,\n                    'popUp':true\n                })        \n                return\n            }\n        }\n    }\n\n    searchVendor(e){\n        if ((e.target.value).length > 2 ){\n            var request_json = {\n                'action':'get',\n                'start':0,\n                'end':10,\n                'filter':'name',\n                'first_name':(e.target.value)\n            }\n            this.getVendorsData(request_json)\n        }\n    }\n    \n    invoiceHandler(date){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_order':{\n                    ...this.state.update.purchase_order,\n                    'invoiced_on' : date\n                }\n            }\n        })\n    }\n    \n    completeHandler(date){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_order':{\n                    ...this.state.update.purchase_order,\n                    'completed_on' : date\n                }\n            }\n        })\n    }\n\n    updatePurchaseOrder(){\n        if (this.state.registered){\n            console.log(this.state)\n            var request_json = {\n                ...this.state.update.purchase_order,\n                'action':'edit',\n                'purchase_order_id':this.state.update.purchase_order.id\n            }\n            updatePurchaseOrder(JSON.stringify(request_json)).then(data => {\n                if (data['status']){\n                    Swal.fire(\"Purchase Order Details Has Been Updated.\")\n                }\n                else{\n                    Swal.fire(data['error'])\n                }\n            })\n        }\n        else{\n            var request_json = {\n                ...this.state.update.purchase_order,\n                'action':'add',\n                'purchase_order_id':this.state.update.purchase_order.id\n            }\n            createPurchaseOrder(JSON.stringify(request_json)).then(data => {\n                if (data['status']){\n                    console.log(data)\n                    Swal.fire(\"Purchase Order Has Been Added.\")\n                    this.setState({\n                        ...this.state,\n                        'registered':true,\n                        'update':{\n                            ...this.state.update,\n                            'purchase_order':{\n                                ...this.state.update.purchase_order,\n                                'id':data['p_orders'][0]['id'],\n                                'added_by':data['p_orders'][0]['added_by_name']\n                            }\n                        }\n                    })\n                }\n                else{\n                    Swal.fire(data['error'])\n                }\n            })\n        }\n        \n    }\n    addPurchaseOrder(){\n        var request_json = {\n            ...this.state.update.purchase_order,\n            'action':'add',\n        }\n        createPurchaseOrder(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                Swal.fire(\"Purchase Order Has Been Added.\")\n                data['p_orders'][0]['invoiced_on'] = this.converter(data['p_orders'][0]['invoiced_on'])\n                data['p_orders'][0]['completed_on'] = this.converter(data['p_orders'][0]['completed_on'])\n                this.setState({\n                    ...this.state,\n                    'update':{\n                        ...this.state.update,\n                        'purchase_order':data['p_orders'][0]\n                    }\n                })\n            }\n            else{\n                Swal.fire(\"Error : \",data.error)\n            }\n        })\n    }\n\n    onChangePI(e){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_items':{\n                    ...this.state.update.purchase_items,\n                    [this.state.current] : {\n                        ...this.state.update.purchase_items[this.state.current],\n                        [e.target.name] : [e.target.value][0]\n                    },\n                }\n            }\n        })\n    }\n\n    postPurchaseItem(is_new=false){\n        var request_json;\n        if (is_new){\n            request_json = {\n                'action':'add',\n                'purchase_order':this.state.update.purchase_order.id,\n                ...this.state.update.purchase_items[this.state.current]\n            }\n            createPurchaseItem(JSON.stringify(request_json)).then(data => {\n                if (data['status']){\n                    Swal.fire(\"Purchase Item Has Been Added.\")\n                    this.refreshTable()\n                }\n                else{\n                    Swal.fire(data['error'])\n                }\n            })\n            return\n        }\n        request_json = {\n            'action':'edit',\n            ...this.state.update.purchase_items[this.state.current]\n        }\n        updatePurchaseItem(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                Swal.fire(\"Purchase Item Details Has Been Updated.\")\n                this.refreshTable()\n            }\n            else{\n                Swal.fire(data['error'])\n            }\n        })\n    }\n\n  \n    deletePurchaseItem(){\n        var request_json = {\n            purchase_items_id : [this.state.update.purchase_items[this.state.current].id]\n        }\n        deletePurchaseItems(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                Swal.fire(\"Purchase Item Has Beed Deleted.\")\n                this.refreshTable()\n            }\n            else{\n                Swal.fire(data['error'])\n            }\n        })\n    }\n\n\n    addPurchaseItem(){\n        var current =0;\n        var item,p_list=[];\n        for (item in this.state.update.purchase_items){\n            if (item.id){\n                if (item.id !== \"Fake Key\"){\n                    current = current + 1\n                    p_list.push(item)\n                }\n            }\n        }\n        this.setState({\n            'current':current,\n            'new':true,\n            'popUp':true,\n            'update':{\n                ...this.state.update,\n                'purchase_items':[\n                    ...p_list,\n                    {\n                        'item_name':\"None\",\n                        'discount_type':'percentage',\n                        'status':'incomplete'\n                    }\n                ]\n            }\n        })\n    }\n\n    columns = [\n        {\n            id:1,\n            name:\"Item Name\",\n            prop: 'item_name'\n        },\n        {\n            id:2,\n            name:\"Quantity\",\n            prop: 'quantity'\n        },\n        {\n            id:3,\n            name:\"Stock\",\n            prop: 'stock'\n        },\n        {\n            id:4,\n            name:\"Defective\",\n            prop: 'defective'\n        },   \n        {\n            id:5,\n            name:\"Sold\",\n            prop: 'sold'\n        },\n        {\n            id:6,\n            name:\"Discount\",\n            prop: 'discount'\n        },\n        {\n            id:7,\n            name:\"Purchase Price\",\n            prop: 'purchase_price'\n        },\n        {\n            id:8,\n            name:\"Status\",\n            prop: 'status'\n        }\n    ]\n\n    searchItem(e){\n        if ((e.target.value).length > 2 ){\n            var request_json = {\n                'action':'get',\n                'start':0,\n                'end':10,\n                'filter':'name',\n                'name':(e.target.value)\n            }\n            this.getItemData(request_json)\n        }\n    }\n\n    async getItemData(request_json){\n        await getItems(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    ...this.state,\n                    'item_selection':data['items'],\n                })\n            }  \n        })\n    }\n    selectItem(id, name){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_items':{\n                    ...this.state.update.purchase_items,\n                    [this.state.current] : {\n                        ...this.state.update.purchase_items[this.state.current],\n                        'item_name' : name,\n                        'item':id\n                    },\n                }\n            }\n        })\n\n    }\n\n    async refreshTable(){\n        var id = this.state.update.purchase_order.id;\n        var items= [];\n        const request_json = {\n            'action':'get',\n            'purchase_order_id':id\n        }\n        await getPurchaseOrder(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                items = data['p_items']\n            }\n        })\n        if (items.length === 0){\n            items = [{\n                'id':\"Fake Key\",\n                'item_name': ''\n            }]\n        }\n        await this.setState({\n            ...this.state,\n            'popUp':false,\n            'update':{\n                ...this.state.update,\n                'purchase_items':items\n            }\n        })\n    }\n\n\n    render() {\n        const item_selection = this.state.item_selection\n        const itemPopUp = <Popup trigger={ <Button variant=\"contained\" color=\"secondary\">Select Item</Button>} closeOnDocumentClick>\n        <div>\n            <input placeholder=\"Item Name\" id='item_search_box' name='item_serach_box' onChange={this.searchItem}></input>\n            <div className={style.dropdown_content} id='vendor_dropdown'>\n                    {item_selection.map(\n                        item => (\n                            // use css to get rid of <a>\n                            <a key={item.id} onClick={() => {this.selectItem(item.id, item.name)}} >{item.name}</a>\n                        )\n                    )}\n            </div>\n        </div>\n        </Popup>\n        const popUpItem = <table cellPadding={10} cellSpacing={10}>\n        <tbody><tr>\n                <td colSpan={2}>\n                <IconButton color='secondary' onClick={()=> {this.refreshTable()}}><NavigateBeforeIcon /></IconButton>\n                </td>\n            </tr>\n        <tr>\n            <td>\n            <TextField\n                value= {this.state.update.purchase_items[this.state.current].item_name}\n                InputProps={{\n                    readOnly: true,\n                }}\n                \n                label='Item'\n                variant=\"outlined\"\n                />\n            </td>\n            <td>\n            {this.state.new ? itemPopUp: <span></span>}\n            </td>\n        </tr>\n        <tr>\n            <td>\n            <TextField\n                value={this.state.update.purchase_items[this.state.current].quantity} \n                type=\"number\" \n                required \n                name=\"quantity\" \n                onChange={this.onChangePI}\n                label='Quantity'\n                variant=\"outlined\"\n                />\n            </td>\n            <td>\n            <TextField\n                name=\"defective\" \n                value={this.state.update.purchase_items[this.state.current].defective} \n                type=\"number\"  \n                onChange={this.onChangePI}\n                required\n                label='Defective'\n                variant=\"outlined\"\n                />\n            </td>\n        </tr>\n        <tr>\n                <td colSpan={2}>\n                    Discount Type  :  <Select lable='Discount Type' fullWidth name='discount_type' id=\"discount_type\"value={this.state.update.purchase_items[this.state.current].discount_type}  onChange={this.onChangePI}>\n                        <MenuItem value=\"percent\">Percentage</MenuItem>\n                        <MenuItem value=\"fixed\">Fixed</MenuItem>\n                    </Select>\n                </td>\n        </tr>\n        <tr>\n            <td>\n            <TextField\n                name=\"discount\" \n                value={this.state.update.purchase_items[this.state.current].discount} \n                type=\"number\"  \n                onChange={this.onChangePI}\n                required\n                label='Discount'\n                variant=\"outlined\"\n                />\n            </td>\n            <td>\n            <TextField\n                name=\"purchase_price\" \n                value={this.state.update.purchase_items[this.state.current].purchase_price} \n                type=\"number\"  \n                onChange={this.onChangePI}\n                required\n                label='Purchase Price'\n                variant=\"outlined\"\n                />\n            </td>\n        </tr>\n        <tr>\n            <td colSpan={2}>\n            <Select value= {this.state.update.purchase_items[this.state.current].status} name=\"status\" onChange={this.onChangePI}>\n                <MenuItem value=\"delivered\">Delivered</MenuItem>\n                <MenuItem value=\"incomplete\">Incomplete</MenuItem>\n                <MenuItem value=\"addedtocirculation\">Added To Circulation</MenuItem>\n            </Select>\n            </td>\n        </tr>\n            <tr>\n                <td>\n                {this.state.new ? <Button variant=\"contained\" color=\"primary\" onClick={() => {this.postPurchaseItem(true)}} >Add</Button> : <Button variant=\"contained\" color=\"primary\" onClick={() => {this.postPurchaseItem()}} >Update</Button>}\n                </td>\n                <td>\n                {this.state.new ? <span></span>:<Button variant=\"contained\" color=\"secondary\" onClick={() => {this.deletePurchaseItem()}} >Delete</Button>}\n        \n                </td>\n            </tr>\n            \n            </tbody>\n        </table>\n        const vendor_selection = this.state.vendor_selection\n        const vendorPopup = <Popup trigger={this.state.update.purchase_order.id ?<Button variant=\"contained\" color=\"secondary\">Change Vendor</Button> :<Button variant=\"contained\" color=\"secondary\">Select Vendor</Button> } closeOnDocumentClick>\n        <div>\n            <input placeholder=\"Vendor's first name\" id='vendor_serach_box' name='vendor_serach_box' onChange={this.searchVendor}></input>\n            <div className={style.dropdown_content} id='vendor_dropdown'>\n                    {vendor_selection.map(\n                        vendor => (\n                            // use css to get rid of <a>\n                            <a key={vendor.id} onClick={() => {this.selectVendor(vendor.id, vendor.name)}} >{vendor.name}</a>\n                        )\n                    )}\n            </div>\n        </div>\n        </Popup>\n        const status = this.state.status\n        return (\n            <div>\n                <Grid container justify='center'>\n                    <Grid  item xm={6}>\n                    <h1>Create New Purchase Order</h1>\n                    </Grid>\n                </Grid>\n                <Grid container justify='center'>\n                    <Grid item xm={6}>\n                        <table cellPadding='10' cellSpacing='10'>\n                            <tbody>\n                                <tr>\n                                    <td>\n                                        <TextField\n                                        value={this.state.update.purchase_order.vendor_name}\n                                        InputProps={{\n                                            readOnly: true,\n                                        }}\n                                        label='Vendor'\n                                        variant=\"outlined\"\n                                        />\n                                    </td>\n                                    <td>\n                                    {vendorPopup}\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td colSpan={2}>\n                                    <TextField\n                                        value={this.state.update.purchase_order.third_party_invoice_number}\n                                        label='Third Party Invoice Number'\n                                        variant=\"outlined\"\n                                        name = 'third_party_invoice_number'\n                                        onChange={this.onChange}\n                                        fullWidth\n                                        />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                    Invoiced On:<br></br>\n                                    <DatePicker\n                                    name='invoiced_on'\n                                    selected={this.state.update.purchase_order.invoiced_on}\n                                    onChange={this.invoiceHandler}\n                                    />\n                                    </td>\n                                    <td>\n                                    Completed On : <br></br>\n                                    <DatePicker\n                                    name='completed_on'\n                                    selected={this.state.update.purchase_order.completed_on}\n                                    onChange={this.completeHandler}\n                                    />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                    <TextField\n                                        value={this.state.update.purchase_order.total_cost} \n                                        name=\"total_cost\" \n                                        onChange={this.onChange}\n                                        label='Total Cost'\n                                        variant=\"outlined\"\n                                        fullWidth\n                                        />\n                                    </td>\n                                    <td>\n                                    <TextField\n                                        value= {this.state.update.purchase_order.discount} \n                                        name=\"discount\"\n                                        onChange={this.onChange}\n                                        label='Discount'\n                                        variant=\"outlined\"\n                                        fullWidth\n                                        />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td colSpan={2}>\n                                        Discount Type  :  <Select lable='Discount Type' fullWidth name='discount_type' id=\"discount_type\" onChange={this.onChange} value={this.state.update.purchase_order.discount_type}>\n                                            <MenuItem value=\"percent\">Percentage</MenuItem>\n                                            <MenuItem value=\"fixed\">Fixed</MenuItem>\n                                        </Select>\n                                    </td>\n                                </tr>\n                                <tr >\n                                    <td colSpan={2}>\n                                    Status : <Select name='status' id=\"status\" fullWidth onChange={this.onChange} value={this.state.update.purchase_order.status} required >\n                                    {status.map(\n                                        x => (\n                                        <MenuItem key={x.id} value={parseInt(x.id)}>{x.name}</MenuItem>\n                                        )\n                                    )}\n                                    </Select> \n                            </td>\n                                </tr>\n\n                                <tr>\n                                    <td>\n                                        <Button  variant=\"contained\" color=\"primary\"  onClick={() => {this.updatePurchaseOrder()}}>\n                                        {this.state.registered? 'Update': 'Add'} \n                                        </Button>\n                                       \n                                    </td>\n                                    <td>\n                                    \n                                    </td>\n                                </tr>\n\n                            </tbody>\n                        </table><br></br>\n                       </Grid>\n                </Grid>\n                <hr></hr>\n                <Grid container>\n                    <Grid item md={1}>\n\n                    </Grid>\n                    <Grid item md={3}>             \n                        <h1>Items</h1>   \n                    </Grid>\n\n                </Grid>\n                <Grid container justify='center'>\n                    <Grid item xm={8}>\n                    <table cellSpacing={10} cellPadding={10}>\n                    <tbody>\n                        <tr>\n                            <td>\n                            </td>\n                            <td>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td colSpan={3}>\n                            {this.state.popUp ? popUpItem :<div> <Button  variant=\"contained\" color=\"primary\" onClick={() => {this.addPurchaseItem()}}>Add New Items</Button><br></br>\n                            <List data={this.state.update.purchase_items} header={this.columns} page={false} popUp={this.popUp} /></div>}\n                            </td>\n                        </tr>\n                    </tbody>\n                    </table>\n                 \n                \n                </Grid>\n\n                </Grid>\n                </div>\n        )\n    }\n}\nexport default PurchaseOrderCreation","import { baseRequest } from '../base';\n// api for Invoices \n\nconst getInvoices = async data => {\n    try {\n      return await baseRequest('apiv1/sales/invoices','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  \n  const deleteInvoices = async data => {\n    try {\n      return await baseRequest('apiv1/sales/invoices/delete','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const createInvoice = async data => {\n      try {\n        return await baseRequest('apiv1/sales/invoices','POST', data);\n      } catch(e){\n        alert(e)\n      }\n  };\n  \n  \n  const getInvoice = async data => {\n    try {\n      return await baseRequest('apiv1/sales/invoice','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const updateInvoice= async data => {\n    try {\n      return await baseRequest('apiv1/sales/invoice','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  const getInvoiceStatus= async data => {\n    try {\n      return await baseRequest('apiv1/sales/invoices/status','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \nexport {getInvoiceStatus, getInvoices, createInvoice, deleteInvoices, updateInvoice, getInvoice}\n  ","import { baseRequest } from '../base';\n// api for Invoices \n\nconst getInvoiceItems = async data => {\n    try {\n      return await baseRequest('apiv1/sales/invoiceitems','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  \n  const deleteInvoiceItems = async data => {\n    try {\n      return await baseRequest('apiv1/sales/invoiceitems/delete','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const createInvoiceItem = async data => {\n      try {\n        return await baseRequest('apiv1/sales/invoiceitems','POST', data);\n      } catch(e){\n        alert(e)\n      }\n  };\n  \n  \n  const getInvoiceItem = async data => {\n    try {\n      return await baseRequest('apiv1/sales/invoiceitem','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const updateInvoiceItem= async data => {\n    try {\n      return await baseRequest('apiv1/sales/invoiceitem','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \nexport {getInvoiceItems, createInvoiceItem, deleteInvoiceItems, updateInvoiceItem, getInvoiceItem}\n  ","import { baseRequest } from '../base';\n// api for items \n\nconst getPlaces = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/places','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  \n  const deletePlaces = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/places/delete','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const createPlace = async data => {\n      try {\n        return await baseRequest('apiv1/inventory/places','POST', data);\n      } catch(e){\n        alert(e)\n      }\n  };\n  \n  \n  const getPlace = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/place','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const updatePlace = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/place','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n\n  const assignPlace = async data => {\n    try { \n      return await  baseRequest('apiv1/inventory/places/assign','POST', data);\n    } catch (e){\n      alert(e)\n    }\n  }\n  \nexport {getPlaces, createPlace, deletePlaces, updatePlace, getPlace, assignPlace}\n  ","import React, { Component } from 'react'\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport List from '../list';\nimport Popup from \"reactjs-popup\";\nimport style from '../purchaseOrder/css/popUp.module.css';\nimport {getCustomers} from '../../api/sales/customer';\nimport {updateInvoice, getInvoice, deleteInvoices, getInvoiceStatus} from '../../api/sales/invoice';\nimport {updateInvoiceItem, deleteInvoiceItems, createInvoiceItem} from '../../api/sales/invoiceItem'\nimport {getItems} from '../../api/inventory/itemApi';\nimport {getPlaces} from '../../api/inventory/placeApi';\nimport { getDiscounts, getTaxes } from '../../api/misc'\nimport { Grid } from '@material-ui/core';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport Table from 'react-bootstrap/Table'\n\nimport IconButton from '@material-ui/core/IconButton';\n\nimport {Button, TextField } from '@material-ui/core';\n\nimport Swal from 'sweetalert2'\n\n\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\n\n\nclass PopUpEdit extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            'tax_start':0,\n            'tax_end':5,\n            'discount_start':0,\n            'discount_end':5,\n            'tax_loaded':false,\n            'discount_loaded':false,\n            'discount_page':[],\n            'tax_page':[],\n            'discount_selection':[],\n            'tax_selection':[],\n            'place_selection':[],\n            'stock_selection':[],\n            'sold_from_selection':[],\n            'popUp':false,\n            'new':false,\n            'current':0,\n            'status':[],\n            'customer_selection':[\n                {\n                    'id':0,\n                    'name':'None'\n                }\n            ],\n            'item_selection':[\n                {\n                    'id':0,\n                    'name':\"None\"\n                }\n            ],\n            update : {\n                'invoice':{\n                    ...this.props.invoice,\n                    'invoiced_on': this.converter(this.props.invoice.invoiced_on),\n                    'due_on': this.converter(this.props.invoice.due_on)\n                },\n                'invoice_items':this.props.invoice_items\n            }\n        }\n        this.update_table = this.update_table.bind(this)\n        this.stateman = this.stateman.bind(this)\n        this.refreshTable = this.refreshTable.bind(this)\n        this.getItemData = this.getItemData.bind(this)\n        this.selectItem = this.selectItem.bind(this)\n        this.searchItem = this.searchItem.bind(this)\n        this.addInvoiceItem = this.addInvoiceItem.bind(this)\n        this.invoiceHandler = this.invoiceHandler.bind(this)\n        this.dueOnHandler = this.dueOnHandler.bind(this)\n        this.getCustomerData = this.getCustomerData.bind(this)\n        this.converter = this.converter.bind(this)\n        this.popUp = this.popUp.bind(this)\n        this.searchCustomer = this.searchCustomer.bind(this)\n        this.selectCustomer = this.selectCustomer.bind(this)\n        this.onChange = this.onChange.bind(this)\n        this.updateInvoice = this.updateInvoice.bind(this)\n        this.onChangePI = this.onChangePI.bind(this)\n        this.postInvoiceItem = this.postInvoiceItem.bind(this)\n        this.deleteInvoiceItem = this.deleteInvoiceItem.bind(this)\n        this.onChangePlace = this.onChangePlace.bind(this)\n        this.removeEntry = this.removeEntry.bind(this)\n        this.addEntryDiscount = this.addEntryDiscount.bind(this)\n        this.addEntryTax = this.addEntryTax.bind(this)\n        this.popUpTemp = this.popUpTemp.bind(this)\n    }\n    popUpTemp(){\n\n    }\n    removeEntry(id, dis){\n        if (dis){\n            var temp = this.state.update.invoice_items[this.state.current].applied_discount\n            temp.pop(dis)\n            var temp2 = this.state.update.invoice_items[this.state.current].discount\n            temp2.pop(temp.id)\n            this.setState({\n                ...this.state,\n                'update':{\n                    ...this.state.update,\n                    invoice_items:{\n                        ...this.state.update.invoice_items,\n                        [dis]:{\n                            'applied_discount':temp,\n                            'discount':temp2\n                            }\n                        }\n                    }\n                })\n            }\n        else {\n                var temp = this.state.update.invoice_items[this.state.current].applied_tax\n                temp.pop(dis)\n                var temp2 = this.state.update.invoice_items[this.state.current].taxes\n                temp2.pop(temp.id)\n                this.setState({\n                    ...this.state,\n                    'update':{\n                        ...this.state.update,\n                        invoice_items:{\n                            ...this.state.update.invoice_items,\n                            [dis]:{\n                                'applied_tax':temp,\n                                'taxes':temp2\n                            }\n                        }\n                    }\n                })\n    }\n}\n\n    async componentDidMount(){\n        var request_json = {\n            'action':'get',\n        }\n        await getInvoiceStatus(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    ...this.state,\n                    'status':data.data\n                })\n            }\n        })\n    }\n\n    async getCustomerData (request_json) {\n        await getCustomers(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'customer_selection':data['customers'],\n                })\n            } \n            \n            else{\n                Swal.fire({\n                    icon:'error',\n                    title:data['error']\n                })\n            } \n        })\n    }\n\n    selectCustomer(id,name){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice':{\n                    ...this.state.update.invoice,\n                    'customer':id,\n                    'customer_name':name\n                }\n            }\n        })\n    }\n\n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice':{\n                    ...this.state.update.invoice,\n                    [e.target.name] : [e.target.value][0]\n                }\n            }\n        })\n    }\n\n    converter(date){\n        return ( new Date(Date.parse(date)))\n    }\n\n    popUp(id){\n        var key\n        for (key in this.state.update.invoice_items){\n            if (this.state.update.invoice_items[key].id === id){\n                this.setState({\n                    ...this.state,\n                    'current':key,\n                    'popUp':true\n                }) \n                break;       \n            }\n        }\n        var request_json = {\n            'action':'get',\n            'filter':'item',\n            'item_id':this.state.update.invoice_items[key].item  \n        }\n        this.getPlacesData(request_json)\n    }\n\n    async getPlacesData(request_json) {\n        await getPlaces(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'sold_from_selection':data['placements'],\n                })\n                var temp = [], key, x;\n                for(key in data['placements']){\n                    x = {'id': data['placements'][key]['placed_on'], 'str_placed_on':data['placements'][key]['str_placed_on']}\n                    temp[data['placements'][key]['placed_on']] = x\n                    }\n                temp = temp.filter(function (el) {\n                    return el != null;\n                });\n                this.setState({\n                    'place_selection':temp\n                })\n                this.update_stock(data)\n            }\n            else{\n                Swal.fire({\n                    icon:'error',\n                    title:data['error']\n                })\n            }\n        })\n\n    }\n\n    // data = sold_From_selection\n    update_stock(data){\n        var sold_from;\n        if (this.state.update.invoice_items[this.state.current]['sold_from']){\n            sold_from = this.state.update.invoice_items[this.state.current]['sold_from']\n        }else {\n            sold_from = data['placements'][0]['placed_on']\n        }\n        var temp=[];\n        var p ;\n        for (p in data['placements']){\n            if (sold_from === data['placements'][p]['placed_on']){\n                var string  = data['placements'][p]['purchase_item_details']['purchase_price'] + \"/-  \" + data['placements'][p]['purchase_item_details']['quantity'] + \" \" + data['placements'][p]['purchase_item_details']['vendor'] \n                temp.push({\n                    'id': data['placements'][p]['purchase_item'],\n                    'str':string\n                })\n            }\n            \n        }\n        this.setState({\n            ...this.state,\n            'stock_selection': temp\n        })\n    }  \n    \n\n    async onChangePlace(e){\n        await this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice_items':{\n                    ...this.state.update.invoice_items,\n                    [this.state.current] : {\n                        ...this.state.update.invoice_items[this.state.current],\n                        [e.target.name] : [e.target.value][0]\n                    },\n                }\n            }\n        })\n        var temp=[],p;\n                for (p in this.state.sold_from_selection){\n                    if ( parseInt( this.state.update.invoice_items[this.state.current]['sold_from']) ===parseInt( this.state.sold_from_selection[p]['placed_on'])){\n                        var string  = this.state.sold_from_selection[p]['purchase_item_details']['purchase_price'] + \"/-  \" + this.state.sold_from_selection[p]['purchase_item_details']['quantity'] + \" \" + this.state.sold_from_selection[p]['purchase_item_details']['vendor'] \n                        temp.push({\n                            'id': this.state.sold_from_selection[p]['purchase_item'],\n                            'str':string\n                        })\n                    }\n                }\n                this.setState({\n                    ...this.state,\n                    'stock_selection': temp\n                }) \n    }\n\n    searchCustomer(e){\n        if ((e.target.value).length > 2 ){\n            var request_json = {\n                'action':'get',\n                'start':0,\n                'end':10,\n                'filter':'name',\n                'name':(e.target.value)\n            }\n            this.getCustomerData(request_json)\n        }\n    }\n    \n    invoiceHandler(date){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice':{\n                    ...this.state.update.invoice,\n                    'invoiced_on' : date\n                }\n            }\n        })\n    }\n    \n    dueOnHandler(date){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice':{\n                    ...this.state.update.invoice,\n                    'due_on' : date\n                }\n            }\n        })\n    }\n\n    updateInvoice(){\n        var request_json = {\n            ...this.state.update.invoice,\n            'action':'edit',\n            'invoice_id':this.state.update.invoice.id\n        }\n        updateInvoice(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                Swal.fire(\"Invoice Details Has Been Updated.\")\n                this.props.update(0)\n            }\n            else{\n                Swal.fire({\n                    icon:'error',\n                    title:data['error']\n                })            }\n        })\n    }\n\n    onChangePI(e){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice_items':{\n                    ...this.state.update.invoice_items,\n                    [this.state.current] : {\n                        ...this.state.update.invoice_items[this.state.current],\n                        [e.target.name] : [e.target.value][0]\n                    },\n                }\n            }\n        })\n    }\n\n    postInvoiceItem(is_new=false){\n        var request_json\n        if (is_new){\n            request_json = {\n                'action':'add',\n                'invoice':this.state.update.invoice.id,\n                ...this.state.update.invoice_items[this.state.current],\n            }\n            request_json['applied_tax'] = []\n            request_json['applied_discount'] = []\n            createInvoiceItem(JSON.stringify(request_json)).then(data => {\n                if (data['status']){\n                    Swal.fire(\"Invoice Item Has Been Added.\")\n                    this.refreshTable()\n                }\n                else{\n                    Swal.fire({\n                        icon:'error',\n                        title:data['error']\n                    })                   }\n            })\n            return\n        }\n        request_json = {\n            'action':'edit',\n            'invoice':this.state.update.invoice.id,\n            'invoice_item_id':this.state.update.invoice_items[this.state.current].id,\n            ...this.state.update.invoice_items[this.state.current]\n        }\n        request_json['applied_tax'] = []\n        request_json['applied_discount'] = []\n        updateInvoiceItem(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                Swal.fire(\"Invoice Item Details Has Been Updated.\")\n                this.refreshTable()\n            }\n            else{\n                Swal.fire({\n                    icon:'error',\n                    title:data['error']\n                })               }\n        })\n    }\n\n    deleteInvoiceItem(){\n        var request_json = {\n            invoice_items_id : [this.state.update.invoice_items[this.state.current].id]\n        }\n        \n    Swal.fire({\n        title: 'Are you sure?',\n        text: \"You won't be able to revert this!\",\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Yes, delete it!'\n      }).then((result) => {\n        deleteInvoiceItems(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                Swal.fire(\"Invoice Item Has Beed Deleted.\")\n                this.refreshTable()\n            }\n            else{\n                Swal.fire({\n                    icon:'error',\n                    title:data['error']\n                })               }\n        })\n    })\n    }\n\n    addInvoiceItem(){\n        var current =0;\n        var item,p_list=[];\n        for (item in this.state.update.invoice_items){\n            if (item.id){\n                if (item.id !== \"Fake Key\"){\n                    current = current + 1\n                    p_list.push(item)\n                }\n            }\n        }\n        this.setState({\n            'current':current,\n            'new':true,\n            'popUp':true,\n            'update':{\n                ...this.state.update,\n                'invoice_items':[\n                    ...p_list,\n                    {\n                        'item_name':\"None\",\n                        'discount_type':'percentage',\n                        'status':'incomplete',\n                        'discount':[],\n                        'taxes':[],\n                        'applied_tax':[],\n                        'applied_discount':[],\n                        'purchase_item':'',\n                    }\n                ]\n            }\n        })\n    }\n    columns = [\n        {\n            id:1,\n            name:\"Item Name\",\n            prop: 'item_name'\n        },\n        {\n            id:2,\n            name:\"Quantity\",\n            prop: 'quantity'\n        },\n        {\n            id:8,\n            name:\"Price\",\n            prop: 'price'\n        },\n        {\n            id:3,\n            name:\"Sold From\",\n            prop: 'sold_from_name'\n        },\n        {\n            id:4,\n            name:\"Tax Total\",\n            prop: 'tax_total'\n        },\n        ,\n        {\n            id:5,\n            name:\"Disount Amount\",\n            prop: 'discount_amount'\n        },   \n        {\n            id:6,\n            name:\"Sub Total\",\n            prop: 'sub_total'\n        },\n        {\n            id:7,\n            name:\"Total\",\n            prop: 'total'\n        }\n    ]\n\n    searchItem(e){\n        if ((e.target.value).length > 2 ){\n            var request_json = {\n                'action':'get',\n                'start':0,\n                'end':10,\n                'filter':'name',\n                'name':(e.target.value)\n            }\n            this.getItemData(request_json)\n        }\n    }\n\n    async getItemData(request_json){\n        await getItems(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    ...this.state,\n                    'item_selection':data['items'],\n                })\n            }  \n            \n            else{\n                Swal.fire({\n                    icon:'error',\n                    title:data['error']\n                })            }\n        })\n    }\n    selectItem(id, name){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice_items':{\n                    ...this.state.update.invoice_items,\n                    [this.state.current] : {\n                        ...this.state.update.invoice_items[this.state.current],\n                        'item_name' : name,\n                        'item':id\n                    },\n                }\n            }\n        })\n        var request_json = {\n            'action':'get',\n            'filter':'item',\n            'item_id':id\n        }\n        this.getPlacesData(request_json)\n    }\n\n    async refreshTable(){\n        var id = this.state.update.invoice.id;\n        var items= [];\n        const request_json = {\n            'action':'get',\n            'invoice_id':id\n        }\n        await getInvoice(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                items = data['invoice_items']\n            }\n            \n            else{\n                Swal.fire({\n                    icon:'error',\n                    title:data['error']\n                })            }\n        })\n        if (items.length === 0){\n            items = [{\n                'id':\"Fake Key\",\n                'item_name': ''\n            }]\n        }\n        await this.setState({\n            ...this.state,\n            'popUp':false,\n            'update':{\n                ...this.state.update,\n                'invoice_items':items\n            }\n        })\n    }\n\n\n    stateman(){\n    }\n\n\n    discount_columns =[\n        {\n            'id':1,\n            'name':'Name',\n            'prop':'name'\n        },{\n            'id':2,\n            'name':'Rate',\n            'prop':'rate'\n        },{\n            'id':3,\n            'name':'Code',\n            'prop':'code'\n        },{\n            'id':4,\n            'name':'Type',\n            'prop':'discount_type'\n        },{\n            'id':5,\n            'name':'Remove',\n            'prop':'removeButton'\n        },\n    ]\n\n    tax_columns =[\n        {\n            'id':1,\n            'name':'Name',\n            'prop':'name'\n        },{\n            'id':2,\n            'name':'Rate',\n            'prop':'rate'\n        },{\n            'id':3,\n            'name':'Code',\n            'prop':'code'\n        },{\n            'id':4,\n            'name':'Type',\n            'prop':'tax_type'\n        },{\n            'id':5,\n            'name':'Remove',\n            'prop':'removeButton'\n        },\n    ]\n\n    \n    add_discount_columns =[\n        {\n            'id':1,\n            'name':'Name',\n            'prop':'name'\n        },{\n            'id':2,\n            'name':'Rate',\n            'prop':'rate'\n        },{\n            'id':3,\n            'name':'Code',\n            'prop':'code'\n        },{\n            'id':4,\n            'name':'Type',\n            'prop':'discount_type'\n        }\n    ]\n\n    add_tax_columns =[\n        {\n            'id':1,\n            'name':'Name',\n            'prop':'name'\n        },{\n            'id':2,\n            'name':'Rate',\n            'prop':'rate'\n        },{\n            'id':3,\n            'name':'Code',\n            'prop':'code'\n        },{\n            'id':4,\n            'name':'Type',\n            'prop':'tax_type'\n        }\n    ]\n\n    async update_table (by,dis) {\n        var x = by<0?-1:1\n        if (dis){\n            if (by===0){\n                await this.setState({\n                    'discoount_loaded':false,\n                    discount_start: 0,\n                    discount_end: 10,\n                    discount_page:1\n                })\n            }\n            else{\n                if (this.state.discount_start+by>-1){\n                    await this.setState({\n                        'discount_loaded':false,\n                        discount_start: this.state.discount_start+by,\n                        discount_end: this.state.discount_end+by,\n                        discount_page:this.state.discount_page+x\n                    })\n                }\n                else{\n                    alert(\"Cannot move futher from here.\")\n                    return\n                }\n            }\n            var  request_json = {\n                'action':'get',\n                'filter':'none',\n                'start':this.state.discount_start,\n                'end':this.state.discount_end\n            }\n            this.getDiscountsData(request_json)\n        }\n    else { \n        if (by===0){\n            await this.setState({\n                'tax_loaded':false,\n                tax_start: 0,\n                tax_end: 10,\n                tax_page:1\n            })\n        }\n        else{\n            if (this.state.tax_start+by>-1){\n                await this.setState({\n                    'tax_loaded':false,\n                    tax_start: this.state.tax_start+by,\n                    tax_end: this.state.tax_end+by,\n                    tax_page:this.state.tax_page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.tax_start,\n            'end':this.state.tax_end\n        }\n        this.getTaxesData(request_json)\n\n    }\n    }\n    \n    async getDiscountsData (request_json) {\n        await getDiscounts(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'discount_selection':data['discounts'],\n                    'discount_loaded':true\n                })\n            }\n            else{\n                Swal.fire({\n                    icon:'error',\n                    title:data['error']\n                })            }\n        })\n    }\n    async getTaxesData (request_json) {\n        await getTaxes(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'tax_selection':data['taxes'],\n                    'tax_loaded':true\n                })\n            }  \n        })\n    }\n \n    addEntryDiscount(id){\n        var dis;\n        var temp,temp2;\n        for (dis in this.state.discount_selection){\n            if (this.state.discount_selection[dis].id === id){\n                temp = this.state.update.invoice_items[this.state.current]['applied_discount']\n                var x = this.state.discount_selection[dis]\n                temp.push(x)\n                temp2 = this.state.update.invoice_items[this.state.current]['discount']\n                temp2.push(id)\n                this.setState({\n                    ...this.state,\n                    update:{\n                        ...this.state.update,\n                        'invoice_items':{\n                            ...this.state.update.invoice_items,\n                            [this.state.current] : {\n                                ...this.state.update.invoice_items[this.state.current],\n                                'discount':temp2,\n                                'applied_discount': temp\n                            }\n                        }\n                    }\n                })\n            }\n        }\n    }\n\n    addEntryTax(id){\n        var dis;\n        for (dis in this.state.tax_selection){\n            if (this.state.tax_selection[dis].id === id){\n                var temp = this.state.update.invoice_items[this.state.current]['applied_tax']\n                var x = this.state.tax_selection[dis]\n                temp.push(x)\n                var temp2 = this.state.update.invoice_items[this.state.current]['taxes']\n                temp2.push(id)\n                this.setState({\n                    ...this.state,\n                    update:{\n                        ...this.state.update,\n                        'invoice_items':{\n                            ...this.state.update.invoice_items,\n                            [this.state.current] : {\n                                ...this.state.update.invoice_items[this.state.current],\n                                'tax':temp2,\n                                'applied_tax': temp\n                            }\n                        }\n                    }\n                })\n            }\n        }\n    }\n\n\n    render() {\n        const item_selection = this.state.item_selection\n        const itemPopUp = <Popup trigger={ <Button variant=\"contained\" color=\"primary\" size='small'>Select Item</Button>} closeOnDocumentClick>\n        <div>\n            <input placeholder=\"Item Name\" id='item_search_box' name='item_serach_box' onChange={this.searchItem}></input>\n            <div className={style.dropdown_content} id='item_dropdown'>\n                    {item_selection.map(\n                        item => (\n                        <a key={item.id} onClick={() => {this.selectItem(item.id, item.name)}} >{item.name} {item.sales_price}</a>\n                        )\n                    )}\n            </div>\n        </div>\n        </Popup>\n\n        var places = this.state.place_selection\n        const selectPlace =<select name='sold_from' id=\"sold_from\" onChange={this.onChangePlace} value={this.state.update.invoice_items[this.state.current].sold_from}  >\n            <option key=\"Fake Key\" value='Fake Value'>Select Place</option>\n                {places.map(\n                    x => (\n                    <option key={x.id} value={x.id}>{x.str_placed_on}</option>\n                    )\n                )}\n            </select>\n\n            \n        var stocks  = this.state.stock_selection\n        var stockValue = this.state.update.invoice_items[this.state.current].purchase_item ? this.state.update.invoice_items[this.state.current].purchase_item : ''\n        const selectStock = <select name='purchase_item' id=\"purchase_item\" onChange={this.onChangePI} value={stockValue} >\n                <option key='Fake Key' value=\"Fake Value\">Select Stock</option>\n                {stocks.map(\n                    x => (\n                    <option key={x.id} value={parseInt(x.id)}>{x.str}</option>\n                    )\n                )}\n            </select>\n        const addPopupDiscount = <div>\n\n            <h3> Click To Apply New Discount</h3>\n            <Grid container justify='center'>\n                <Grid item xm={12} md={12}>\n            <List data={this.state.discount_selection} header={this.add_discount_columns} page={false} popUp={this.addEntryDiscount} />\n            </Grid>\n            <Grid item xm={12} md={3}>\n            <IconButton onClick={()=> {this.update_table(-5,true)}}><NavigateBeforeIcon /></IconButton><span>      {this.state.discount_page}       </span><IconButton  onClick={()=> {this.update_table(5,true)}} ><NavigateNextIcon /></IconButton>\n            </Grid>\n                            \n            </Grid>\n                            </div>\n        \n        const addPopupTax = <div>\n            <h3>Click To Apply New Tax </h3>\n            <Grid container justify='center'>\n                <Grid item xm={12} md={12}>\n            <List data={this.state.tax_selection} header={this.add_tax_columns} page={false} popUp={this.addEntryTax} />\n            </Grid>\n            <Grid item xm={12} md={3}>\n            <IconButton onClick={()=> {this.update_table(-5,false)}}><NavigateBeforeIcon /></IconButton><span>      {this.state.discount_page}       </span><IconButton  onClick={()=> {this.update_table(5,false)}} ><NavigateNextIcon /></IconButton>\n            </Grid>\n                            \n            </Grid>\n            </div>\n        \n\n        var dis;\n        const discounts =this.state.update.invoice_items[this.state.current].applied_discount\n        for (dis in discounts){\n            discounts[dis] = {\n                ...discounts[dis],\n                'removeButton':<button onClick={() => {this.removeEntry(dis,true)}}> Remove </button>\n            }\n        }\n        \n        const taxes = this.state.update.invoice_items[this.state.current].applied_tax\n        for (dis in taxes){\n            taxes[dis] = {\n                ...taxes[dis],\n                'removeButton':<button onClick={()=>{this.removeEntry(dis,false)}}> Remove </button>\n            }\n        }\n        const popUpItem = <div>\n            <Grid container justify='center'>\n                <Grid item md={'auto'}>\n\n            <Table cellSpacing={10} cellPadding={10} responsive=\"sm\" >\n                <tbody>\n\n               \n                <tr>\n                    <td>\n                    <Button  variant=\"contained\" color=\"secondary\" onClick={() => {this.refreshTable()}} >Back</Button>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                    <h3>Item :  {this.state.update.invoice_items[this.state.current].item_name}</h3>\n                    </td>\n                    <td>\n                    {itemPopUp}\n                    </td>\n                </tr>\n                <tr>\n                    <th colSpan={2} >\n                        <b>Sold From </b>\n                    </th>\n                </tr>\n\n                <tr>\n                    <td>\n                        Place: \n                    </td>\n                    <td>\n                    {this.state.update.invoice_items[this.state.current].item ? selectPlace : \"Select An Item First\" }\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                    Stock :\n                    </td>\n                    <td>\n                    {this.state.update.invoice_items[this.state.current].item ? selectStock : \"Select An Item First\" }\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                    Quantity : <input name=\"quantity\" placeholder={this.state.update.invoice_items[this.state.current].quantity} type=\"number\" onChange={this.onChangePI} required min='1' ></input><br></br>\n                \n                    </td>\n                    <td>\n                    Price : <input name=\"price\" placeholder={this.state.update.invoice_items[this.state.current].price} type=\"number\" onChange={this.onChangePI} required></input><br></br>\n                \n                    </td>\n                    </tr>\n                    <tr>\n                    <td>\n                    Tax Total : {this.state.update.invoice_items[this.state.current].tax_total} <br></br>\n                    </td>\n                    <td>\n                    Sub Total : {this.state.update.invoice_items[this.state.current].sub_total} <br></br>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                    Discount Amount : {this.state.update.invoice_items[this.state.current].discount_amount}<br></br>\n                    </td>\n                    <td>\n                    Total without discount : {this.state.update.invoice_items[this.state.current].total_without_discount}<br></br>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                    Total : {this.state.update.invoice_items[this.state.current].total}<br></br>\n                    </td>\n                </tr>\n                <tr>\n                    \n                <td>\n                    Applied Discounts \n                    </td>\n                    <th>\n                    <Button onClick={() =>{this.update_table(0, true)}}  variant=\"contained\" color=\"secondary\" size='small'>Apply New Discount</Button>\n                    </th>\n                </tr>\n                <tr>\n                    <td colSpan={3} >\n                    <List data={discounts} header={this.discount_columns} page={false} popUp={this.popUpTemp} removeEntry={this.removeEntry} />\n                    </td>\n                </tr>\n                <tr>\n                    <td colSpan={3}>\n                {this.state.discount_loaded ? addPopupDiscount : <span></span>}\n                </td>\n                </tr>\n            <tr>\n                <td>\n                    Applied Taxes \n                </td>\n                <td>\n                <Button variant=\"contained\" color=\"secondary\" size='small' onClick={() => {this.update_table(0, false)}}>Apply New Tax</Button>\n                </td>\n            </tr>\n                <tr>\n                    <td colSpan={3}>\n                    <List data={taxes} header={this.tax_columns} page={false} popUp={this.popUpTemp} removeEntry={this.removeEntry} />\n                    </td>\n                </tr>\n                <tr>\n                    <td colSpan={3}>\n                    {this.state.tax_loaded ? addPopupTax : <span></span>}<br></br>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                    {this.state.new ? <Button variant=\"contained\" color=\"primary\" size='small' onClick={() => {this.postInvoiceItem(true)}} >Add</Button> : <Button  variant=\"contained\" color=\"primary\" size='small' onClick={() => {this.postInvoiceItem()}} >Update</Button>}\n                    </td>\n                    <td>\n                    <Button  variant=\"contained\" color=\"secondary\" size='small' onClick={() => {this.deleteInvoiceItem()}} >Delete</Button>\n                    </td>\n                </tr>\n                </tbody>\n            </Table>\n            \n            </Grid>\n            </Grid>\n            </div>\n\n        const customer_selection = this.state.customer_selection\n        const customerPopup = <Popup trigger={<Button variant=\"contained\" color=\"primary\">Change Customer</Button>} closeOnDocumentClick>\n        <div>\n            <input placeholder=\"Customer's first name\" id='customer_serach_box' name='customer_serach_box' onChange={this.searchCustomer}></input>\n            <div className={style.dropdown_content} id='customer_dropdown'>\n                    {customer_selection.map(\n                        customer => (\n                            <a href=\"#\" key={customer.id} onClick={() => {this.selectCustomer(customer.id, customer.name)}} >{customer.name}</a>\n                        )\n                    )}\n            </div>\n        </div>\n        </Popup>\n        const status = this.state.status\n        return (\n            <div>\n                \n            <Grid container justify='center' alignContent='center' alignItems='center' spaceing={6}>\n                <Grid item xm={12} >\n                    <h2>{this.state.update.invoice.customer_name}</h2>\n                </Grid>\n            </Grid>\n\n            <Grid container justify='center' >\n                <Grid item xm={8}>\n                    <Table  cellPadding='10' cellSpacing='10' >\n                        <tbody>\n                        <tr>\n                        <td>\n                                <TextField\n                                defaultValue={this.state.update.invoice.added_by_name}\n                                InputProps={{\n                                    readOnly: true,\n                                }}\n                                label='Added By'\n                                variant=\"outlined\"\n                                />\n                                </td>\n                        <td> <TextField\n                                defaultValue={this.state.update.invoice.customer_name}\n                                InputProps={{\n                                    readOnly: true,\n                                }}\n                                label='Customer'\n                                variant=\"outlined\"\n                                \n                                />\n                         </td>\n                        </tr>\n                        <tr>\n                            <td></td><td>{customerPopup}</td>\n                        </tr>\n                        <tr>\n                            <td colSpan=\"2\">\n                            <TextField\n                                defaultValue= {this.state.update.invoice.invoice_number}\n                                InputProps={{\n                                    readOnly: true,\n                                }}\n                                fullWidth\n                                label='Invoice Number'\n                                variant=\"outlined\"\n                                />\n                        </td>\n                        </tr>\n\n                        <tr>\n                            <td>\n                            <TextField\n                                defaultValue= {this.state.update.invoice.total_amount}\n                                InputProps={{\n                                    readOnly: true,\n                                }}\n                                \n                                label='Total Amount'\n                                variant=\"outlined\"\n                                />\n                            </td>\n                            <td>\n                            <TextField\n                                defaultValue= {this.state.update.invoice.tax_total}\n                                InputProps={{\n                                    readOnly: true,\n                                }}\n                                \n                                label='Tax Total'\n                                variant=\"outlined\"\n                                />\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                            <TextField\n                                defaultValue={this.state.update.invoice.discount_total}\n                                InputProps={{\n                                    readOnly: true,\n                                }}\n                                \n                                label='Discount Total'\n                                variant=\"outlined\"\n                                />\n                            </td>\n                            <td>\n                            <TextField\n                                defaultValue= {this.state.update.invoice.paid_amount}\n                                InputProps={{\n                                    readOnly: true,\n                                }}\n                                \n                                label='Paid Amount'\n                                variant=\"outlined\"\n                                />\n                            </td>\n                        </tr>\n\n                        <tr>\n                            <td>\n                            <TextField variant=\"outlined\" value={this.state.update.invoice.additional_discount} name='additional_discount' onChange={this.onChange} type='float' label='Additional Discount'></TextField>\n                            </td>\n                        </tr>\n                        \n                        <tr>\n                            <td>\n                            <b>Invoiced On : </b><br></br>\n                                <DatePicker\n                                name='invoiced_on'\n                                selected={this.state.update.invoice.invoiced_on}\n                                onChange={this.invoiceHandler}\n                                />\n                            </td>\n                            <td>\n                            <b>Due On : </b> <br></br>\n                            <DatePicker\n                            name='completed_on'\n                            selected={this.state.update.invoice.due_on}\n                            onChange={this.dueOnHandler}\n                            />\n                            </td>\n                        </tr>\n                        <tr>\n                    \n                            <td >\n                            <b>Status : </b> \n                                    <Select label='Status' fullWidth name='status' id=\"status\" onChange={this.onChange} value={this.state.update.invoice.status}>\n                                        {status.map(\n                                            x=>(\n                                            <MenuItem key={x.id} value={parseInt(x.id)}>{x.name}</MenuItem>\n                                            )\n                                        )}\n                                    </Select>\n                            </td>\n                        </tr>\n                            <tr>\n                                <td>\n                                <Button variant=\"contained\" color=\"primary\" onClick={() => {this.updateInvoice()}}>Update Invoice</Button>\n                                </td>\n                                <td>\n                                <Button variant=\"contained\" color=\"secondary\"  onClick={() => {this.props.delete(this.props.invoice.id)}}>Delete</Button>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </Table>\n                </Grid>\n                </Grid>\n                <Grid container justify='center'>\n                    <Grid item xs={8} >\n                    <h3>Items</h3> <Button variant=\"contained\" color=\"secondary\"  onClick={() => {this.addInvoiceItem()}}>Add New Items</Button>\n                    {this.state.popUp ? popUpItem :<List data={this.state.update.invoice_items} header={this.columns} page={false} popUp={this.popUp} />}\n                    </Grid>\n                </Grid>\n            </div>\n        )\n    }\n}\nexport default PopUpEdit","import React, { Component } from 'react'\nimport List from '../list';\nimport { getInvoice, deleteInvoices, updateInvoice } from '../../api/sales/invoice';\nimport PopUpEdit from './popUpEdit';\nimport Swal from 'sweetalert2'\n\nclass InvoiceListing extends Component {\n    \n    constructor(props){\n        super(props)\n        this.popUp = this.popUp.bind(this)\n        this.state = {\n            'popUp':false,\n            'invoices':{},\n            'invoice_items':[],\n            'update':{}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.invoiceDelete = this.invoiceDelete.bind(this)\n    }\n    \n     \n    async componentDidMount(){\n        try {\n            const {id} = this.props.match.params\n            if (id){\n                await this.popUp(id,0,true)\n            }\n        }catch(e){\n        }\n    }\n    back(){ \n        if (this.props.data){\n            this.setState({...this.state, popUp:false});\n        }else{\n            this.props.history.push('/invoices')\n        }\n    }\n\n       \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value]\n            }\n        })\n    }\n\n    \n    async onSubmit(e){\n        e.preventDefault();\n            var data = this.state.vendor\n            var ele;\n            for (ele in this.state.update){\n                data[ele] = this.state.update[ele][0]\n            }\n            data = {...data, 'action':'edit'}\n            updateInvoice(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        Swal.fire(\"Invoice Data updated.\")\n                        this.props.update(0)\n                    }\n                    else{\n                        Swal.fire({\n                            icon:'error',\n                            title:data['error']\n                        })\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    invoiceDelete(id){\n        var data = {\n            'invoices_id':[\n                id\n            ]\n        }\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to revert this!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, delete it!'\n          }).then((result) => {\n              if (result['value'] == true){\n        deleteInvoices(JSON.stringify(data)).then(data=>{\n            try {\n                if (data['status']){\n                    Swal.fire('Invoice has been Deleted.')\n                    this.props.update(0)\n                }   else{\n                    Swal.fire({\n                        icon:'error',\n                        title:data['error']\n                    })\n                }\n            }catch(e){\n                console.log(e)\n            }\n        })\n    }\n    })\n}\n    \n    async popUp(id, uuid=0, fromUrl=false){\n        if(!fromUrl){\n            this.props.pushNewId(id)\n        }\n        else{\n            const data = {\n                'action':'get',\n                'invoice_id':id,\n            }\n            var data_main;\n            await getInvoice(JSON.stringify(data)).then(data => {\n                if (data['status']){\n                    console.log(data)\n                    data_main=data\n                }\n                else{\n                    Swal.fire({\n                        icon:'error',\n                        title:data['error']\n                    })\n                }\n            })\n            if (data_main['invoice_items'].length === 0) {\n                console.log(\"blank\")\n                data_main['invoice_items'] = [{\n                    id:0\n                }]\n            }\n            await this.setState({\n                'popUp':true,\n                'invoice':data_main['invoice'][0],\n                'invoice_items':data_main['invoice_items']\n            })\n        }\n    }\n\n\n    columns = [\n        {\n            id:1,\n            name:\"Customer's Name\",\n            prop: 'customer_name'\n        },\n        {\n            id:2,\n            name:\"Sold By\",\n            prop: 'added_by_name'\n        },\n        {\n            id:3,\n            name:\"Paid Amount\",\n            prop: 'paid_amount'\n        },\n        {\n            id:4,\n            name:\"Order Number\",\n            prop: 'order_number'\n        },\n        {\n            id:5,\n            name:'Invoiced On',\n            prop:'invoiced_on_str'\n        },\n        {\n            id:6,\n            name:'Status',\n            prop:'status_name'\n        }\n    ]\n    \n\n    render() {\n        var listData\n        if (!this.props.data){\n            listData = []\n        }else{\n            listData=this.props.data\n        }\n\n        const list = <List data={listData} header={this.columns}   popUp={this.popUp} update={this.props.update} page={this.props.page} />\n        const popUpRender = <PopUpEdit invoice={this.state.invoice} invoice_items={this.state.invoice_items} update={this.props.update} delete={this.invoiceDelete} ></PopUpEdit>\n        return (\n            <div>\n                {this.state.popUp ? popUpRender : list}\n            </div>\n        )\n    }\n}\n\nexport default InvoiceListing\n","import React, { Component } from 'react'\nimport {getInvoices} from '../../api/sales/invoice';\nimport {  connect } from 'react-redux';\nimport  InvoiceListing  from './invoiceListing';\nimport { Link} from 'react-router-dom';\n\n\nimport Button from '@material-ui/core/Button';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/styles';\nimport PropTypes from 'prop-types';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport LoadingIcon from '../loading';\n\nimport Swal from 'sweetalert2'\n\n\n\nconst styles = makeStyles((theme) => ({\n    root: {\n    flexGrow: 12,\n    },\n    paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    },\n}));\n\n\nclass Invoices extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            'invoices':[],\n            'loaded':false,\n            'start':0,\n            'end':10,\n            'page':1\n        }\n        this.update_table = this.update_table.bind(this)\n        this.pushNewId = this.pushNewId.bind(this)\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n        this.update_table(0)\n    }\n\n    async update_table (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                'loaded':false,\n                start: 0,\n                end: 10,\n                page:1\n            })\n        }\n        else{\n            if (this.state.start+by>-1){\n                await this.setState({\n                    'loaded':false,\n                    start: this.state.start+by,\n                    end: this.state.end+by,\n                    page:this.state.page+x\n                })\n            }\n            else{\n                Swal.fire({\n                    icon:'error',\n                    title:'cannot go any further'\n                })\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.start,\n            'end':this.state.end\n        }\n        this.getInvoiceData(request_json)\n    }\n    \n    async getInvoiceData (request_json) {\n        var invoice\n        await getInvoices(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                for (invoice in data['invoices']){\n                    data['invoices'][invoice]['invoiced_on_str']=(data['invoices'][invoice]['invoiced_on']).split('T')[0]\n                    data['invoices'][invoice]['due_on_str']=(data['invoices'][invoice]['due_on']).split('T')[0]\n                }\n                this.setState({\n                    'invoices':data['invoices'],\n                    'loaded':true\n                })\n            }\n            else{\n                Swal.fire(data['error'])\n            }  \n        })\n    }\n    \n    pushNewId(id){\n        this.props.history.push('/invoices/'+id)\n    }\n\n\n \n\nrender() {\n    const { classes } = this.props;\n\n    const render_after_load = (\n        <div>\n            <InvoiceListing pushNewId={this.pushNewId} data={this.state.invoices} update={this.update_table} page={this.state.page} />\n        </div>\n    )\n\n    return(\n        <div className={classes.root}>\n        <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n            <Grid item xs={3} >\n            <Button variant=\"contained\" color=\"primary\" onClick={() => {this.update_table(0)}}>\n              <RefreshIcon/>&nbsp;&nbsp;&nbsp;Refresh Table\n              </Button>\n            </Grid>\n            <Grid item xs={5}>\n  \n            </Grid>\n              <Grid item xs={3}>\n              <Link to='/invoices/create' style={{ textDecoration: 'none' }}>\n              <Button variant=\"contained\" color=\"secondary\">\n              <AddCircleIcon/>&nbsp;&nbsp;&nbsp;Add New Invoice\n              </Button>\n              </Link>\n              </Grid>\n  \n          <Grid item xs={12}>\n            <Paper className={classes.paper}>\n            {this.state.loaded ? render_after_load : <LoadingIcon></LoadingIcon>}\n            </Paper>\n          </Grid>\n          \n        </Grid>\n      </div>\n    )\n}\n}\n\n\nInvoices.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n\nconst mapStateToProps = state => ({\n    user: state.user,\n})\nexport default withStyles(styles)(connect(mapStateToProps)(Invoices))\n","import React, { Component } from 'react'\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport List from '../list';\nimport Popup from \"reactjs-popup\";\nimport style from '../purchaseOrder/css/popUp.module.css';\nimport {getCustomers} from '../../api/sales/customer';\nimport {createInvoice,  getInvoice, getInvoiceStatus} from '../../api/sales/invoice';\nimport {updateInvoiceItem, deleteInvoiceItems, createInvoiceItem} from '../../api/sales/invoiceItem'\nimport {getItems} from '../../api/inventory/itemApi';\nimport {getPlaces} from '../../api/inventory/placeApi';\nimport { getDiscounts, getTaxes } from '../../api/misc'\nimport { Grid, Button, TextField } from '@material-ui/core';\nimport Swal from 'sweetalert2';\n\n\nclass InvoiceCreation extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            'tax_start':0,\n            'tax_end':5,\n            'discount_start':0,\n            'discount_end':5,\n            'tax_loaded':false,\n            'discount_loaded':false,\n            'discount_page':[],\n            'tax_page':[],\n            'discount_selection':[],\n            'tax_selection':[],\n            'place_selection':[],\n            'stock_selection':[],\n            'sold_from_selection':[],\n            'popUp':false,\n            'new':false,\n            'current':0,\n            'status':[],\n            'customer_selection':[\n                {\n                    'id':0,\n                    'name':'None'\n                }\n            ],\n            'item_selection':[\n                {\n                    'id':0,\n                    'name':\"None\"\n                }\n            ],\n            update : {\n                'invoice':{\n                    'customer_name':'',\n                    'invoiced_on': new Date(),\n                    'due_on': new Date()\n                },\n                'invoice_items':[[{\n                    'id':'Fake Key',\n                    'discount':[],\n                    'applied_discount':[],\n                    'tax':[],\n                    'applied_tax':[]\n                }]]\n            }\n        }\n        this.update_table = this.update_table.bind(this)\n        this.stateman = this.stateman.bind(this)\n        this.refreshTable = this.refreshTable.bind(this)\n        this.getItemData = this.getItemData.bind(this)\n        this.selectItem = this.selectItem.bind(this)\n        this.searchItem = this.searchItem.bind(this)\n        this.addInvoiceItem = this.addInvoiceItem.bind(this)\n        this.invoiceHandler = this.invoiceHandler.bind(this)\n        this.dueOnHandler = this.dueOnHandler.bind(this)\n        this.getCustomerData = this.getCustomerData.bind(this)\n        this.converter = this.converter.bind(this)\n        this.popUp = this.popUp.bind(this)\n        this.searchCustomer = this.searchCustomer.bind(this)\n        this.selectCustomer = this.selectCustomer.bind(this)\n        this.onChange = this.onChange.bind(this)\n        this.updateInvoice = this.updateInvoice.bind(this)\n        this.onChangePI = this.onChangePI.bind(this)\n        this.postInvoiceItem = this.postInvoiceItem.bind(this)\n        this.deleteInvoiceItem = this.deleteInvoiceItem.bind(this)\n        this.onChangePlace = this.onChangePlace.bind(this)\n        this.removeEntry = this.removeEntry.bind(this)\n        this.addEntryDiscount = this.addEntryDiscount.bind(this)\n        this.addEntryTax = this.addEntryTax.bind(this)\n    }\n\n    removeEntry(id, dis){\n        var temp,temp2\n        if (dis){\n             temp = this.state.update.invoice_items[this.state.current].applied_discount\n            temp.pop(dis)\n             temp2 = this.state.update.invoice_items[this.state.current].discount\n            temp2.pop(temp.id)\n            this.setState({\n                ...this.state,\n                'update':{\n                    ...this.state.update,\n                    invoice_items:{\n                        ...this.state.update.invoice_items,\n                        [dis]:{\n                            'applied_discount':temp,\n                            'discount':temp2\n                        }\n                    }\n                }\n            })\n        }\n        else {\n            \n                 temp = this.state.update.invoice_items[this.state.current].applied_tax\n                temp.pop(dis)\n                 temp2 = this.state.update.invoice_items[this.state.current].taxes\n                temp2.pop(temp.id)\n                this.setState({\n                    ...this.state,\n                    'update':{\n                        ...this.state.update,\n                        invoice_items:{\n                            ...this.state.update.invoice_items,\n                            [dis]:{\n                                'applied_tax':temp,\n                                'taxes':temp2\n                            }\n                        }\n                    }\n                })\n            \n        }\n    }\n\n    async componentDidMount(){\n        var request_json = {\n            'action':'get',\n        }\n        await getInvoiceStatus(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    ...this.state,\n                    'status':data.data\n                })\n            }\n            else{\n                Swal.fire(data['error'])\n            }\n        })\n    }\n\n    async getCustomerData (request_json) {\n        await getCustomers(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'customer_selection':data['customers'],\n                })\n            } \n            \n            else{\n                Swal.fire(data['error'])\n            } \n        })\n    }\n\n    selectCustomer(id,name){\n        console.log(id,name)\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice':{\n                    ...this.state.update.invoice,\n                    'customer':id,\n                    'customer_name':name\n                }\n            }\n        })\n    }\n\n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice':{\n                    ...this.state.update.invoice,\n                    [e.target.name] : [e.target.value][0]\n                }\n            }\n        })\n    }\n\n    converter(date){\n        return ( new Date(Date.parse(date)))\n    }\n\n    popUp(id){\n        var key\n        for (key in this.state.update.invoice_items){\n            if (this.state.update.invoice_items[key].id === id){\n                this.setState({\n                    ...this.state,\n                    'current':key,\n                    'popUp':true\n                }) \n                break;       \n            }\n        }\n        var request_json = {\n            'action':'get',\n            'filter':'item',\n            'item_id':this.state.update.invoice_items[key].item  \n        }\n        this.getPlacesData(request_json)\n    }\n\n    async getPlacesData(request_json) {\n        await getPlaces(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'sold_from_selection':data['placements'],\n                })\n                var temp = [], key, x;\n                for(key in data['placements']){\n                    x = {'id': data['placements'][key]['placed_on'], 'str_placed_on':data['placements'][key]['str_placed_on']}\n                    temp[data['placements'][key]['placed_on']] = x\n                    }\n                temp = temp.filter(function (el) {\n                    return el != null;\n                });\n                this.setState({\n                    'place_selection':temp\n                })\n                this.update_stock(data)\n            }\n        })\n\n    }\n\n    // data = sold_From_selection\n    update_stock(data){\n        console.log('data',data)\n        var sold_from\n        if (this.state.update.invoice_items[this.state.current]['sold_from']){\n            sold_from = this.state.update.invoice_items[this.state.current]['sold_from']\n        }else {\n            sold_from = data['placements'][0]['placed_on']\n            console.log('default',sold_from)\n        }\n        var temp=[];\n        var p ;\n        for (p in data['placements']){\n            console.log(sold_from, \"  \", data['placements'][p]['placed_on'])\n            if (parseInt(sold_from) === parseInt(data['placements'][p]['placed_on'])){\n                var string  = data['placements'][p]['purchase_item_details']['purchase_price'] + \"/-  \" + data['placements'][p]['purchase_item_details']['quantity'] + \" \" + data['placements'][p]['purchase_item_details']['vendor'] \n                temp.push({\n                    'id': data['placements'][p]['purchase_item'],\n                    'str':string\n                })\n                console.log(temp)\n            }\n            \n        }\n        this.setState({\n            ...this.state,\n            'stock_selection': temp\n        })\n    }  \n    \n\n    async onChangePlace(e){\n        await this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice_items':{\n                    ...this.state.update.invoice_items,\n                    [this.state.current] : {\n                        ...this.state.update.invoice_items[this.state.current],\n                        [e.target.name] : [e.target.value][0]\n                    },\n                }\n            }\n        })\n        var temp=[],p,sold_from;\n        if (this.state.update.invoice_items[this.state.current]['sold_from']){\n            sold_from = this.state.update.invoice_items[this.state.current]['sold_from']\n        }else {\n            sold_from = this.state.sold_from[0]['placed_on']\n            console.log('default',sold_from)\n        }\n        for (p in this.state.sold_from_selection){\n            if ( parseInt(sold_from) === parseInt(this.state.sold_from_selection[p]['placed_on'])){\n                var string  = this.state.sold_from_selection[p]['purchase_item_details']['purchase_price'] + \"/-  \" + this.state.sold_from_selection[p]['purchase_item_details']['quantity'] + \" \" + this.state.sold_from_selection[p]['purchase_item_details']['vendor'] \n                temp.push({\n                    'id': this.state.sold_from_selection[p]['purchase_item'],\n                    'str':string\n                })\n            }\n            \n        }\n        this.setState({\n            ...this.state,\n            'stock_selection': temp\n        }) \n    }\n\n    searchCustomer(e){\n        if ((e.target.value).length > 2 ){\n            var request_json = {\n                'action':'get',\n                'start':0,\n                'end':10,\n                'filter':'name',\n                'name':(e.target.value)\n            }\n            this.getCustomerData(request_json)\n        }\n    }\n    \n    invoiceHandler(date){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice':{\n                    ...this.state.update.invoice,\n                    'invoiced_on' : date\n                }\n            }\n        })\n    }\n    \n    dueOnHandler(date){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice':{\n                    ...this.state.update.invoice,\n                    'due_on' : date\n                }\n            }\n        })\n    }\n\n    updateInvoice(){\n        var request_json = {\n            ...this.state.update.invoice,\n            'action':'add',\n            'status':'',\n        }\n        console.log(request_json)\n        createInvoice(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                Swal.fire(\"Invoice Details Has Been Updated.\")\n                window.location.pathname = '/invoices'\n            }\n            else{\n                Swal.fire(data['error'])\n            }\n        })\n    }\n\n    onChangePI(e){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice_items':{\n                    ...this.state.update.invoice_items,\n                    [this.state.current] : {\n                        ...this.state.update.invoice_items[this.state.current],\n                        [e.target.name] : [e.target.value][0]\n                    },\n                }\n            }\n        })\n    }\n\n    postInvoiceItem(is_new=false){\n        var request_json\n        if (is_new){\n            request_json = {\n                'action':'add',\n                'invoice':this.state.update.invoice.id,\n                ...this.state.update.invoice_items[this.state.current],\n            }\n            request_json['applied_tax'] = []\n            request_json['applied_discount'] = []\n            createInvoiceItem(JSON.stringify(request_json)).then(data => {\n                if (data['status']){\n                    Swal.fire(\"Invoice Item Has Been Added.\")\n                    this.refreshTable()\n                }\n                else{\n                    Swal.fire(data['error'])\n                }\n            })\n            return\n        }\n        request_json = {\n            'action':'edit',\n            'invoice':this.state.update.invoice.id,\n            'invoice_item_id':this.state.update.invoice_items[this.state.current].id,\n            ...this.state.update.invoice_items[this.state.current]\n        }\n        request_json['applied_tax'] = []\n        request_json['applied_discount'] = []\n        updateInvoiceItem(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                Swal.fire(\"Invoice Item Details Has Been Updated.\")\n                this.refreshTable()\n            }\n            else{\n                Swal.fire(data['error'])\n            }\n        })\n    }\n\n    deleteInvoiceItem(){\n        var request_json = {\n            invoice_items_id : [this.state.update.invoice_items[this.state.current].id]\n        }\n        deleteInvoiceItems(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                Swal.fire(\"Invoice Item Has Beed Deleted.\")\n                this.refreshTable()\n            }\n            else{\n                Swal.fire(data['error'])\n            }\n        })\n    }\n\n\n    addInvoiceItem(){\n        var current =0;\n        var item,p_list=[];\n        for (item in this.state.update.invoice_items){\n            if (item.id){\n                if (item.id !== \"Fake Key\"){\n                    current = current + 1\n                    p_list.push(item)\n                }\n            }\n        }\n        this.setState({\n            'current':current,\n            'new':true,\n            'popUp':true,\n            'update':{\n                ...this.state.update,\n                'invoice_items':[\n                    ...p_list,\n                    {\n                        'item_name':\"None\",\n                        'discount_type':'percentage',\n                        'status':'incomplete',\n                        'applied_tax':[],\n                        'applied_discount':[],\n                        'purchase_item':'',\n                        'discount':[],\n                        'taxes':[]\n                    }\n                ]\n            }\n        })\n    }\n    columns = [\n        {\n            id:1,\n            name:\"Item Name\",\n            prop: 'item_name'\n        },\n        {\n            id:2,\n            name:\"Quantity\",\n            prop: 'quantity'\n        },\n        {\n            id:8,\n            name:\"Price\",\n            prop: 'price'\n        },\n        {\n            id:3,\n            name:\"Sold From\",\n            prop: 'sold_from_name'\n        },\n        {\n            id:4,\n            name:\"Tax Total\",\n            prop: 'tax_total'\n        },\n        ,\n        {\n            id:5,\n            name:\"Disount Amount\",\n            prop: 'discount_amount'\n        },   \n        {\n            id:6,\n            name:\"Sub Total\",\n            prop: 'sub_total'\n        },\n        {\n            id:7,\n            name:\"Total\",\n            prop: 'total'\n        }\n    ]\n\n    searchItem(e){\n        if ((e.target.value).length > 2 ){\n            var request_json = {\n                'action':'get',\n                'start':0,\n                'end':10,\n                'filter':'name',\n                'name':(e.target.value)\n            }\n            this.getItemData(request_json)\n        }\n    }\n\n    async getItemData(request_json){\n        await getItems(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    ...this.state,\n                    'item_selection':data['items'],\n                })\n            }  \n            \n            else{\n                Swal.fire(data['error'])\n            }\n        })\n    }\n    selectItem(id, name){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice_items':{\n                    ...this.state.update.invoice_items,\n                    [this.state.current] : {\n                        ...this.state.update.invoice_items[this.state.current],\n                        'item_name' : name,\n                        'item':id\n                    },\n                }\n            }\n        })\n        var request_json = {\n            'action':'get',\n            'filter':'item',\n            'item_id':id\n        }\n        this.getPlacesData(request_json)\n    }\n\n    async refreshTable(){\n        var id = this.state.update.invoice.id;\n        var items= [];\n        const request_json = {\n            'action':'get',\n            'invoice_id':id\n        }\n        await getInvoice(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                items = data['invoice_items']\n            }\n            \n            else{\n                Swal.fire(data['error'])\n            }\n        })\n        if (items.length === 0){\n            items = [{\n                'id':\"Fake Key\",\n                'item_name': ''\n            }]\n        }\n        await this.setState({\n            ...this.state,\n            'popUp':false,\n            'update':{\n                ...this.state.update,\n                'invoice_items':items\n            }\n        })\n    }\n\n\n    stateman(){\n        console.log(this.state)\n    }\n\n\n    discount_columns =[\n        {\n            'id':1,\n            'name':'Name',\n            'prop':'name'\n        },{\n            'id':2,\n            'name':'Rate',\n            'prop':'rate'\n        },{\n            'id':3,\n            'name':'Code',\n            'prop':'code'\n        },{\n            'id':4,\n            'name':'Type',\n            'prop':'discount_type'\n        },{\n            'id':5,\n            'name':'Remove',\n            'prop':'removeButton'\n        },\n    ]\n\n    tax_columns =[\n        {\n            'id':1,\n            'name':'Name',\n            'prop':'name'\n        },{\n            'id':2,\n            'name':'Rate',\n            'prop':'rate'\n        },{\n            'id':3,\n            'name':'Code',\n            'prop':'code'\n        },{\n            'id':4,\n            'name':'Type',\n            'prop':'tax_type'\n        },{\n            'id':5,\n            'name':'Remove',\n            'prop':'removeButton'\n        },\n    ]\n\n    \n    add_discount_columns =[\n        {\n            'id':1,\n            'name':'Name',\n            'prop':'name'\n        },{\n            'id':2,\n            'name':'Rate',\n            'prop':'rate'\n        },{\n            'id':3,\n            'name':'Code',\n            'prop':'code'\n        },{\n            'id':4,\n            'name':'Type',\n            'prop':'discount_type'\n        }\n    ]\n\n    add_tax_columns =[\n        {\n            'id':1,\n            'name':'Name',\n            'prop':'name'\n        },{\n            'id':2,\n            'name':'Rate',\n            'prop':'rate'\n        },{\n            'id':3,\n            'name':'Code',\n            'prop':'code'\n        },{\n            'id':4,\n            'name':'Type',\n            'prop':'tax_type'\n        }\n    ]\n\n    async update_table (by,dis) {\n        var x = by<0?-1:1\n        var request_json\n        if (dis){\n            if (by===0){\n                await this.setState({\n                    'discoount_loaded':false,\n                    discount_start: 0,\n                    discount_end: 10,\n                    discount_page:1\n                })\n            }\n            else{\n                if (this.state.discount_start+by>-1){\n                    await this.setState({\n                        'discount_loaded':false,\n                        discount_start: this.state.discount_start+by,\n                        discount_end: this.state.discount_end+by,\n                        discount_page:this.state.discount_page+x\n                    })\n                }\n                else{\n                    Swal.fire(\"Cannot move futher from here.\")\n                    return\n                }\n            }\n            request_json = {\n                'action':'get',\n                'filter':'none',\n                'start':this.state.discount_start,\n                'end':this.state.discount_end\n            }\n            this.getDiscountsData(request_json)\n        }\n    else { \n        if (by===0){\n            await this.setState({\n                'tax_loaded':false,\n                tax_start: 0,\n                tax_end: 10,\n                tax_page:1\n            })\n        }\n        else{\n            if (this.state.tax_start+by>-1){\n                await this.setState({\n                    'tax_loaded':false,\n                    tax_start: this.state.tax_start+by,\n                    tax_end: this.state.tax_end+by,\n                    tax_page:this.state.tax_page+x\n                })\n            }\n            else{\n                Swal.fire(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.tax_start,\n            'end':this.state.tax_end\n        }\n        this.getTaxesData(request_json)\n\n    }\n    }\n    \n    async getDiscountsData (request_json) {\n        await getDiscounts(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'discount_selection':data['discounts'],\n                    'discount_loaded':true\n                })\n            }\n            else{\n                Swal.fire(data['error'])\n            }\n        })\n    }\n    async getTaxesData (request_json) {\n        await getTaxes(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'tax_selection':data['taxes'],\n                    'tax_loaded':true\n                })\n            }  \n        })\n    }\n \n    addEntryDiscount(id){\n        var dis;\n        for (dis in this.state.discount_selection){\n            if (this.state.discount_selection[dis].id === id){\n                var temp = this.state.update.invoice_items[this.state.current]['applied_discount']\n                var x = this.state.discount_selection[dis]\n                temp.push(x)\n                var temp2 = this.state.update.invoice_items[this.state.current]['discount']\n                temp2.push(id)\n                this.setState({\n                    ...this.state,\n                    update:{\n                        ...this.state.update,\n                        'invoice_items':{\n                            ...this.state.update.invoice_items,\n                            [this.state.current] : {\n                                ...this.state.update.invoice_items[this.state.current],\n                                'discount':temp2,\n                                'applied_discount': temp\n                            }\n                        }\n                    }\n                })\n            }\n        }\n    }\n\n    addEntryTax(id){\n        var dis;\n        for (dis in this.state.tax_selection){\n            if (this.state.tax_selection[dis].id === id){\n                var temp = this.state.update.invoice_items[this.state.current]['applied_tax']\n                var x = this.state.tax_selection[dis]\n                temp.push(x)\n                var temp2 = this.state.update.invoice_items[this.state.current]['taxes']\n                temp2.push(id)\n                this.setState({\n                    ...this.state,\n                    update:{\n                        ...this.state.update,\n                        'invoice_items':{\n                            ...this.state.update.invoice_items,\n                            [this.state.current] : {\n                                ...this.state.update.invoice_items[this.state.current],\n                                'tax':temp2,\n                                'applied_tax': temp\n                            }\n                        }\n                    }\n                })\n            }\n        }\n    }\n\n\n    render() {\n        const item_selection = this.state.item_selection\n        const itemPopUp = <Popup trigger={ <button>Select Item</button>} closeOnDocumentClick>\n        <div>\n            <input placeholder=\"Item Name\" id='item_search_box' name='item_serach_box' onChange={this.searchItem}></input>\n            <div className={style.dropdown_content} id='item_dropdown'>\n                    {item_selection.map(\n                        item => (\n                            // use css to get rid of <a>\n                        <a key={item.id} onClick={() => {this.selectItem(item.id, item.name)}} >{item.name} {item.sales_price}</a>\n                        )\n                    )}\n            </div>\n        </div>\n        </Popup>\n\n        var places = this.state.place_selection\n        const selectPlace =<select name='sold_from' id=\"sold_from\" onChange={this.onChangePlace} value={this.state.update.invoice_items[this.state.current].sold_from}  >\n            <option key=\"Fake Key\" value='Fake Value'>Select Place</option>\n                {places.map(\n                    x => (\n                    <option key={x.id} value={x.id}>{x.str_placed_on}</option>\n                    )\n                )}\n            </select>\n\n            \n        var stocks  = this.state.stock_selection\n        var stockValue = this.state.update.invoice_items[this.state.current].purchase_item ? this.state.update.invoice_items[this.state.current].purchase_item : ''\n        const selectStock = <select name='purchase_item' id=\"purchase_item\" onChange={this.onChangePI} value={stockValue} >\n                <option key='Fake Key' value=\"Fake Value\">Select Stock</option>\n                {stocks.map(\n                    x => (\n                    <option key={x.id} value={parseInt(x.id)}>{x.str}</option>\n                    )\n                )}\n            </select>\n        const addPopupDiscount = <div>\n            <h3> Click To Apply New Discount</h3>\n                            <List data={this.state.discount_selection} header={this.add_discount_columns} page={false} popUp={this.addEntryDiscount} />\n                            <button onClick={()=> {this.update_table(-5,true)}}>Previous</button><span>      {this.state.discount_page}       </span><button  onClick={()=> {this.update_table(5,true)}} >Next</button>\n                        </div>\n        \n        const addPopupTax = <div>\n            <h3>Click To Apply New Tax </h3>\n                            <List data={this.state.tax_selection} header={this.add_tax_columns} page={false} popUp={this.addEntryTax} />\n                            <button onClick={()=> {this.update_table(-5,false)}}>Previous</button><span>      {this.state.tax_page}       </span><button  onClick={()=> {this.update_table(5,false)}} >Next</button>\n                        </div>\n        const discounts =this.state.update.invoice_items[this.state.current].applied_discount\n        for (var dis in discounts){\n            discounts[dis] = {\n                ...discounts[dis],\n                'removeButton':<button onClick={() => {this.removeEntry(dis,true)}}> Remove </button>\n            }\n        }\n        \n        const taxes = this.state.update.invoice_items[this.state.current].applied_tax\n        for (var dis in taxes){\n            taxes[dis] = {\n                ...taxes[dis],\n                'removeButton':<button onClick={()=>{this.removeEntry(dis,false)}}> Remove </button>\n            }\n        }\n        const popUpItem = <div>\n                <button onClick={() => {this.refreshTable()}} >Back</button><br></br><br></br>\n                Item : {this.state.update.invoice_items[this.state.current].item_name}  {itemPopUp}<br></br>\n                Sold From: \n                Place : {this.state.update.invoice_items[this.state.current].item ? selectPlace : \"Select An Item First\" } <br></br>\n                Stock :   {this.state.update.invoice_items[this.state.current].item ? selectStock : \"Select An Item First\" } <br></br>\n                <br></br>\n\n                Quantity : <input name=\"quantity\" placeholder={this.state.update.invoice_items[this.state.current].quantity} type=\"number\" onChange={this.onChangePI} required min='1' ></input><br></br>\n                Price : <input name=\"price\" placeholder={this.state.update.invoice_items[this.state.current].price} type=\"number\" onChange={this.onChangePI} required></input><br></br>\n                Tax Total : {this.state.update.invoice_items[this.state.current].tax_total} <br></br>\n                Sub Total : {this.state.update.invoice_items[this.state.current].sub_total} <br></br>\n                Discount Amount : {this.state.update.invoice_items[this.state.current].discount_amount}<br></br>\n                Total without discount : {this.state.update.invoice_items[this.state.current].total_without_discount}<br></br>\n                Total : {this.state.update.invoice_items[this.state.current].total}<br></br>\n                <br></br>\n                Applied Discounts : :<List data={discounts} header={this.discount_columns} page={false} popUp={this.popUp} removeEntry={this.removeEntry} /><button onClick={() =>{this.update_table(0, true)}} >Apply New Discount</button> <br></br><br></br>\n                {this.state.discount_loaded ? addPopupDiscount : <span></span>}<br></br>\n                Applied Taxes : :<List data={taxes} header={this.tax_columns} page={false} popUp={this.popUp} removeEntry={this.removeEntry} /><br></br><button onClick={() => {this.update_table(0, false)}}>Apply New Tax</button><br></br><br></br>\n                {this.state.tax_loaded ? addPopupTax : <span></span>}<br></br>\n                {this.state.new ? <button onClick={() => {this.postInvoiceItem(true)}} >Add</button> : <button onClick={() => {this.postInvoiceItem()}} >Update</button>}<br></br><br></br>\n                <button onClick={() => {this.deleteInvoiceItem()}} >Delete</button>\n            </div>\n        const customer_selection = this.state.customer_selection\n        const customerPopup = <Popup trigger={<Button variant=\"contained\" color=\"secondary\">Select Customer</Button>} closeOnDocumentClick>\n        <div>\n            <input placeholder=\"Customer's first name\" id='customer_serach_box' name='customer_serach_box' onChange={this.searchCustomer}></input>\n            <div className={style.dropdown_content} id='customer_dropdown'>\n                    {customer_selection.map(\n                        customer => (\n                            <a href=\"#\" key={customer.id} onClick={() => {this.selectCustomer(customer.id, customer.name)}} >{customer.name}</a>\n                        )\n                    )}\n            </div>\n        </div>\n        </Popup>\n        const status = this.state.status\n        return (\n            <div>\n            <Grid container justify='center' >\n                \n                <Grid item xm={8}>\n                    <table  cellPadding='10' cellSpacing='10' >\n                        <tbody>\n                            <tr>\n                                <th colSpan={3}>\n                                    <h1>New Invoice Order</h1>\n                                    <h4>Select customer and Date only</h4>\n                                </th>\n                            </tr>\n                        <tr>\n                        <td><b></b> <TextField\n                                value={this.state.update.invoice.customer_name}\n                                label='Customer'\n                                variant=\"outlined\"\n                                />\n                         </td>\n                        \n                        <td>{customerPopup}</td>\n                        </tr>\n                        \n                        <tr>\n                            <td>\n                            <b>Invoiced On : </b><br></br>\n                                <DatePicker\n                                name='invoiced_on'\n                                selected={this.state.update.invoice.invoiced_on}\n                                onChange={this.invoiceHandler}\n                                />\n                            </td>\n                            <td>\n                            <b>Due On : </b> <br></br>\n                            <DatePicker\n                            name='completed_on'\n                            selected={this.state.update.invoice.due_on}\n                            onChange={this.dueOnHandler}\n                            />\n                            </td>\n                        </tr>\n                            <tr>\n                                <td>\n                                <Button variant=\"contained\" color=\"primary\" onClick={() => {this.updateInvoice()}}>Create Invoice</Button>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </Grid>\n                </Grid>\n                </div>\n        //     <div>\n        //         <h1>Invoice</h1>\n        // <h3>{this.state.update.invoice.customer_name} </h3>\n        //         Added By : {this.state.update.invoice.added_by_name}<br></br>\n        //         Customer : {this.state.update.invoice.customer_name} {customerPopup}<br></br>\n        //         Order Number : {this.state.update.invoice.order_number}<br></br>\n        //         <br></br><br></br>\n        //         Invoiced On : \n        //         <DatePicker\n        //         name='invoiced_on'\n        //         selected={this.state.update.invoice.invoiced_on}\n        //         onChange={this.invoiceHandler}\n        //         />\n        //         Due On : \n        //         <DatePicker\n        //         name='completed_on'\n        //         selected={this.state.update.invoice.due_on}\n        //         onChange={this.dueOnHandler}\n        //         /><br></br><br></br>\n                \n        //         Total Amount : {this.state.update.invoice.total_amount}<br></br>\n        //         Total Tax : {this.state.update.invoice.tax_total}<br></br>\n        //         Total Discount: {this.state.update.invoice.discount_total}<br></br>\n        //         Paid Amount : {this.state.update.invoice.paid_amount}<br></br>\n\n        //         <br></br>\n        //         Additional Discount : <input placeholder={this.state.update.invoice.additional_discount} name='additional_discount' onChange={this.onChange} ></input>\n        //         <br></br><br></br>\n\n                \n        //         Status : <select name='status' id=\"status\" onChange={this.onChange} value={this.state.update.invoice.status}  >\n        //                         {status.map(\n        //                             x => (\n        //                             <option key={x.id} value={parseInt(x.id)}>{x.name}</option>\n        //                             )\n        //                         )}\n        //                     </select> <br></br><br></br>\n        //         <button onClick={() => {this.updateInvoice()}}>Add Invoice</button><br></br><br></br>\n        //         <hr></hr>\n        //     <button onClick={() => {this.stateman()}}>State</button>\n        //     </div>\n\n        )\n    }\n}\nexport default InvoiceCreation","import React, { Component } from 'react'\nimport List from '../list';\nimport { getDiscount, updateDiscount,  deleteDiscounts } from '../../api/misc';\nimport {Button, TextField, Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\nimport Swal from 'sweetalert2'\n\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\n\nclass DiscountList extends Component {\n    \n    constructor(props){\n        super(props)\n        this.popUp = this.popUp.bind(this)\n        this.state = {\n            'popUp':false,\n            'discount':{},\n            'update':{}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.back = this.back.bind(this)\n        this.discountDelete = this.discountDelete.bind(this)\n    }\n    \n    async componentDidMount(){\n        try {\n            const {id} = this.props.match.params\n            if (id){\n                await this.popUp(id,0,true)\n            }\n        }catch(e){\n        }\n    }\n\n       \n    back(){ \n        if (this.props.data){\n            this.setState({...this.state, popUp:false});\n        }else{\n            this.props.history.push('/discounts')\n        }\n    }\n    complete(){\n        this.setState({\n            ...this.state,\n            loading:false\n        })\n    }\n    loading(){\n        this.setState({\n            ...this.state,\n            loading:true\n        })\n    }\n\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value][0]\n            }\n        })\n    }\n\n    \n    async onSubmit(){\n            var data = this.state.update\n            data = {...data, 'action':'edit','discount_id':data.id}\n            console.log(data)\n            updateDiscount(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        Swal.fire(\n                            'Updated!',\n                            'Discounts details has been updated.',\n                            'success'\n                          )\n                        this.back()\n                    }\n                    else{\n                        Swal.fire({\n                            icon:'error',\n                            title:data['error']\n                        })\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    discountDelete(id){\n        var data = {\n            'discounts_id':[\n                id\n            ]\n        }\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to revert this!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, delete it!'\n          }).then((result) => {\n            if (result.value) {\n                deleteDiscounts(JSON.stringify(data)).then(data=>{\n                    try {\n                        if (data['status']){\n                            Swal.fire({\n                                icon:'success',\n                                title:'Discount entry has been deleted.',\n                                showConfirmButton: false,\n                                timer:1000\n                            })\n                            this.back()\n                        }   else{\n                            Swal.fire({\n                                icon:'error',\n                                title:data['error']\n                            })\n                        }\n                    }catch(e){\n                        console.log(e)\n                    }\n                })\n              \n            }\n          })\n    }\n    \n    async popUp(id, uuid=0, fromUrl=false){\n        if(!fromUrl){\n            this.props.pushNewId(id)\n        }\n        else{\n            const data = {\n                'action':'get',\n                'discount_id':id,\n            }\n            var data_main;\n            await getDiscount(JSON.stringify(data)).then(data => {\n                if (data['status']){\n                    data_main=data\n                }\n            })\n            await this.setState({\n                'popUp':true,\n                'discount':data_main['discounts'][0],\n                'update':data_main['discounts'][0]\n            })\n        }\n    }\n\n\n    columns = [\n        {\n            id:1,\n            name:\"Name\",\n            prop: 'name'\n        },\n        {\n            id:2,\n            name:\"Code\",\n            prop: 'code'\n        },\n        {\n            id:3,\n            name:\"Discount Type\",\n            prop: 'discount_type'\n        },\n        {\n            id:4,\n            name:\"Rate\",\n            prop: 'rate'\n        }      \n    ]\n    \n\n    render() {\n        var listData\n        if (!this.props.data){\n            listData = []\n        }else{\n            listData=this.props.data\n        }\n\n        const list = <List data={listData} header={this.columns}   popUp={this.popUp} update={this.props.update} page={this.props.page} />\n        \n        const popUpRender =\n         <div>\n            &nbsp;\n            &nbsp;\n            &nbsp;\n            &nbsp;\n            &nbsp;\n            &nbsp; <Button  variant=\"contained\" size='small' color=\"primary\" onClick={()=> {this.back()}}>\n                <ArrowLeftIcon></ArrowLeftIcon>\n         Back\n     </Button>\n        <Grid  container justify=\"center\" alignContent='center' alignItems=\"center\" spacing={3}>\n            <Grid item xm={4}>\n            \n            </Grid>\n            <Grid item xs={4}>\n            <h1>{this.state.discount.name}</h1>\n            </Grid>\n            <Grid item xm={4}>\n            </Grid>\n        </Grid>\n\n        <Grid container  justify=\"center\" alignContent='center' alignItems=\"center\"   direction={'column'} spacing={10}>\n        <Grid item xm={6}>\n            <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n                <Grid item xm={2} > \n                <TextField required id=\"name\" label=\"Name\" name='name' defaultValue={this.state.discount.name} onChange={this.onChange} autoFocus/>\n                </Grid>\n                <Grid item xm={2}>\n                <TextField required id=\"code\" label=\"code\" name='code' defaultValue={this.state.discount.code} onChange={this.onChange} />\n                </Grid>\n            </Grid>\n            \n            <Grid container spacing={3}>\n                <Grid item xm={6} md={6}>\n                    Discount Type :  \n                 <FormControl>\n                                <Select onChange={this.onChange}   value={this.state.update.discount_type}  name='discount_type' id=\"discount_type\">\n                                <MenuItem value=\"percent\">Percentage</MenuItem>\n                                <MenuItem value=\"fixed\">Fixed</MenuItem>\n                                </Select>\n                            </FormControl>\n                </Grid>\n                <Grid item xm={6} md={6} > \n                <TextField required id=\"rate\"  name=\"rate\"  label=\"rate\" defaultValue={this.state.discount.rate} onChange={this.onChange} />\n\n               </Grid>\n            </Grid>\n            <Grid container spacing={3}  alignItems='flex-end'>\n\n                <Grid item xm={3} md={6}> \n                <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={()=>{this.onSubmit()}}\n                                >\n                                Update\n                                </Button>\n                </Grid>\n                <Grid item xm={3} md={6}> \n                <Button variant=\"contained\" color=\"secondary\" onClick={() => {this.discountDelete(this.state.discount.id)}}>\n                    Delete Discount\n                </Button> \n               </Grid>\n            </Grid>\n        </Grid>\n        </Grid><br></br>\n        </div>\n\n        return (\n            <div>\n                {this.state.popUp ? popUpRender : list}\n            </div>\n        )\n    }\n}\n\n\nexport default (DiscountList)\n\n","import React, { Component } from 'react'\nimport {getDiscounts} from '../../api/misc';\nimport {  connect } from 'react-redux';\nimport  DiscountList  from './discountList';\nimport { Link} from 'react-router-dom';\n\nimport Button from '@material-ui/core/Button';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport LoadingIcon from '../loading';\n\n\n\n\nclass Discounts extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            'taxes':[],\n            'loaded':false,\n            'start':0,\n            'end':10,\n            'page':1\n        }\n        this.update_table = this.update_table.bind(this)\n        this.pushNewId = this.pushNewId.bind(this)\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n        this.update_table(0)\n    }\n\n\n    async update_table (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                'loaded':false,\n                start: 0,\n                end: 10,\n                page:1\n            })\n        }\n        else{\n            if (this.state.start+by>-1){\n                await this.setState({\n                    'loaded':false,\n                    start: this.state.start+by,\n                    end: this.state.end+by,\n                    page:this.state.page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.start,\n            'end':this.state.end\n        }\n        this.getDiscountsData(request_json)\n    }\n    \n    async getDiscountsData (request_json) {\n        await getDiscounts(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'discounts':data['discounts'],\n                    'loaded':true\n                })\n            }  \n        })\n    }\n\n    pushNewId(id){\n        this.props.history.push('/discounts/'+id)\n    }\n\n \n\n\nrender() {\n\n    const render_after_load = (\n        <div>\n            <DiscountList pushNewId={this.pushNewId} data={this.state.discounts} update={this.update_table} page={this.state.page} />\n        </div>\n    )\n\n    return(\n        <div>\n        <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n            <Grid item xs={3} >\n            <Button variant=\"contained\" color=\"primary\" onClick={() => {this.update_table(0)}}>\n              <RefreshIcon/>&nbsp;&nbsp;&nbsp;Refresh Table\n              </Button>\n            </Grid>\n            <Grid item xs={5}>\n  \n            </Grid>\n              <Grid item xs={3}>\n              <Link to='/discounts/create' style={{ textDecoration: 'none' }}>\n              <Button variant=\"contained\" color=\"secondary\">\n              <AddCircleIcon/>&nbsp;&nbsp;&nbsp;Add New Discount\n              </Button>\n              </Link>\n              </Grid>\n  \n          <Grid item xs={12}>\n            <Paper>\n            {this.state.loaded ? render_after_load : <LoadingIcon></LoadingIcon>}\n            </Paper>\n          </Grid>\n          \n        </Grid>\n      </div>\n    )\n}\n}\n\n\nconst mapStateToProps = state => ({\n    user: state.user,\n})\n\nexport default connect(mapStateToProps)(Discounts)","import React, { Component } from 'react'\nimport {  connect } from 'react-redux';\nimport { createDiscount } from '../../api/misc';\n\nimport {Button, TextField, Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\nimport Swal from 'sweetalert2'\n\nimport { withStyles } from '@material-ui/styles';\nimport PropTypes from 'prop-types';\n\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\n\n\nconst styles = makeStyles((theme) => ({\n    root: {\n    flexGrow: 12,\n    },\n    paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    },\n}));\n\n\n\nclass DiscountCreation extends Component {\n\n    constructor (props){\n        super(props)\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.state = {\n            'update':{\n                'name':'',\n                'code':'',\n                'discount_type':'percent',\n                'rate':''\n            }\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n    }\n\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value][0]\n            }\n        })\n    }\n\n\n    async onSubmit(e){\n            var data = {...this.state.update}\n            var ele;\n            for (ele in this.state.update){\n                data[ele] = this.state.update[ele]\n            }\n            data = {...data, 'action':'add'}\n            console.log(data)\n            createDiscount(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        Swal.fire(\n                            'Updated!',\n                            'Discounts details has been added.',\n                            'success'\n                          )\n                    }\n                    else{\n                        Swal.fire({\n                            icon:'error',\n                            title:data['error']\n                        })\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        const popUpRender = <div>\n           &nbsp;\n           &nbsp;\n           &nbsp;\n           &nbsp;\n           &nbsp;\n           &nbsp; \n       <Grid  container justify=\"center\" alignContent='center' alignItems=\"center\" spacing={3}>\n           <Grid item xm={4}>\n           \n           </Grid>\n           <Grid item xs={4}>\n           <h1>Add New Discounts</h1>\n           </Grid>\n           <Grid item xm={4}>\n           </Grid>\n       </Grid>\n\n       <Grid container  justify=\"center\" alignContent='center' alignItems=\"center\"   direction={'column'} spacing={10}>\n       <Grid item xm={6}>\n           <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n               <Grid item xm={2} > \n               <TextField required id=\"name\" label=\"Name\" name='name' defaultValue={this.state.update.name} onChange={this.onChange} autoFocus/>\n               </Grid>\n               <Grid item xm={2}>\n               <TextField required id=\"code\" label=\"code\" name='code' defaultValue={this.state.update.code} onChange={this.onChange} />\n               </Grid>\n           </Grid>\n           \n           <Grid container spacing={3}>\n               <Grid item xm={6} md={6}>\n                   Discount Type :  \n                <FormControl className={classes.formControl}>\n                               <Select onChange={this.onChange}   value={this.state.update.discount_type}  name='discount_type' id=\"discount_type\">\n                               <MenuItem value=\"percent\">Percentage</MenuItem>\n                               <MenuItem value=\"fixed\">Fixed</MenuItem>\n                               </Select>\n                           </FormControl>\n               </Grid>\n               <Grid item xm={6} md={6} > \n               <TextField required id=\"rate\"  name=\"rate\" onChange={this.onChange} label=\"rate\" name='rate' defaultValue={this.state.update.rate} onChange={this.onChange} />\n\n              </Grid>\n           </Grid>\n           <Grid container spacing={3}  alignItems='flex-end'>\n\n               <Grid item xm={3} md={6}> \n               <Button\n                               type='submit'\n                               variant=\"contained\"\n                               color=\"primary\"\n                               onClick={()=>{this.onSubmit()}}\n                               >\n                               Add\n                               </Button>\n               </Grid>\n               <Grid item xm={3} md={6}> \n              </Grid>\n           </Grid>\n       </Grid>\n       </Grid><br></br>\n       </div>\n\n        return (\n            popUpRender\n        )\n    }\n}\n\n\nDiscountCreation.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n\n\n  const mapStateToProps = state => ({\n    user: state.user\n})\n\n\nexport default withStyles(styles)(connect(mapStateToProps)(DiscountCreation))\n\n","import React, { Component } from 'react'\nimport List from '../list';\nimport { getTax, updateTax,  deleteTaxes } from '../../api/misc';\nimport {Button, TextField, Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\nimport Swal from 'sweetalert2'\n\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport { withStyles } from '@material-ui/styles';\nimport PropTypes from 'prop-types';\n\nconst styles = makeStyles((theme) => ({\n    root: {\n    flexGrow: 12,\n    },\n    paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    },\n}));\n\nclass TaxList extends Component {\n    \n    constructor(props){\n        super(props)\n        this.popUp = this.popUp.bind(this)\n        this.state = {\n            'popUp':false,\n            'tax':{},\n            'update':{}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.taxDelete = this.taxDelete.bind(this);\n        this.back = this.back.bind(this);\n    }\n\n    back(){ \n        if (this.props.data){\n            this.setState({...this.state, popUp:false});\n        }else{\n            this.props.history.push('/taxes')\n        }\n    }\n    async componentDidMount(){\n        try {\n            const {id} = this.props.match.params\n            if (id){\n                await this.popUp(id,0,true)\n            }\n        }catch(e){\n            console.log(e)\n        }\n    }\n\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value][0]\n            }\n        })\n    }\n\n    \n    async onSubmit(e){\n            var data = this.state.update\n            data = {...data, 'action':'edit','tax_id':data.id}\n            updateTax(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        Swal.fire(\n                            'Updated!',\n                            'Tax details has been updated.',\n                            'success'\n                          )                        \n                          this.back()\n                    }\n                    else{\n                        Swal.fire({\n                            icon:'error',\n                            title:data['error']\n                        })\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    taxDelete(id){\n        var data = {\n            'taxes_id':[\n                id\n            ]\n        }\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to revert this!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, delete it!'\n          }).then((result) => {\n        deleteTaxes(JSON.stringify(data)).then(data=>{\n            try {\n                if (data['status']){\n                    Swal.fire({\n                        icon:'success',\n                        title:'Tax entry has been deleted.',\n                        showConfirmButton: false,\n                        timer:1000\n                    })                   \n                    this.back()\n                }   else{\n                    Swal.fire({\n                        icon:'error',\n                        title:data['error']\n                    })                \n                }\n            }catch(e){\n                console.log(e)\n            }\n        })\n    })\n}\n    \n    async popUp(id, uuid=0,fromUrl){\n        if(!fromUrl){\n            this.props.pushNewId(id)\n        }else{\n        const data = {\n            'action':'get',\n            'tax_id':id,\n        }\n        var data_main;\n        await getTax(JSON.stringify(data)).then(data => {\n            if (data['status']){\n                data_main=data\n            }\n        })\n        await this.setState({\n            'popUp':true,\n            'tax':data_main['taxes'][0],\n            'update':data_main['taxes'][0]\n        })\n    }\n\n    }\n    columns = [\n        {\n            id:1,\n            name:\"Name\",\n            prop: 'name'\n        },\n        {\n            id:2,\n            name:\"Code\",\n            prop: 'code'\n        },\n        {\n            id:3,\n            name:\"Tax Type\",\n            prop: 'tax_type'\n        },\n        {\n            id:4,\n            name:\"Rate\",\n            prop: 'rate'\n        }      \n    ]\n    \n\n    render() {\n        const { classes } = this.props;\n        var listData\n        if (!this.props.data){\n            listData = []\n        }else{\n            listData=this.props.data\n        }\n        const list = <List data={listData} header={this.columns}   popUp={this.popUp} update={this.props.update} page={this.props.page} />\n        const popUpRender = <div>\n        &nbsp;\n        &nbsp;\n        &nbsp;\n        &nbsp;\n        &nbsp;\n        &nbsp; <Button  variant=\"contained\" size='small' color=\"primary\" onClick={()=> {this.back()}}>\n            <ArrowLeftIcon></ArrowLeftIcon>\n     Back\n </Button>\n    <Grid  container justify=\"center\" alignContent='center' alignItems=\"center\" spacing={3}>\n        <Grid item xm={4}>\n        \n        </Grid>\n        <Grid item xs={4}>\n        <h1>{this.state.tax.name}</h1>\n        </Grid>\n        <Grid item xm={4}>\n        </Grid>\n    </Grid>\n\n    <Grid container  justify=\"center\" alignContent='center' alignItems=\"center\"   direction={'column'} spacing={10}>\n    <Grid item xm={6}>\n        <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n            <Grid item xm={2} > \n            <TextField required id=\"name\" label=\"Name\" name='name' defaultValue={this.state.tax.name} onChange={this.onChange} autoFocus/>\n            </Grid>\n            <Grid item xm={2}>\n            <TextField required id=\"code\" label=\"code\" name='code' defaultValue={this.state.tax.code} onChange={this.onChange} />\n            </Grid>\n        </Grid>\n        \n        <Grid container spacing={3}>\n            <Grid item xm={6} md={6}>\n                Tax Type :  \n                <FormControl className={classes.formControl}>\n                                <Select onChange={this.onChange}   value={this.state.update.tax_type}  name='tax_type' id=\"tax_type\">\n                                <MenuItem value=\"normal\">Normal (Percentage)</MenuItem>\n                                <MenuItem value=\"fixed\">Fixed</MenuItem>\n                                </Select>\n                            </FormControl>\n            </Grid>\n            <Grid item xm={6} md={6} > \n            <TextField required id=\"rate\"  name=\"rate\"  label=\"rate\" defaultValue={this.state.tax.rate} onChange={this.onChange} />\n           </Grid>\n        </Grid>\n        <Grid container spacing={3}  alignItems='flex-end'>\n\n            <Grid item xm={3} md={6}> \n            <Button\n                            type='submit'\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={()=>{this.onSubmit()}}\n                            >\n                            Update\n                            </Button>\n            </Grid>\n            <Grid item xm={3} md={6}> \n            <Button variant=\"contained\" color=\"secondary\" onClick={() => {this.taxDelete(this.state.tax.id)}}>\n                Delete Tax\n            </Button> \n           </Grid>\n        </Grid>\n    </Grid>\n    </Grid>\n                    </div>\n        return (\n            <div>\n                {this.state.popUp ? popUpRender : list}\n            </div>\n        )\n    }\n}\n\nTaxList.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n\nexport default withStyles(styles)(TaxList)\n\n","import React, { Component } from 'react'\nimport {getTaxes} from '../../api/misc';\nimport {  connect } from 'react-redux';\nimport  TaxList  from './taxList';\nimport { Link} from 'react-router-dom';\n\n\nimport Button from '@material-ui/core/Button';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/styles';\nimport PropTypes from 'prop-types';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport LoadingIcon from '../loading';\n\n\nconst styles = makeStyles((theme) => ({\n    root: {\n    flexGrow: 12,\n    },\n    paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    },\n}));\n\n\nclass Taxes extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            'taxes':[],\n            'loaded':false,\n            'start':0,\n            'end':10,\n            'page':1\n        }\n        this.update_table = this.update_table.bind(this)\n        this.pushNewId = this.pushNewId.bind(this)\n    }\n\n    \n    pushNewId(id){\n        this.props.history.push('/taxes/'+id)\n    }\n\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n        this.update_table(0)\n    }\n\n    async update_table (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                'loaded':false,\n                start: 0,\n                end: 10,\n                page:1\n            })\n        }\n        else{\n            if (this.state.start+by>-1){\n                await this.setState({\n                    'loaded':false,\n                    start: this.state.start+by,\n                    end: this.state.end+by,\n                    page:this.state.page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.start,\n            'end':this.state.end\n        }\n        this.getTaxesData(request_json)\n    }\n    \n    async getTaxesData (request_json) {\n        await getTaxes(JSON.stringify(request_json)).then(data => {\n            console.log(data)\n            if (data['status']){\n                this.setState({\n                    'taxes':data['taxes'],\n                    'loaded':true\n                })\n            }  \n        })\n    }\n\n \n\nrender() {\n    const { classes } = this.props;\n\n    const render_after_load = (\n        <div>\n            <TaxList data={this.state.taxes} update={this.update_table} page={this.state.page} pushNewId={this.pushNewId}/>\n        </div>\n    )\n\n    return(\n        <div className={classes.root}>\n        <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n            <Grid item xs={3} >\n            <Button variant=\"contained\" color=\"primary\" onClick={() => {this.update_table(0)}}>\n              <RefreshIcon/>&nbsp;&nbsp;&nbsp;Refresh Table\n              </Button>\n            </Grid>\n            <Grid item xs={5}>\n  \n            </Grid>\n              <Grid item xs={3}>\n              <Link to='/taxes/create' style={{ textDecoration: 'none' }}>\n              <Button variant=\"contained\" color=\"secondary\">\n              <AddCircleIcon/>&nbsp;&nbsp;&nbsp;Add New Tax\n              </Button>\n              </Link>\n              </Grid>\n  \n          <Grid item xs={12}>\n            <Paper className={classes.paper}>\n            {this.state.loaded ? render_after_load : <LoadingIcon></LoadingIcon>}\n            </Paper>\n          </Grid>\n          \n        </Grid>\n      </div>\n    )\n}\n}\n\n\n\nTaxes.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n\n\nconst mapStateToProps = state => ({\n    user: state.user,\n})\n\nexport default withStyles(styles)(connect(mapStateToProps)(Taxes))","import React, { Component } from 'react'\nimport {  connect } from 'react-redux';\nimport {Button, TextField,Grid } from '@material-ui/core';\nimport { createTax } from '../../api/misc';\n\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\nimport Swal from 'sweetalert2'\n\nimport { withStyles } from '@material-ui/styles';\nimport PropTypes from 'prop-types';\n\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\n\n\nconst styles = makeStyles((theme) => ({\n    root: {\n    flexGrow: 12,\n    },\n    paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    },\n}));\n\n\nclass TaxCreation extends Component {\n\n    constructor (props){\n        super(props)\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.state = {\n            'update':{\n                'name':'',\n                'code':'',\n                'tax_type':'normal',\n                'rate':''\n            }\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n    }\n\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value][0]\n            }\n        })\n    }\n\n\n    async onSubmit(e){\n            var data = {...this.state.update}\n            var ele;\n            for (ele in this.state.update){\n                data[ele] = this.state.update[ele]\n            }\n            data = {...data, 'action':'add'}\n            console.log(data)\n            createTax(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        Swal.fire(\n                            'Updated!',\n                            'Tax details has been added.',\n                            'success'\n                          )\n                    }\n                    else{\n                        Swal.fire({\n                            icon:'error',\n                            title:data['error']\n                        })                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    render() {\n        const { classes } = this.props;\n\n            const popUpRender = \n                <div>\n           &nbsp;\n           &nbsp;\n           &nbsp;\n           &nbsp;\n           &nbsp;\n           &nbsp; \n       <Grid  container justify=\"center\" alignContent='center' alignItems=\"center\" spacing={3}>\n           <Grid item xm={4}>\n           \n           </Grid>\n           <Grid item xs={4}>\n           <h1>Add New Tax</h1>\n           </Grid>\n           <Grid item xm={4}>\n           </Grid>\n       </Grid>\n\n       <Grid container  justify=\"center\" alignContent='center' alignItems=\"center\"   direction={'column'} spacing={10}>\n       <Grid item xm={6}>\n           <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n               <Grid item xm={2} > \n               <TextField required id=\"name\" label=\"Name\" name='name' defaultValue={this.state.update.name} onChange={this.onChange} autoFocus/>\n               </Grid>\n               <Grid item xm={2}>\n               <TextField required id=\"code\" label=\"code\" name='code' defaultValue={this.state.update.code} onChange={this.onChange} />\n               </Grid>\n           </Grid>\n           \n           <Grid container spacing={3}>\n               <Grid item xm={6} md={6}>\n                   Tax Type :  \n                <FormControl className={classes.formControl}>\n                               <Select onChange={this.onChange}   value={this.state.update.discount_type}  name='discount_type' id=\"discount_type\">\n                               <MenuItem value=\"percent\">Percentage</MenuItem>\n                               <MenuItem value=\"fixed\">Fixed</MenuItem>\n                               </Select>\n                           </FormControl>\n               </Grid>\n               <Grid item xm={6} md={6} > \n               <TextField required id=\"rate\"  name=\"rate\" onChange={this.onChange} label=\"rate\" name='rate' defaultValue={this.state.update.rate} onChange={this.onChange} />\n\n              </Grid>\n           </Grid>\n           <Grid container spacing={3}  alignItems='flex-end'>\n\n               <Grid item xm={3} md={6}> \n               <Button\n                               type='submit'\n                               variant=\"contained\"\n                               color=\"primary\"\n                               onClick={()=>{this.onSubmit()}}\n                               >\n                               Add\n                               </Button>\n               </Grid>\n               <Grid item xm={3} md={6}> \n              </Grid>\n           </Grid>\n       </Grid>\n       </Grid><br></br>\n                    </div>\n        return (\n            popUpRender\n        )\n    }\n}\n\n\n\nTaxCreation.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n\n\nconst mapStateToProps = state => ({\n    user: state.user\n})\nexport default withStyles(styles)(connect(mapStateToProps)(TaxCreation))\n","import { baseRequest } from '../base';\n// api for items \n\nconst getItemCatagories = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/items/catagories','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  \n  const deleteItemCatagory = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/items/catagories/delete','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const createItemCatagory = async data => {\n      try {\n        return await baseRequest('apiv1/inventory/items/catagories','POST', data);\n      } catch(e){\n        alert(e)\n      }\n  };\n  \n  \n  const getItemCatagory = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/items/catagory','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const updateItemCatagory= async data => {\n    try {\n      return await baseRequest('apiv1/inventory/items/catagory','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \nexport { getItemCatagories, deleteItemCatagory, createItemCatagory, getItemCatagory, updateItemCatagory}\n  ","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport QrReader from 'react-qr-reader'\n\n\nfunction SimpleDialog(props) {\n  const { onClose, open } = props;\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  const handleError = value =>{\n    console.log(value)\n  };\n\n  const handleScan = value => {\n    if (value){\n      props.onFind(value)\n      handleClose()\n    }\n  }\n\n  return (\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open} fullWidth maxWidth={'sm'}>\n      <DialogTitle id=\"simple-dialog-title\">Place the QR inside the Box</DialogTitle>\n          <QrReader\n          delay={300}\n          onError={handleError}\n          onScan={handleScan}\n          style={{ width: '100%' }}\n          />\n    </Dialog>\n  );\n}\n\n\nfunction QrScanner(props) {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <br />\n      <Button variant=\"contained\" color=\"secondary\" onClick={handleClickOpen}>\n        Scan Item's QR Code \n      </Button>\n      <SimpleDialog open={open} onClose={handleClose} onFind={props.onFind} />\n      <br></br>\n    </div>\n  );\n}\nexport default QrScanner","import React, { Component } from 'react'\nimport List from '../list';\nimport { getItem, updateItem,  deleteItems } from '../../api/inventory/itemApi';\nimport {getItemCatagories} from '../../api/inventory/itemCatagory'\nimport {Button, TextField,Grid, Card, CardActionArea } from '@material-ui/core';\nimport {getPlacements} from '../../api/misc'\n\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\nimport Swal from 'sweetalert2'\nimport url from '../../server';\n\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport FileBase64 from 'react-filebase64';\n\nimport QrScanner from '../../qrScanner'\n\n\nclass ItemList extends Component {\n    \n    constructor(props){\n        super(props)\n        this.popUp = this.popUp.bind(this)\n        this.state = {\n            'catagories':[],\n            'popUp':false,\n            'item':{\n                'catagory':''\n            },\n            'update':{},\n            'placements':[],\n            'thumbnail_image':false,\n            'product_image':false\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.itemDelete = this.itemDelete.bind(this)\n        this.getPlacementsData = this.getPlacementsData.bind(this);\n        this.back = this.back.bind(this)\n        this.dummy =this.dummy.bind(this)\n        this.onFileChange = this.onFileChange.bind(this)\n        this.handleQR = this.handleQR.bind(this)\n        this.getDataFromQR = this.getDataFromQR.bind(this)\n    }\n    \n    handleQR(value){\n        this.getDataFromQR(value)\n    }\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value][0]\n            }\n        })\n    }\n\n    back(){ \n        if (this.props.data){\n            this.setState({...this.state, popUp:false});\n        }else{\n            this.props.history.push('/items')\n        }\n    }\n    async componentDidMount(){\n        try {\n            const {id} = this.props.match.params\n            if (id){\n                await this.popUp(id,0,true)\n            }\n        }catch(e){\n            console.log(e)\n        }\n    }\n    \n    onFileChange(e){\n        \n    const toDataURL = url => fetch(url)\n        .then(response => response.blob())\n        .then(blob => new Promise((resolve, reject) => {\n        const reader = new FileReader()\n        reader.onloadend = () => resolve(reader.result)\n        reader.onerror = reject\n        reader.readAsDataURL(blob)\n        }))\n    \n    \n    toDataURL(e.target.files[0])\n        .then(dataUrl => {\n        console.log('RESULT:', dataUrl)\n        this.setState({\n            ...this.state,\n            product_image: dataUrl\n        })\n        })   \n    }\n\n    getFiles(files){\n        this.setState({ product_image: files })\n      }\n      \n    getThumbnail(files){\n        this.setState({ thumbnail_image: files })\n      }\n\n    async onSubmit(e){\n        e.preventDefault();\n        console.log(this.state)\n            var data = this.state.update\n            data = {...data, 'action':'edit','item_id':data.id}\n            data['new_product_image'] = this.state.product_image\n            data['new_thumbnail_image'] = this.state.thumbnail_image\n            updateItem(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        Swal.fire(\n                            'Updated!',\n                            'ItemData updated.',\n                            'success'\n                          )\n                        this.props.update(0)\n                    }\n                    else{\n                        Swal.fire({\n                            icon:'error',\n                            title:data['error']\n                        })                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    itemDelete(id){\n        var data = {\n            'items_id':[\n                id\n            ]\n        }\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to revert this!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, delete it!'\n          }).then((result) => {\n            if (result.value) {\n        deleteItems(JSON.stringify(data)).then(data=>{\n            try {\n                if (data['status']){\n                    Swal.fire({\n                        icon:'success',\n                        title:'Item entry has been deleted.',\n                        showConfirmButton: false,\n                        timer:1000\n                    })                    \n                    this.props.update(0)\n                }   else{\n                    Swal.fire({\n                        icon:'error',\n                        title:data['error']\n                    })                }\n            }catch(e){\n                console.log(e)\n            }\n        })\n    }\n})\n    }\n\n    async getDataFromQR(uuid){\n        var data = {\n            'action':'get',\n            'filter':'purchase_item',\n            'uuid':uuid\n        }\n        console.log(\"asdf\", uuid)\n\n        var data_main;\n        await getItem(JSON.stringify(data)).then(data => {\n            if (data['status']){\n                data_main=data\n            }\n        })\n        await this.setState({\n            'popUp':true,\n            'update':data_main['items'][0]\n        })\n        data = {\n            'action':'get',\n            'start':0,\n            'end':50\n        }\n        await getItemCatagories(JSON.stringify(data)).then(data=> {\n            try { \n                if (data['status']){\n                    this.setState({\n                        ...this.state,\n                        'catagories':data['item_catagories']\n                    })\n                }\n                else{\n                    Swal.fire({\n                        icon:'error',\n                        title:data['error']\n                    })                   }\n            }catch(e){\n                console.log(e)\n            }\n        })\n        data ={\n            'action':'get',\n            'start':0,\n            'end':10,\n            'filter':'item',\n            'item':data_main['items'][0]['id']\n        }\n        this.getPlacementsData(data)\n    }\n\n    async popUp(id, uuid=0, fromUrl){\n        if(!fromUrl){\n            this.props.pushNewId(id)\n            console.log(\"popup \",id)\n        }else{\n        var data = {\n            'action':'get',\n            'item_id':id,\n        }\n        var data_main;\n        await getItem(JSON.stringify(data)).then(data => {\n            console.log(data)\n            if (data['status']){\n                data_main=data\n            }\n            else{\n                Swal.fire(data['error'])\n                return\n            }\n        })\n        await this.setState({\n            'popUp':true,\n            'update':data_main['items'][0]\n        })\n        data = {\n            'action':'get',\n            'start':0,\n            'end':50\n        }\n        await getItemCatagories(JSON.stringify(data)).then(data=> {\n            try { \n                if (data['status']){\n                    this.setState({\n                        ...this.state,\n                        'catagories':data['item_catagories']\n                    })\n                }\n                else{\n                    Swal.fire({\n                        icon:'error',\n                        title:data['error']\n                    })                   }\n            }catch(e){\n                console.log(e)\n            }\n        })\n        data ={\n            'action':'get',\n            'start':0,\n            'end':10,\n            'filter':'item',\n            'item':id\n        }\n        this.getPlacementsData(data)\n    }\n}\n\n\n    async getPlacementsData(request){\n        await getPlacements(JSON.stringify(request)).then(data=> {\n            try { \n                if (data['status']){\n                    for(var i in data['placements']){\n                        data['placements'][i]['qr_code_image'] =  url.slice(0,-1) +data['placements'][i]['qr_code_image'];\n                    }\n                    console.log(data)\n                    this.setState({\n                       ...this.state,\n                       placements : data['placements']\n                    })\n                }\n                else{\n                    Swal.fire({\n                        icon:'error',\n                        title:data['error']\n                    })                   }\n            }catch(e){\n                console.log(e)\n            }\n        })\n    }\n\n    async update_placement_table (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                'loaded':false,\n                placementStart: 0,\n                placementEnd: 10,\n                placementPage:1\n            })\n        }\n        else{\n            if (this.state.placementStart+by>-1){\n                await this.setState({\n                    'loaded':false,\n                    placementStart: this.state.placementStart+by,\n                    placementEnd: this.state.placementEnd+by,\n                    placementPage:this.state.placementPage+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'item',\n            'item':this.state.update.id,\n            'start':this.state.placementStart,\n            'end':this.state.placementEnd\n        }\n        this.getPlacementsData(request_json)\n    }\n\n    columns = [\n        {\n            id:1,\n            name:\"Name\",\n            prop: 'name'\n        },\n        {\n            id:2,\n            name:\"Catagory\",\n            prop: 'catagory_str'\n        },\n        {\n            id:3,\n            name:\"Price\",\n            prop: 'sales_price'\n        },\n        ,\n        {\n            id:4,\n            name:\"Stock\",\n            prop: 'stock'\n        },\n        {\n            id:5,\n            name:\"Sold\",\n            prop: 'sold'\n        }      \n    ]\n\n    placementColumns = [\n        {\n            id:1,\n            name:\"Item\",\n            prop:'item_name',\n        },\n        {\n            id:2,\n            name:'Place On',\n            prop:'placed_on_str'\n        },\n        {\n            id:3,\n            name:'Stock',\n            prop:'stock'\n        },\n        {\n            id:4,\n            name:'Purchase Order ID',\n            prop:'purchase_order_uuid'\n        }\n    ]\n    dummy(id){\n        for (var x in this.state.placements){\n            if (parseInt(this.state.placements[x]['id']) === parseInt( id)){\n                window.location.href= (\"/purchaseorders/\"+this.state.placements[x]['purchase_order_id'])\n            }\n        }\n    }\n\n    render() {\n        var product_image=url.slice(0,-1) +this.state.update.product_image;\n        var thumbnail_image=url.slice(0,-1) +this.state.update.thumbnail_image;\n\n        var listData\n        if (!this.props.data){\n            listData = []\n        }else{\n            listData=this.props.data\n        }\n        const catagories = this.state.catagories\n        const list = <div><QrScanner onFind={this.handleQR} ></QrScanner><br></br><List data={listData} header={this.columns}   popUp={this.popUp} update={this.props.update} page={this.props.page} /></div>\n        const popUpRender = <div>\n                    <Grid container>\n                    <Grid item xm={3}>\n                    <Button  variant=\"contained\" size='small' color=\"primary\" onClick={()=> {this.back()}}>\n                                    <ArrowLeftIcon></ArrowLeftIcon>\n                            Back\n                     </Button>        \n                     </Grid><Grid item xm={8}>  <h1>{this.state.update.name}</h1>\n                     </Grid><Grid container justify='center'><Grid item md={6}>\n\n                        <form onSubmit={this.onSubmit}>\n                            <table cellSpacing={10} cellPadding={10} >\n                                <tbody>\n                                <tr>\n                                    <td>\n                                    <TextField\n                                id ='name'\n                                name=\"name\"\n                                type='text'\n                                label=\"Item's Name\"\n                                onChange={this.onChange}  \n                                defaultValue={this.state.update.name}          \n                            />\n                                    </td>\n                                    <td>\n                                    <TextField type='number' label='Sales Price' defaultValue={this.state.update.sales_price} onChange={this.onChange}></TextField><br></br>\n                            \n                                    </td>\n                                </tr>\n                                <tr>\n                                <td colSpan={2}>\n                                    Item Catagory : \n                                <Select fullWidth lable='Item Catagory' name='catagory' id=\"catagory\" onChange={this.onChange} value={this.state.update.catagory} required >\n                                {catagories.map(\n                                    x => (\n                                    <MenuItem key={x.id} value={parseInt(x.id)}>{x.name}</MenuItem>\n                                    )\n                                )}\n                            </Select>\n                            </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                    <TextField\n          id=\"outlined-read-only-input\"\n          label=\"Current Stock\"\n          defaultValue={this.state.update.stock}\n          InputProps={{\n            readOnly: true,\n          }}\n          variant=\"outlined\"\n        />\n                                    </td>\n                                    <td>\n                                    <TextField\n          id=\"outlined-read-only-input\"\n          label=\"Number Of Sold Items\"\n          defaultValue={this.state.update.sold}\n          InputProps={{\n            readOnly: true,\n          }}\n          variant=\"outlined\"\n        />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                    <TextField\n                                id ='weight'\n                                name=\"weight\"\n                                type='number'\n                                label=\"Item's Weight (in kg)\"\n                                onChange={this.onChange}  \n                                defaultValue={this.state.update.weight}          \n                            />\n                                    </td>\n                                    <td>\n                                    <TextField\n                                id ='average_cost_price'\n                                name=\"average_cost_price\"\n                                type='number'\n                                label=\"Item's Cost Price\"\n                                onChange={this.onChange}  \n                                defaultValue={this.state.update.average_cost_price}          \n                            />\n                                    </td>\n                                    </tr>\n                                    <tr>\n                                        <td colSpan={2}>\n                                        <TextField\n                                            fullWidth\n                                            id ='description'\n                                            name=\"description\"\n                                            type='text'\n                                            label=\"Description\"\n                                            onChange={this.onChange}  \n                                            defaultValue={this.state.update.description}          \n                                        />\n                                        </td>\n                                    </tr>\n                                <tr>\n                                    <td colSpan={2}>\n                                        <h3>Product Image</h3>\n                                            <img width=\"100%\" src={product_image} alt='Product Image' ></img>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                    Upload Product Image : <FileBase64\n                                    multiple={ true } \n                                    onDone={ this.getFiles.bind(this) } />\n                                    </td>\n                                </tr>\n                                \n                                <tr>\n                                    <td colSpan={2}>\n                                        <h3>Thumbnail Image</h3>\n                                            <img width=\"100%\" src={thumbnail_image} alt='Thumbnail Image' ></img>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                    Upload Thumbnail : <FileBase64\n                                    multiple={ true } \n                                    onDone={ this.getThumbnail.bind(this) } />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n\n                                    </td>\n                                </tr>\n\n\n                                <tr>\n                                    <td>\n                                    <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                >\n                                Update\n                                </Button>\n                                    </td>\n                                    <td>\n                                    <Button variant=\"contained\" color=\"secondary\" onClick={() => {this.itemDelete(this.state.update.id)}}>\n                            Delete Item\n                        </Button> \n                                    </td>\n                                </tr>\n                                </tbody>\n                            </table>                             \n                </form>\n            \n                        <br>\n                        </br>\n                        </Grid>\n                        </Grid>\n                        </Grid>\n                        <Grid container justify='center'>\n                            <Grid item xm={6} >\n                                <u><h3>Placement Of Current Item</h3></u>\n                                <List data={this.state.placements} header={this.placementColumns}  popUp={this.dummy} update={this.update_placement_table} page={this.state.placementPage}>\n                                </List>\n                                <hr></hr>\n                                <Grid item xm={4}>\n                                {this.state.placements.map(\n                                                header => (\n                                                    <div key={header.id} >\n                                                    <h4> {header['uuid']} </h4>\n                                                    <img src={header['qr_code_image']} ></img></div>\n                                                )\n                                            )}\n                                            </Grid>\n                            </Grid>\n                        </Grid>\n                       \n                    </div>\n        return (\n            <div>\n                {this.state.popUp ? popUpRender : list}\n            </div>\n        )\n    }\n}\n\nexport default ItemList\n","import React, { Component } from 'react'\nimport {getItems} from '../../api//inventory/itemApi';\nimport {  connect } from 'react-redux';\nimport  ItemList  from './itemList';\nimport { Link} from 'react-router-dom';\n\n\nimport Button from '@material-ui/core/Button';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/styles';\nimport PropTypes from 'prop-types';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport LoadingIcon from '../loading';\n\n\nconst styles = makeStyles((theme) => ({\n    root: {\n    flexGrow: 12,\n    },\n    paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    },\n}));\n\n\nclass Items extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            'items':[],\n            'loaded':false,\n            'start':0,\n            'end':10,\n            'page':1,\n            'result':'No result',\n            'dialog_open':false\n        }\n        this.update_table = this.update_table.bind(this)\n        this.pushNewId = this.pushNewId.bind(this)\n    }\n    \n  \n    pushNewId(id){\n        this.props.history.push('/items/'+id)\n    }\n\n    handleScan = data => {\n        if (data) {\n          this.setState({\n            result: data\n          })\n        }\n      }\n      handleError = err => {\n        console.error(err)\n      }\n      \n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n        this.update_table(0)\n    }\n\n    async update_table (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                'loaded':false,\n                start: 0,\n                end: 10,\n                page:1\n            })\n        }\n        else{\n            if (this.state.start+by>-1){\n                await this.setState({\n                    'loaded':false,\n                    start: this.state.start+by,\n                    end: this.state.end+by,\n                    page:this.state.page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.start,\n            'end':this.state.end\n        }\n        this.getItemsData(request_json)\n    }\n    \n    async getItemsData (request_json) {\n        await getItems(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'items':data['items'],\n                    'loaded':true\n                })\n            }  \n        })\n    }\n\n \n\nrender() {\n    const render_after_load = (\n        <div>\n            <ItemList pushNewId={this.pushNewId} data={this.state.items} update={this.update_table} page={this.state.page} />\n        </div>\n    )\n    const { classes } = this.props;\n\n\n    return(\n        <div className={classes.root}>\n        <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n            <Grid item xs={3} >\n            <Button variant=\"contained\" color=\"primary\" onClick={() => {this.update_table(0)}}>\n              <RefreshIcon/>&nbsp;&nbsp;&nbsp;Refresh Table\n              </Button>\n            </Grid>\n            <Grid item xs={5}>\n  \n            </Grid>\n              <Grid item xs={3}>\n              <Link to='/items/create' style={{ textDecoration: 'none' }}>\n              <Button variant=\"contained\" color=\"secondary\">\n              <AddCircleIcon/>&nbsp;&nbsp;&nbsp;Add New Item\n              </Button>\n              </Link>\n              </Grid>\n  \n          <Grid item xs={12}>\n            <Paper className={classes.paper}>\n            {this.state.loaded ? render_after_load : <LoadingIcon></LoadingIcon>}\n            </Paper>\n          </Grid>\n          \n        </Grid>\n      </div>\n    )\n}\n}\n\n\nItems.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n\n\nconst mapStateToProps = state => ({\n    user: state.user,\n})\n\nexport default withStyles(styles)(connect(mapStateToProps)(Items))\n","import React, { Component } from 'react'\nimport {  connect } from 'react-redux';\nimport {Button, TextField,Grid } from '@material-ui/core';\nimport { createItem } from '../../api/inventory/itemApi';\nimport {getItemCatagories} from '../../api/inventory/itemCatagory'\n\nimport Swal from 'sweetalert2'\n\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\n\nclass ItemCreation extends Component {\n\n    constructor (props){\n        super(props)\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.state = {\n            'catagories':[],\n            'update':{\n            }\n        }\n    }\n\n    async componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n        var data = {\n            'action':'get',\n            'start':0,\n            'end':50\n        }\n        await getItemCatagories(JSON.stringify(data)).then(data=> {\n            try { \n                if (data['status']){\n                    this.setState({\n                        ...this.state,\n                        'catagories':data['item_catagories']\n                    })\n                }\n                else{\n                    Swal.fire({\n                        icon:'error',\n                        title:data['error']\n                    })                   }\n            }catch(e){\n                console.log(e)\n            }\n        })\n    }\n\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value][0]\n            }\n        })\n    }\n\n\n    async onSubmit(e){\n        e.preventDefault();\n            var data = {...this.state.update}\n            var ele;\n            for (ele in this.state.update){\n                data[ele] = this.state.update[ele]\n            }\n            data = {...data, 'action':'add'}\n            console.log(data)\n            createItem(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        Swal.fire(\n                            'Updated!',\n                            'Item has been added.',\n                            'success'\n                          ) \n                    }\n                    else{\n                        Swal.fire({\n                            icon:'error',\n                            title:data['error']\n                        })                       }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    render() {\n        const catagories = this.state.catagories\n        const popUpRender = \n            <div>\n            <Grid container justify='center'>\n<Grid item xm={6}>\n            \n                        <form onSubmit={this.onSubmit}>\n                            Name: <TextField\n                                id ='name'\n                                name=\"name\"\n                                type='text'\n                                onChange={this.onChange}      \n                            />\n                            Catagory : <select name='catagory' id=\"catagory\" onChange={this.onChange} required >\n                                {catagories.map(\n                                    x => (\n                                    <option key={x.id} value={parseInt(x.id)}>{x.name}</option>\n                                    )\n                                )}\n                            </select> <br></br><br></br>\n                            \n                            Sales Price : <input name='sales_price' type='float' onChange={this.onChange}></input><br></br>\n\n                            <br></br>\n                            <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                >\n                                Create</Button>\n                </form>\n            \n                        <br>\n                        </br>\n                    </Grid>\n                    </Grid>\n                    </div>\n        return (\n            popUpRender\n        )\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    user: state.user\n})\n\nexport default connect(mapStateToProps)(ItemCreation)","import React, { Component } from 'react'\nimport List from '../list';\nimport { getItemCatagory, updateItemCatagory,  deleteItemCatagory } from '../../api/inventory/itemCatagory';\nimport {Button, TextField, Grid } from '@material-ui/core';\n\n\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\nimport Swal from 'sweetalert2'\n\n\nclass ItemCatagoryList extends Component {\n    \n    constructor(props){\n        super(props)\n        this.popUp = this.popUp.bind(this)\n        this.state = {\n            'popUp':false,\n            'itemCatagory':{},\n            'update':{}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.itemCatDelete = this.itemCatDelete.bind(this)\n        this.popUptemp = this.popUptemp.bind(this)\n        this.back = this.back.bind(this)\n        this.updatetemp = this.updatetemp.bind(this)\n    }\n    popUptemp(id,uuid){\n\n    }\n    updatetemp(){\n\n    }\n    back(){ \n        if (this.props.data){\n            this.setState({...this.state, popUp:false});\n        }else{\n            this.props.history.push('/itemcatagories')\n        }\n    }\n    async componentDidMount(){\n        try {\n            const {id} = this.props.match.params\n            if (id){\n                await this.popUp(id,0,true)\n            }\n        }catch(e){\n            console.log(e)\n        }\n    }\n    onChange(e)\n    {\n        this.setState({\n            'itemCatagory': {\n                ...this.state.itemCatagory,\n                [e.target.name] : [e.target.value][0]\n            }\n        })\n    }\n\n    \n    async onSubmit(e){\n        e.preventDefault();\n            var data = this.state.itemCatagory\n            data = {...data, 'action':'edit','item_catagory_id':data.id}\n            console.log(data)\n            updateItemCatagory(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        Swal.fire(\n                            'Updated!',\n                            'ItemCatagory Data updated.',\n                            'success'\n                          )\n                        this.back()\n                    }\n                    else{\n                        Swal.fire({\n                            icon:'error',\n                            title:data['error']\n                        })\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    itemCatDelete(id){\n        var data = {\n            'item_catagories_id':[\n                id\n            ]\n        }\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to revert this!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, delete it!'\n          }).then((result) => {\n            if (result.value) {\n                \n        deleteItemCatagory(JSON.stringify(data)).then(data=>{\n            try {\n                if (data['status']){\n                    Swal.fire({\n                        icon:'success',\n                        title:'Item Catagory entry has been deleted.',\n                        showConfirmButton: false,\n                        timer:1000\n                    })\n                    this.back() \n                    }   else{\n                    Swal.fire({\n                        icon:'error',\n                        title:data['error']\n                    })\n                }\n            }catch(e){\n                console.log(e)\n            }\n        })\n    }\n})\n    }\n    \n    async popUp(id, uuid=0, fromUrl){\n        if(!fromUrl){\n            this.props.pushNewId(id)\n        }else{\n        const data = {\n            'action':'get',\n            'item_catagory_id':id,\n        }\n        var data_main;\n        await getItemCatagory(JSON.stringify(data)).then(data => {\n            console.log(data)\n            if (data['status']){\n                data_main=data\n            }\n        })\n\n        await this.setState({\n            'popUp':true,\n            'itemCatagory':data_main['item_catagories'][0]\n        })\n    }\n    }\n\n\n    columns = [\n        {\n            id:1,\n            name:\"Name\",\n            prop: 'name'\n        },\n        {\n            id:2,\n            name:'Items Under This Catagory',\n            prop:'count'\n        }\n    ]\n\n    items_c = [\n        {\n            id:1,\n            name:\"Item's Name\",\n            prop:'name'\n        },{\n            id:2,\n            name: 'Price',\n            prop: 'sales_price',\n        },\n        {\n            id:3,\n            name:'Sales Price',\n            prop:'sales_price'\n        },\n        {\n            id:4,\n            name: 'Stock',\n            prop:'stock',\n        },\n        {\n            id:5,\n            name:'Sold',\n            prop:'sold'\n        }\n\n\n    ]\n    \n\n    render() {\n        var listData\n        if (!this.props.data){\n            listData = []\n        }else{\n            listData=this.props.data\n        }\n        const list = <List data={listData} header={this.columns}   popUp={this.popUp} update={this.props.update} page={this.props.page} />\n        const popUpRender = <div>\n            <Grid container justify='center'>\n<Grid item xm={6}>\n<Button  variant=\"contained\" size='small' color=\"primary\" onClick={()=> {this.back()}}>\n                <ArrowLeftIcon></ArrowLeftIcon>\n         Back\n     </Button>\n     <h1>{this.state.update.name}</h1>\n                        <form onSubmit={this.onSubmit}>\n                            <table cellSpacing={10} cellPadding={10}>\n                                <tbody>\n                                <tr>\n                                    <td>\n                                    Name: \n                                    </td>\n                                    <td>\n                                    <TextField\n                                id ='name'\n                                name=\"name\"\n                                type='text'\n                                onChange={this.onChange}  \n                                defaultValue={this.state.itemCatagory.name}          \n                            />\n                                    </td>\n                                </tr>\n                                <tr>\n<td>\n<Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                >\n                                Update\n                                </Button>\n</td>\n<td>\n<Button variant=\"contained\" color=\"secondary\" onClick={() => {this.itemCatDelete(this.state.itemCatagory.id)}}>\n                            Delete Discount\n                        </Button> \n</td>\n                                </tr>\n                                <tr>\n                                   <td colSpan={3}>\n                                       <h1> Related Items</h1>\n                                   <List data={this.state.itemCatagory.items} header={this.items_c} popUp={this.popUptemp} update={this.updatetemp} page={false} />\n                                   </td> \n                                </tr>\n                                </tbody>\n                            </table>\n                           \n                           \n                        \n                </form>\n            \n</Grid>\n            </Grid>\n                        \n                        \n                    </div>\n        return (\n            <div>\n                {this.state.popUp ? popUpRender : list}\n            </div>\n        )\n    }\n}\n\nexport default ItemCatagoryList\n","import React, { Component } from 'react'\nimport {getItemCatagories} from '../../api//inventory/itemCatagory';\nimport {  connect } from 'react-redux';\nimport  ItemCatagoryList  from './itemCatagoryList';\nimport { Link} from 'react-router-dom';\n\n\nimport Button from '@material-ui/core/Button';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/styles';\nimport PropTypes from 'prop-types';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport LoadingIcon from '../loading';\n\n\nconst styles = makeStyles((theme) => ({\n    root: {\n    flexGrow: 12,\n    },\n    paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    },\n}));\n\n\n\nclass ItemCatagories extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            'items':[],\n            'loaded':false,\n            'start':0,\n            'end':10,\n            'page':1\n        }\n        this.update_table = this.update_table.bind(this)\n        this.pushNewId = this.pushNewId.bind(this)\n    }\n\n    \n    pushNewId(id){\n        this.props.history.push('/itemcatagories/'+id)\n    }\n\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n        this.update_table(0)\n    }\n\n    async update_table (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                'loaded':false,\n                start: 0,\n                end: 10,\n                page:1\n            })\n        }\n        else{\n            if (this.state.start+by>-1){\n                await this.setState({\n                    'loaded':false,\n                    start: this.state.start+by,\n                    end: this.state.end+by,\n                    page:this.state.page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.start,\n            'end':this.state.end\n        }\n        this.getItemCatagoriesData(request_json)\n    }\n    \n    async getItemCatagoriesData (request_json) {\n        await getItemCatagories(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                console.log(data)\n                this.setState({\n                    'item_catagories':data['item_catagories'],\n                    'loaded':true\n                })\n            }  \n        })\n    }\n\n \n\nrender() {\n    const render_after_load = (\n        <div>\n            <ItemCatagoryList data={this.state.item_catagories} update={this.update_table} page={this.state.page} pushNewId={this.pushNewId}/>\n        </div>\n    )\n    const { classes } = this.props;\n\n    return(\n        <div className={classes.root}>\n        <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n            <Grid item xs={3} >\n            <Button variant=\"contained\" color=\"primary\" onClick={() => {this.update_table(0)}}>\n              <RefreshIcon/>&nbsp;&nbsp;&nbsp;Refresh Table\n              </Button>\n            </Grid>\n            <Grid item xs={5}>\n  \n            </Grid>\n              <Grid item xs={3}>\n              <Link to='/itemcatagories/create' style={{ textDecoration: 'none' }}>\n              <Button variant=\"contained\" color=\"secondary\">\n              <AddCircleIcon/>&nbsp;&nbsp;&nbsp;Add New Item Catagories\n              </Button>\n              </Link>\n              </Grid>\n  \n          <Grid item xs={12}>\n            <Paper className={classes.paper}>\n            {this.state.loaded ? render_after_load : <LoadingIcon></LoadingIcon>}\n            </Paper>\n          </Grid>\n          \n        </Grid>\n      </div>\n    )\n}\n}\n\n\n\n\n\nItemCatagories.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\nconst mapStateToProps = state => ({\n    user: state.user,\n})\n\nexport default withStyles(styles)(connect(mapStateToProps)(ItemCatagories))","import React, { Component } from 'react'\nimport {  connect } from 'react-redux';\nimport {Button, TextField, Grid } from '@material-ui/core';\nimport { createItemCatagory } from '../../api/inventory/itemCatagory';\n\nimport Swal from 'sweetalert2'\n\nclass DiscountCreation extends Component {\n\n    constructor (props){\n        super(props)\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.state = {\n           'itemCatagory':{}\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n    }\n\n    \n    onChange(e)\n    {\n        this.setState({\n            'itemCatagory': {\n                ...this.state.itemCatagory,\n                [e.target.name] : [e.target.value][0]\n            }\n        })\n    }\n\n\n    async onSubmit(e){\n        e.preventDefault();\n            var data = {...this.state.itemCatagory}\n            data = {...data, 'action':'add'}\n            createItemCatagory(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        Swal.fire(\n                            'Updated!',\n                            'ItemCatagory Data has been added.',\n                            'success'\n                          )                    }\n                    else{\n                        Swal.fire({\n                            icon:'error',\n                            title:data['error']\n                        })                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    render() {\n        const popUpRender =\n        <div>\n        <Grid container justify='center'>\n        <Grid item xm={6}>\n                                <form onSubmit={this.onSubmit}>\n                                    <table>\n                                        <tbody>\n                                        <tr>\n                                            <td>\n                                            Name: \n                                            </td>\n                                            <td>\n                                            <TextField\n                                        id ='name'\n                                        name=\"name\"\n                                        type='text'\n                                        onChange={this.onChange}  \n                                        defaultValue={this.state.itemCatagory.name}          \n                                    />\n                                            </td>\n                                        </tr>\n                                        <tr>\n        <td>\n        <Button\n                                        type='submit'\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        >\n                                        Add\n                                        </Button>\n        </td>\n        <td>\n\n        </td>\n                                        </tr>\n                                        </tbody>\n                                    </table>\n                                   \n                                   \n                                \n                        </form>\n                    \n        </Grid>\n                    </Grid>\n                    \n                    </div>\n        return (\n            popUpRender\n        )\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    user: state.user\n})\n\nexport default connect(mapStateToProps)(DiscountCreation)","import React, { Component } from 'react'\nimport List from '../list';\nimport { getPlace, updatePlace,  deletePlaces, assignPlace } from '../../api/inventory/placeApi';\nimport {Button, TextField, Grid, Input } from '@material-ui/core';\nimport {getPlacements, deletePlacement } from '../../api/misc'\nimport {getItems} from '../../api/inventory/itemApi'\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\nimport Swal from 'sweetalert2'\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport {getPurchaseItems}  from '../../api/inventory/purchaseItem'\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\n\nclass PlaceList extends Component {\n    \n    constructor(props){\n        super(props)\n        this.popUp = this.popUp.bind(this)\n        this.state = {\n            'itemsPage':1,\n            'itemsStart':0,\n            'itemsEnd':10,\n            'newPlacementPopUpSelectItem': false,\n            'purchaseItemSelectPopUp':false,\n            'addPlacementFinal':false,\n            'page':1,\n            'start':0,\n            'end':10,\n            'popUpPlacement':false,\n            'popUp':false,\n            'place':{},\n            'update':{\n                'name':'',\n                'stock':1,\n            },\n            'placementUpdate':{},\n            'placements':[],\n            'items':[],\n            'purchaseItems':[],\n            'selectedPurchaseItem':[]\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.placeDelete = this.placeDelete.bind(this)\n        this.update = this.update.bind(this)\n        this.popUpPlacement = this.popUpPlacement.bind(this)\n        this.deletePlacement = this.deletePlacement.bind(this)\n        this.addNewItem = this.addNewItem.bind(this)\n        this.updateItemsTable = this.updateItemsTable.bind(this)\n        this.selectItem = this.selectItem.bind(this)\n        this.selectPurchaseItem = this.selectPurchaseItem.bind(this)\n        this.assignPlacement = this.assignPlacement.bind(this)\n        this.back = this.back.bind(this)\n    }\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value][0]\n            }\n        })\n    }\n    \n    back(){ \n        if (this.props.data){\n            this.setState({...this.state, popUp:false});\n        }else{\n            this.props.history.push('/places')\n        }\n    }\n    async componentDidMount(){\n        try {\n            const {id} = this.props.match.params\n            if (id){\n                await this.popUp(id,0,true)\n            }\n        }catch(e){\n            console.log(e)\n        }\n    }\n    \n    async update (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                start: 0,\n                end: 10,\n                page:1\n            })\n        }\n        else{\n            if (this.state.start+by>-1){\n                await this.setState({\n                    start: this.state.start+by,\n                    end: this.state.end+by,\n                    page:this.state.page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'place':this.state.update.id,\n            'filter':'place',\n            'start':this.state.start,\n            'end':this.state.end\n        }\n        this.getPlacementsData(request_json)\n    }\n\n    async getPlacementsData(request_json){\n        var data_main;\n        await getPlacements(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                data_main=data['placements']\n            }\n        })\n        await this.setState({\n            ...this.state,\n            'popUpPlacement':true,\n            'placements':data_main\n        })\n    }\n\n    async deletePlacement(id){\n        const request = {\n            'action':'delete',\n            'id':id\n        }\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"The remaining stock will be added to the default storage place.\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, delete it!'\n          }).then((result) =>  {\n            if (result.value) {\n        deletePlacement(JSON.stringify(request)).then(data=>{\n            if(data['status']){\n                Swal.fire('Placement is deleted and the remaining stock is added to the default storing place.')\n                this.popUp(this.state.place.id)\n            }\n            else {\n                Swal.fire(data['error'])\n            }\n        })\n    }\n})\n}\n    \n\n    popUpPlacement(){\n\n    }\n    \n    async onSubmit(){\n            var data = this.state.update\n            data = {...data, 'action':'edit','place_id':data.id}\n            updatePlace(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        alert(\"Place Data updated.\")\n                        this.back()\n                    }\n                    else{\n                        alert(data['error'])\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    placeDelete(id){\n        var data = {\n            'places_id':[\n                id\n            ]\n        }\n        deletePlaces(JSON.stringify(data)).then(data=>{\n            try {\n                if (data['status']){\n                    alert('Place data deleted.')\n                    this.back()\n                }   else{\n                    alert(data['error'])\n                }\n            }catch(e){\n                console.log(e)\n            }\n        })\n    }\n    \n    async popUp(id, uuid=0, fromUrl){\n        if(!fromUrl){\n            this.props.pushNewId(id)\n        }else{\n        const data = {\n            'action':'get',\n            'place_id':id,\n        }\n        var data_main, data_main2;\n        await getPlace(JSON.stringify(data)).then(data => {\n            if (data['status']){\n                data_main=data\n            }\n        })\n        await this.setState({\n            'popUp':true,\n            'place':data_main['places'][0],\n            'update':data_main['places'][0],\n        })\n        const req = {\n            'action':'get',\n            'place':id,\n            'filter':'place',\n            'start':0,\n            'end':10\n        }\n        this.getPlacementsData(req)\n    }\n}\n\n    async addNewItem(id){\n        var request = {\n            action:'get',\n            filter:'none',\n            start:0,\n            end:10          \n        }    \n        await getItems(JSON.stringify(request)).then(data => {\n            if (data['status']){\n                this.setState({\n                    ...this.state,\n                    newPlacementPopUpSelectItem: true,\n                    items:data['items']                                        \n                })\n            }\n            else{\n                Swal.fire(data['error'])\n            }\n        })\n    }\n\n    async assignPlacement(){\n        var request = {\n            'action':\"add\",\n            'place_id':this.state.place.id,\n            'purchase_item':this.state.selectedPurchaseItem.id,\n            'stock':this.state.update.stock\n        }\n        await assignPlace(JSON.stringify(request)).then(data => {\n            if (data['status']){\n                Swal.fire('Selected Items have been assigned to the place.')\n                this.updateItemsTable(0)\n            }else{\n                Swal.fire(data['error'])\n            }\n        })\n    }\n\n    columns = [\n        {\n            id:1,\n            name:\"Name\",\n            prop: 'name'\n        },\n        {\n            id:2,\n            name:\"Number of Items Assigned To The Place (different Purchase orders)\",\n            prop: 'count_assignment'\n        }     \n    ]\n\n    placementColumn = [\n        {\n            id:1,\n            name:\"Item\",\n            prop:'item_name',\n        },\n        {\n            id:2,\n            name:'Purchase Order ID',\n            prop:'purchase_order_uuid'\n        },\n        {\n            id:3,\n            name:'Stock',\n            prop:'stock'\n        }\n    ]\n\n    itemsColumn = [\n        {\n            id:1,\n            name:'Item',\n            prop:'name',\n        },{\n            id:2,\n            name:'Defined Sales Price',\n            prop:'sales_price',\n        },{\n            id:3,\n            name:'Stock',\n            prop:'stock'\n        },{\n            id:4,\n            name:'catagory',\n            prop:'catagory_str'\n        }\n    ]\n\n    purchaseItemsColumn = [\n        {\n            id:1,\n            name:'Vendor',\n            prop:'vendor'\n        },{\n            id:2,\n            name:'Purchase Order ID',\n            prop:'purchase_order_id',\n        },{\n            id:3,\n            name:'Purchase Price',\n            prop:'price'\n        },{\n            id:4,\n            name:'Total Stock',\n            prop:'stock'\n        },{\n            id:5,\n            name:'Unassigned Stock (On Default Place)',\n            prop:'on_default'\n        }\n    ]\n\n    async updateItemsTable (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                'itemsStart': 0,\n                'itemsEnd': 10,\n                'itemsPage':1\n            })\n        }\n        else{\n            await this.setState({\n                'itemsStart': this.state.itemsStart+by,\n                'itemsEnd': this.state.itemsEnd+by,\n                'itemsPage':this.state.itemsPage+x\n            })\n        \n        }\n        var  request = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.itemsStart,\n            'end':this.state.itemsEnd\n        }\n        await getItems(JSON.stringify(request)).then(data => {\n            if (data['status']){\n                this.setState({\n                    ...this.state,\n                    items:data['items']                                        \n                })\n            }\n            else{\n                Swal.fire(data['error'])\n            }\n        })\n    }\n    \n    async selectItem(id){\n        var request = {\n            'action':'get',\n            'filter':'itemForPlace',\n            'item_id':id,\n        }\n        var item;\n        for (var x in this.state.items){\n            if (this.state.items[x].id===id){\n                item = this.state.items[x]\n            } \n        }\n        await getPurchaseItems(JSON.stringify(request)).then(data => {\n            console.log(data)\n            if (data['status']){\n                this.setState({\n                    ...this.state,\n                    selectedItem:item,\n                    purchaseItemSelectPopUp:true,\n                    purchaseItems:data['purchase_items']                                \n                })\n            }\n            else{\n                Swal.fire(data['error'])\n            }\n        })\n    }\n\n    async selectPurchaseItem(id){\n        var purchase_item;\n        for (var x in this.state.purchaseItems){\n            if (this.state.purchaseItems[x].id===id){\n                purchase_item = this.state.purchaseItems[x]\n            } \n        }\n        await this.setState({\n            ...this.state,\n            addPlacementFinal: true,\n            placementUpdate:{\n                ...this.state.placementUpdate,\n                placementUpdate:{\n                    'purchase_item_id':id,\n                    'placed_on':this.state.place.id\n                },\n            },\n            'selectedPurchaseItem':purchase_item,\n        })\n        console.log(this.state)\n    }\n    render() {\n        var listData\n        if (!this.props.data){\n            listData = []\n        }else{\n            listData=this.props.data\n        }\n        const list = <List data={listData} header={this.columns}   popUp={this.popUp} update={this.props.update} page={this.props.page} />\n        const fianlForm = <div>\n            <table cellSpacing={10}  cellPadding={10} >\n                <tbody>\n                    <tr>\n                        <td colSpan={2}>\n                            <h2><u>Selected Item</u></h2>\n                            <List data={[this.state.selectedItem]} header={this.itemsColumn}/>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td colSpan={2}>\n                            <h2><u>Selected Stock (Purchase Order)</u></h2>\n                            <List data={[this.state.selectedPurchaseItem]} header={this.purchaseItemsColumn}/>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td> \n                            <TextField required id=\"stock\"  name=\"stock\" onChange={this.onChange} label=\"Number of Items To Assign\" fullWidth defaultValue={this.state.update.stock}  type='number' autoFocus min={1} max={this.state.selectedPurchaseItem.on_default} />\n                        </td>\n                        <td>\n                            <Button  variant=\"contained\" color=\"primary\" onClick={()=> {this.assignPlacement()}}>Assign</Button>\n                        </td>\n                    </tr>\n                </tbody>\n\n            </table>\n        </div>\n        const newPlacementForm = <div>\n            <hr></hr>\n            <table cellSpacing={10} cellPadding={10}>\n                <tbody>\n                    <tr>\n                        <th colSpan={2}>\n                            <h1>Place new item to {this.state.place.name}</h1>\n                            {this.state.purchaseItemSelectPopUp ? <h4>Select a Purchase Order</h4> : <h4>Select an Item</h4>}\n                        </th>\n                    </tr>\n                    <tr>\n                        <td colSpan={2}>\n                        {this.state.purchaseItemSelectPopUp ? this.state.addPlacementFinal ? fianlForm : <List data={this.state.purchaseItems} header={this.purchaseItemsColumn} popUp={this.selectPurchaseItem}></List> : <List data={this.state.items} header={this.itemsColumn}  popUp={this.selectItem} update={this.updateItemsTable} page={this.state.itemsPage}/> }   \n                           </td>\n                    </tr>\n                </tbody>\n\n            </table>\n        </div>\n        const popUpRender = <div>\n                         &nbsp;\n                        &nbsp;\n                        &nbsp;\n                        &nbsp;\n                        &nbsp;\n                        &nbsp;<Button  variant=\"contained\" size='small' color=\"primary\" onClick={()=> {this.back()}}>\n                            <ArrowLeftIcon></ArrowLeftIcon>\n                            Back\n                        </Button>\n                        <Grid container>\n                            <Grid item xs={3}>\n                            <span> </span>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <table cellSpacing={10}>\n                                    <tbody>\n                                        <tr>\n                                            <td colSpan={2}>\n                                            <h1>{this.state.place.name}</h1>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td colSpan={2}>\n                                            <TextField\n                                            id ='name'\n                                            name=\"name\"\n                                            label='Place Name'\n                                            autoFocus\n                                            fullWidth\n                                            required\n                                            type='text'\n                                            onChange={this.onChange}  \n                                            value={this.state.update.name}          \n                                        />\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                            <Button\n                                                type='submit'\n                                                variant=\"contained\"\n                                                color=\"primary\"\n                                                >\n                                                Update\n                                                </Button>\n                                            </td>\n                                            <td>\n                                            <Button variant=\"contained\" color=\"secondary\" onClick={() => {this.placeDelete(this.state.place.id)}}>\n                                                Delete Place\n                                            </Button> \n                                            </td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </Grid>\n                        </Grid>\n                        <Grid container justify={'center'}>\n                            <Grid item xm={8}>\n                                <table>\n                                    <tbody>\n                                    <tr>\n                                        <td>\n                                        <h1>Items Located On {this.state.update.name}</h1>\n                                        </td>\n                                        <td>\n                                            <Button variant=\"contained\" color=\"primary\" onClick={() => {this.addNewItem(this.state.place.id)}}><AddCircleIcon></AddCircleIcon></Button>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td colSpan={2}>\n                                            {this.state.newPlacementPopUpSelectItem  ? newPlacementForm : <List data={this.state.placements} header={this.placementColumn} delete={this.deletePlacement} popUp={this.popUpPlacement} update={this.update} page={this.state.page} />}\n                                            \n                                        </td>\n                                    </tr>\n                                    </tbody>\n                                </table>\n                            \n                            </Grid>\n                        </Grid>\n                        \n                    </div>\n        return (\n            <div>\n                {this.state.popUp ? popUpRender : list}\n            </div>\n        )\n    }\n}\n\nexport default PlaceList\n","import React, { Component } from 'react'\nimport {getPlaces} from '../../api/inventory/placeApi';\nimport {  connect } from 'react-redux';\nimport  PlaceList  from './placeList';\nimport { Link} from 'react-router-dom';\n\n\nimport Button from '@material-ui/core/Button';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport LoadingIcon from '../loading';\n\nclass Placements extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            'places':[],\n            'loaded':false,\n            'start':0,\n            'end':10,\n            'page':1\n        }\n        this.update_table = this.update_table.bind(this)\n        this.pushNewId = this.pushNewId.bind(this)\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n        this.update_table(0)\n    }\n    \n    pushNewId(id){\n        this.props.history.push('/places/'+id)\n    }\n\n\n    async update_table (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                'loaded':false,\n                start: 0,\n                end: 10,\n                page:1\n            })\n        }\n        else{\n            if (this.state.start+by>-1){\n                await this.setState({\n                    'loaded':false,\n                    start: this.state.start+by,\n                    end: this.state.end+by,\n                    page:this.state.page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.start,\n            'end':this.state.end\n        }\n        this.getPlacesData(request_json)\n    }\n    \n    async getPlacesData(request_json) {\n        await getPlaces(JSON.stringify(request_json)).then(data => {\n            console.log(data)\n            if (data['status']){\n                this.setState({\n                    'places':data['places'],\n                    'loaded':true\n                })\n            }  \n        })\n    }\n\n \n\nrender() {\n    const render_after_load = (\n        <div>\n            <PlaceList pushNewId={this.pushNewId} data={this.state.places} update={this.update_table} page={this.state.page} />\n        </div>\n    )\n\n    return(\n        <div>\n        <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n            <Grid item xs={3} >\n            <Button variant=\"contained\" color=\"primary\" onClick={() => {this.update_table(0)}}>\n              <RefreshIcon/>&nbsp;&nbsp;&nbsp;Refresh Table\n              </Button>\n            </Grid>\n            <Grid item xs={5}>\n  \n            </Grid>\n              <Grid item xs={3}>\n              <Link to='/places/create' style={{ textDecoration: 'none' }}>\n              <Button variant=\"contained\" color=\"secondary\">\n              <AddCircleIcon/>&nbsp;&nbsp;&nbsp;Add New Place\n              </Button>\n              </Link>\n              </Grid>\n  \n          <Grid item xs={12}>\n            <Paper>\n            {this.state.loaded ? render_after_load : <LoadingIcon></LoadingIcon>}\n            </Paper>\n          </Grid>\n          \n        </Grid>\n      </div>    )\n}\n}\n\n\n\n\nconst mapStateToProps = state => ({\n    user: state.user,\n})\n\nexport default connect(mapStateToProps)(Placements)","import React, { Component } from 'react'\nimport {  connect } from 'react-redux';\nimport {Button, TextField, Grid } from '@material-ui/core';\nimport { createPlace } from '../../api/inventory/placeApi';\nimport Swal from 'sweetalert2';\n\n\nclass PlaceCreation extends Component {\n\n    constructor (props){\n        super(props)\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.state = {\n            'update':{\n            }\n        }\n    }\n\n    async componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n    }\n\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value][0]\n            }\n        })\n    }\n\n\n    async onSubmit(e){\n        e.preventDefault();\n            var data = {...this.state.update}\n            data = {...data, 'action':'add'}\n            console.log(data)\n            createPlace(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        Swal.fire(\"New Place Added\")\n                    }\n                    else{\n                        Swal.fire(data['error'])\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    render() {\n        const popUpRender = <div>\n            <Grid container justify='center'>\n                <Grid item>\n                    \n<form onSubmit={this.onSubmit}>\n                    <table cellPadding={10} cellSpacing={10}>\n                        <tbody >\n                            <tr>\n<td>\n                            Name: <TextField\n                                id ='name'\n                                name=\"name\"\n                                type='text'\n                                onChange={this.onChange}      \n                            />\n</td>\n                            </tr>\n                            <tr>\n                                <td>\n                                <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                >\n                                Create</Button>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n               \n                            \n                           \n                </form>\n                </Grid>\n\n            </Grid>\n                    </div>\n        return (\n            popUpRender\n        )\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    user: state.user\n})\n\nexport default connect(mapStateToProps)(PlaceCreation)","import React, { Component } from 'react'\nimport {getExport, } from '../../api/misc';\nimport {  connect } from 'react-redux';\n\n\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LoadingIcon from '../loading';\nimport url from '../../server'\n\n\n\nclass Export extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            loaded:true,\n            fields:{},\n            docs:false\n        }\n    }\n    \n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n    }\n\n\n    export(){\n        var data = {\n            'action':\"export\",\n            'filter':'none',\n        }\n        getExport(JSON.stringify(data)).then(data => {\n            if(data['status']){\n                this.setState({\n                    ...this.state,\n                    items: data['items'],\n                    docs:true\n                })\n            }           \n        })\n    }\n\n    redirect(em){\n        this.props.history.push(\"/export/\"+em)\n    }\n\n\n\nrender() {\n    const index_redner = (\n        <Grid container justify='center'>\n            <Grid item xs={10}>\n        <table cellPadding={15} cellSpacing={25} >\n            <tbody>\n                <tr>\n                    <td>\n                    <Button variant=\"contained\" color=\"secondary\" onClick={()=>{this.redirect('purchaseorders')}}>Export Purchase Orders</Button>\n\n                    </td>\n                    <td>\n                    <Button  variant=\"contained\" color=\"secondary\"  onClick={()=>{this.redirect('invoices')}}>Export Invoices</Button>\n                    </td>\n                    <td>\n                    <Button variant=\"contained\" color=\"secondary\" onClick={()=>{this.redirect('items')}}>Export Items</Button>\n                    </td>\n                 </tr>\n            </tbody>\n        </table>\n            </Grid>\n        </Grid>\n        )\n   \n    \n    const render_after_load = (\n        <div>\n            {index_redner}\n            <Grid container>\n                <Grid md={10} item>\n                \n                </Grid>\n            </Grid>\n        </div>\n    )\n    const { classes } = this.props;\n\n    return(\n        <div >\n        <Grid container spacing={3} justify=\"center\" alignItems=\"center\">  \n          <Grid item md={10}>\n            <Paper>\n            {this.state.loaded ? render_after_load : <LoadingIcon></LoadingIcon>}\n            </Paper>\n          </Grid>\n        </Grid>\n      </div>\n    )\n}\n}\n\n\n\nconst mapStateToProps = state => ({\n    user: state.user,\n})\n\nexport default (connect(mapStateToProps)(Export))\n","import React, { Component } from 'react'\n\nclass ExportPurchaseOrders extends Component {\n    \n    render() {\n        return (\n            <div>\n                <h1>Purchase Orders</h1>\n            </div>\n        )\n    }\n}\n\nexport default ExportPurchaseOrders","import React, { Component } from 'react'\n\nclass ExportInvoices extends Component {\n    \n    render() {\n        return (\n            <div>\n                <h1>Invoices</h1>\n            </div>\n        )\n    }\n}\n\nexport default ExportInvoices","import React, { Component } from 'react'\nimport { Grid, Button, Select} from '@material-ui/core'\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\nimport {getExportFields} from '../../api/misc';\nimport Loading from '../loading';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport {TextField} from '@material-ui/core'\nimport {getItemCatagories} from '../../api/inventory/itemCatagory'\nimport LoadingIcon from '../loading';\nimport List from '../list';\n\n\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport Swal from 'sweetalert2'\n\nclass ExportItems extends Component {\n\n    constructor(props){\n        super(props)\n        this.state={\n            'fields':[],\n            'loading':true,\n            'update':[],\n            'filters':{\n                exact_name:true,\n                is_applied_name:false,\n                is_applied_weight_from: false,\n                is_applied_weight_upto: false,\n                is_applied_average_cost_price_from:false,\n                is_applied_average_cost_price_upto:false,\n                is_applied_catagory:false,\n                is_applied_stock_from:false,\n                is_applied_stock_upto:false,\n                is_applied_sales_price_from:false,\n                is_applied_sales_price_upto:false,\n                is_applied_sold_from:false,\n                is_applied_sold_upto:false\n            },\n            'item_catagories':[],\n            'items':[],\n            'loadingTable':true,\n            \"showItems\":false,\n            \"page\":0,\n            \"start\":0,\n            \"end\":10\n        }\n        this.handleChange = this.handleChange.bind(this)\n        this.handleFilterChange = this.handleFilterChange.bind(this)\n        this.update_table = this.update_table.bind(this)\n        this.handlePopUp = this.handlePopUp.bind(this)\n    }\n\n\n\n    async componentDidMount(){\n        var data = {\n            'action':\"get\",\n            'model':'item'\n        }\n        await getExportFields(JSON.stringify(data)).then(data =>  {\n            if (data['status']){\n                var temp = {}\n                var x;\n                var show_fields = [];\n                var old;\n                var filters = {};\n                data['fields'].map(field => {\n                    old=field\n                    temp[field]=false\n                    x = field.split('_')\n                    field = ''\n                    x.map(\n                        y => {\n                            field = field + y.charAt(0).toUpperCase() + y.slice(1)+ ' '\n                        }\n                    )\n                    show_fields.push({'key':old, \"str\":field})\n                    \n                })\n                filters['exact_name'] = false\n                temp['name'] = true\n                this.setState({\n                    ...this.state,\n                    'fields':show_fields,\n                    'update':temp,\n                    'loading':false\n                })\n            }  \n        })\n        data = {\n            'action':'get',\n            'start':0,\n            'end':50\n        }\n        await getItemCatagories(JSON.stringify(data)).then(data=> {\n            try { \n                if (data['status']){\n                    this.setState({\n                        ...this.state,\n                        'item_catagories':data['item_catagories']\n                    })\n                }\n                else{\n                    Swal.fire({\n                        icon:'error',\n                        title:data['error']\n                    })                   \n                }\n            }catch(e){\n                console.log(e)\n            }\n        })\n    }\n\n    handleChange(e){\n        if (e.target.name === 'name'){\n\n        }\n        else{\n            this.setState({\n                ...this.state,\n                update : {\n                    ...this.state.update,\n                    [e.target.name]: !(this.state.update[e.target.name])\n                }\n            })\n        }\n    }\n    \n    handleFilterChange(e){\n        var temp = \"is_applied_\"+e.target.name\n        if (e.target.name === \"exact_name\"){\n            this.setState({\n                ...this.state,\n                filters : {\n                    ...this.state.filters,\n                    exact_name: !(this.state.filters.exact_name)\n                }\n            })\n        }else{\n            this.setState({\n                ...this.state,\n                filters : {\n                    ...this.state.filters,\n                    [temp]:true,\n                    [e.target.name]: e.target.value \n                }\n            })\n        }\n\n    }\n\n    exportData(){\n        var request_json = {\n            'model':'item',\n            'action':'export',\n            'showItems':false,\n            'filter':{'fields':this.state.update, ...this.state.filters}\n        }\n        getExportFields(JSON.stringify(request_json)).then(data=>{\n            if(data['status']){\n            }\n            else{\n                Swal.fire(data['error'])\n            }\n        })\n    }\n\n    back(){\n        this.props.history.push('/export')\n    }\n\n      \n    async update_table(by){\n        await this.setState({\n            ...this.state,\n            loadingTable:true\n        })        \n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                ...this.state,\n                start: 0,\n                end: 10,\n                page:1\n            })\n        }\n        else{\n            if (this.state.start+by>-1){\n                await this.setState({\n                    ...this.state,\n                    start: this.state.start+by,\n                    end: this.state.end+by,\n                    page:this.state.page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var request_json = {\n            'model':'item',\n            'action':'export',\n            'start':this.state.start,\n            'end':this.state.end,\n            'showItems':true,\n            'filter':{'fields':this.state.update, ...this.state.filters}\n        }\n        getExportFields(JSON.stringify(request_json)).then(data=>{\n            if(data['status']){\n                this.setState({\n                    ...this.state,\n                    items:data['items'],\n                    showItems:true\n                })\n            }\n            else{\n                Swal.fire(data['error'])\n            }\n        })\n        await this.setState({\n            ...this.state,\n            loadingTable:false\n        })\n    }\n\n    handlePopUp(id){\n        this.props.history.push('/items/'+this.state.items[id]['id'])\n    }\n\n    columns = [\n        {\n            id:1,\n            name:\"Name\",\n            prop: 'name'\n        },\n        {\n            id:2,\n            name:\"Catagory\",\n            prop: 'catagory_str'\n        },\n        {\n            id:3,\n            name:\"Price\",\n            prop: 'sales_price'\n        },\n        ,\n        {\n            id:4,\n            name:\"Stock\",\n            prop: 'stock'\n        },\n        {\n            id:5,\n            name:\"Sold\",\n            prop: 'sold'\n        }      \n    ]\n\n    render() {\n        const list =<div><h1>Item List</h1> <List data={this.state.items} header={this.columns} update={this.update_table} popUp={this.handlePopUp} page={this.state.page} ></List></div>\n        const catagories = this.state.item_catagories\n        const main_render = \n        <div>\n        <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n                            <Grid item xs={3} >\n                            <Button  variant=\"contained\" size='small' color=\"primary\" onClick={()=> {this.back()}}>\n                                <ArrowLeftIcon></ArrowLeftIcon>\n                                Back\n                            </Button>\n                            </Grid>\n                            <Grid item xs={5}>\n\n                            </Grid>\n                            <Grid item xs={3}>\n                            <Button variant=\"contained\" color=\"secondary\">\n                            <RefreshIcon/>&nbsp;&nbsp;&nbsp;Refresh Filters\n                            </Button>\n                            </Grid>\n                        </Grid>\n                        <Grid container justify='center'>\n                            <Grid item md={4}>\n                                <table cellSpacing={5} cellPadding={5} >\n                                    <tbody>\n                                        <tr>\n                                            <td>\n                                            <h3><b>Select Data To Include On Export</b></h3>\n                                            </td>\n                                        </tr>\n                                            {this.state.fields.map(\n                                                field =>(\n                                                    <tr key={field['key']}>\n                                                    <td key={field['key']}> \n                                                    <FormControlLabel\n                                                      control={<Switch checked={this.state.update[field['key']]} onChange={this.handleChange} name={field['key']} />}\n                                                      label={field['str']}\n                                                    />\n                                                    </td>\n                                                    </tr>\n                                                )\n                                            )}\n                                        <tr>\n                                            <td>\n                                            <Button variant=\"contained\" color=\"secondary\" onClick={()=> {this.exportData()}}>Export Data</Button>\n                                            </td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </Grid>\n                            <Grid item md={4}>\n                                <table cellSpacing={5} cellPadding={5}>\n                                    <tbody>\n                                    <tr>\n                                        <td>\n                                        <h3><b>Additional Filters</b></h3>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                        <TextField id=\"name\"  size='small' variant=\"outlined\"name=\"name\" defaultValue={this.state.filters.name} onChange={this.handleFilterChange} label=\"Name\" />\n                                        </td>\n                                        <td>\n                                        <FormControlLabel\n                                                      control={<Switch checked={this.state.filters.exact_name} onChange={this.handleFilterChange} name='exact_name' />}\n                                                      label={this.state.filters.exact_name ? \"Match Exactly\":\"Partial Match\"}\n                                                    />\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td colSpan={2}>\n                                            Weight Filter\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                        <TextField id=\"weight_from\" size='small'  variant=\"outlined\"  defaultValue={this.state.filters.weight_from} name=\"weight_from\" type='number' onChange={this.handleFilterChange} label=\"Start Weight\" />\n                                        </td>\n                                        <td>\n                                        <TextField id=\"weight_upto\"  size='small' variant=\"outlined\" name=\"weight_upto\" type='number'  defaultValue={this.state.filters.weight_upto} onChange={this.handleFilterChange} label=\"Start Upto\" />\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td colSpan={2}>\n                                            Average Cost Price Filter\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                    <td>\n                                        <TextField id=\"average_cost_price_from\" size='small' variant=\"outlined\" name=\"average_cost_price_from\"  defaultValue={this.state.filters.average_cost_price_from} type='number' onChange={this.handleFilterChange} label=\"ACP From\" />\n                                        </td>\n                                        <td>\n                                        <TextField id=\"average_cost_price_upto\"size='small'  variant=\"outlined\" name=\"average_cost_price_upto\" type='number'   defaultValue={this.state.filters.average_cost_price_upto} onChange={this.handleFilterChange} label=\"ACP Upto\" />\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            Catagory\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td colSpan={2}>\n                                        <Select fullWidth name='catagory' id=\"catagory\" defaultValue={this.state.filters.catagory} onChange={this.handleFilterChange} required >\n                                        {catagories.map(\n                                            x => (\n                                            <MenuItem key={x.id} value={parseInt(x.id)}>{x.name}</MenuItem>\n                                            )\n                                        )}\n                                    </Select>\n                                        </td>\n                                    </tr>\n\n                                    \n                                    <tr>\n                                        <td colSpan={2}>\n                                            Stock\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                    <td>\n                                        <TextField id=\"stock_from\" variant=\"outlined\" size='small'  name=\"stock_from\" type='number' defaultValue={this.state.filters.stock_from} onChange={this.handleFilterChange} label=\"Stock From\" />\n                                        </td>\n                                        <td>\n                                        <TextField id=\"stock_upto\" variant=\"outlined\" size='small'  name=\"stock_upto\" type='number' defaultValue={this.state.filters.stock_upto} onChange={this.handleFilterChange} label=\"Stock Upto\" />\n                                        </td>\n                                    </tr>\n\n                                    <tr>\n                                        <td colSpan={2}>\n                                            Sales Price Filter\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                    <td>\n                                        <TextField id=\"sales_price_from\" variant=\"outlined\" size='small'  name=\"sales_price_from\" type='number' defaultValue={this.state.filters.sales_price_from} onChange={this.handleFilterChange} label=\"Sales Price From\" />\n                                        </td>\n                                        <td>\n                                        <TextField id=\"sales_price_upto\" variant=\"outlined\" size='small'  name=\"sales_price_upto\" type='number' onChange={this.handleFilterChange}  defaultValue={this.state.filters.sales_price_upto} label=\"Sales Price Upto\" />\n                                        </td>\n                                    </tr>\n                                    \n                                    <tr>\n                                        <td colSpan={2}>\n                                            Sold Filter\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                    <td>\n                                        <TextField id=\"sold_from\" size='small' variant=\"outlined\"  size='small'  name=\"sold_from\" type='number' defaultValue={this.state.filters.sold_from} onChange={this.handleFilterChange} label=\"Sold From\" />\n                                        </td>\n                                        <td>\n                                        <TextField id=\"sold_upto\" variant=\"outlined\" name=\"sold_upto\" size='small'  type='number' onChange={this.handleFilterChange} defaultValue={this.state.filters.sold_upto} label=\"Sold Upto\" />\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td colSpan={2}>\n                                                <Button  variant=\"contained\" color=\"primary\" onClick={() =>this.update_table(0)} >\n                                                    Show Filtered Data\n                                                </Button>\n                                        </td>\n                                    </tr>\n                                    \n                                    </tbody>\n                                </table>\n                            </Grid>\n                        </Grid>\n                        <Grid container justify='center'>\n                            <Grid item md={8}>\n                            {this.state.showItems ? this.state.loadingTable ? <LoadingIcon></LoadingIcon> : list :<span></span> }\n\n                            </Grid>\n                        </Grid>\n\n                        </div>\n        return (\n            <div>\n            {this.state.loading? <Loading></Loading> : main_render}\n        </div>\n        )\n    }\n}\n\nexport default ExportItems","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport Login from './users/login';\nimport Logout from './users/logout';\nimport VendorCreation from './vendors/vendorCreation';\nimport UserCreation from './users/userCreation';\nimport { BrowserRouter as Router, Switch , Route} from 'react-router-dom';\nimport Users from './users';\nimport Vendors from './vendors/index';\nimport Customers from './customer/index';\nimport CustomerCreation from './customer/customerCreation'\nimport PurchaseOrders from './purchaseOrder/index'\nimport PurchaseOrderCreation from './purchaseOrder/purchaseOrderCreation'\nimport Invoices from './invoices/index';\nimport InvoiceCreation from './invoices/invoiceCreation';\nimport Discounts from './discounts/index';\nimport DiscountCreation from './discounts/discountCreation'\nimport Taxes from './taxes/index';\nimport TaxCreation from './taxes/taxCreation'\nimport Items from './items/index'\nimport ItemCreation from './items/itemCreation'\nimport ItemCatagories from './itemCatagories/index';\nimport ItemCatagoryCreation from './itemCatagories/itemCreation';\nimport Places from './placement/index'\nimport PlaceCreation from './placement/placeCreation'\n\nimport { useSelector } from \"react-redux\";\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\n\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport PeopleIcon from '@material-ui/icons/People';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\nimport FeaturedPlayListIcon from '@material-ui/icons/FeaturedPlayList';\nimport SettingsIcon from '@material-ui/icons/Settings';\n\nimport CustomerList from './customer/customerList'\nimport DiscountList from './discounts/discountList'\nimport InvoiceListing from './invoices/invoiceListing'\nimport ItemCatagoryList from './itemCatagories/itemCatagoryList'\nimport ItemList from './items/itemList'\nimport PlaceList from './placement/placeList'\nimport PurchaseOrderList  from './purchaseOrder/purchaseOrderList'\nimport TaxList from './taxes/taxList'\nimport UserList from './users/userList'\nimport VendorList from './vendors/vendorList'\nimport Export from './export/index'\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport ExportPurchaseOrders from './export/exportPurchaseOrders';\nimport ExportInvoices from './export/exportInvoices';\nimport ExportItems from './export/exportItems';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24,\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    textAlign: 'center',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nfunction Dashboard(props) {\n  \n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n\n  };\n\n  const user = useSelector(state => state.user);\n  var isDashboard = false\n  if( (window.location.pathname) ==='/'){\n    isDashboard = true\n  }\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            Mandala IMS\n          </Typography>\n          <IconButton color=\"inherit\"  onClick={()=> {window.location.href=\"/logout\"}}>\n          <ExitToAppIcon/>\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <Typography>\n            {user.data.first_name} <span>  </span> {user.data.last_name}<br></br>\n            {user.data.user_type}\n          </Typography>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Router>\n        <Divider />\n        <List>\n    <ListItem button onClick={()=> {window.location.href=\"/\"}}>\n      <ListItemIcon>\n        <DashboardIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Dashboard\" />\n    </ListItem>\n    <ListItem button  onClick={()=> {window.location.href=\"/purchaseorders\"}}>\n      <ListItemIcon>\n        <ShoppingCartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Purchase Orders\" />\n    </ListItem>\n    <ListItem button onClick={()=> {window.location.href=\"/vendors\"}}>\n      <ListItemIcon>\n        <PeopleIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Vendors\" />\n    </ListItem>\n    <ListItem button onClick={()=> {window.location.href=\"/invoices\"}}>\n      <ListItemIcon>\n        <DescriptionIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Invoices\" />\n    </ListItem>\n    <ListItem button onClick={()=> {window.location.href=\"/customers\"}}>\n      <ListItemIcon>\n        <MonetizationOnIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Customers\" />\n    </ListItem>\n    <ListItem button onClick={()=> {window.location.href=\"/items\"}}>\n      <ListItemIcon>\n      <FeaturedPlayListIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Items\" />\n    </ListItem>\n        </List>\n        <Divider />\n        <List>\n    <ListItem button onClick={()=> {window.location.href=\"/places\"}}>\n      <ListItemIcon>\n      <SettingsIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Item Managements\" />\n    </ListItem>\n    <ListItem button onClick={()=> {window.location.href=\"/discounts\"}}>\n      <ListItemIcon>\n      <SettingsIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Discounts\" />\n    </ListItem>\n    <ListItem button onClick={()=> {window.location.href=\"/taxes\"}}>\n      <ListItemIcon>\n      <SettingsIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Taxes\" />\n    </ListItem>\n    <ListItem button onClick={()=> {window.location.href=\"/itemcatagories\"}}>\n      <ListItemIcon>\n      <SettingsIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Item Catagories\" />\n    </ListItem>\n    <ListItem button onClick={()=> {window.location.href=\"/users\"}}>\n      <ListItemIcon>\n      <SettingsIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Staff Management\" />\n    </ListItem>\n    <ListItem button onClick={()=> {window.location.href=\"/export\"}}>\n      <ListItemIcon>\n      <GetAppIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Export Data\" />\n    </ListItem>\n        </List>\n        </Router>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container className={classes.container}>\n          <Grid container justify=\"center\">\n            <Grid item xs={12} >\n              {/* {isDashboard ? <Hello></Hello>: <span></span>} */}\n            <Router>\n            <Switch>\n                    <Route path='/login' component={Login}></Route>\n                    <Route path='/logout' component={Logout}></Route>\n                    <Route path='/users/create' component = {UserCreation}></Route>\n                    <Route path='/users/:id' component = {UserList}></Route>\n                    <Route path='/users' component = {Users}></Route>\n\n                    <Route path='/vendors/create' component = {VendorCreation}></Route>\n                    <Route path='/vendors/:id' component = {VendorList}></Route>\n                    <Route path='/vendors' component = {Vendors}></Route>\n                    \n                    <Route path='/customers/create' component = {CustomerCreation}></Route>\n                    <Route path='/customers/:id' component = {CustomerList}></Route>\n                    <Route path='/customers' component = {Customers}></Route>\n\n                    <Route path='/purchaseorders/create' component = {PurchaseOrderCreation}></Route>\n                    <Route path='/purchaseorders/:id' component = {PurchaseOrderList}></Route>\n                    <Route path='/purchaseorders' component = {PurchaseOrders}></Route>\n                    \n                    <Route path='/invoices/create' component = {InvoiceCreation}></Route>\n                    <Route path='/invoices/:id' component = {InvoiceListing}></Route>\n                    <Route path='/invoices' component = {Invoices}></Route>\n\n                    <Route path='/discounts/create' component= {DiscountCreation}></Route>\n                    <Route path='/discounts/:id' component= {DiscountList}></Route>\n                    <Route path='/discounts' component= {Discounts}></Route>\n                    \n                    <Route path='/taxes/create' component= {TaxCreation}></Route>\n                    <Route path='/taxes/:id' component= {TaxList}></Route>\n                    <Route path='/taxes' component= {Taxes}></Route>\n                    \n                    <Route path='/items/create' component= {ItemCreation}></Route>\n                    <Route path='/items/:id' component= {ItemList}></Route>\n                    <Route path='/items' component= {Items}></Route>\n\n                    <Route path='/itemcatagories/create' component= {ItemCatagoryCreation}></Route>\n                    <Route path='/itemcatagories/:id' component= {ItemCatagoryList}></Route>\n                    <Route path='/itemcatagories' component= {ItemCatagories}></Route>\n\n                    <Route path='/places/create' component= {PlaceCreation}></Route>\n                    <Route path='/places/:id' component= {PlaceList}></Route>\n                    <Route path='/places' component= {Places}></Route>\n\n                    <Route path='/export/purchaseorders' component={ExportPurchaseOrders}></Route>\n                    <Route path='/export/invoices' component={ExportInvoices}></Route>\n                    <Route path='/export/items' component={ExportItems}></Route>\n                    <Route path='/export' component= {Export}></Route>\n                    </Switch>\n            </Router>\n            </Grid>            \n          </Grid>\n        </Container>\n      </main>\n    </div>\n  );\n}\n\nexport default Dashboard","import React, { Component } from 'react'\nimport {  connect } from 'react-redux';\nimport { getCurrentUser } from '../api/user';\nimport { loggedIn } from '../actions';\nimport swal from 'sweetalert';\nimport Dashboard from './dashboard'\nimport LoadingIcon from './loading'\nimport Login from './users/login'\n\nclass Index extends Component {\n    constructor (props){\n        super(props)\n        this.state = {\n            'loading':true\n        }\n        this.redirect = this.redirect.bind(this)\n    }\n\n    redirect(link){\n      this.props.history.push(link)\n    }\n\n    async componentDidMount() { \n        await getCurrentUser().then(data => {\n            if (data){\n              \n              console.log(data)\n                if (data['status'])\n                {\n                    this.props.dispatch(loggedIn(data['user_data']))\n                }\n                this.setState({\n                  'loading':false\n                })\n            }\n            else{\n                swal('Cannot connet to the server, make sure you have a stable internet connection.')\n            }\n        })\n    }\n    render() {\n        var render_x=<LoadingIcon></LoadingIcon>;\n        if(this.state.loading){\n          render_x = <LoadingIcon></LoadingIcon>\n        }\n        else{\n          if (this.props.user.isLoggedIn){\n            render_x = <Dashboard redirect={this.redirect} ></Dashboard>\n          }\n          else{\n            render_x = <Login></Login>\n          }\n        }\n        \n        return (\n          <div>\n            {render_x}\n          </div>\n          \n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    user: state.user\n})\n\nexport default connect(mapStateToProps)(Index)","import React from 'react';\nimport './App.css';\nimport Index from './components';\n\n\nfunction  App() {\n  return (\n    <div>\n      <Index></Index>\n    </div>\n  );\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","var initState = {\n    'isLoggedIn':false,\n    'data':{}\n}\nconst userReducer = (state=initState, action) => {\n    switch(action.type){\n        case 'logout':\n            state.data = {}\n            state.isLoggedIn = false;\n            return{\n                isLoggedIn: state.isLoggedIn\n            }\n        case 'loggedIn':\n            state.data = action.payload\n            state.isLoggedIn = true;\n            return {\n                data: state.data,\n                isLoggedIn: state.isLoggedIn\n            }\n        default:\n            return state;\n    }\n\n};\n\nexport default userReducer","var initState = {\n    'data':{}\n}\nconst usersReducer = (state=initState, action) => {\n    switch(action.type){\n        case 'setUsers':\n            state.users = action.payload\n            return{\n                users: state.users\n            }\n        default:\n            return state;\n    }\n\n};\n\nexport default usersReducer","import { combineReducers } from 'redux';\nimport userReducer from './userReducer';\nimport usersReducer from './usersReducer';\n\nconst rootReducers = combineReducers ({\n    user: userReducer,\n    users : usersReducer\n})\n\nexport default rootReducers","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { applyMiddleware, createStore } from 'redux';\nimport rootReducer from './reducers';\nimport { Provider } from 'react-redux';\nimport thunkMiddleware from 'redux-thunk';\n\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.getElementById('root')\n    );\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"popUp_loader__ji3PT\",\"spin\":\"popUp_spin__1nLou\",\"dropbtn\":\"popUp_dropbtn__1fyGN\",\"dropdown\":\"popUp_dropdown__2vgTr\",\"dropdown_content\":\"popUp_dropdown_content__1rTux\"};"],"sourceRoot":""}