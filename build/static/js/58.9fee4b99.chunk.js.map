{"version":3,"sources":["App/components/SearchFilters/UsersFilter.js","Pages/Users/Users.js","App/components/Reusables/Loader.js","App/components/Reusables/IsEmpty.js","App/components/Reusables/Paging.js","App/components/Reusables/Spinner.js","helpers/getStartEnd.js","assets/images/spinner.gif","helpers/getSearchFilterObject.js","api/userManagement/roles.js","api/userManagement/users.js","App/components/SearchFilters/VendorsFilter.js"],"names":["filterDataModel","name","role","status","withRouter","props","React","useState","showFilters","setShowFilters","rolesArr","setRolesArr","filterData","setFilterData","useEffect","queryString","location","search","queryObj","URLSearchParams","get","getRoles","then","res","json","roles","catch","err","console","log","_filterDataChange","e","target","value","type","parseFloat","_search","queryParams","Object","keys","forEach","key","append","toString","history","replace","NotificationDot","style","background","width","height","borderRadius","position","top","left","className","showNotificationDot","isEmpty","Card","Header","onKeyDown","display","flex","Form","Control","onChange","size","placeholder","onClick","padding","margin","marginLeft","Collapse","in","id","Body","Row","Col","md","Label","as","map","instance","index","justifyContent","connect","state","auth","loading","setLoading","usersArr","setUsersArr","showModal","user","toggleActivityData","setToggleActivityData","userId","roleId","changeRoleData","setChangeRoleData","instanceCount","setInstanceCount","controller","AbortController","requestJson","getUsersSearchFilterObject","getStartEnd","JSON","stringify","getUsers","signal","users","count","Jhilikka","fire","icon","title","error","a","abort","_updateRole","assignRole","tempArr","selectedRole","find","parseInt","i","role_str","_toggleActivity","is_active","toggleUserActivity","UsersList","userProfile","profile","scope","Image","src","profile_image","DEMO","SERVER_URL","thumbnail","minWidth","objectFit","alt","push","cursor","color","user_id","email","_triggerToggleActivityModal","OverlayTrigger","placement","overlay","Tooltip","_triggerChangeRoleModal","Table","striped","responsive","IsEmpty","Spinner","Paging","Modal","border","boxShadow","show","onHide","closeButton","Title","paddingLeft","fontSize","fontWeight","flexDirection","Button","variant","centered","Group","disabled","idex","Loader","textAlign","marginTop","children","start","end","indexQuotient","instancePerPage","activePageIndex","setActivePageIndex","set","_pageNoClick","pageIndex","_change","noOfPages","Math","ceil","dynamicPageArr","maxWidth","backgroundColor","Prepend","Text","backgrondColor","marginBottom","Prev","el","Item","active","Ellipsis","Next","pdisplay","paddingBottom","spinner","module","exports","isQueryStringSearchable","paramKeys","includes","length","getItemsSearchFilterObject","searchFilterObject","itemName","matchExactly","barcode","category","weightFrom","weightUpto","cpFrom","cpUpto","stockFrom","stockUpto","spFrom","spUpto","soldFrom","soldUpto","filter","filters","is_applied_name","exact_name","is_applied_weight_from","weight_from","is_applied_weight_upto","weight_upto","is_applied_average_cost_price_from","average_cost_price_from","is_applied_average_cost_price_upto","average_cost_price_upto","is_applied_stock_from","stock_from","is_applied_stock_upto","stock_upto","is_applied_sold_from","sold_from","is_applied_sold_upto","sold_upto","is_applied_sales_price_from","sales_price_from","is_applied_sales_price_upto","sales_price_upto","is_applied_category","getInvoicesSearchFilterObject","invoiceNo","dateFrom","Date","dateUpto","customer","invoiceStatus","isActive","isCanceled","toISOString","getPurchaseOrdersSearchFilterObject","vendor","purchaseOrderStatus","getAccountsSearchFilterObject","accountName","childOf","currentAmountFrom","currentAmountUpto","creditsFrom","creditsUpto","closed","current_amount","current_amount_from","current_amount_upto","credits","credits_from","credits_upto","parent","parent_id","account_type","header","getVendorsSearchFilterObject","first_name","getCustomersSearchFilterObject","getLedgerEntriesSearchFilterObject","bundleId","account","isAdd","amountFrom","amountUpto","paymentMethod","bundle_id","apply_is_add","is_add","amount","amount_from","amount_upto","payment_method","getGiftCardsSearchFilterObject","code","discountType","rateFrom","rateUpto","countUsedFrom","countUsedUpto","hasUniqueCodes","isLimited","discount_type","apply_limited","is_limited","apply_has_unique_codes","has_unique_codes","rate","rate_from","rate_upto","count_used","count_used_from","count_used_upto","getGiftCardReedemsSearchFilterObject","giftcardId","valueFrom","valueUpto","getGiftCardCategoriesSearchFilterObject","enabled","getDiscountsSearchFilterObject","getTaxesSearchFilterObject","taxType","tax_type","getAuthLogsSearchFilterObject","action","getActivityLogsFilter","model","objectId","objectName","role_id","data","baseRequest","alert","getRole","deleteRole","createRole","updateRole","getPowers","createUser","updateUser","getUser","vendorName","_resetFilters","borderLeft"],"mappings":"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","file":"static/js/58.9fee4b99.chunk.js","sourcesContent":["import React from 'react';\n\nimport { Row, Col, Card, Form, Collapse } from 'react-bootstrap';\n\nimport { withRouter } from 'react-router-dom';\nimport isEmpty from '../../../validation/isEmpty';\nimport { getRoles } from '../../../api/userManagement/roles';\n\n\nconst filterDataModel = {\n    name: '',\n    role: '',\n    status: ''\n}\n\nfunction UsersFilter(props) {\n\n    const [showFilters, setShowFilters] = React.useState(false);\n    const [rolesArr, setRolesArr] = React.useState([])\n    const [filterData, setFilterData] = React.useState({ ...filterDataModel });\n\n    //extract the query params to fill the filter's form\n    React.useEffect(() => {\n        const queryString = props.location.search;\n        const queryObj = new URLSearchParams(queryString) || '';\n        let name = queryObj.get('name') || '';\n        let role = queryObj.get('role') || '';\n        let status = queryObj.get('status') || '';\n\n        setFilterData({\n            ...filterData,\n            name,\n            role,\n            status,\n        })\n\n\n        getRoles({ \"action\": \"get\", \"filter\": \"none\", \"start\": 0, \"end\": 999999 })\n            .then(res => {\n                // console.log(res);\n                if (res.json.status) {\n                    setRolesArr(res.json.roles)\n                }\n            })\n            .catch(err => console.log(err))\n    }, [])\n\n\n\n\n\n    const _filterDataChange = (e) => {\n        const { name, value, type } = e.target;\n        setFilterData({\n            ...filterData,\n            [name]: (type === 'number' ? parseFloat(value) : value) || ''\n        })\n    }\n\n\n    const _keypress = (e) => {\n        if (e.key === 'Enter') {\n            _search();\n        }\n    }\n\n\n    const _search = () => {\n        //append the query params\n        let queryParams = new URLSearchParams();\n        Object.keys(filterData).forEach(key => {\n            console.log('----------------------------------')\n            if (filterData[key]) {\n                queryParams.append(key, filterData[key])\n            }\n        });\n        let queryString = queryParams.toString();\n        console.log(queryString)\n\n        props.history.replace({ search: queryString });\n    }\n\n\n    const _resetFilters = () => {\n        setFilterData({ ...filterDataModel });\n        props.history.replace();\n    }\n\n    //check if there are extra filters\n    const NotificationDot = <div style={{\n        background: \"#a6c0ce\",\n        width: \"12px\",\n        height: \"12px\",\n        borderRadius: \"50%\",\n        position: \"relative\",\n        top: \"-5px\",\n        left: \"-7px\",\n    }}\n        className=\"itemsSearchFilterNotificationDot\"\n    ></div>\n\n    let showNotificationDot = false;\n    for (let key in filterData) {\n        if (key !== 'name') {\n            if (!isEmpty((filterData[key] || '').toString())) {\n                console.log(key)\n                showNotificationDot = true;\n            }\n        }\n    }\n\n    return (\n        <>\n            <Card.Header className=\"filterInputs\" onKeyDown={_keypress}>\n                <div className=\"filterHeader\" >\n                    <div style={{ display: 'flex', flex: 9 }}>\n                        <Form.Control\n                            name=\"name\"\n                            value={filterData.name}\n                            onChange={_filterDataChange}\n                            size=\"sm\"\n                            type=\"text\"\n                            placeholder=\"User Name\"\n                            className=\"mainSearchBox\"\n                        />\n\n                        <button\n                            className=\"btn btn-secondary btn-sm\"\n                            onClick={_search}\n                            style={{ padding: '4px 8px', margin: 0, marginLeft: '2px' }}\n                        > <i className=\"feather icon-search text-c-white f-8 mr-1\" />Search</button>\n                    </div>\n\n                    <button\n                        className=\"btn btn-secondary btn-sm showFilterButton\"\n                        onClick={() => setShowFilters(!showFilters)}\n\n                    >\n                        <div className=\"filterWrapper\">\n                            <i className=\"feather icon-sliders text-c-white f-8\" />\n                        </div>\n                        <span>{showFilters ? \"Hide\" : \"Show\"} Filters\n                        </span>\n\n                    </button>\n                    {showNotificationDot ? NotificationDot : null}\n\n                </div>\n\n                <Collapse in={showFilters}>\n                    <div id=\"basic-collapse\" >\n                        <Card.Body className=\"filterBox pr-3 pl-3 pb-0\">\n                            <Row>\n\n                                <Col md={3}>\n                                    <Form.Label>Role</Form.Label>\n                                    <Form.Control name='role' value={filterData.role} onChange={_filterDataChange} as=\"select\">\n\n                                        <option value='' >Not Selected</option>\n                                        {rolesArr.map((instance, index) => {\n                                            return <option key={index} value={instance.id} >{instance.name}</option>\n                                        })}\n\n                                    </Form.Control>\n                                </Col>\n\n\n                                <Col md={3}>\n                                    <Form.Label>Status</Form.Label>\n                                    <Form.Control name='status' value={filterData.status} onChange={_filterDataChange} as=\"select\">\n\n                                        <option value='' >Not Selected</option>\n                                        <option value='true'>Active</option>\n                                        <option value='false'>Deactivated</option>\n                                    </Form.Control>\n                                </Col>\n\n                            </Row>\n                            <br />\n                            <Row style={{ display: 'flex', justifyContent: 'flex-end' }} >\n                                <button\n                                    className=\"btn btn-outline-secondary btn-sm mr-2\"\n                                    onClick={_resetFilters}\n                                    style={{ padding: '4px 8px', margin: 0, marginLeft: '2px' }}\n                                >Reset Filters</button>\n                                <button\n                                    className=\"btn btn-secondary btn-sm mr-4\"\n                                    onClick={_search}\n                                    style={{ padding: '4px 8px', margin: 0, marginLeft: '2px' }}\n                                >Apply Filters</button>\n                            </Row>\n                        </Card.Body>\n\n                    </div>\n                </Collapse>\n            </Card.Header>\n        </>\n    )\n}\n\nexport default withRouter(UsersFilter);","import React from 'react';\nimport { Row, Col, Card, Table, Modal, Button, OverlayTrigger, Tooltip, Image, Form } from 'react-bootstrap';\n\nimport Aux from \"../../hoc/_Aux\";\nimport DEMO from '../../globals/constant';\n\nimport IsEmpty from '../../App/components/Reusables/IsEmpty';\nimport Loader from '../../App/components/Reusables/Loader';\nimport Jhilikka from '../../App/components/Reusables/Jhilikka';\nimport isEmpty from '../../validation/isEmpty';\nimport Spinner from '../../App/components/Reusables/Spinner';\nimport Paging from '../../App/components/Reusables/Paging';\nimport VendorsFilter from '../../App/components/SearchFilters/VendorsFilter';\nimport { getVendorsSearchFilterObject, getUsersSearchFilterObject } from '../../helpers/getSearchFilterObject';\nimport { getStartEnd } from '../../helpers/getStartEnd';\nimport { getUsers, toggleUserActivity } from '../../api/userManagement/users';\nimport { getRoles, assignRole } from '../../api/userManagement/roles';\nimport { connect } from 'react-redux';\nimport UsersFilter from '../../App/components/SearchFilters/UsersFilter';\n\nconst Users = (props) => {\n    const [loading, setLoading] = React.useState(true)\n    const [usersArr, setUsersArr] = React.useState([]);\n    const [rolesArr, setRolesArr] = React.useState([])\n    const [toggleActivityData, setToggleActivityData] = React.useState({ showModal: false, user: {} })\n    const [changeRoleData, setChangeRoleData] = React.useState({ userId: null, roleId: '', showModal: false })\n    const [instanceCount, setInstanceCount] = React.useState(0)\n\n\n    React.useEffect(() => {\n        const controller = new AbortController();\n        const requestJson = {\n            \"action\": \"get\",\n            \"filter\": \"none\",\n            ...getUsersSearchFilterObject(props),\n            ...getStartEnd(props),\n        }\n        console.log(JSON.stringify(requestJson))\n        getUsers(requestJson, controller.signal)\n            .then((res) => {\n                console.log(res);\n                if (res.json.status) {\n                    setUsersArr(res.json.users);\n                    setInstanceCount(res.json.count)\n                    setLoading(false);\n                } else { Jhilikka.fire({ icon: 'error', title: res.json.error, background: '#ffe5de' }) }\n            })\n            .catch((err) => {\n                console.log(err)\n            });\n        getRoles({ \"action\": \"get\", \"filter\": \"none\", \"start\": 0, \"end\": 999999 }, controller.signal)\n            .then(async (res) => {\n                console.log(res)\n                if (res.json.status) {\n                    await setRolesArr(res.json.roles);\n                } else { Jhilikka.fire({ icon: 'error', title: res.json.error, background: '#ffe5de' }) }\n            }).catch((err) => {\n                console.log(err)\n            });\n        return () => controller.abort();\n    }, []);\n\n\n\n    const _triggerToggleActivityModal = (user) => {\n        setToggleActivityData({ showModal: true, user: user });\n    }\n\n    const _triggerChangeRoleModal = (userId) => {\n        setChangeRoleData({ ...changeRoleData, userId: userId, showModal: !changeRoleData.showModal })\n    }\n\n    const _roleChange = (e) => {\n        console.log(e.target.value)\n        setChangeRoleData({ ...changeRoleData, roleId: e.target.value })\n    }\n    const _updateRole = async () => {\n        const requestJson = {\n            'action': 'assign',\n            'user_id': changeRoleData.userId,\n            'role_id': changeRoleData.roleId\n        }\n        console.log(JSON.stringify(requestJson))\n        assignRole(requestJson)\n            .then(res => {\n                console.log(res)\n                if (res.json.status) {\n                    let tempArr = [...usersArr];\n                    console.log(rolesArr)\n                    const selectedRole = rolesArr.find(role => {\n                        return role.id === parseInt(changeRoleData.roleId)\n                    });\n                    for (let i in tempArr) {\n                        if (tempArr[i].id === changeRoleData.userId) {\n                            tempArr[i].role_str = selectedRole.name;\n                            tempArr[i].role = selectedRole.id;\n                        }\n                    }\n                    setUsersArr(tempArr)\n                    setChangeRoleData({ ...changeRoleData, showModal: false, userId: null, roleId: '' });\n                    Jhilikka.fire({ icon: 'success', title: `Role of the user changed successfully!`, background: '#dffff0' })\n                } else { Jhilikka.fire({ icon: 'error', title: res.json.error, background: '#ffe5de' }) }\n\n            })\n    }\n\n    const _toggleActivity = async () => {\n        const user = toggleActivityData.user\n        const requestJson = {\n            'action': user.is_active ? 'deactivate' : 'activate',\n            'user_id': user.id\n        }\n        console.log(requestJson)\n        toggleUserActivity(requestJson)\n            .then(res => {\n                console.log(res);\n                if (res.json.status) {\n                    let tempArr = [...usersArr];\n                    for (let i in tempArr) {\n                        if (tempArr[i].id === user.id) {\n                            tempArr[i].is_active = !user.is_active;\n                        }\n                    }\n                    setUsersArr(tempArr)\n                    setToggleActivityData({ ...setToggleActivityData, showModal: false, user: {} })\n                    Jhilikka.fire({ icon: 'success', title: `User ${user.is_active ? 'deactivated' : 'activated'} successfully!`, background: '#dffff0' })\n                } else { Jhilikka.fire({ icon: 'error', title: res.json.error, background: '#ffe5de' }) }\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n\n    const UsersList = usersArr.map((user, index) => {\n        const userProfile = user.profile ? user.profile : {};\n        return (\n            <tr key={index}>\n                <th scope=\"row\">{user.id}</th>\n                <td className=\"imageTd\">\n                    <Image\n                        src={userProfile.profile_image ? `${DEMO.SERVER_URL}${userProfile.profile_image}` : \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTcZsL6PVn0SNiabAKz7js0QknS2ilJam19QQ&usqp=CAU\"}\n                        thumbnail={true}\n                        style={{ height: '46px', minWidth: '46px', width: '46px', objectFit: 'cover' }}\n                        alt=\"...\" />\n                </td>\n                <td\n                    onClick={() => {\n                        props.history.push('/user/' + user.id)\n                    }}\n                    style={{ cursor: 'pointer', color: '#55588b' }}>{user.name}{parseInt(user.id) === props.auth.user.user_id ? \" (You)\" : null}</td>\n                <td>{user.role_str}</td>\n                <td>{user.email}</td>\n                <td>{user.is_active ? 'Yes' : 'No'}</td>\n                <td>\n                    <span\n                        className='rowIconButton'\n                        onClick={() => _triggerToggleActivityModal(user)}\n                    >\n                        <OverlayTrigger\n                            key={'top'}\n                            placement={'top'}\n                            overlay={\n                                <Tooltip id={`tooltip-${'top'}`}>{user.is_active ? 'Deactivate' : 'Activate'} User</Tooltip>\n                            }\n                        >\n                            <i\n                                className={user.is_active ? \"feather icon-user-x text-c-red f-19 m-0\" : \"feather icon-user-check text-c-blue f-19 m-r-5\"}\n                                style={{ cursor: 'pointer' }}\n                            />\n                        </OverlayTrigger>\n                    </span>\n                    <span\n                        className='rowIconButton'\n                        onClick={() => _triggerChangeRoleModal(user.id)}\n                    >\n                        <OverlayTrigger\n                            key={'top'}\n                            placement={'top'}\n                            overlay={<Tooltip id={`tooltip-top`}>Assign different role</Tooltip>}\n                        >\n                            <i\n                                className={\"feather icon-user-plus text-c-blue f-19 m-0\"}\n                                style={{ cursor: 'pointer' }}\n                            />\n                        </OverlayTrigger>\n                    </span>\n\n                </td>\n            </tr>\n        )\n    })\n\n    return (\n        <Aux>\n\n            <Row className=\"d-flex justify-content-between pageHead\" >\n                <h4 className=\"m-b-10\" >Users</h4>\n                <div>\n                    <button\n                        className=\"btn btn-primary btn-sm shadow-2 mb-4\"\n                        onClick={() => props.history.push(`user/create`)}\n                    > <i className=\"fa fa-plus text-c-white f-15 m-r-5\" />Add New</button>\n                </div>\n\n            </Row>\n            <Row>\n                <Col>\n                    <Card>\n                        <Card.Body>\n                            <UsersFilter />\n                            <Table striped responsive>\n                                <thead>\n                                    <tr>\n                                        <th>#</th>\n                                        <th>Photo</th>\n                                        <th>Name</th>\n                                        <th>Role</th>\n                                        <th>Email</th>\n                                        <th>Active</th>\n                                        <th></th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {UsersList || ''}\n                                </tbody>\n                            </Table>\n                            {isEmpty(usersArr) && !loading ? <><IsEmpty>Data not available</IsEmpty><br /><br /></> : ''}\n                            {loading ? <Spinner /> : null}\n                            <Paging instanceCount={instanceCount} />\n                        </Card.Body>\n                    </Card >\n\n\n\n                    {/*--------------- Activate and Deactivate of user---------------- */}\n                    <Modal\n                        style={{ border: 'none', color: '#3d4075', boxShadow: '0 0 10px red' }}\n                        show={toggleActivityData.showModal}\n                        onHide={() => setToggleActivityData({ ...toggleActivityData, showModal: false, user: {} })}\n                    >\n                        <Modal.Header closeButton style={{ margin: 'auto 5px' }}>\n                            <Modal.Title style={{ paddingLeft: '15px', color: '#3d4075', fontSize: '1.4em', fontWeight: 'bold' }}>Are you sure?</Modal.Title>\n                        </Modal.Header>\n\n                        <Modal.Body\n                            style={{ paddingLeft: '30px' }}\n                        >\n                            User will be {toggleActivityData.user.is_active ? 'deactivated' : 'activated'}\n                        </Modal.Body>\n\n\n                        <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'flex-end', padding: '10px' }}>\n                            <Button variant=\"secondary\" onClick={() => setToggleActivityData({ ...toggleActivityData, showModal: false, user: {} })}>\n                                Cancel\n                            </Button>\n                            {toggleActivityData.user.is_active ?\n                                <Button variant=\"danger\" onClick={_toggleActivity}>\n                                    Deactivate\n                                </Button> :\n                                <Button variant=\"primary\" onClick={_toggleActivity}>\n                                    Activate\n                                </Button>\n                            }\n                        </div>\n                    </Modal>\n\n                    {/*--------------- Change Role of user---------------- */}\n                    <Modal\n                        centered={true}\n                        style={{ border: 'none', color: '#3d4075', boxShadow: '0 0 10px red' }}\n                        show={changeRoleData.showModal}\n                        onHide={() => setChangeRoleData({ ...changeRoleData, showModal: false, userId: null, roleId: '' })}\n                    >\n                        <Modal.Header closeButton style={{ margin: 'auto 5px' }}>\n                            <Modal.Title style={{ paddingLeft: '15px', color: '#3d4075', fontSize: '1.4em', fontWeight: 'bold' }}>Choose Role</Modal.Title>\n                        </Modal.Header>\n\n                        <Modal.Body\n                            style={{ paddingLeft: '30px' }}\n                        >\n                            <Col md={12}>\n                                <Form.Group >\n                                    <Form.Label>Role*</Form.Label>\n                                    <Form.Control name=\"role\" value={changeRoleData.roleId} onChange={_roleChange} as=\"select\">\n\n                                        <option value='' disabled >Select User Role</option>\n                                        {rolesArr.map((instance, idex) => {\n                                            return <option key={idex} value={instance.id}>{instance.name}</option>\n                                        })}\n                                    </Form.Control>\n                                </Form.Group>\n                            </Col></Modal.Body>\n\n\n                        <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'flex-end', padding: '10px' }}>\n                            <Button variant=\"secondary\" onClick={() => setChangeRoleData({ ...changeRoleData, showModal: false, userId: null, roleId: '' })}>\n                                Cancel\n                            </Button>\n                            {changeRoleData.roleId ?\n                                <Button variant=\"primary\" onClick={_updateRole}>\n                                    Done\n                                </Button> :\n                                null}\n\n                        </div>\n                    </Modal>\n                </Col>\n            </Row>\n        </Aux >\n    );\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps)(Users);","import React from 'react';\n\nconst Loader = () => {\n    return (\n        <div className=\"loader-bg\">\n            <div className=\"loader-track\">\n                <div className=\"loader-fill\"/>\n            </div>\n        </div>\n    );\n};\n\nexport default Loader;","import React from 'react';\n\nconst IsEmpty = (props) => {\n\n\n    return (\n        <>\n\n            <h3 className=\"display-5\" style={{ fontSize: '1.4em', textAlign: 'center',marginTop: '10vh' }}>{props.children}</h3>\n        </>\n    );\n}\n\n\nexport default IsEmpty;","import React from 'react';\nimport { withRouter } from 'react-router-dom'\nimport { Pagination, Form, InputGroup, Row } from 'react-bootstrap'\n\nfunction Paging(props) {\n\n\n    const queryString = props.location.search;\n    const queryParams = new URLSearchParams(queryString);\n    let start = parseInt(queryParams.get('start') || 0);\n    let end = parseInt(queryParams.get('end') || 25);\n\n    const indexQuotient = parseInt(start / (end - start));\n    const [instancePerPage] = React.useState(end - start);\n    const [activePageIndex, setActivePageIndex] = React.useState(indexQuotient);\n    // const [start, setStart] = React.useState(0)\n    // const [end, setEnd] = React.useState(25);\n\n\n    React.useEffect(() => {\n\n        //todo here\n\n        // check if the query string is okay\n        //if not change to valid one\n        //okay? so replace state.\n\n\n\n        // console.log('start', start, 'end', end);\n\n\n\n        const queryNotValid =\n            start % 25 !== 0 ||\n            end % 25 !== 0 ||\n            (end - start !== 25 && end - start !== 50 && end - start !== 100) ||\n            end < 25 ||\n            start < 0\n\n        if (queryNotValid) {\n            start = 0;\n            end = 25;\n            queryParams.set('start', 0)\n            queryParams.set('end', 25)\n            props.history.push({ search: queryParams.toString() })\n        }\n    }, [])\n\n\n    const _pageNoClick = (pageIndex) => {\n        setActivePageIndex(pageIndex);\n\n        queryParams.set('start', instancePerPage * pageIndex)\n        queryParams.set('end', instancePerPage * (pageIndex + 1))\n\n        props.history.push({\n            search: queryParams.toString()\n        })\n        console.log(pageIndex)\n    }\n\n    const _change = async (e) => {\n        queryParams.set('start', 0)\n        queryParams.set('end', parseInt(e.target.value))\n        props.history.push({\n            search: queryParams.toString()\n        })\n    }\n\n    // console.log('active page index', activePageIndex)\n    const instanceCount = props.instanceCount;\n    let noOfPages = Math.ceil(instanceCount / instancePerPage);\n\n\n    if (activePageIndex >= noOfPages - 5) {\n        var dynamicPageArr = [\n            noOfPages - 5,\n            noOfPages - 4,\n            noOfPages - 3,\n            noOfPages - 2,\n        ]\n    } else {\n        var dynamicPageArr = [\n            activePageIndex - 1,\n            activePageIndex - 0,\n            activePageIndex + 1,//active page number\n            activePageIndex + 2,\n            activePageIndex + 3,\n        ]\n    }\n    // } else {\n    //     var dynamicPageArr = [\n    //         activePageIndex - 4,\n    //         activePageIndex - 3,\n    //         activePageIndex - 2,\n    //         activePageIndex - 1,\n    //     ]\n    // }\n\n    return (\n        <Row style={{ display: 'flex', justifyContent: 'space-between', padding: '40px 10px 0 10px   ' }}>\n            <InputGroup size=\"sm\" className=\"mb-3\" style={{ maxWidth: '120px', backgroundColor: 'white' }}>\n                <InputGroup.Prepend>\n                    <InputGroup.Text id=\"inputGroup-sizing-sm\">Show:</InputGroup.Text>\n                </InputGroup.Prepend>\n                <Form.Control\n                    style={{ height: '30.21px', backgrondColor: 'white' }}\n                    as=\"select\"\n                    value={instancePerPage}\n                    onChange={_change}\n                >\n                    <option value=\"25\">25</option>\n                    <option value=\"50\">50</option>\n                    <option value=\"100\">100</option>\n                </Form.Control>\n            </InputGroup>\n\n\n            <Pagination style={{ marginBottom: 0 }} size='sm'>\n\n                <Pagination.Prev\n                    onClick={() => _pageNoClick(activePageIndex - 1)}\n                    disabled={activePageIndex === 0}\n                />\n                {noOfPages <= 8 ?\n                    [1, 2, 3, 4, 5, 6, 7, 8].map((el, index) => {\n                        if (el > noOfPages) return;\n                        return <Pagination.Item\n                            disabled={noOfPages < el}\n                            key={index}\n                            active={activePageIndex === el - 1}\n                            onClick={() => _pageNoClick(el - 1)}\n                        >{el}</Pagination.Item>\n                    }) :\n                    <>\n                        {activePageIndex > 3 ?\n                            <>\n                                < Pagination.Item\n                                    active={activePageIndex === 0}\n                                    onClick={() => _pageNoClick(0)}\n                                >{1}</Pagination.Item><Pagination.Item\n                                    active={activePageIndex === 1}\n                                    onClick={() => _pageNoClick(1)}\n                                >{2}</Pagination.Item>\n                                <Pagination.Ellipsis disabled={true} />\n\n                            </>\n                            : null\n                        }\n\n                        {\n                            (activePageIndex > 3 ?\n                                dynamicPageArr :\n                                [1, 2, 3, 4, 5]).map((el, index) => {\n                                    return <Pagination.Item\n                                        disabled={noOfPages < el}\n                                        key={index}\n                                        active={activePageIndex === el - 1}\n                                        onClick={() => _pageNoClick(el - 1)}\n                                    >{el}</Pagination.Item>\n                                })\n                        }\n                        {noOfPages > 7 && (activePageIndex < noOfPages - 5) ? <Pagination.Ellipsis disabled={true} /> : null}\n                        {noOfPages > 7 ?\n                            <>\n                                < Pagination.Item\n                                    active={activePageIndex === noOfPages - 2}\n                                    onClick={() => _pageNoClick(noOfPages - 2)}\n                                >{noOfPages - 1}</Pagination.Item><Pagination.Item\n                                    active={activePageIndex === noOfPages - 1}\n                                    onClick={() => _pageNoClick(noOfPages - 1)}\n                                >{noOfPages}</Pagination.Item>\n                            </>\n                            : <>\n                                < Pagination.Item\n                                    disabled={noOfPages < 6}\n                                    active={activePageIndex === 7 - 2}\n                                    onClick={() => _pageNoClick(7 - 2)}\n                                >{6}</Pagination.Item><Pagination.Item\n                                    disabled={noOfPages < 7}\n                                    active={activePageIndex === 7 - 1}\n                                    onClick={() => _pageNoClick(7 - 1)}\n                                >{7}</Pagination.Item>\n                            </>\n                        }\n                    </>\n                }\n\n                <Pagination.Next\n                    onClick={() => _pageNoClick(activePageIndex + 1)}\n\n                    disabled={(activePageIndex === noOfPages - 1) || noOfPages === 0}\n                />\n            </Pagination>\n        </Row >\n    )\n}\n\nexport default withRouter(Paging)\n","import React from 'react';\nimport spinner from '../../../assets/images/spinner.gif'\n\nconst Spinner = () => {\n    return (\n        <div style={{ pdisplay: 'block', width: '100%', paddingBottom: '60px' }}>\n            <img\n                style={{ height: '100px', position: 'relative', left: 'calc( 50% - 50px )' }}\n                src={spinner} alt=\"\"\n            />\n        </div>\n    );\n};\n\nexport default Spinner;","export function getStartEnd(props) {\n    const queryParams = new URLSearchParams(props.location.search);\n    return {\n        \"start\": parseInt(queryParams.get('start')) || 0,\n        \"end\": (parseInt(queryParams.get('end')) || 25),\n    }\n}","module.exports = __webpack_public_path__ + \"static/media/spinner.2f27f045.gif\";","import isEmpty from \"../validation/isEmpty\";\n\nexport const isQueryStringSearchable = (queryString) => {\n    const queryParams = new URLSearchParams(queryString);\n    const paramKeys = [];\n    for (let key of queryParams.keys()) {\n        paramKeys.push(key);\n    }\n    console.log(paramKeys)\n    if (\n        (paramKeys.includes('start') &&\n            paramKeys.includes('end') &&\n            paramKeys.length === 2) ||\n        isEmpty(queryString)\n    ) {\n        console.log('not searchable')\n        return false;\n    } else {\n        console.log('searchable')\n        return true\n    }\n}\n\nexport const getItemsSearchFilterObject = (props) => {\n    const queryString = props.location.search;\n    const queryParams = new URLSearchParams(queryString) || '';\n    let searchFilterObject = {}\n    //return empty of no query string\n    if (!isQueryStringSearchable(queryString)) {\n        return searchFilterObject\n    }\n    const itemName = queryParams.get('itemName');\n    const matchExactly = queryParams.get('matchExactly');\n    const barcode = queryParams.get('barcode');\n    const category = queryParams.get('category');\n    // const categoryName = queryParams.get('categoryName');\n    const weightFrom = queryParams.get('weightFrom');\n    const weightUpto = queryParams.get('weightUpto');\n    const cpFrom = queryParams.get('cpFrom');\n    const cpUpto = queryParams.get('cpUpto');\n    const stockFrom = queryParams.get('stockFrom');\n    const stockUpto = queryParams.get('stockUpto');\n    const spFrom = queryParams.get('spFrom');\n    const spUpto = queryParams.get('spUpto');\n    const soldFrom = queryParams.get('soldFrom');\n    const soldUpto = queryParams.get('soldUpto');\n    if (barcode) {\n        searchFilterObject = {\n            filter: 'barcode',\n            barcode: barcode\n        }\n    } else {\n        searchFilterObject = {\n            filter: 'multiple',\n            filters: {\n                is_applied_name: itemName ? true : false,\n                exact_name: matchExactly ? true : false,\n                name: itemName,\n                is_applied_weight_from: weightFrom ? true : false,\n                weight_from: weightFrom,\n                is_applied_weight_upto: weightUpto ? true : false,\n                weight_upto: weightUpto,\n                is_applied_average_cost_price_from: cpFrom ? true : false,\n                average_cost_price_from: cpFrom,\n                is_applied_average_cost_price_upto: cpUpto ? true : false,\n                average_cost_price_upto: cpUpto,\n                is_applied_stock_from: stockFrom ? true : false,\n                stock_from: stockFrom,\n                is_applied_stock_upto: stockUpto ? true : false,\n                stock_upto: stockUpto,\n                is_applied_sold_from: soldFrom ? true : false,\n                sold_from: soldFrom,\n                is_applied_sold_upto: soldUpto ? true : false,\n                sold_upto: soldUpto,\n                is_applied_sales_price_from: spFrom ? true : false,\n                sales_price_from: spFrom,\n                is_applied_sales_price_upto: spUpto ? true : false,\n                sales_price_upto: spUpto,\n                is_applied_category: category ? true : false,\n                category: category\n            }\n        };\n    }\n    return searchFilterObject;\n}\n\nexport const getInvoicesSearchFilterObject = (props) => {\n    const queryString = props.location.search;\n    const queryParams = new URLSearchParams(queryString) || '';\n    let searchFilterObject = {}\n    //return empty of no query string\n    if (!isQueryStringSearchable(queryString)) {\n        return searchFilterObject\n    }\n    let invoiceNo = queryParams.get('invoiceNo') || '';\n    let dateFrom = queryParams.get('dateFrom') ? new Date(queryParams.get('dateFrom')) : '';\n    let dateUpto = queryParams.get('dateUpto') ? new Date(queryParams.get('dateUpto')) : '';\n    let customer = queryParams.get('customer') || '';\n    // let customerName = queryParams.get('customerName') || '';\n    let invoiceStatus = queryParams.get('invoiceStatus') || '';\n    let isActive = queryParams.get('isActive') || '';\n    let isCanceled = queryParams.get('isCanceled') || '';\n    if (invoiceNo) {\n        searchFilterObject = {\n            'filter': 'invoice_number',\n            'invoice_number': invoiceNo\n        }\n    } else {\n        searchFilterObject = {\n            filter: 'multiple',\n            filters: {\n                \"date\": (dateFrom || dateUpto) ? true : false,\n                'start_date': dateFrom ? dateFrom.toISOString() : '',\n                'end_date': dateUpto ? dateUpto.toISOString() : '',\n                \"customer\": customer ? true : false,\n                'customer_id': customer,\n                'status': invoiceStatus ? true : false,\n                'status_id': invoiceStatus,\n                'active': isActive ? {\n                    is_active: isActive === 'true' ? true : false\n                } : null,\n                'canceled': isCanceled ? {\n                    'is_canceled': isCanceled === 'true' ? true : false\n                } : null\n            }\n        };\n    }\n    return searchFilterObject;\n}\n\n\nexport const getPurchaseOrdersSearchFilterObject = (props) => {\n    const queryString = props.location.search;\n    const queryParams = new URLSearchParams(queryString) || '';\n    let searchFilterObject = {}\n    //return empty of no query string\n    if (!isQueryStringSearchable(queryString)) {\n        return searchFilterObject\n    }\n    let invoiceNo = queryParams.get('invoiceNo') || '';\n    let dateFrom = queryParams.get('dateFrom') ? new Date(queryParams.get('dateFrom')) : '';\n    let dateUpto = queryParams.get('dateUpto') ? new Date(queryParams.get('dateUpto')) : '';\n    let vendor = queryParams.get('vendor') || '';\n    // let vendorName = queryParams.get('vendorName') || '';\n    let purchaseOrderStatus = queryParams.get('purchaseOrderStatus') || '';\n    if (invoiceNo) {\n        searchFilterObject = {\n            'filter': 'third_party_invoice_number',\n            'third_party_invoice_number': invoiceNo\n        }\n    } else {\n        searchFilterObject = {\n            filter: 'multiple',\n            filters: {\n                \"date\": (dateFrom || dateUpto) ? true : false,\n                'start_date': dateFrom ? dateFrom.toISOString() : null,\n                'end_date': dateUpto ? dateUpto.toISOString() : null,\n                \"vendor\": vendor ? vendor : false,\n                'purchaseOrderStatus': purchaseOrderStatus ? true : false,\n                'status': purchaseOrderStatus\n            }\n        };\n    }\n    return searchFilterObject;\n}\n\n\nexport const getAccountsSearchFilterObject = (props) => {\n    const queryString = props.location.search;\n    const queryParams = new URLSearchParams(queryString) || '';\n    let searchFilterObject = {}\n    //return empty of no query string\n    if (!isQueryStringSearchable(queryString)) {\n        return searchFilterObject\n    }\n    let accountName = queryParams.get('accountName') || false;\n    let status = queryParams.get('status') || '';\n    let childOf = queryParams.get('childOf') || '';\n    // let childOfName = queryParams.get('childOfName') || '';\n    let vendor = queryParams.get('vendor') || false;\n    // let vendorName = queryParams.get('vendorName') || '';\n    let customer = queryParams.get('customer') || false;\n    // let customerName = queryParams.get('customerName') || '';\n    let currentAmountFrom = queryParams.get('currentAmountFrom') || '';\n    let currentAmountUpto = queryParams.get('currentAmountUpto') || '';\n    let creditsFrom = queryParams.get('creditsFrom') || '';\n    let creditsUpto = queryParams.get('creditsUpto') || '';\n    let isParent = queryParams.get('isParent') || false;\n    let accountType = queryParams.get('accountType') || false;\n    let accountHeader = queryParams.get('accountHeader') || false;\n\n\n\n    searchFilterObject = {\n        filter: 'multiple',\n        filters: {\n            status: status === '' ? false : true, //status:true-> either closed or open, status:false->any\n            closed: status === 'true' ? true : false, //[status on right is fontend variable]\n            name: accountName,\n            vendor: vendor,\n            customer: customer,\n            current_amount: (currentAmountFrom || currentAmountUpto) ? true : false,\n            current_amount_from: currentAmountFrom,\n            current_amount_upto: currentAmountUpto,\n            credits: (creditsFrom || creditsUpto) ? true : false,\n            credits_from: creditsFrom,\n            credits_upto: creditsUpto,\n            parent: isParent,\n            children: childOf ? true : false,\n            parent_id: childOf,\n            account_type: accountType,\n            header: accountHeader,\n        }\n\n    }\n    return searchFilterObject;\n}\n\n\nexport const getVendorsSearchFilterObject = (props) => {\n    const queryString = props.location.search;\n    const queryParams = new URLSearchParams(queryString) || '';\n    let searchFilterObject = {}\n    //return empty of no query string\n    if (!isQueryStringSearchable(queryString)) {\n\n\n        return searchFilterObject\n    }\n    let vendorName = queryParams.get('vendorName');\n\n    searchFilterObject = {\n        filter: 'name',\n        first_name: vendorName\n    }\n    return searchFilterObject;\n}\n\n\n\nexport const getCustomersSearchFilterObject = (props) => {\n    const queryString = props.location.search;\n    const queryParams = new URLSearchParams(queryString) || '';\n    let searchFilterObject = {}\n    //return empty of no query string\n    if (!isQueryStringSearchable(queryString)) {\n        return searchFilterObject\n    }\n    let customerName = queryParams.get('customerName');\n\n    searchFilterObject = {\n        filter: 'name',\n        name: customerName\n    }\n    return searchFilterObject;\n}\n\n\n\n\nexport const getLedgerEntriesSearchFilterObject = (props) => {\n    const queryString = props.location.search;\n    const queryParams = new URLSearchParams(queryString) || '';\n    let searchFilterObject = {};\n    //return empty of no query string\n    if (!isQueryStringSearchable(queryString)) {\n        return searchFilterObject;\n    }\n    let bundleId = queryParams.get('bundleId') || false;\n    let account = queryParams.get('account') || false;\n    // let accountName = queryParams.get('accountName') || '';\n    let dateFrom = queryParams.get('dateFrom') ? new Date(queryParams.get('dateFrom')) : '';\n    let dateUpto = queryParams.get('dateUpto') ? new Date(queryParams.get('dateUpto')) : '';\n    let isAdd = queryParams.get('isAdd') || '';\n    let amountFrom = queryParams.get('amountFrom') || '';\n    let amountUpto = queryParams.get('amountUpto') || '';\n    let paymentMethod = queryParams.get('paymentMethod') || false;\n\n    searchFilterObject = {\n        filter: 'multiple',\n        filters: {\n            account: parseInt(account),\n            \"date\": (dateFrom || dateUpto) ? true : false,\n            'start_date': dateFrom ? dateFrom.toISOString() : null,\n            'end_date': dateUpto ? dateUpto.toISOString() : null,\n            bundle_id: parseInt(bundleId),\n            apply_is_add: isAdd === '' ? false : true,\n            is_add: isAdd === 'true' ? true : false,\n            amount: (amountFrom || amountUpto) ? true : false,\n            amount_from: amountFrom,\n            amount_upto: amountUpto,\n            payment_method: paymentMethod,\n        }\n    }\n    return searchFilterObject;\n}\n\n\nexport const getGiftCardsSearchFilterObject = (props) => {\n    console.log(\"here we go\")\n    const queryString = props.location.search;\n    const queryParams = new URLSearchParams(queryString) || '';\n    let searchFilterObject = {}\n    //return empty of no query string\n    if (!isQueryStringSearchable(queryString)) {\n        return searchFilterObject\n    }\n    let name = queryParams.get('name') || false;\n    let code = queryParams.get('code') || false;\n    let category = queryParams.get('category') || false;\n    let discountType = queryParams.get('discountType') || false;\n    let rateFrom = queryParams.get('rateFrom') || '';\n    let rateUpto = queryParams.get('rateUpto') || '';\n    let countUsedFrom = queryParams.get('countUsedFrom') || '';\n    let countUsedUpto = queryParams.get('countUsedUpto') || '';\n    let hasUniqueCodes = queryParams.get('hasUniqueCodes') || '';\n    let isLimited = queryParams.get('isLimited') || '';\n\n    searchFilterObject = {\n        filter: 'multiple',\n        filters: {\n            name: name,\n            category: category,\n            code: code,\n            discount_type: discountType,\n            apply_limited: isLimited === '' ? false : true,\n            is_limited: isLimited === 'true' ? true : false,\n            apply_has_unique_codes: hasUniqueCodes === '' ? false : true,\n            has_unique_codes: hasUniqueCodes === 'true' ? true : false,\n            rate: (rateFrom || rateUpto) ? true : false,\n            rate_from: rateFrom,\n            rate_upto: rateUpto,\n            count_used: (countUsedFrom || countUsedUpto) ? true : false,\n            count_used_from: countUsedFrom,\n            count_used_upto: countUsedUpto\n        }\n    }\n\n    console.log(searchFilterObject)\n    return searchFilterObject;\n}\n\n\n\nexport const getGiftCardReedemsSearchFilterObject = (props) => {\n    console.log(\"here we go\")\n    const queryString = props.location.search;\n    const queryParams = new URLSearchParams(queryString) || '';\n    let searchFilterObject = {}\n    //return empty of no query string\n    if (!isQueryStringSearchable(queryString)) {\n        return searchFilterObject\n    }\n\n    let giftcardId = queryParams.get('giftcardId') || null;\n    let invoiceNo = queryParams.get('invoiceNo') || null;\n    let customer = queryParams.get('customer') || null;\n    // let customerName = queryParams.get('customerName') || ''\n    let dateFrom = queryParams.get('dateFrom') ? new Date(queryParams.get('dateFrom')) : null;\n    let dateUpto = queryParams.get('dateUpto') ? new Date(queryParams.get('dateUpto')) : null;\n    let valueFrom = queryParams.get('valueFrom') || null;\n    let valueUpto = queryParams.get('valueUpto') || null;\n    let uniqueCard = queryParams.get('uniqueCard') || null;\n\n    searchFilterObject = {\n        filter: 'multiple',\n        filters: {\n            'gift_card': giftcardId,\n            'unique_card': uniqueCard,\n            'value': {\n                'from': valueFrom,\n                'upto': valueUpto,\n            },\n            'invoice': invoiceNo,\n            'customer': customer,\n            'date': {\n                'from': dateFrom,\n                'upto': dateUpto,\n            }\n        }\n    }\n\n    console.log(searchFilterObject)\n    return searchFilterObject;\n}\n\n\nexport const getGiftCardCategoriesSearchFilterObject = (props) => {\n    const queryString = props.location.search;\n    const queryParams = new URLSearchParams(queryString) || '';\n    let searchFilterObject = {}\n    //return empty of no query string\n    if (!isQueryStringSearchable(queryString)) {\n        return searchFilterObject\n    }\n\n    let name = queryParams.get('name') || null;\n    let enabled = queryParams.get('enabled') || null;\n\n    searchFilterObject = {\n        filter: 'multiple',\n        filters: {\n            'name': name || null,\n            'status': enabled ? {\n                'is_active': enabled === 'true' ? true : false\n            } : null\n        }\n    }\n\n    console.log(searchFilterObject)\n    return searchFilterObject;\n}\n\n\n\n\n\nexport const getDiscountsSearchFilterObject = (props) => {\n    const queryString = props.location.search;\n    const queryParams = new URLSearchParams(queryString) || '';\n    let searchFilterObject = {}\n    //return empty of no query string\n    if (!isQueryStringSearchable(queryString)) {\n        return searchFilterObject\n    }\n    let name = queryParams.get('name') || false;\n    let code = queryParams.get('code') || false;\n    let discountType = queryParams.get('discountType') || false;\n    let rateFrom = queryParams.get('rateFrom') || '';\n    let rateUpto = queryParams.get('rateUpto') || '';\n\n    searchFilterObject = {\n        filter: 'multiple',\n        filters: {\n            name: name,\n            code: code,\n            discount_type: discountType,\n            rate: (rateFrom || rateUpto) ? true : false,\n            rate_from: rateFrom,\n            rate_upto: rateUpto,\n        }\n    }\n    return searchFilterObject;\n}\n\n\n\n\n\nexport const getTaxesSearchFilterObject = (props) => {\n    const queryString = props.location.search;\n    const queryParams = new URLSearchParams(queryString) || '';\n    let searchFilterObject = {}\n    //return empty of no query string\n    if (!isQueryStringSearchable(queryString)) {\n        return searchFilterObject\n    }\n    let name = queryParams.get('name') || false;\n    let code = queryParams.get('code') || false;\n    let taxType = queryParams.get('taxType') || false;\n    let rateFrom = queryParams.get('rateFrom') || '';\n    let rateUpto = queryParams.get('rateUpto') || '';\n\n    searchFilterObject = {\n        filter: 'multiple',\n        filters: {\n            name: name,\n            code: code,\n            tax_type: taxType,\n            rate: (rateFrom || rateUpto) ? true : false,\n            rate_from: rateFrom,\n            rate_upto: rateUpto,\n        }\n    }\n    return searchFilterObject;\n}\n\n\n\n\n\n\n\nexport const getAuthLogsSearchFilterObject = (props) => {\n    const queryString = props.location.search;\n    const queryParams = new URLSearchParams(queryString) || '';\n    let searchFilterObject = {}\n    //return empty of no query string\n    if (!isQueryStringSearchable(queryString)) {\n        return searchFilterObject\n    }\n    let user = queryParams.get('user') || '';\n    // let userName = queryParams.get('userName') || '';\n    let action = queryParams.get('action') || '';\n    let dateFrom = queryParams.get('dateFrom') ? new Date(queryParams.get('dateFrom')) : '';\n    let dateUpto = queryParams.get('dateUpto') ? new Date(queryParams.get('dateUpto')) : '';\n\n    searchFilterObject = {\n        filter: 'multiple',\n        filters: {\n            'date_range': dateFrom || dateUpto ? true : false,\n            'start_date': dateFrom,\n            'end_date': dateUpto,\n            'user': user,\n            'action': action\n        }\n    }\n    return searchFilterObject;\n}\n\n\n\n\n\n\n\nexport const getActivityLogsFilter = (props) => {\n    const queryString = props.location.search;\n    const queryParams = new URLSearchParams(queryString) || '';\n    let searchFilterObject = {}\n    //return empty of no query string\n    if (!isQueryStringSearchable(queryString)) {\n        return searchFilterObject\n    }\n    let user = queryParams.get('user') || null;\n    let action = queryParams.get('action') || null;\n    let model = queryParams.get('model') || null;\n    let objectId = queryParams.get('objectId') || null;\n    let objectName = queryParams.get('objectName') || '';\n    let dateFrom = queryParams.get('dateFrom') ? new Date(queryParams.get('dateFrom')) : null;\n    let dateUpto = queryParams.get('dateUpto') ? new Date(queryParams.get('dateUpto')) : null;\n\n    searchFilterObject = {\n        filter: 'multiple',\n        filters: {\n            'date_range': dateFrom || dateUpto ? {\n                'date_from': dateFrom,\n                'date_upto': dateUpto,\n            } : null,\n            'user': user,\n            'action': action,\n            'object_id': objectId,\n            'object_str': objectName,\n            'model': model\n        }\n    }\n    return searchFilterObject;\n}\n\n\nexport const getUsersSearchFilterObject = (props) => {\n    const queryString = props.location.search;\n    const queryParams = new URLSearchParams(queryString) || '';\n    let searchFilterObject = {}\n    //return empty of no query string\n    if (!isQueryStringSearchable(queryString)) {\n        return searchFilterObject\n    }\n\n    let name = queryParams.get('name') || '';\n    let role = queryParams.get('role') || '';\n    let status = queryParams.get('status') || '';\n\n    if (name) {\n        searchFilterObject.filter = 'name'\n        searchFilterObject.name = name\n    }\n\n\n    searchFilterObject = {\n        filter: 'multiple',\n        filters: {\n            name: name,\n            role_id: role,\n            role: role,\n            status: status ? true : false, //true if is_active is there\n            is_active: status === 'true' ? true : false\n        }\n    }\n    return searchFilterObject;\n}\n\n\n\n\n","import { baseRequest } from '../base'\n\n\n\n\nconst getRoles = async (data, signal) => {\n    try {\n        return await baseRequest(\"api/v1/user/roles/get\", \"POST\", data, signal);\n    } catch (e) {\n        alert(e);\n    }\n};\n\n\n\nconst getRole = async (data, signal) => {\n    try {\n        return await baseRequest(\"api/v1/user/role/get\", \"POST\", data, signal);\n    } catch (e) {\n        alert(e);\n    }\n};\n\n\n\nconst deleteRole = async (data, signal) => {\n    try {\n        return await baseRequest(\"api/v1/user/role/delete\", \"POST\", data, signal);\n    } catch (e) {\n        alert(e);\n    }\n};\n\n\n\nconst createRole = async (data, signal) => {\n    try {\n        return await baseRequest(\"api/v1/user/role/add\", \"POST\", data, signal);\n    } catch (e) {\n        alert(e);\n    }\n};\n\n\n\nconst updateRole = async (data, signal) => {\n    try {\n        return await baseRequest(\"api/v1/user/role/update\", \"POST\", data, signal);\n    } catch (e) {\n        alert(e);\n    }\n};\n\n\n\nconst getPowers = async (data, signal) => {\n    try {\n        return await baseRequest(\"api/v1/user/role/valid\", \"POST\", data, signal);\n    } catch (e) {\n        alert(e);\n    }\n};\n\n\n\nconst assignRole = async (data, signal) => {\n    try {\n        return await baseRequest(\"api/v1/user/role/assign\", \"POST\", data, signal);\n    } catch (e) {\n        alert(e);\n    }\n};\nexport {\n    getRoles,\n    getRole,\n    updateRole,\n    deleteRole,\n    createRole,\n    getPowers,\n    assignRole\n}","import { baseRequest } from '../base'\n\n//api for user management by the admin or manager (managing others)\n\nconst createUser = async (data, signal) => {\n    try {\n        return await baseRequest(\"api/v1/user/add\", \"POST\", data, signal);\n    } catch (e) {\n        alert(e);\n    }\n};\n\n\nconst getUsers = async (data, signal) => {\n    try {\n        return await baseRequest(\"api/v1/user/list\", \"POST\", data, signal);\n    } catch (e) {\n        alert(e);\n    }\n};\n\n\n\nconst updateUser = async (data, signal) => {\n    try {\n        return await baseRequest(\"api/v1/user/update\", \"POST\", data, signal);\n    } catch (e) {\n        alert(e);\n    }\n};\n\n\nconst toggleUserActivity = async (data, signal) => {\n    try {\n        return await baseRequest(\"api/v1/user/delete\", \"POST\", data, signal);\n    } catch (e) {\n        alert(e);\n    }\n};\n\nconst getUser = async (data, signal) => {\n    try {\n        return await baseRequest(\"api/v1/user/list\", \"POST\", data, signal);\n    } catch (e) {\n        alert(e);\n    }\n};\n\n\n\n\nexport {\n    createUser,\n    getUser,\n    updateUser,\n    getUsers,\n    toggleUserActivity,\n}","import React from 'react';\n\nimport { Row, Col, Card, Form, } from 'react-bootstrap';\n\nimport { withRouter } from 'react-router-dom';\nimport isEmpty from '../../../validation/isEmpty';\n\nconst filterDataModel = {\n    vendorName: ''\n}\n\nfunction VendorsFilter(props) {\n\n\n    const [filterData, setFilterData] = React.useState({ ...filterDataModel });\n\n    //extract the query params to fill the filter's form\n    React.useEffect(() => {\n        const queryString = props.location.search;\n        const queryObj = new URLSearchParams(queryString) || '';\n        let vendorName = queryObj.get('vendorName') || '';\n\n        setFilterData({ ...filterData, vendorName, })\n    }, [])\n\n\n\n    const _filterDataChange = (e) => {\n        const { name, value, type } = e.target;\n        setFilterData({\n            ...filterData,\n            [name]: (type === 'number' ? parseFloat(value) : value) || ''\n        })\n    }\n\n    const _clickClear = () => {\n        _resetFilters();\n    }\n\n    const _keypress = (e) => {\n        if (e.key === 'Enter') {\n            _search();\n        }\n    }\n\n\n    const _search = () => {\n        //append the query params\n        let queryParams = new URLSearchParams();\n        Object.keys(filterData).forEach(key => {\n            console.log('----------------------------------')\n            if (filterData[key]) {\n                queryParams.append(key, filterData[key])\n            }\n        });\n        let queryString = queryParams.toString();\n        console.log(queryString)\n\n        props.history.replace({ search: queryString });\n    }\n\n    const _resetFilters = () => {\n        setFilterData({ ...filterDataModel });\n        const queryString = props.location.search;\n        if (queryString) {\n            props.history.replace();\n        }\n    }\n\n\n\n    return (\n        <>\n            <Card.Header className=\"filterInputs\" onKeyDown={_keypress}>\n                <div className=\"filterHeader\" >\n                    <div style={{ display: 'flex', flex: 9 }}>\n                        <Form.Control\n                            name=\"vendorName\"\n                            value={filterData.vendorName}\n                            onChange={_filterDataChange}\n                            size=\"sm\"\n                            type=\"text\"\n                            placeholder=\"Search Vendor\"\n                            className=\"mainSearchBox\"\n                        />\n                        <button\n                            className={`btn btn-secondary btn-sm }`}\n                            onClick={_clickClear}\n                            style={{ padding: '4px 8px', margin: 0, marginLeft: 0, borderLeft: 0 }}\n                        ><i className=\"feather icon-x text-c-white f-8 m-0\" /></button>\n                        <button\n                            className=\"btn btn-secondary btn-sm\"\n                            onClick={_search}\n                            style={{ padding: '4px 8px', margin: 0, marginLeft: '2px' }}\n                        > <i className=\"feather icon-search text-c-white f-8 mr-1\" />Search</button>\n                    </div>\n\n\n\n                </div>\n\n\n            </Card.Header>\n        </>\n    )\n}\n\nexport default withRouter(VendorsFilter);"],"sourceRoot":""}