{"version":3,"sources":["server.js","api/base.js","api/user.js","actions/index.js","components/users/login.jsx","components/users/logout.jsx","api/inventory/vendorApi.js","components/vendors/vendorCreation.jsx","components/users/userCreation.jsx","components/list.jsx","components/users/userList.jsx","components/users/index.jsx","components/vendors/vendorList.jsx","components/vendors/index.jsx","api/sales/customer.js","components/customer/customerList.jsx","components/customer/index.jsx","components/customer/customerCreation.jsx","api/inventory/purchaseOrder.js","api/inventory/purchaseItem.js","api/misc.js","api/inventory/itemApi.js","components/purchaseOrder/popUpEdit.jsx","components/purchaseOrder/purchaseOrderList.jsx","components/purchaseOrder/index.jsx","components/purchaseOrder/purchaseOrderCreation.jsx","api/sales/invoice.js","api/sales/invoiceItem.js","api/inventory/placeApi.js","components/invoices/popUpEdit.jsx","components/invoices/invoiceListing.jsx","components/invoices/index.jsx","components/invoices/invoiceCreation.jsx","components/discounts/discountList.jsx","components/discounts/index.jsx","components/discounts/discountCreation.jsx","components/taxes/taxList.jsx","components/taxes/index.jsx","components/taxes/taxCreation.jsx","api/inventory/itemCatagory.js","components/items/itemList.jsx","components/items/index.jsx","components/items/itemCreation.jsx","components/itemCatagories/itemCatagoryList.jsx","components/itemCatagories/index.jsx","components/itemCatagories/itemCreation.jsx","components/placement/placeList.jsx","components/placement/index.jsx","components/placement/placeCreation.jsx","components/index.jsx","App.js","serviceWorker.js","reducers/userReducer.js","reducers/usersReducer.js","reducers/index.js","index.js","components/purchaseOrder/css/popUp.module.css"],"names":["serverUrl","window","location","protocol","host","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","setCookie","value","days","expires","date","Date","setTime","getTime","toUTCString","getResponse","response","a","headers","get","json","baseRequest","url","method","body","signal","fetch","URL","credentials","myResponse","loginUser","data","alert","logoutUser","createUser","getUsers","getUser","updateUser","getCurrentUser","loggedIn","type","payload","Login","props","state","username","password","status","onChange","bind","onSubmit","this","current_state","user","isLoggedIn","history","push","e","setState","target","preventDefault","JSON","stringify","then","dispatch","Container","component","maxWidth","CssBaseline","Avatar","style","padding","margin","backgroundColor","noValidate","TextField","variant","fullWidth","id","label","autoComplete","autoFocus","FormControlLabel","control","Checkbox","color","Button","Alert","severity","display","Grid","container","Box","mt","Component","connect","Logout","res","getVendors","createVendor","deleteVendors","updateVendor","getVendor","VendorCreation","update","ele","console","log","required","UserCreation","user_type","password2","defaultValue","useStyles","makeStyles","table","minWidth","List","page","temp","classes","header","rows","pagination","onClick","TableContainer","Paper","Table","className","aria-label","TableHead","TableRow","map","TableCell","key","TableBody","row","popUp","uuid","prop","UserList","columns","user_data","data_main","list","popUpRender","placeholder","first_name","last_name","email","is_active","userDelete","userRevive","Users","update_table","request_json","by","x","start","end","getUsersData","render_after_load","users","to","loaded","VendorList","vendorDelete","vendor","middle_name","website","tax_number","phone1","phone2","address","Vendors","getVendorsData","vendors","getCustomers","deleteCustomers","createCustomer","getCustomer","updateCustomer","CustomerList","customerDelete","customer","Customers","getCustomersData","customers","CustomerCreation","getPurchaseOrders","deletePurchaseOrder","createPurchaseOrder","getPurchaseOrder","updatePurchaseOrder","deletePurchaseItems","createPurchaseItem","updatePurchaseItem","getDiscounts","deleteDiscounts","createDiscount","getDiscount","updateDiscount","getTaxes","deleteTaxes","createTax","getTax","updateTax","getPurchaseOrderStatus","getItems","deleteItems","createItem","getItem","updateItem","PopUpEdit","purchase_order","converter","invoiced_on","completed_on","purchase_items","refreshTable","getItemData","selectItem","searchItem","addPurchaseItem","invoiceHandler","completeHandler","searchVendor","selectVendor","onChangePI","postPurchaseItem","deletePurchaseItem","parse","error","current","is_new","purchase_items_id","item","p_list","items","item_selection","itemPopUp","trigger","closeOnDocumentClick","dropdown_content","href","popUpItem","item_name","new","quantity","defective","discount_type","discount","purchase_price","vendor_selection","vendorPopup","vendor_name","selected","added_by_name","total_cost","parseInt","delete","PurchaseOrderList","purchaseOrderDelete","PurchaseOrders","getPurchaseOrdersData","purchaseOrders","PurchaseOrderCreation","toISOString","addPurchaseOrder","getInvoices","deleteInvoices","createInvoice","getInvoice","updateInvoice","getInvoiceStatus","deleteInvoiceItems","createInvoiceItem","updateInvoiceItem","getPlaces","deletePlaces","createPlace","getPlace","updatePlace","discount_columns","tax_columns","add_discount_columns","add_tax_columns","invoice","due_on","invoice_items","stateman","addInvoiceItem","dueOnHandler","getCustomerData","searchCustomer","selectCustomer","postInvoiceItem","deleteInvoiceItem","onChangePlace","removeEntry","addEntryDiscount","addEntryTax","dis","temp2","applied_discount","pop","applied_tax","taxes","getPlacesData","filter","el","update_stock","sold_from","p","string","sold_from_selection","invoice_items_id","discount_start","discount_end","discount_page","getDiscountsData","tax_start","tax_end","tax_page","getTaxesData","discount_selection","tax_selection","sales_price","places","place_selection","selectPlace","str_placed_on","stocks","stock_selection","stockValue","purchase_item","selectStock","str","addPopupDiscount","addPopupTax","discounts","min","price","tax_total","sub_total","discount_amount","total_without_discount","total","discount_loaded","tax_loaded","customer_selection","customerPopup","customer_name","order_number","total_amount","discount_total","paid_amount","additional_discount","InvoiceListing","invoiceDelete","Invoices","getInvoiceData","invoices","InvoiceCreation","pathname","DiscountList","discountDelete","code","rate","Discounts","DiscountCreation","discont_type","TaxList","taxDelete","tax","tax_type","Taxes","TaxCreation","getItemCatagories","deleteItemCatagory","createItemCatagory","getItemCatagory","updateItemCatagory","ItemList","itemDelete","catagories","catagory","stock","sold","Items","getItemsData","ItemCreation","ItemCatagoryList","itemCatDelete","itemCatagory","ItemCatagories","getItemCatagoriesData","item_catagories","PlaceList","second_columns","placeDelete","place","Placements","PlaceCreation","Index","loading","swal","render_x","path","ItemCatagoryCreation","Places","App","Boolean","hostname","match","initState","userReducer","action","usersReducer","rootReducers","combineReducers","store","createStore","rootReducer","applyMiddleware","thunkMiddleware","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.c0c4550b.chunk.js","sourcesContent":["const prod = `${window.location.protocol}//${window.location.host}/`;\n// const dev = \"http://localhost:8000/\";\nconst dev =\"https://simpleim.herokuapp.com/\"\nconst serverUrl = process.env.NODE_ENV === \"development\" ? dev : prod;\nexport default serverUrl;\n","import serverUrl from \"../server\";\n\nfunction getCookie(name) {\n  var cookieValue = null;\n  if (document.cookie && document.cookie !== \"\") {\n    var cookies = document.cookie.split(\";\");\n    for (var i = 0; i < cookies.length; i++) {\n      var cookie = cookies[i].trim();\n      if (cookie.substring(0, name.length + 1) === name + \"=\") {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n  return cookieValue;\n}\n\nfunction setCookie(name,value,days) {\n  var expires = \"\";\n  if (days) {\n      var date = new Date();\n      date.setTime(date.getTime() + (days*24*60*60*1000));\n      expires = \"; expires=\" + date.toUTCString();\n  }\n  document.cookie = name + \"=\" + (value || \"\")  + expires + \"; path=/\";\n}\n\nconst getResponse = async response => {\n  const contentType = response.headers.get(\"content-type\");\n  if (contentType === \"application/json\") {\n    const json = await response.json();\n    return { response, json };\n  }\n  return { response };\n};\n\nconst baseRequest = async (url, method, body, signal) => {\n    var cookie = getCookie(\"x-csrftoken\")\n    if (cookie === null) {\n      const response = await fetch(new URL('apiv1/users/verify', serverUrl), {\n        method: 'GET'\n      });\n      const temp = await getResponse(response)\n      setCookie('x-csrftoken', temp.json['x-csrftoken'], 2)\n    }\n    cookie = getCookie(\"x-csrftoken\")\n    const response = await fetch(new URL(url, serverUrl), {\n        method: method,\n        body: body,\n        signal: signal,\n        credentials: \"include\",\n        headers: {\n        \"x-csrftoken\": cookie,\n        \"Content-Type\": \"application/json\"\n        }\n    });\n    const myResponse = await getResponse(response);\n    return myResponse.json;\n};\n\n\nexport { baseRequest };","import { baseRequest } from './base';\n\nconst loginUser = async data => {\n    try {\n      return await baseRequest(\"apiv1/users/login\", \"POST\", data);\n    } catch (e) {\n      alert(e);\n    }\n  };\n\nconst csrfToken = async () => {\n    try {\n        return await baseRequest(\"apiv1/users/verify\", \"GET\");\n      } catch (e) {\n        alert(e);\n      }\n    };\n\nconst logoutUser = async data => {\n  try {\n    return await baseRequest('apiv1/users/logout', \"GET\");\n  } catch(e){\n    alert(e);\n  }\n};\n\nconst createUser = async data => {\n  try {\n    return await baseRequest('apiv1/users/create','POST', data);\n  } catch(e){\n    alert(e)\n  }\n};\n\nconst getUsers = async data => {\n  try {\n    return await baseRequest('apiv1/users/get','POST', data);\n  } catch(e){\n    alert(e)\n  }\n};\n\n\nconst getUser = async data => {\n  try {\n    return await baseRequest('apiv1/users/get/0','POST', data);\n  } catch(e){\n    alert(e)\n  }\n};\n\nconst updateUser = async data => {\n  try{\n    return await baseRequest('apiv1/users/get/0', 'POST', data);\n  } catch (e){\n    alert(e)\n  }\n};\n\n\nconst getCurrentUser = async data => {\n  try{\n    return await baseRequest('apiv1/users/current', 'POST', data);\n  } catch (e){\n    alert(e)\n  }\n};\n\nexport { loginUser, csrfToken, logoutUser, getUsers, createUser, getUser, updateUser, getCurrentUser }","export const logout = () => {\n    return {\n        type: 'logout'\n    };\n}\n\nexport const loggedIn = (data) => {\n    return {\n        type: 'loggedIn',\n        payload: data\n    };\n}\n\nexport const setUsers = (data) => {\n    return{\n        type: 'setUsers',\n        payload: data\n    }\n}\n\n\nexport const setVendors = (data) => {\n    return{\n        type: 'setVendors',\n        payload: data\n    }\n}","import React, { Component } from 'react';\nimport { loginUser, getCurrentUser } from '../../api/user';\nimport {  connect } from 'react-redux';\nimport { loggedIn } from '../../actions';\n\n//material-ui import button\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\n\nimport Alert from '@material-ui/lab/Alert';\n\nclass Login extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            username:'',\n            password:'',\n            status:'',\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n    componentDidMount() {\n        if (this.props.current_state.user.isLoggedIn === true){\n            this.props.history.push('/')\n        }\n    }\n    onChange(e)\n    {\n        this.setState({[e.target.name]: [e.target.value]})\n    }\n    async onSubmit(e){\n        e.preventDefault();\n        const data = {\n            username: this.state.username[0],\n            password: this.state.password[0]\n        }\n        loginUser(JSON.stringify(data)).then(data => {\n            try{\n                if (data['status']){\n                    \n                    getCurrentUser().then(data => {\n                        this.props.dispatch(loggedIn(data['user_data']))\n                    })\n                    this.props.history.push('/')\n                }else if ((this.state.username===\"\" && this.state.password===\"\")|\n                (this.state.username===\"\" || this.state.password===\"\")){\n                        this.setState((state) => {\n                            return {status: \"Username and password empty\"};\n                          });\n                }\n                else if (data['status']=== false){\n                    \n                    this.setState((state) => {\n                        return {status: data['msg']};\n                      });\n                }\n            }catch(e){\n                alert(e)\n            }\n        })       \n    }\n\n    render() {\n      \n        return (\n            <Container component=\"main\" maxWidth=\"xs\">\n                \n                <CssBaseline />\n                <div>\n                  <Avatar style={{padding:30,margin:'auto',backgroundColor:'#1a237e'}} >\n                    <h3>O</h3>\n                  </Avatar>\n                  {/* <Typography component=\"h1\" variant=\"h4\" style={{textAlign:'center'}}>\n                    LOGIN\n                  </Typography> */}\n                  <form  onSubmit={this.onSubmit} noValidate>\n                    <TextField\n                      variant=\"outlined\"\n                      margin=\"normal\"\n                      fullWidth\n                      id=\"uname\"\n                      label=\"Username\"\n                      name=\"username\"\n                      autoComplete=\"email\"\n                      autoFocus\n                      type='text'\n                      onChange={this.onChange}\n                      value={this.state.username}\n                    />\n                    {/* required */}\n                    <TextField\n                      variant=\"outlined\"\n                      margin=\"normal\"\n                      fullWidth\n                      name=\"password\"\n                      label=\"Password\"\n                      type=\"password\"\n                      id=\"password\"\n                      autoComplete=\"current-password\"\n                      onChange={this.onChange}\n                      value={this.state.password}\n                    />\n                    <FormControlLabel\n                      control={<Checkbox value=\"remember\" color=\"primary\" />}\n                      label=\"Remember me\"\n                    />\n                    <Button\n                      type='submit'\n                      fullWidth\n                      variant=\"contained\"\n                      color=\"primary\"\n                    >\n                      Login\n                    </Button>\n                    <br/><br/>\n                    <Alert severity=\"error\" style={{display: this.state.status ? \"\":'none'}}>\n                        {this.state.status}\n                    </Alert>\n\n                    <Grid container>\n                      {/* <Grid item xs>\n                        <Link href=\"#\" variant=\"body2\">\n                          Forgot password?\n                        </Link>\n                      </Grid> */}\n                      {/* <Grid item>\n                        <Link href=\"#\" variant=\"body2\">\n                          {\"Don't have an account? Sign Up\"}\n                        </Link>\n                      </Grid> */}\n                    </Grid>\n                  </form>\n                </div>\n                <Box mt={8}>\n                  {/* <Copyright /> */}\n                </Box>\n              </Container>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    current_state: state\n})\n\nexport default connect(mapStateToProps)(Login)","import React, { Component } from 'react'\nimport { logoutUser } from '../../api/user';\nimport {  connect } from 'react-redux';\nimport { logout } from '../../actions';\n\n\nclass Logout extends Component {\n    componentDidMount(){\n        logoutUser().then(res => {\n            this.props.dispatch(logout())\n            this.props.history.push('/')\n\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>logout</h1>\n            </div>\n        )\n    }\n}\n\nexport default connect()(Logout)","import { baseRequest } from '../base';\n// api for vendors\n\nconst getVendors = async data => {\n  try {\n    return await baseRequest('apiv1/inventory/vendors','POST', data);\n  } catch(e){\n    alert(e)\n  }\n};\n\nconst createVendor = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/vendors','POST', data);\n    } catch(e){\n      alert(e)\n    }\n};\n\n\nconst deleteVendors = async data => {\n  try {\n    return await baseRequest('apiv1/inventory/vendors/delete','POST', data);\n  } catch(e){\n    alert(e)\n  }\n};\n\n\nconst updateVendor = async data => {\n  try {\n    return await baseRequest('apiv1/inventory/vendor','POST', data);\n  } catch(e){\n    alert(e)\n  }\n};\n\nconst getVendor = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/vendor','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n\nexport { getVendors, createVendor, deleteVendors, updateVendor, getVendor}","import React, { Component } from 'react'\nimport {  connect } from 'react-redux';\nimport {Button, TextField } from '@material-ui/core';\nimport { createVendor } from '../../api/inventory/vendorApi';\n\n\nclass VendorCreation extends Component {\n\n    constructor (props){\n        super(props)\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.state = {\n            'update':{\n                'middle_name':[''],\n                'website':[''],\n                'phone2':[''],\n                'address':['']\n            }\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n    }\n\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value]\n            }\n        })\n    }\n\n\n    async onSubmit(e){\n        e.preventDefault();\n            var data = {...this.state.update}\n            var ele;\n            for (ele in this.state.update){\n                data[ele] = this.state.update[ele][0]\n            }\n            data = {...data, 'action':'add'}\n            createVendor(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        alert(\"New Vendor Added\")\n                    }\n                    else{\n                        alert(data['error'])\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Add New Vendor</h1>\n                <form onSubmit={this.onSubmit}>\n                            First Name: <TextField\n                                id ='first_name'\n                                name=\"first_name\"\n                                type='text'\n                                onChange={this.onChange}  \n                                required                  \n                            />\n                            Middle Name : <TextField\n                                id ='middle_name'\n                                name=\"middle_name\"\n                                type='text'\n                                onChange={this.onChange} \n                            />\n                            Last Name  : <TextField\n                                id ='last_name'\n                                name=\"last_name\"\n                                type='text'\n                                onChange={this.onChange}\n                                required \n                            />\n                            <br></br>\n                            Email : <TextField\n                                id ='email'\n                                name=\"email\"\n                                type='email'\n                                onChange={this.onChange}\n                                required \n                            />\n                            <br></br>\n                            Website : <TextField\n                                id ='website'\n                                name=\"website\"\n                                type='text'\n                                onChange={this.onChange}\n                            />\n                            <br></br>\n                            Tax Number : <TextField\n                                id ='tax_number'\n                                name=\"tax_number\"\n                                type='number'\n                                onChange={this.onChange}\n                                required \n                            />\n                            <br></br>\n                            Contact Number: <TextField\n                                id ='phone1'\n                                name=\"phone1\"\n                                type='number'\n                                onChange={this.onChange}\n                                required \n                            />\n                            <br></br>\n                            Contact Number 2 : <TextField\n                                id ='phone2'\n                                name=\"phone2\"\n                                type='number'\n                                onChange={this.onChange}\n                            />\n                            <br></br>\n                            \n                            Addresss : <TextField\n                                id ='address'\n                                name=\"address\"\n                                type='text'\n                                onChange={this.onChange}\n                            />\n                            <br></br>\n                            <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                >\n                                Update\n                                </Button>\n                        \n                </form>\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    user: state.user\n})\n\nexport default connect(mapStateToProps)(VendorCreation)","import React, { Component } from 'react'\nimport {  connect } from 'react-redux';\nimport { createUser } from '../../api/user';\nimport {Button, TextField } from '@material-ui/core';\n\n\nclass UserCreation extends Component {\n\n    constructor (props){\n        super(props)\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.state = {\n            'udpate':{}\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n        if (this.props.user.data.user_type !== \"MANAGER\"){\n            this.props.history.push('/')\n        }\n    }\n\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value]\n            }\n        })\n    }\n\n\n    async onSubmit(e){\n        e.preventDefault();\n        if (this.state.update.password[0] === this.state.update.password2[0]){\n            var data = {...this.state.update}\n            var ele;\n            for (ele in this.state.update){\n                data[ele] = this.state.update[ele][0]\n            }\n            createUser(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        alert(\"New User Created\")\n                    }\n                    else{\n                        alert(data['error'])\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n        }\n        else {\n            alert(\"Password didn't match\")\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Create New User</h1>\n                <form onSubmit={this.onSubmit}>\n                            First Name: <TextField\n                                id ='first_name'\n                                name=\"first_name\"\n                                type='text'\n                                onChange={this.onChange}  \n                                required                  \n                            />\n                            Last Name<TextField\n                                id ='last_name'\n                                name=\"last_name\"\n                                type='text'\n                                onChange={this.onChange}\n                                required \n                            />\n                            \n                            <br></br>\n                             Username :<TextField\n                             \n                                id ='username'\n                                name=\"username\"\n                                type='text'\n                                onChange={this.onChange}\n                                required \n                            />\n                            <br></br>\n                            Password <TextField\n                                id=\"password\"\n                                name=\"password\"\n                                type=\"password\"\n                                autoComplete=\"current-password\"\n                                onChange={this.onChange}\n                                required \n                                />\n                               Confirm Password <TextField\n                                id=\"password2\"\n                                type=\"password\"\n                                name=\"password2\"\n                                autoComplete=\"current-password\"\n                                onChange={this.onChange}\n                                required \n                                />\n                                <br></br>\n                            Email : <TextField\n                                id ='email'\n                                name=\"email\"\n                                type='email'\n                                onChange={this.onChange}\n                                required \n                            />\n                            <br></br>\n                            User Post:\n                            <select name='user_type' id=\"user_type\" onChange={this.onChange} defaultValue=\"STAFF\">\n                                <option value=\"MANAGER\">Manager</option>\n                                <option value=\"STAFF\">Staff</option>\n                            </select>\n                            <br></br>\n                            <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                >\n                                Update\n                                </Button>\n                        \n                </form>\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    user: state.user\n})\n\nexport default connect(mapStateToProps)(UserCreation)","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst List = (props) => {\n  var page = true;\n  if (!props.page){\n    page=props.page\n  }\n  const classes = useStyles();\n  const headers = props.header\n  const rows = props.data\n  var temp;\n  const pagination = <div>\n    <h4>Page: {props.page}</h4>\n    <button onClick={() => {props.update(-10)}}>Pervious</button><button onClick={() => {props.update(10)}}>Next</button>\n  </div>\n\n  return (\n      <div>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n                {headers.map(\n                    header =>(\n                    <TableCell key={header.id}>{header.name}</TableCell>\n                    )\n                )}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          {rows.map(\n              row =>(\n                  <TableRow key={row.id} onClick={() => {props.popUp(row.id, row.uuid)}}>\n                      {headers.map(\n                          header =>\n                              (\n                                  temp = header.prop,\n                              <TableCell key={header.id}>{row[temp]}</TableCell>\n                              )\n                      )}\n                  </TableRow>\n              )\n          )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    <br></br>\n    {page ? pagination : <span></span>}\n    </div>\n  );\n}\n\nexport default List","import React, { Component } from 'react'\nimport List from '../list';\nimport { getUser, updateUser } from '../../api/user';\nimport {Button, TextField } from '@material-ui/core';\n\nclass UserList extends Component {\n    constructor(props){\n        super(props)\n        this.popUp = this.popUp.bind(this)\n        this.state = {\n            'popUp':false,\n            'user_data':{},\n            'update':{}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n    \n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value]\n            }\n        })\n    }\n\n    onSubmit(e){\n        e.preventDefault();\n        var data = this.state.user_data;\n        var ele;\n        for (ele in data){\n            if (this.state.update[ele]){\n                data[ele] = this.state.update[ele][0]\n            }\n        }\n        data = {\n            ...data,\n            'action':'edit',\n            'user_id':data.id\n        }\n        updateUser(JSON.stringify(data)).then(data =>{\n            if (data['status']){\n                alert('You Details has been updated.')\n                this.props.update(0)\n            }\n        })\n    }\n\n    userDelete(id,uuid){\n        var data = {\n            'action':'delete',\n            'user_id':id,\n            'uuid':uuid\n        }\n        updateUser(JSON.stringify(data)).then(data =>{\n            if (data['status']){\n                alert('User has been deleted. They cannot login now')\n                this.props.update(0)\n            }\n        })\n    }\n\n    \n    userRevive(id,uuid){\n        var data = {\n            'action':'revive',\n            'user_id':id,\n            'uuid':uuid\n        }\n        updateUser(JSON.stringify(data)).then(data =>{\n            if (data['status']){\n                alert('User has been made active. They login now')\n                this.props.update(0)\n            }\n        })\n    }\n\n    async popUp(id, uuid=0){\n        const data = {\n            'action':'get',\n            'user_id':id,\n            'uuid':uuid\n        }\n        var data_main;\n        await getUser(JSON.stringify(data)).then(data => {\n            if (data['status']){\n                data_main=data\n            }\n        })\n        await this.setState({\n            'popUp':true,\n            'user_data':data_main\n        })\n    }\n\n    columns = [\n        {\n            id:1,\n            name:\"Name\",\n            prop: 'name'\n        },\n        {\n            id:2,\n            name:\"Post\",\n            prop: 'status'\n        },\n        {\n            id:3,\n            name:\"Username\",\n            prop: 'username'\n        },\n        {\n            id:4,\n            name:\"Status\",\n            prop: 'is_active_str'\n        }      \n    ]\n    \n\n    render() {\n        const list = <List data={this.props.data} header={this.columns} popUp={this.popUp} update={this.props.update} page={this.props.page}/>\n        const popUpRender = <div>\n                        <button onClick={()=> {this.setState({'popUp':false})}}>Back</button><br></br>\n                        <h1>{this.state.user_data.name}</h1>\n\n                        <form onSubmit={this.onSubmit}>\n                            First Name : <TextField\n                                id ='first_name'\n                                name=\"first_name\"\n                                placeholder = {this.state.user_data.first_name}   \n                                type='text'\n                                onChange={this.onChange}\n                                // value={this.state.update.first_name}                       \n                            />\n                            \n                            Last Name : <TextField\n                            \n                                id ='last_name'\n                                name=\"last_name\"\n\n                                placeholder = {this.state.user_data.last_name}   \n                                type='text'\n                                onChange={this.onChange}\n                                // value={this.state.update.last_name}                       \n                            />\n                            \n                            <br></br>\n                             Username :<TextField\n                             \n                                id ='username'\n\n                                name=\"username\"\n                                placeholder = {this.state.user_data.username}   \n                                type='text'\n                                onChange={this.onChange}\n                                // value={this.state.update.username}                       \n                            />\n                            <br></br>\n                            Email : <TextField\n                                id ='email'\n                                name=\"email\"\n                                placeholder = {this.state.user_data.email}   \n                                type='email'\n                                onChange={this.onChange}\n                                // value={this.state.update.email}                       \n                            />\n                            <br></br>\n                            User Post:\n                            <select name='user_type' onChange={this.onChange} defaultValue={this.state.user_data.user_type}>\n                                <option value=\"MANAGER\">Manager</option>\n                                <option value=\"STAFF\">Staff</option>\n                            </select>\n                            <br></br>\n                            <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                >\n                                Update\n                                </Button>\n                        </form>\n                        <br>\n                        </br>\n                        {this.state.user_data.is_active ? <Button variant=\"contained\" color=\"secondary\" onClick={() => {this.userDelete(this.state.user_data.id, this.state.user_data.uuid)}}>\n                            Deactivate User\n                        </Button> : <Button variant=\"contained\" color=\"secondary\" onClick={() => {this.userRevive(this.state.user_data.id, this.state.user_data.uuid)}}>\n                            Activate User\n                        </Button> }\n                        \n                        <br>\n                        </br>\n                    </div>\n        return (\n            <div>\n                {this.state.popUp ? popUpRender : list}\n            </div>\n        )\n    }\n}\n\nexport default  UserList","import React, { Component } from 'react'\nimport { getUsers } from '../../api/user'\nimport {  connect } from 'react-redux';\nimport UserList from './userList';\nimport { Link} from 'react-router-dom';\n\nclass Users extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            'users':[],\n            'loaded':false,\n            'start':0,\n            'end':10,\n            'page':1\n        }\n        this.update_table = this.update_table.bind(this)\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n        if (this.props.user.data.user_type !== \"MANAGER\"){\n            this.props.history.push('/')\n        }\n    }\n\n    async getUsersData (request_json) {\n        await getUsers(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'users':data['users'],\n                    'loaded':true\n                })\n            }  \n        })\n    }\n\n    async update_table (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                'loaded':false,\n                start: 0,\n                end: 10,\n                page:1\n            })\n        }\n        else{\n            if (this.state.start+by>-1){\n                await this.setState({\n                    'loaded':false,\n                    start: this.state.start+by,\n                    end: this.state.end+by,\n                    page:this.state.page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.start,\n            'end':this.state.end\n        }\n        this.getUsersData(request_json)\n    }\n    \n\n    render() {\n        const render_after_load = (\n            <div>\n                <UserList data={this.state.users} update={this.update_table} page={this.state.page} />\n            </div>\n        )\n\n        return(\n            <div>\n                <Link to='users/create'>Create New User</Link><br></br>\n                <button onClick={() => {this.update_table(0)}}>Refresh table</button>\n                {this.state.loaded ? render_after_load : \"Loading...\"}\n\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    user: state.user,\n})\n\nexport default connect(mapStateToProps)(Users)","import React, { Component } from 'react'\nimport List from '../list';\nimport { getVendor, updateVendor,  deleteVendors } from '../../api/inventory/vendorApi';\nimport {Button, TextField } from '@material-ui/core';\n\nclass VendorList extends Component {\n    \n    constructor(props){\n        super(props)\n        this.popUp = this.popUp.bind(this)\n        this.state = {\n            'popUp':false,\n            'vendor':{},\n            'update':{}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.vendorDelete = this.vendorDelete.bind(this)\n    }\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value]\n            }\n        })\n    }\n\n    \n    async onSubmit(e){\n        e.preventDefault();\n            var data = this.state.vendor\n            var ele;\n            for (ele in this.state.update){\n                data[ele] = this.state.update[ele][0]\n            }\n            data = {...data, 'action':'edit'}\n            updateVendor(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        alert(\"Vendor Data updated.\")\n                        this.props.update(0)\n                    }\n                    else{\n                        alert(data['error'])\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    vendorDelete(id){\n        var data = {\n            'vendors_id':[\n                id\n            ]\n        }\n        deleteVendors(JSON.stringify(data)).then(data=>{\n            try {\n                if (data['status']){\n                    alert('Vendor data deleted.')\n                    this.props.update(0)\n                }   else{\n                    alert(data['error'])\n                }\n            }catch(e){\n                console.log(e)\n            }\n        })\n    }\n    \n    async popUp(id, uuid=0){\n        const data = {\n            'action':'get',\n            'vendor_id':id,\n        }\n        var data_main;\n        await getVendor(JSON.stringify(data)).then(data => {\n            if (data['status']){\n                data_main=data\n            }\n        })\n        await this.setState({\n            'popUp':true,\n            'vendor':data_main['vendors'][0]\n        })\n    }\n\n\n    columns = [\n        {\n            id:1,\n            name:\"Name\",\n            prop: 'name'\n        },\n        {\n            id:2,\n            name:\"Phone Number\",\n            prop: 'phone1'\n        },\n        {\n            id:3,\n            name:\"Email\",\n            prop: 'email'\n        },\n        {\n            id:4,\n            name:\"Address\",\n            prop: 'address'\n        }      \n    ]\n    \n\n    render() {\n        const list = <List data={this.props.data} header={this.columns}   popUp={this.popUp} update={this.props.update} page={this.props.page} />\n        const popUpRender = <div>\n                        <button onClick={()=> {this.setState({'popUp':false})}}>Back</button><br></br>\n                        <h1>{this.state.vendor.name}</h1>\n                        <form onSubmit={this.onSubmit}>\n                            First Name: <TextField\n                                id ='first_name'\n                                name=\"first_name\"\n                                type='text'\n                                onChange={this.onChange}  \n                                placeholder={this.state.vendor.first_name}          \n                            />\n                            Middle Name : <TextField\n                                id ='middle_name'\n                                name=\"middle_name\"\n                                type='text'\n                                onChange={this.onChange}\n                                placeholder={this.state.vendor.middle_name} \n                            />\n                            Last Name  : <TextField\n                                id ='last_name'\n                                name=\"last_name\"\n                                type='text'\n                                onChange={this.onChange}\n                                placeholder={this.state.vendor.last_name}\n                                  \n                            />\n                            <br></br>\n                            Email : <TextField\n                                id ='email'\n                                name=\"email\"\n                                type='email'\n                                onChange={this.onChange}                                \n                                placeholder={this.state.vendor.email}\n                                  \n                            />\n                            <br></br>\n                            Website : <TextField\n                                id ='website'\n                                name=\"website\"\n                                type='text'\n                                onChange={this.onChange}                                \n                                placeholder={this.state.vendor.website}\n                            />\n                            <br></br>\n                            Tax Number : <TextField\n                                id ='tax_number'\n                                name=\"tax_number\"\n                                type='number'\n                                onChange={this.onChange}                                \n                                placeholder={this.state.vendor.tax_number}\n                                  \n                            />\n                            <br></br>\n                            Contact Number: <TextField\n                                id ='phone1'\n                                name=\"phone1\"\n                                type='number'\n                                onChange={this.onChange}                                  \n                                placeholder={this.state.vendor.phone1}\n                            />\n                            <br></br>\n                            Contact Number 2 : <TextField\n                                id ='phone2'\n                                name=\"phone2\"\n                                type='number'\n                                onChange={this.onChange}                                \n                                placeholder={this.state.vendor.phone2}\n                            />\n                            <br></br>\n                            \n                            Addresss : <TextField\n                                id ='address'\n                                name=\"address\"\n                                type='text'\n                                onChange={this.onChange}\n                                placeholder={this.state.vendor.address}\n                            />\n                            <br></br>\n                            <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                >\n                                Update\n                                </Button> <Button variant=\"contained\" color=\"secondary\" onClick={() => {this.vendorDelete(this.state.vendor.id)}}>\n                            Delete Vendor\n                        </Button> \n                        \n                </form>\n            \n                        <br>\n                        </br>\n                    </div>\n        return (\n            <div>\n                {this.state.popUp ? popUpRender : list}\n            </div>\n        )\n    }\n}\n\nexport default VendorList\n","import React, { Component } from 'react'\nimport {getVendors} from '../../api/inventory/vendorApi';\nimport {  connect } from 'react-redux';\nimport  VendorList  from './vendorList';\nimport { Link} from 'react-router-dom';\n\nclass Vendors extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            'vendors':[],\n            'loaded':false,\n            'start':0,\n            'end':10,\n            'page':1\n        }\n        this.update_table = this.update_table.bind(this)\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n    }\n\n    async update_table (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                'loaded':false,\n                start: 0,\n                end: 10,\n                page:1\n            })\n        }\n        else{\n            if (this.state.start+by>-1){\n                await this.setState({\n                    'loaded':false,\n                    start: this.state.start+by,\n                    end: this.state.end+by,\n                    page:this.state.page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.start,\n            'end':this.state.end\n        }\n        this.getVendorsData(request_json)\n    }\n    \n    async getVendorsData (request_json) {\n        await getVendors(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'vendors':data['vendors'],\n                    'loaded':true\n                })\n            }  \n        })\n    }\n\n \n\nrender() {\n    const render_after_load = (\n        <div>\n            <VendorList data={this.state.vendors} update={this.update_table} page={this.state.page} />\n        </div>\n    )\n\n    return(\n        <div>\n            <Link to='/vendors/create'>Add New Vendor</Link><br></br>\n            <button onClick={() => {this.update_table(0)}}>Refresh table</button><br></br>\n            {this.state.loaded ? render_after_load : \"Loading...\"}\n\n        </div>\n    )\n}\n}\n\n\n\n\nconst mapStateToProps = state => ({\n    user: state.user,\n})\n\nexport default connect(mapStateToProps)(Vendors)","import { baseRequest } from '../base';\n// api for Invoices \n\nconst getCustomers = async data => {\n    try {\n      return await baseRequest('apiv1/sales/customers','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  \n  const deleteCustomers = async data => {\n    try {\n      return await baseRequest('apiv1/sales/customers/delete','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const createCustomer = async data => {\n      try {\n        return await baseRequest('apiv1/sales/customers','POST', data);\n      } catch(e){\n        alert(e)\n      }\n  };\n  \n  \n  const getCustomer = async data => {\n    try {\n      return await baseRequest('apiv1/sales/customer','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const updateCustomer= async data => {\n    try {\n      return await baseRequest('apiv1/sales/customer','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \nexport {getCustomers, createCustomer, deleteCustomers, updateCustomer, getCustomer}\n  ","import React, { Component } from 'react'\nimport List from '../list';\nimport { getCustomer, updateCustomer,  deleteCustomers } from '../../api/sales/customer';\nimport {Button, TextField } from '@material-ui/core';\n\nclass CustomerList extends Component {\n    \n    constructor(props){\n        super(props)\n        this.popUp = this.popUp.bind(this)\n        this.state = {\n            'popUp':false,\n            'customer':{},\n            'update':{}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.customerDelete = this.customerDelete.bind(this)\n    }\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value]\n            }\n        })\n    }\n\n    \n    async onSubmit(e){\n        e.preventDefault();\n            var data = this.state.customer\n            var ele;\n            for (ele in this.state.update){\n                data[ele] = this.state.update[ele][0]\n            }\n            data = {...data, 'action':'edit'}\n            updateCustomer(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        alert(\"Customer Data updated.\")\n                        this.props.update(0)\n                    }\n                    else{\n                        alert(data['error'])\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    customerDelete(id){\n        var data = {\n            'customers_id':[\n                id\n            ]\n        }\n        deleteCustomers(JSON.stringify(data)).then(data=>{\n            try {\n                if (data['status']){\n                    alert('Customer data deleted.')\n                    this.props.update(0)\n                }   else{\n                    alert(data['error'])\n                }\n            }catch(e){\n                console.log(e)\n            }\n        })\n    }\n    \n    async popUp(id, uuid=0){\n        const data = {\n            'action':'get',\n            'customer_id':id,\n        }\n        var data_main;\n        await getCustomer(JSON.stringify(data)).then(data => {\n            if (data['status']){\n                data_main=data\n            }\n        })\n        await this.setState({\n            'popUp':true,\n            'customer':data_main['customers'][0]\n        })\n    }\n\n\n    columns = [\n        {\n            id:1,\n            name:\"Name\",\n            prop: 'name'\n        },\n        {\n            id:2,\n            name:\"Phone Number\",\n            prop: 'phone1'\n        },\n        {\n            id:3,\n            name:\"Email\",\n            prop: 'email'\n        },\n        {\n            id:4,\n            name:\"Address\",\n            prop: 'address'\n        }      \n    ]\n    \n\n    render() {\n        const list = <List data={this.props.data} header={this.columns}   popUp={this.popUp} update={this.props.update} page={this.props.page} />\n        const popUpRender = <div>\n                        <button onClick={()=> {this.setState({'popUp':false})}}>Back</button><br></br>\n                        <h1>{this.state.customer.name}</h1>\n                        <form onSubmit={this.onSubmit}>\n                            First Name: <TextField\n                                id ='first_name'\n                                name=\"first_name\"\n                                type='text'\n                                onChange={this.onChange}  \n                                placeholder={this.state.customer.first_name}          \n                            />\n                            Middle Name : <TextField\n                                id ='middle_name'\n                                name=\"middle_name\"\n                                type='text'\n                                onChange={this.onChange}\n                                placeholder={this.state.customer.middle_name} \n                            />\n                            Last Name  : <TextField\n                                id ='last_name'\n                                name=\"last_name\"\n                                type='text'\n                                onChange={this.onChange}\n                                placeholder={this.state.customer.last_name}\n                                  \n                            />\n                            <br></br>\n                            Email : <TextField\n                                id ='email'\n                                name=\"email\"\n                                type='email'\n                                onChange={this.onChange}                                \n                                placeholder={this.state.customer.email}\n                                  \n                            />\n                            <br></br>\n                            Website : <TextField\n                                id ='website'\n                                name=\"website\"\n                                type='text'\n                                onChange={this.onChange}                                \n                                placeholder={this.state.customer.website}\n                            />\n                            <br></br>\n                            Tax Number : <TextField\n                                id ='tax_number'\n                                name=\"tax_number\"\n                                type='number'\n                                onChange={this.onChange}                                \n                                placeholder={this.state.customer.tax_number}\n                                  \n                            />\n                            <br></br>\n                            Contact Number: <TextField\n                                id ='phone1'\n                                name=\"phone1\"\n                                type='number'\n                                onChange={this.onChange}                                  \n                                placeholder={this.state.customer.phone1}\n                            />\n                            <br></br>\n                            Contact Number 2 : <TextField\n                                id ='phone2'\n                                name=\"phone2\"\n                                type='number'\n                                onChange={this.onChange}                                \n                                placeholder={this.state.customer.phone2}\n                            />\n                            <br></br>\n                            \n                            Addresss : <TextField\n                                id ='address'\n                                name=\"address\"\n                                type='text'\n                                onChange={this.onChange}\n                                placeholder={this.state.customer.address}\n                            />\n                            <br></br>\n                            <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                >\n                                Update\n                                </Button> <Button variant=\"contained\" color=\"secondary\" onClick={() => {this.customerDelete(this.state.customer.id)}}>\n                            Delete Customer\n                        </Button> \n                        \n                </form>\n            \n                        <br>\n                        </br>\n                    </div>\n        return (\n            <div>\n                {this.state.popUp ? popUpRender : list}\n            </div>\n        )\n    }\n}\n\nexport default CustomerList\n","import React, { Component } from 'react'\nimport {getCustomers} from '../../api/sales/customer';\nimport {  connect } from 'react-redux';\nimport  CustomerList  from './customerList';\nimport { Link} from 'react-router-dom';\n\nclass Customers extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            'customers':[],\n            'loaded':false,\n            'start':0,\n            'end':10,\n            'page':1\n        }\n        this.update_table = this.update_table.bind(this)\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n    }\n\n    async update_table (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                'loaded':false,\n                start: 0,\n                end: 10,\n                page:1\n            })\n        }\n        else{\n            if (this.state.start+by>-1){\n                await this.setState({\n                    'loaded':false,\n                    start: this.state.start+by,\n                    end: this.state.end+by,\n                    page:this.state.page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.start,\n            'end':this.state.end\n        }\n        this.getCustomersData(request_json)\n    }\n    \n    async getCustomersData (request_json) {\n        await getCustomers(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'customers':data['customers'],\n                    'loaded':true\n                })\n            }  \n        })\n    }\n\n \n\nrender() {\n    const render_after_load = (\n        <div>\n            <CustomerList data={this.state.customers} update={this.update_table} page={this.state.page} />\n        </div>\n    )\n\n    return(\n        <div>\n            <Link to='/customers/create'>Add New Customer</Link><br></br>\n            <button onClick={() => {this.update_table(0)}}>Refresh table</button><br></br>\n            {this.state.loaded ? render_after_load : \"Loading...\"}\n        </div>\n    )\n}\n}\n\n\n\n\nconst mapStateToProps = state => ({\n    user: state.user,\n})\n\nexport default connect(mapStateToProps)(Customers)","import React, { Component } from 'react'\nimport {  connect } from 'react-redux';\nimport {Button, TextField } from '@material-ui/core';\nimport { createCustomer } from '../../api/sales/customer';\n\n\nclass CustomerCreation extends Component {\n\n    constructor (props){\n        super(props)\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.state = {\n            'update':{\n                'middle_name':[''],\n                'website':[''],\n                'phone2':[''],\n                'address':['']\n            }\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n    }\n\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value]\n            }\n        })\n    }\n\n\n    async onSubmit(e){\n        e.preventDefault();\n            var data = {...this.state.update}\n            var ele;\n            for (ele in this.state.update){\n                data[ele] = this.state.update[ele][0]\n            }\n            data = {...data, 'action':'add'}\n            createCustomer(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        alert(\"New Customer Added\")\n                    }\n                    else{\n                        alert(data['error'])\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Add New Vendor</h1>\n                <form onSubmit={this.onSubmit}>\n                            First Name: <TextField\n                                id ='first_name'\n                                name=\"first_name\"\n                                type='text'\n                                onChange={this.onChange}  \n                                required                  \n                            />\n                            Middle Name : <TextField\n                                id ='middle_name'\n                                name=\"middle_name\"\n                                type='text'\n                                onChange={this.onChange} \n                            />\n                            Last Name  : <TextField\n                                id ='last_name'\n                                name=\"last_name\"\n                                type='text'\n                                onChange={this.onChange}\n                                required \n                            />\n                            <br></br>\n                            Email : <TextField\n                                id ='email'\n                                name=\"email\"\n                                type='email'\n                                onChange={this.onChange}\n                                required \n                            />\n                            <br></br>\n                            Website : <TextField\n                                id ='website'\n                                name=\"website\"\n                                type='text'\n                                onChange={this.onChange}\n                            />\n                            <br></br>\n                            Tax Number : <TextField\n                                id ='tax_number'\n                                name=\"tax_number\"\n                                type='number'\n                                onChange={this.onChange}\n                                required \n                            />\n                            <br></br>\n                            Contact Number: <TextField\n                                id ='phone1'\n                                name=\"phone1\"\n                                type='number'\n                                onChange={this.onChange}\n                                required \n                            />\n                            <br></br>\n                            Contact Number 2 : <TextField\n                                id ='phone2'\n                                name=\"phone2\"\n                                type='number'\n                                onChange={this.onChange}\n                            />\n                            <br></br>\n                            \n                            Addresss : <TextField\n                                id ='address'\n                                name=\"address\"\n                                type='text'\n                                onChange={this.onChange}\n                            />\n                            <br></br>\n                            <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                >\n                                Update\n                                </Button>\n                        \n                </form>\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    user: state.user\n})\n\nexport default connect(mapStateToProps)(CustomerCreation)","import { baseRequest } from '../base';\n// api for items \n\nconst getPurchaseOrders = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/porders','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  \n  const deletePurchaseOrder = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/porders/delete','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const createPurchaseOrder = async data => {\n      try {\n        return await baseRequest('apiv1/inventory/porders','POST', data);\n      } catch(e){\n        alert(e)\n      }\n  };\n  \n  \n  const getPurchaseOrder = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/porder','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const updatePurchaseOrder= async data => {\n    try {\n      return await baseRequest('apiv1/inventory/porder','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \nexport {getPurchaseOrders, deletePurchaseOrder, createPurchaseOrder, getPurchaseOrder, updatePurchaseOrder}\n  ","import { baseRequest } from '../base';\n// api for items \n\n  \n  const deletePurchaseItems = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/pitems/delete','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const createPurchaseItem = async data => {\n      try {\n        return await baseRequest('apiv1/inventory/pitems','POST', data);\n      } catch(e){\n        alert(e)\n      }\n  };\n  \n  const updatePurchaseItem= async data => {\n    try {\n      return await baseRequest('apiv1/inventory/pitem','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \nexport { deletePurchaseItems, createPurchaseItem, updatePurchaseItem}\n  ","import { baseRequest } from './base';\n \n\nconst getDiscounts = async data => {\n    try {\n      return await baseRequest('apiv1/sales/discounts','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  \n  const deleteDiscounts = async data => {\n    try {\n      return await baseRequest('apiv1/sales/discounts/delete','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const createDiscount = async data => {\n      try {\n        return await baseRequest('apiv1/sales/discounts','POST', data);\n      } catch(e){\n        alert(e)\n      }\n  };\n  \n  \n  const getDiscount = async data => {\n    try {\n      return await baseRequest('apiv1/sales/discount','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const updateDiscount= async data => {\n    try {\n      return await baseRequest('apiv1/sales/discount','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n\n\n  \nconst getTaxes = async data => {\n    try {\n      return await baseRequest('apiv1/sales/taxes','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  \n  const deleteTaxes = async data => {\n    try {\n      return await baseRequest('apiv1/sales/taxes/delete','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const createTax = async data => {\n      try {\n        return await baseRequest('apiv1/sales/taxes','POST', data);\n      } catch(e){\n        alert(e)\n      }\n  };\n  \n  \n  const getTax = async data => {\n    try {\n      return await baseRequest('apiv1/sales/tax','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const updateTax= async data => {\n    try {\n      return await baseRequest('apiv1/sales/tax','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n\n  const getPurchaseOrderStatus= async data => {\n    try {\n      return await baseRequest('apiv1/inventory/status/porders','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n\n  \nexport {getPurchaseOrderStatus, getDiscounts, createDiscount, deleteDiscounts, updateDiscount, getDiscount, getTaxes, createTax, deleteTaxes, updateTax, getTax}\n  ","import { baseRequest } from '../base';\n// api for items \n\nconst getItems = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/items','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  \n  const deleteItems = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/items/delete','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const createItem = async data => {\n      try {\n        return await baseRequest('apiv1/inventory/items','POST', data);\n      } catch(e){\n        alert(e)\n      }\n  };\n  \n  \n  const getItem = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/item','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const updateItem= async data => {\n    try {\n      return await baseRequest('apiv1/inventory/item','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \nexport {getItems, createItem, deleteItems, updateItem, getItem}\n  ","import React, { Component } from 'react'\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport List from '../list';\nimport Popup from \"reactjs-popup\";\nimport style from './css/popUp.module.css';\nimport {getVendors} from '../../api/inventory/vendorApi';\nimport {updatePurchaseOrder, getPurchaseOrder} from '../../api/inventory/purchaseOrder';\nimport {updatePurchaseItem, deletePurchaseItems, createPurchaseItem} from '../../api/inventory/purchaseItem'\nimport {getPurchaseOrderStatus} from '../../api/misc';\nimport {getItems} from '../../api/inventory/itemApi';\nclass PopUpEdit extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            'popUp':false,\n            'new':false,\n            'current':0,\n            'status':[],\n            'vendor_selection':[\n                {\n                    'id':0,\n                    'name':'None'\n                }\n            ],\n            'item_selection':[\n                {\n                    'id':0,\n                    'name':\"None\"\n                }\n            ],\n            update : {\n                'purchase_order':{\n                    ...this.props.purchase_order,\n                    'invoiced_on': this.converter(this.props.purchase_order.invoiced_on),\n                    'completed_on': this.converter(this.props.purchase_order.completed_on)\n                },\n                'purchase_items':this.props.purchase_items\n            }\n        }\n        this.refreshTable = this.refreshTable.bind(this)\n        this.getItemData = this.getItemData.bind(this)\n        this.selectItem = this.selectItem.bind(this)\n        this.searchItem = this.searchItem.bind(this)\n        this.addPurchaseItem = this.addPurchaseItem.bind(this)\n        this.invoiceHandler = this.invoiceHandler.bind(this)\n        this.completeHandler = this.completeHandler.bind(this)\n        this.getVendorsData = this.getVendorsData.bind(this)\n        this.converter = this.converter.bind(this)\n        this.popUp = this.popUp.bind(this)\n        this.searchVendor = this.searchVendor.bind(this)\n        this.selectVendor = this.selectVendor.bind(this)\n        this.onChange = this.onChange.bind(this)\n        this.updatePurchaseOrder = this.updatePurchaseOrder.bind(this)\n        this.onChangePI = this.onChangePI.bind(this)\n        this.postPurchaseItem = this.postPurchaseItem.bind(this)\n        this.deletePurchaseItem = this.deletePurchaseItem.bind(this)\n    }\n\n\n    async componentDidMount(){\n        var request_json = {\n            'action':'get',\n        }\n        await getPurchaseOrderStatus(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    ...this.state,\n                    'status':data.data\n                })\n            }  \n        })\n    }\n\n    async getVendorsData (request_json) {\n        await getVendors(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'vendor_selection':data['vendors'],\n                })\n            }  \n        })\n    }\n\n    selectVendor(id,name){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_order':{\n                    ...this.state.update.purchase_order,\n                    'vendor':id,\n                    'vendor_name':name\n                }\n            }\n        })\n    }\n\n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_order':{\n                    ...this.state.update.purchase_order,\n                    [e.target.name] : [e.target.value][0]\n                }\n            }\n        })\n    }\n\n    converter(date){\n        return ( new Date(Date.parse(date)))\n    }\n\n    popUp(id){\n        var key\n        for (key in this.state.update.purchase_items){\n            if (this.state.update.purchase_items[key].id === id){\n                this.setState({\n                    ...this.state,\n                    'current':key,\n                    'popUp':true\n                })        \n                return\n            }\n        }\n    }\n\n    searchVendor(e){\n        if ((e.target.value).length > 2 ){\n            var request_json = {\n                'action':'get',\n                'start':0,\n                'end':10,\n                'filter':'name',\n                'first_name':(e.target.value)\n            }\n            this.getVendorsData(request_json)\n        }\n    }\n    \n    invoiceHandler(date){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_order':{\n                    ...this.state.update.purchase_order,\n                    'invoiced_on' : date\n                }\n            }\n        })\n    }\n    \n    completeHandler(date){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_order':{\n                    ...this.state.update.purchase_order,\n                    'completed_on' : date\n                }\n            }\n        })\n    }\n\n    updatePurchaseOrder(){\n        var request_json = {\n            ...this.state.update.purchase_order,\n            'action':'edit',\n            'purchase_order_id':this.state.update.purchase_order.id\n        }\n        updatePurchaseOrder(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                alert(\"Purchase Order Details Has Been Updated.\")\n                this.props.update(0)\n            }\n            else{\n                alert(\"Error : \",data.error)\n            }\n        })\n    }\n\n    onChangePI(e){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_items':{\n                    ...this.state.update.purchase_items,\n                    [this.state.current] : {\n                        ...this.state.update.purchase_items[this.state.current],\n                        [e.target.name] : [e.target.value][0]\n                    },\n                }\n            }\n        })\n    }\n\n    postPurchaseItem(is_new=false){\n        var request_json\n        if (is_new){\n            request_json = {\n                'action':'add',\n                'purchase_order':this.state.update.purchase_order.id,\n                ...this.state.update.purchase_items[this.state.current]\n            }\n            createPurchaseItem(JSON.stringify(request_json)).then(data => {\n                if (data['status']){\n                    alert(\"Purchase Item Has Been Added.\")\n                    this.refreshTable()\n                }\n                else{\n                    alert(data['error'])\n                }\n            })\n            return\n        }\n        request_json = {\n            'action':'edit',\n            ...this.state.update.purchase_items[this.state.current]\n        }\n        updatePurchaseItem(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                alert(\"Purchase Item Details Has Been Updated.\")\n                this.refreshTable()\n            }\n            else{\n                alert(data['error'])\n            }\n        })\n    }\n\n    deletePurchaseItem(){\n        var request_json = {\n            purchase_items_id : [this.state.update.purchase_items[this.state.current].id]\n        }\n        deletePurchaseItems(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                alert(\"Purchase Item Has Beed Deleted.\")\n                this.refreshTable()\n            }\n            else{\n                alert(data['error'])\n            }\n        })\n    }\n\n\n    addPurchaseItem(){\n        var current =0;\n        var item,p_list=[];\n        for (item in this.state.update.purchase_items){\n            if (item.id){\n                if (item.id !== \"Fake Key\"){\n                    current = current + 1\n                    p_list.push(item)\n                }\n            }\n        }\n        this.setState({\n            'current':current,\n            'new':true,\n            'popUp':true,\n            'update':{\n                ...this.state.update,\n                'purchase_items':[\n                    ...p_list,\n                    {\n                        'item_name':\"None\",\n                        'discount_type':'percentage',\n                        'status':'incomplete'\n                    }\n                ]\n            }\n        })\n    }\n    columns = [\n        {\n            id:1,\n            name:\"Item Name\",\n            prop: 'item_name'\n        },\n        {\n            id:2,\n            name:\"Quantity\",\n            prop: 'quantity'\n        },\n        {\n            id:3,\n            name:\"Stock\",\n            prop: 'stock'\n        },\n        {\n            id:4,\n            name:\"Defective\",\n            prop: 'defective'\n        },   \n        {\n            id:5,\n            name:\"Sold\",\n            prop: 'sold'\n        },\n        {\n            id:6,\n            name:\"Discount\",\n            prop: 'discount'\n        },\n        {\n            id:7,\n            name:\"Purchase Price\",\n            prop: 'purchase_price'\n        },\n        {\n            id:8,\n            name:\"Status\",\n            prop: 'status'\n        }\n    ]\n\n    searchItem(e){\n        if ((e.target.value).length > 2 ){\n            var request_json = {\n                'action':'get',\n                'start':0,\n                'end':10,\n                'filter':'name',\n                'name':(e.target.value)\n            }\n            this.getItemData(request_json)\n        }\n    }\n\n    async getItemData(request_json){\n        await getItems(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    ...this.state,\n                    'item_selection':data['items'],\n                })\n            }  \n        })\n    }\n    selectItem(id, name){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_items':{\n                    ...this.state.update.purchase_items,\n                    [this.state.current] : {\n                        ...this.state.update.purchase_items[this.state.current],\n                        'item_name' : name,\n                        'item':id\n                    },\n                }\n            }\n        })\n\n    }\n\n    async refreshTable(){\n        var id = this.state.update.purchase_order.id;\n        var items= [];\n        const request_json = {\n            'action':'get',\n            'purchase_order_id':id\n        }\n        await getPurchaseOrder(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                items = data['p_items']\n            }\n        })\n        if (items.length === 0){\n            items = [{\n                'id':\"Fake Key\",\n                'item_name': ''\n            }]\n        }\n        await this.setState({\n            ...this.state,\n            'popUp':false,\n            'update':{\n                ...this.state.update,\n                'purchase_items':items\n            }\n        })\n    }\n\n\n    render() {\n        const item_selection = this.state.item_selection\n        const itemPopUp = <Popup trigger={ <button>Select Item</button>} closeOnDocumentClick>\n        <div>\n            <input placeholder=\"Item Name\" id='item_search_box' name='item_serach_box' onChange={this.searchItem}></input>\n            <div className={style.dropdown_content} id='vendor_dropdown'>\n                    {item_selection.map(\n                        item => (\n                            // use css to get rid of <a>\n                            <a href=\"#\" key={item.id} onClick={() => {this.selectItem(item.id, item.name)}} >{item.name}</a>\n                        )\n                    )}\n            </div>\n        </div>\n        </Popup>\n        const popUpItem = <div>\n                <button onClick={() => {this.refreshTable()}} >Back</button><br></br><br></br>\n                Item : {this.state.update.purchase_items[this.state.current].item_name}  {this.state.new ? itemPopUp: <span></span>}<br></br>\n                Quantity : <input name=\"quantity\" placeholder={this.state.update.purchase_items[this.state.current].quantity} type=\"number\" onChange={this.onChangePI} required></input><br></br>\n                Defective : <input name=\"defective\" placeholder={this.state.update.purchase_items[this.state.current].defective} type=\"number\"  onChange={this.onChangePI} required></input><br></br>\n                \n                Discount Type :<select name='discount_type' id=\"discount_type\" defaultValue={this.state.update.purchase_items[this.state.current].discount_type}  onChange={this.onChangePI}>\n                                    <option value=\"percent\">Percentage</option>\n                                    <option value=\"fixed\">Fixed</option>\n                                </select> <br></br>\n                Discount : <input placeholder={this.state.update.purchase_items[this.state.current].discount} name=\"discount\" onChange={this.onChangePI} ></input><br></br>\n                Purchase Price : <input placeholder={this.state.update.purchase_items[this.state.current].purchase_price} name=\"purchase_price\" onChange={this.onChangePI} required></input> <br></br>\n                Status : <select defaultValue= {this.state.update.purchase_items[this.state.current].status} name=\"status\" onChange={this.onChangePI}>\n                    <option value=\"delivered\">Delivered</option>\n                    <option value=\"incomplete\">Incomplete</option>\n                    <option value=\"addedtocirculation\">Added To Circulation</option>\n                </select><br></br>\n                {this.state.new ? <button onClick={() => {this.postPurchaseItem(true)}} >Add</button> : <button onClick={() => {this.postPurchaseItem()}} >Update</button>}<br></br><br></br>\n                <button onClick={() => {this.deletePurchaseItem()}} >Delete</button>\n            </div>\n        const vendor_selection = this.state.vendor_selection\n        const vendorPopup = <Popup trigger={<button>Change Vendor</button>} closeOnDocumentClick>\n        <div>\n            <input placeholder=\"Vendor's first name\" id='vendor_serach_box' name='vendor_serach_box' onChange={this.searchVendor}></input>\n            <div className={style.dropdown_content} id='vendor_dropdown'>\n                    {vendor_selection.map(\n                        vendor => (\n                            // use css to get rid of <a>\n                            <a href=\"#\" key={vendor.id} onClick={() => {this.selectVendor(vendor.id, vendor.name)}} >{vendor.name}</a>\n                        )\n                    )}\n            </div>\n        </div>\n        </Popup>\n        const status = this.state.status\n        return (\n            <div>\n                <h1>Purchase Order</h1>\n                <h1>{this.props.purchase_order.vendor_name}</h1>\n                Vendor : {this.state.update.purchase_order.vendor_name}\n                {vendorPopup}<br></br>\n                Invoiced On : \n                <DatePicker\n                name='invoiced_on'\n                selected={this.state.update.purchase_order.invoiced_on}\n                onChange={this.invoiceHandler}\n                />\n                Completed On : \n                <DatePicker\n                name='completed_on'\n                selected={this.state.update.purchase_order.completed_on}\n                onChange={this.completeHandler}\n                /><br></br>\n                Added By : {this.state.update.purchase_order.added_by_name}<br></br>\n                Total Cost : <input placeholder={this.state.update.purchase_order.total_cost} name=\"total_cost\" onChange={this.onChange}/><br></br>\n                Discount Type :<select name='discount_type' id=\"discount_type\" onChange={this.onChange} defaultValue={this.state.update.purchase_order.discount_type}>\n                                <option value=\"percent\">Percentage</option>\n                                <option value=\"fixed\">Fixed</option>\n                            </select> <br></br>\n                Discount : <input placeholder={this.state.update.purchase_order.discount} name=\"discount\" onChange={this.onChange}></input><br></br>\n                Status : <select name='status' id=\"status\" onChange={this.onChange} value={this.state.update.purchase_order.status}  >\n                                {status.map(\n                                    x => (\n                                    <option key={x.id} value={parseInt(x.id)}>{x.name}</option>\n                                    )\n                                )}\n                            </select> <br></br><br></br>\n                <button onClick={() => {this.updatePurchaseOrder()}}>Update Purchase Order</button><br></br><br></br>\n                <button onClick={() => {this.props.delete(this.props.purchase_order.id)}}>Delete</button>\n                <hr></hr>\n                <h3>Items</h3> <button  onClick={() => {this.addPurchaseItem()}}>Add New Items</button>\n                {this.state.popUp ? popUpItem :<List data={this.state.update.purchase_items} header={this.columns} page={false} popUp={this.popUp} />}\n            </div>\n        )\n    }\n}\nexport default PopUpEdit","import React, { Component } from 'react'\nimport List from '../list';\nimport { getPurchaseOrder, deletePurchaseOrder, updatePurchaseOrder } from '../../api/inventory/purchaseOrder';\nimport PopUpEdit from './popUpEdit';\n\nclass PurchaseOrderList extends Component {\n    \n    constructor(props){\n        super(props)\n        this.popUp = this.popUp.bind(this)\n        this.state = {\n            'popUp':false,\n            'purchase_order':{},\n            'purchase_items':[],\n            'update':{}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.purchaseOrderDelete = this.purchaseOrderDelete.bind(this)\n    }\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value]\n            }\n        })\n    }\n\n    \n    async onSubmit(e){\n        e.preventDefault();\n            var data = this.state.vendor\n            var ele;\n            for (ele in this.state.update){\n                data[ele] = this.state.update[ele][0]\n            }\n            data = {...data, 'action':'edit'}\n            updatePurchaseOrder(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        alert(\"Vendor Data updated.\")\n                        this.props.update(0)\n                    }\n                    else{\n                        alert(data['error'])\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    purchaseOrderDelete(id){\n        var data = {\n            'purchase_orders_id':[\n                id\n            ]\n        }\n        deletePurchaseOrder(JSON.stringify(data)).then(data=>{\n            try {\n                if (data['status']){\n                    alert('Purchase Order Deleted.')\n                    this.props.update(0)\n                }   else{\n                    alert(data['error'])\n                }\n            }catch(e){\n                console.log(e)\n            }\n        })\n    }\n    \n    async popUp(id, uuid=0){\n        const data = {\n            'action':'get',\n            'purchase_order_id':id,\n        }\n        var data_main;\n        await getPurchaseOrder(JSON.stringify(data)).then(data => {\n            if (data['status']){\n                data_main=data\n            }\n        })\n        if (data_main['p_items'].length === 0) {\n            console.log(\"blank\")\n            data_main['p_items'] = [{\n                id:0\n            }]\n        }\n        await this.setState({\n            'popUp':true,\n            'purchase_order':data_main['p_order'][0],\n            'purchase_items':data_main['p_items']\n        })\n    }\n\n\n    columns = [\n        {\n            id:1,\n            name:\"Vendor Name\",\n            prop: 'vendor_name'\n        },\n        {\n            id:2,\n            name:\"Items\",\n            prop: 'items'\n        },\n        {\n            id:3,\n            name:\"Invoiced On\",\n            prop: 'invoiced_on'\n        },\n        {\n            id:4,\n            name:\"Total Cost\",\n            prop: 'total_cost'\n        },   \n        {\n            id:5,\n            name:\"Status\",\n            prop: 'status_name'\n        }      \n    ]\n    \n\n    render() {\n        const list = <List data={this.props.data} header={this.columns}   popUp={this.popUp} update={this.props.update} page={this.props.page} />\n        const popUpRender = <PopUpEdit purchase_order={this.state.purchase_order} purchase_items={this.state.purchase_items} update={this.props.update} delete={this.purchaseOrderDelete} ></PopUpEdit>\n        return (\n            <div>\n                {this.state.popUp ? popUpRender : list}\n            </div>\n        )\n    }\n}\n\nexport default PurchaseOrderList\n","import React, { Component } from 'react'\nimport {getPurchaseOrders} from '../../api/inventory/purchaseOrder';\nimport {  connect } from 'react-redux';\nimport  PurchaseOrderList  from './purchaseOrderList';\nimport { Link} from 'react-router-dom';\n\nclass PurchaseOrders extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            'purchaseOrders':[],\n            'loaded':false,\n            'start':0,\n            'end':10,\n            'page':1\n        }\n        this.update_table = this.update_table.bind(this)\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n    }\n\n    async update_table (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                'loaded':false,\n                start: 0,\n                end: 10,\n                page:1\n            })\n        }\n        else{\n            if (this.state.start+by>-1){\n                await this.setState({\n                    'loaded':false,\n                    start: this.state.start+by,\n                    end: this.state.end+by,\n                    page:this.state.page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.start,\n            'end':this.state.end\n        }\n        this.getPurchaseOrdersData(request_json)\n    }\n    \n    async getPurchaseOrdersData (request_json) {\n        await getPurchaseOrders(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'purchaseOrders':data['p_orders'],\n                    'loaded':true\n                })\n            }  \n        })\n    }\n\n \n\nrender() {\n    const render_after_load = (\n        <div>\n            <PurchaseOrderList data={this.state.purchaseOrders} update={this.update_table} page={this.state.page} />\n        </div>\n    )\n\n    return(\n        <div>\n            <Link to='/purchaseorders/create'>Create New Purchase Order</Link><br></br>\n            <button onClick={() => {this.update_table(0)}}>Refresh table</button><br></br>\n            {this.state.loaded ? render_after_load : \"Loading...\"}\n\n        </div>\n    )\n}\n}\n\n\n\n\nconst mapStateToProps = state => ({\n    user: state.user,\n})\n\nexport default connect(mapStateToProps)(PurchaseOrders)","import React, { Component } from 'react'\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport List from '../list';\nimport Popup from \"reactjs-popup\";\nimport style from './css/popUp.module.css';\nimport {getVendors} from '../../api/inventory/vendorApi';\nimport {getPurchaseOrder , updatePurchaseOrder, createPurchaseOrder} from '../../api/inventory/purchaseOrder';\nimport {updatePurchaseItem, deletePurchaseItems, createPurchaseItem} from '../../api/inventory/purchaseItem'\nimport {getPurchaseOrderStatus} from '../../api/misc';\nimport {getItems} from '../../api/inventory/itemApi';\n\nclass PurchaseOrderCreation extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            'popUp':false,\n            'new':false,\n            'current':0,\n            'status':[],\n            'vendor_selection':[\n                {\n                    'id':0,\n                    'name':'None'\n                }\n            ],\n            'item_selection':[\n                {\n                    'id':0,\n                    'name':\"None\"\n                }\n            ],\n            update : {\n                'purchase_order':{\n                    'invoiced_on': this.converter((new Date()).toISOString()),\n                    'completed_on': this.converter((new Date()).toISOString()),\n                    'discount_type':'percent'\n                },\n                'purchase_items':[{\n                    'id':\"Fake Key\"\n                }]\n            }\n        }\n        this.converter = this.converter.bind(this)\n        this.addPurchaseOrder = this.addPurchaseOrder.bind(this)\n        this.getItemData = this.getItemData.bind(this)\n        this.selectItem = this.selectItem.bind(this)\n        this.searchItem = this.searchItem.bind(this)\n        this.addPurchaseItem = this.addPurchaseItem.bind(this)\n        this.invoiceHandler = this.invoiceHandler.bind(this)\n        this.completeHandler = this.completeHandler.bind(this)\n        this.getVendorsData = this.getVendorsData.bind(this)\n        this.popUp = this.popUp.bind(this)\n        this.searchVendor = this.searchVendor.bind(this)\n        this.selectVendor = this.selectVendor.bind(this)\n        this.onChange = this.onChange.bind(this)\n        this.updatePurchaseOrder = this.updatePurchaseOrder.bind(this)\n        this.onChangePI = this.onChangePI.bind(this)\n        this.postPurchaseItem = this.postPurchaseItem.bind(this)\n        this.deletePurchaseItem = this.deletePurchaseItem.bind(this)\n        this.refreshTable = this.refreshTable.bind(this)\n    }\n\n    async componentDidMount(){\n        var request_json = {\n            'action':'get',\n        }\n        await getPurchaseOrderStatus(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    ...this.state,\n                    'status':data.data\n                })\n            }  \n        })\n    }\n\n    async getVendorsData (request_json) {\n        await getVendors(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'vendor_selection':data['vendors'],\n                })\n            }  \n        })\n    }\n\n    selectVendor(id,name){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_order':{\n                    ...this.state.update.purchase_order,\n                    'vendor':id,\n                    'vendor_name':name\n                }\n            }\n        })\n    }\n\n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_order':{\n                    ...this.state.update.purchase_order,\n                    [e.target.name] : [e.target.value][0]\n                }\n            }\n        })\n    }\n\n    converter(date){\n        return ( new Date(Date.parse(date)))\n    }\n\n    popUp(id){\n        var key\n        for (key in this.state.update.purchase_items){\n            if (this.state.update.purchase_items[key].id === id){\n                this.setState({\n                    ...this.state,\n                    'current':key,\n                    'popUp':true\n                })        \n                return\n            }\n        }\n    }\n\n    searchVendor(e){\n        if ((e.target.value).length > 2 ){\n            var request_json = {\n                'action':'get',\n                'start':0,\n                'end':10,\n                'filter':'name',\n                'first_name':(e.target.value)\n            }\n            this.getVendorsData(request_json)\n        }\n    }\n    \n    invoiceHandler(date){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_order':{\n                    ...this.state.update.purchase_order,\n                    'invoiced_on' : date\n                }\n            }\n        })\n    }\n    \n    completeHandler(date){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_order':{\n                    ...this.state.update.purchase_order,\n                    'completed_on' : date\n                }\n            }\n        })\n    }\n\n    updatePurchaseOrder(){\n        var request_json = {\n            ...this.state.update.purchase_order,\n            'action':'edit',\n            'purchase_order_id':this.state.update.purchase_order.id\n        }\n        updatePurchaseOrder(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                alert(\"Purchase Order Details Has Been Updated.\")\n            }\n            else{\n                alert(\"Error : \",data.error)\n            }\n        })\n    }\n    addPurchaseOrder(){\n        var request_json = {\n            ...this.state.update.purchase_order,\n            'action':'add',\n        }\n        createPurchaseOrder(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                alert(\"Purchase Order Has Been Added.\")\n                data['p_orders'][0]['invoiced_on'] = this.converter(data['p_orders'][0]['invoiced_on'])\n                data['p_orders'][0]['completed_on'] = this.converter(data['p_orders'][0]['completed_on'])\n                this.setState({\n                    ...this.state,\n                    'update':{\n                        ...this.state.update,\n                        'purchase_order':data['p_orders'][0]\n                    }\n                })\n            }\n            else{\n                alert(\"Error : \",data.error)\n            }\n        })\n    }\n\n    onChangePI(e){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_items':{\n                    ...this.state.update.purchase_items,\n                    [this.state.current] : {\n                        ...this.state.update.purchase_items[this.state.current],\n                        [e.target.name] : [e.target.value][0]\n                    },\n                }\n            }\n        })\n    }\n\n    postPurchaseItem(is_new=false){\n        var request_json;\n        if (is_new){\n            request_json = {\n                'action':'add',\n                'purchase_order':this.state.update.purchase_order.id,\n                ...this.state.update.purchase_items[this.state.current]\n            }\n            createPurchaseItem(JSON.stringify(request_json)).then(data => {\n                if (data['status']){\n                    alert(\"Purchase Item Has Been Added.\")\n                    this.refreshTable()\n                }\n                else{\n                    alert(data['error'])\n                }\n            })\n            return\n        }\n        request_json = {\n            'action':'edit',\n            ...this.state.update.purchase_items[this.state.current]\n        }\n        updatePurchaseItem(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                alert(\"Purchase Item Details Has Been Updated.\")\n                this.refreshTable()\n            }\n            else{\n                alert(data['error'])\n            }\n        })\n    }\n\n  \n    deletePurchaseItem(){\n        var request_json = {\n            purchase_items_id : [this.state.update.purchase_items[this.state.current].id]\n        }\n        deletePurchaseItems(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                alert(\"Purchase Item Has Beed Deleted.\")\n                this.refreshTable()\n            }\n            else{\n                alert(data['error'])\n            }\n        })\n    }\n\n\n    addPurchaseItem(){\n        var current =0;\n        var item,p_list=[];\n        for (item in this.state.update.purchase_items){\n            if (item.id){\n                if (item.id !== \"Fake Key\"){\n                    current = current + 1\n                    p_list.push(item)\n                }\n            }\n        }\n        this.setState({\n            'current':current,\n            'new':true,\n            'popUp':true,\n            'update':{\n                ...this.state.update,\n                'purchase_items':[\n                    ...p_list,\n                    {\n                        'item_name':\"None\",\n                        'discount_type':'percentage',\n                        'status':'incomplete'\n                    }\n                ]\n            }\n        })\n    }\n\n    columns = [\n        {\n            id:1,\n            name:\"Item Name\",\n            prop: 'item_name'\n        },\n        {\n            id:2,\n            name:\"Quantity\",\n            prop: 'quantity'\n        },\n        {\n            id:3,\n            name:\"Stock\",\n            prop: 'stock'\n        },\n        {\n            id:4,\n            name:\"Defective\",\n            prop: 'defective'\n        },   \n        {\n            id:5,\n            name:\"Sold\",\n            prop: 'sold'\n        },\n        {\n            id:6,\n            name:\"Discount\",\n            prop: 'discount'\n        },\n        {\n            id:7,\n            name:\"Purchase Price\",\n            prop: 'purchase_price'\n        },\n        {\n            id:8,\n            name:\"Status\",\n            prop: 'status'\n        }\n    ]\n\n    searchItem(e){\n        if ((e.target.value).length > 2 ){\n            var request_json = {\n                'action':'get',\n                'start':0,\n                'end':10,\n                'filter':'name',\n                'name':(e.target.value)\n            }\n            this.getItemData(request_json)\n        }\n    }\n\n    async getItemData(request_json){\n        await getItems(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    ...this.state,\n                    'item_selection':data['items'],\n                })\n            }  \n        })\n    }\n    selectItem(id, name){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_items':{\n                    ...this.state.update.purchase_items,\n                    [this.state.current] : {\n                        ...this.state.update.purchase_items[this.state.current],\n                        'item_name' : name,\n                        'item':id\n                    },\n                }\n            }\n        })\n\n    }\n\n    async refreshTable(){\n        var id = this.state.update.purchase_order.id;\n        var items= [];\n        const request_json = {\n            'action':'get',\n            'purchase_order_id':id\n        }\n        await getPurchaseOrder(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                items = data['p_items']\n            }\n        })\n        if (items.length === 0){\n            items = [{\n                'id':\"Fake Key\",\n                'item_name': ''\n            }]\n        }\n        await this.setState({\n            ...this.state,\n            'popUp':false,\n            'update':{\n                ...this.state.update,\n                'purchase_items':items\n            }\n        })\n    }\n\n\n    render() {\n        const item_selection = this.state.item_selection\n        const itemPopUp = <Popup trigger={ <button>Select Item</button>} closeOnDocumentClick>\n        <div>\n            <input placeholder=\"Item Name\" id='item_search_box' name='item_serach_box' onChange={this.searchItem}></input>\n            <div className={style.dropdown_content} id='vendor_dropdown'>\n                    {item_selection.map(\n                        item => (\n                            // use css to get rid of <a>\n                            <a key={item.id} onClick={() => {this.selectItem(item.id, item.name)}} >{item.name}</a>\n                        )\n                    )}\n            </div>\n        </div>\n        </Popup>\n        const popUpItem = <div>\n                <button onClick={() => {this.refreshTable()}} >Back</button><br></br><br></br>\n                Item : {this.state.update.purchase_items[this.state.current].item_name}  {this.state.new ? itemPopUp: <span></span>}<br></br>\n                Quantity : <input name=\"quantity\" placeholder={this.state.update.purchase_items[this.state.current].quantity} type=\"number\" onChange={this.onChangePI} required></input><br></br>\n                Defective : <input name=\"defective\" placeholder={this.state.update.purchase_items[this.state.current].defective} type=\"number\"  onChange={this.onChangePI} required></input><br></br>\n                \n                Discount Type :<select name='discount_type' id=\"discount_type\" defaultValue={this.state.update.purchase_items[this.state.current].discount_type}  onChange={this.onChangePI}>\n                                    <option value=\"percent\">Percentage</option>\n                                    <option value=\"fixed\">Fixed</option>\n                                </select> <br></br>\n                Discount : <input placeholder={this.state.update.purchase_items[this.state.current].discount} name=\"discount\" onChange={this.onChangePI} ></input><br></br>\n                Purchase Price : <input placeholder={this.state.update.purchase_items[this.state.current].purchase_price} name=\"purchase_price\" onChange={this.onChangePI} required></input> <br></br>\n                Status : <select defaultValue= {this.state.update.purchase_items[this.state.current].status} name=\"status\" onChange={this.onChangePI}>\n                    <option value=\"delivered\">Delivered</option>\n                    <option value=\"incomplete\">Incomplete</option>\n                    <option value=\"addedtocirculation\">Added To Circulation</option>\n                </select><br></br>\n                {this.state.new ? <button onClick={() => {this.postPurchaseItem(true)}} >Add</button> : <button onClick={() => {this.postPurchaseItem()}} >Update</button>}<br></br><br></br>\n                <button onClick={() => {this.deletePurchaseItem()}} >Delete</button>\n            </div>\n        const vendor_selection = this.state.vendor_selection\n        const vendorPopup = <Popup trigger={this.state.update.purchase_order.id ?<button>Change Vendor</button> :<button>Select Vendor</button> } closeOnDocumentClick>\n        <div>\n            <input placeholder=\"Vendor's first name\" id='vendor_serach_box' name='vendor_serach_box' onChange={this.searchVendor}></input>\n            <div className={style.dropdown_content} id='vendor_dropdown'>\n                    {vendor_selection.map(\n                        vendor => (\n                            // use css to get rid of <a>\n                            <a key={vendor.id} onClick={() => {this.selectVendor(vendor.id, vendor.name)}} >{vendor.name}</a>\n                        )\n                    )}\n            </div>\n        </div>\n        </Popup>\n        const status = this.state.status\n        return (\n            <div>\n                Vendor : {this.state.update.purchase_order.vendor_name}\n                {vendorPopup}<br></br>\n                Invoiced On : \n                <DatePicker\n                name='invoiced_on'\n                selected={this.state.update.purchase_order.invoiced_on}\n                onChange={this.invoiceHandler}\n                required\n                />\n                Completed On : \n                <DatePicker\n                name='completed_on'\n                selected={this.state.update.purchase_order.completed_on}\n                onChange={this.completeHandler}\n                required\n                /><br></br>\n                Total Cost : <input placeholder={this.state.update.purchase_order.total_cost} name=\"total_cost\" onChange={this.onChange} /><br></br>\n                Discount Type :<select name='discount_type' id=\"discount_type\" onChange={this.onChange} defaultValue={this.state.update.purchase_order.discount_type}>\n                                <option value=\"percent\">Percentage</option>\n                                <option value=\"fixed\">Fixed</option>\n                            </select> <br></br>\n                Discount : <input placeholder={this.state.update.purchase_order.discount} name=\"discount\" onChange={this.onChange}></input><br></br>\n                Status : <select name='status' id=\"status\" onChange={this.onChange} value={this.state.update.purchase_order.status} required >\n                                {status.map(\n                                    x => (\n                                    <option key={x.id} value={parseInt(x.id)}>{x.name}</option>\n                                    )\n                                )}\n                            </select> <br></br><br></br>\n                {this.state.update.purchase_order.id ? <button onClick={() => {this.updatePurchaseOrder()}}>Update Purchase Order</button> : <button onClick={() => {this.addPurchaseOrder()}}>Create Purchase Order</button>}\n                <br></br><br></br>\n                <hr></hr>\n                <h3>Items</h3> {this.state.update.purchase_order.id ? <button  onClick={() => {this.addPurchaseItem()}}>Add New Items</button> : ''} \n                {this.state.update.purchase_order.id ?this.state.popUp ? popUpItem :<List data={this.state.update.purchase_items} header={this.columns} page={false} popUp={this.popUp} /> : \"Fill in Purchase Order first to add new items.\" }\n                \n            </div>\n        )\n    }\n}\nexport default PurchaseOrderCreation","import { baseRequest } from '../base';\n// api for Invoices \n\nconst getInvoices = async data => {\n    try {\n      return await baseRequest('apiv1/sales/invoices','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  \n  const deleteInvoices = async data => {\n    try {\n      return await baseRequest('apiv1/sales/invoices/delete','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const createInvoice = async data => {\n      try {\n        return await baseRequest('apiv1/sales/invoices','POST', data);\n      } catch(e){\n        alert(e)\n      }\n  };\n  \n  \n  const getInvoice = async data => {\n    try {\n      return await baseRequest('apiv1/sales/invoice','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const updateInvoice= async data => {\n    try {\n      return await baseRequest('apiv1/sales/invoice','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  const getInvoiceStatus= async data => {\n    try {\n      return await baseRequest('apiv1/sales/invoices/status','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \nexport {getInvoiceStatus, getInvoices, createInvoice, deleteInvoices, updateInvoice, getInvoice}\n  ","import { baseRequest } from '../base';\n// api for Invoices \n\nconst getInvoiceItems = async data => {\n    try {\n      return await baseRequest('apiv1/sales/invoiceitems','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  \n  const deleteInvoiceItems = async data => {\n    try {\n      return await baseRequest('apiv1/sales/invoiceitems/delete','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const createInvoiceItem = async data => {\n      try {\n        return await baseRequest('apiv1/sales/invoiceitems','POST', data);\n      } catch(e){\n        alert(e)\n      }\n  };\n  \n  \n  const getInvoiceItem = async data => {\n    try {\n      return await baseRequest('apiv1/sales/invoiceitem','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const updateInvoiceItem= async data => {\n    try {\n      return await baseRequest('apiv1/sales/invoiceitem','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \nexport {getInvoiceItems, createInvoiceItem, deleteInvoiceItems, updateInvoiceItem, getInvoiceItem}\n  ","import { baseRequest } from '../base';\n// api for items \n\nconst getPlaces = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/places','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  \n  const deletePlaces = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/places/delete','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const createPlace = async data => {\n      try {\n        return await baseRequest('apiv1/inventory/places','POST', data);\n      } catch(e){\n        alert(e)\n      }\n  };\n  \n  \n  const getPlace = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/place','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const updatePlace = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/place','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n\n  const assignPlace = async data => {\n    try { \n      return await  baseRequest('apiv1/inventory/places/assign','POST', data);\n    } catch (e){\n      alert(e)\n    }\n  }\n  \nexport {getPlaces, createPlace, deletePlaces, updatePlace, getPlace, assignPlace}\n  ","import React, { Component } from 'react'\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport List from '../list';\nimport Popup from \"reactjs-popup\";\nimport style from '../purchaseOrder/css/popUp.module.css';\nimport {getCustomers} from '../../api/sales/customer';\nimport {updateInvoice, getInvoice, deleteInvoices, getInvoiceStatus} from '../../api/sales/invoice';\nimport {updateInvoiceItem, deleteInvoiceItems, createInvoiceItem} from '../../api/sales/invoiceItem'\nimport {getItems} from '../../api/inventory/itemApi';\nimport {getPlaces} from '../../api/inventory/placeApi';\nimport { getDiscounts, getTaxes } from '../../api/misc'\n\nclass PopUpEdit extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            'tax_start':0,\n            'tax_end':5,\n            'discount_start':0,\n            'discount_end':5,\n            'tax_loaded':false,\n            'discount_loaded':false,\n            'discount_page':[],\n            'tax_page':[],\n            'discount_selection':[],\n            'tax_selection':[],\n            'place_selection':[],\n            'stock_selection':[],\n            'sold_from_selection':[],\n            'popUp':false,\n            'new':false,\n            'current':0,\n            'status':[],\n            'customer_selection':[\n                {\n                    'id':0,\n                    'name':'None'\n                }\n            ],\n            'item_selection':[\n                {\n                    'id':0,\n                    'name':\"None\"\n                }\n            ],\n            update : {\n                'invoice':{\n                    ...this.props.invoice,\n                    'invoiced_on': this.converter(this.props.invoice.invoiced_on),\n                    'due_on': this.converter(this.props.invoice.due_on)\n                },\n                'invoice_items':this.props.invoice_items\n            }\n        }\n        this.update_table = this.update_table.bind(this)\n        this.stateman = this.stateman.bind(this)\n        this.refreshTable = this.refreshTable.bind(this)\n        this.getItemData = this.getItemData.bind(this)\n        this.selectItem = this.selectItem.bind(this)\n        this.searchItem = this.searchItem.bind(this)\n        this.addInvoiceItem = this.addInvoiceItem.bind(this)\n        this.invoiceHandler = this.invoiceHandler.bind(this)\n        this.dueOnHandler = this.dueOnHandler.bind(this)\n        this.getCustomerData = this.getCustomerData.bind(this)\n        this.converter = this.converter.bind(this)\n        this.popUp = this.popUp.bind(this)\n        this.searchCustomer = this.searchCustomer.bind(this)\n        this.selectCustomer = this.selectCustomer.bind(this)\n        this.onChange = this.onChange.bind(this)\n        this.updateInvoice = this.updateInvoice.bind(this)\n        this.onChangePI = this.onChangePI.bind(this)\n        this.postInvoiceItem = this.postInvoiceItem.bind(this)\n        this.deleteInvoiceItem = this.deleteInvoiceItem.bind(this)\n        this.onChangePlace = this.onChangePlace.bind(this)\n        this.removeEntry = this.removeEntry.bind(this)\n        this.addEntryDiscount = this.addEntryDiscount.bind(this)\n        this.addEntryTax = this.addEntryTax.bind(this)\n    }\n\n    removeEntry(id, dis){\n        if (dis){\n            var temp = this.state.update.invoice_items[this.state.current].applied_discount\n            temp.pop(dis)\n            var temp2 = this.state.update.invoice_items[this.state.current].discount\n            temp2.pop(temp.id)\n            this.setState({\n                ...this.state,\n                'update':{\n                    ...this.state.update,\n                    invoice_items:{\n                        ...this.state.update.invoice_items,\n                        [dis]:{\n                            'applied_discount':temp,\n                            'discount':temp2\n                        }\n                    }\n                }\n            })\n        }\n        else {\n            {\n                var temp = this.state.update.invoice_items[this.state.current].applied_tax\n                temp.pop(dis)\n                var temp2 = this.state.update.invoice_items[this.state.current].taxes\n                temp2.pop(temp.id)\n                this.setState({\n                    ...this.state,\n                    'update':{\n                        ...this.state.update,\n                        invoice_items:{\n                            ...this.state.update.invoice_items,\n                            [dis]:{\n                                'applied_tax':temp,\n                                'taxes':temp2\n                            }\n                        }\n                    }\n                })\n            }\n        }\n    }\n\n    async componentDidMount(){\n        var request_json = {\n            'action':'get',\n        }\n        await getInvoiceStatus(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    ...this.state,\n                    'status':data.data\n                })\n            }\n            else{\n                alert(data)\n            }\n        })\n    }\n\n    async getCustomerData (request_json) {\n        await getCustomers(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'customer_selection':data['customers'],\n                })\n            } \n            \n            else{\n                alert(data['error'])\n            } \n        })\n    }\n\n    selectCustomer(id,name){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice':{\n                    ...this.state.update.invoice,\n                    'customer':id,\n                    'customer_name':name\n                }\n            }\n        })\n    }\n\n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice':{\n                    ...this.state.update.invoice,\n                    [e.target.name] : [e.target.value][0]\n                }\n            }\n        })\n    }\n\n    converter(date){\n        return ( new Date(Date.parse(date)))\n    }\n\n    popUp(id){\n        var key\n        for (key in this.state.update.invoice_items){\n            if (this.state.update.invoice_items[key].id === id){\n                this.setState({\n                    ...this.state,\n                    'current':key,\n                    'popUp':true\n                }) \n                break;       \n            }\n        }\n        var request_json = {\n            'action':'get',\n            'filter':'item',\n            'item_id':this.state.update.invoice_items[key].item  \n        }\n        this.getPlacesData(request_json)\n    }\n\n    async getPlacesData(request_json) {\n        await getPlaces(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'sold_from_selection':data['placements'],\n                })\n                var temp = [], key, x;\n                for(key in data['placements']){\n                    x = {'id': data['placements'][key]['placed_on'], 'str_placed_on':data['placements'][key]['str_placed_on']}\n                    temp[data['placements'][key]['placed_on']] = x\n                    }\n                temp = temp.filter(function (el) {\n                    return el != null;\n                });\n                this.setState({\n                    'place_selection':temp\n                })\n                this.update_stock(data)\n            }\n        })\n\n    }\n\n    // data = sold_From_selection\n    update_stock(data){\n        var sold_from\n        if (this.state.update.invoice_items[this.state.current]['sold_from']){\n            sold_from = this.state.update.invoice_items[this.state.current]['sold_from']\n        }else {\n            sold_from = data['placements'][0]['placed_on']\n        }\n        var temp=[];\n        var p ;\n        for (p in data['placements']){\n            if (sold_from === data['placements'][p]['placed_on']){\n                var string  = data['placements'][p]['purchase_item_details']['purchase_price'] + \"/-  \" + data['placements'][p]['purchase_item_details']['quantity'] + \" \" + data['placements'][p]['purchase_item_details']['vendor'] \n                temp.push({\n                    'id': data['placements'][p]['purchase_item'],\n                    'str':string\n                })\n            }\n            \n        }\n        this.setState({\n            ...this.state,\n            'stock_selection': temp\n        })\n    }  \n    \n\n    async onChangePlace(e){\n        await this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice_items':{\n                    ...this.state.update.invoice_items,\n                    [this.state.current] : {\n                        ...this.state.update.invoice_items[this.state.current],\n                        [e.target.name] : [e.target.value][0]\n                    },\n                }\n            }\n        })\n        var temp=[],p;\n                for (p in this.state.sold_from_selection){\n                    if ( this.state.update.invoice_items[this.state.current]['sold_from'] === this.state.sold_from_selection[p]['placed_on']){\n                        var string  = this.state.sold_from_selection[p]['purchase_item_details']['purchase_price'] + \"/-  \" + this.state.sold_from_selection[p]['purchase_item_details']['quantity'] + \" \" + this.state.sold_from_selection[p]['purchase_item_details']['vendor'] \n                        temp.push({\n                            'id': this.state.sold_from_selection[p]['purchase_item'],\n                            'str':string\n                        })\n                    }\n                    \n                }\n                this.setState({\n                    ...this.state,\n                    'stock_selection': temp\n                }) \n    }\n\n    searchCustomer(e){\n        if ((e.target.value).length > 2 ){\n            var request_json = {\n                'action':'get',\n                'start':0,\n                'end':10,\n                'filter':'name',\n                'name':(e.target.value)\n            }\n            this.getCustomerData(request_json)\n        }\n    }\n    \n    invoiceHandler(date){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice':{\n                    ...this.state.update.invoice,\n                    'invoiced_on' : date\n                }\n            }\n        })\n    }\n    \n    dueOnHandler(date){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice':{\n                    ...this.state.update.invoice,\n                    'due_on' : date\n                }\n            }\n        })\n    }\n\n    updateInvoice(){\n        var request_json = {\n            ...this.state.update.invoice,\n            'action':'edit',\n            'invoice_id':this.state.update.invoice.id\n        }\n        updateInvoice(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                alert(\"Invoice Details Has Been Updated.\")\n                this.props.update(0)\n            }\n            else{\n                alert(data['error'])\n            }\n        })\n    }\n\n    onChangePI(e){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice_items':{\n                    ...this.state.update.invoice_items,\n                    [this.state.current] : {\n                        ...this.state.update.invoice_items[this.state.current],\n                        [e.target.name] : [e.target.value][0]\n                    },\n                }\n            }\n        })\n    }\n\n    postInvoiceItem(is_new=false){\n        var request_json\n        if (is_new){\n            request_json = {\n                'action':'add',\n                'invoice':this.state.update.invoice.id,\n                ...this.state.update.invoice_items[this.state.current],\n            }\n            request_json['applied_tax'] = []\n            request_json['applied_discount'] = []\n            createInvoiceItem(JSON.stringify(request_json)).then(data => {\n                if (data['status']){\n                    alert(\"Invoice Item Has Been Added.\")\n                    this.refreshTable()\n                }\n                else{\n                    alert(data['error'])\n                }\n            })\n            return\n        }\n        request_json = {\n            'action':'edit',\n            'invoice':this.state.update.invoice.id,\n            'invoice_item_id':this.state.update.invoice_items[this.state.current].id,\n            ...this.state.update.invoice_items[this.state.current]\n        }\n        request_json['applied_tax'] = []\n        request_json['applied_discount'] = []\n        updateInvoiceItem(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                alert(\"Invoice Item Details Has Been Updated.\")\n                this.refreshTable()\n            }\n            else{\n                alert(data['error'])\n            }\n        })\n    }\n\n    deleteInvoiceItem(){\n        var request_json = {\n            invoice_items_id : [this.state.update.invoice_items[this.state.current].id]\n        }\n        deleteInvoiceItems(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                alert(\"Invoice Item Has Beed Deleted.\")\n                this.refreshTable()\n            }\n            else{\n                alert(data['error'])\n            }\n        })\n    }\n\n\n    addInvoiceItem(){\n        var current =0;\n        var item,p_list=[];\n        for (item in this.state.update.invoice_items){\n            if (item.id){\n                if (item.id !== \"Fake Key\"){\n                    current = current + 1\n                    p_list.push(item)\n                }\n            }\n        }\n        this.setState({\n            'current':current,\n            'new':true,\n            'popUp':true,\n            'update':{\n                ...this.state.update,\n                'invoice_items':[\n                    ...p_list,\n                    {\n                        'item_name':\"None\",\n                        'discount_type':'percentage',\n                        'status':'incomplete',\n                        'applied_tax':[],\n                        'applied_discount':[],\n                        'purchase_item':'',\n                    }\n                ]\n            }\n        })\n    }\n    columns = [\n        {\n            id:1,\n            name:\"Item Name\",\n            prop: 'item_name'\n        },\n        {\n            id:2,\n            name:\"Quantity\",\n            prop: 'quantity'\n        },\n        {\n            id:8,\n            name:\"Price\",\n            prop: 'price'\n        },\n        {\n            id:3,\n            name:\"Sold From\",\n            prop: 'sold_from_name'\n        },\n        {\n            id:4,\n            name:\"Tax Total\",\n            prop: 'tax_total'\n        },\n        ,\n        {\n            id:5,\n            name:\"Disount Amount\",\n            prop: 'discount_amount'\n        },   \n        {\n            id:6,\n            name:\"Sub Total\",\n            prop: 'sub_total'\n        },\n        {\n            id:7,\n            name:\"Total\",\n            prop: 'total'\n        }\n    ]\n\n    searchItem(e){\n        if ((e.target.value).length > 2 ){\n            var request_json = {\n                'action':'get',\n                'start':0,\n                'end':10,\n                'filter':'name',\n                'name':(e.target.value)\n            }\n            this.getItemData(request_json)\n        }\n    }\n\n    async getItemData(request_json){\n        await getItems(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    ...this.state,\n                    'item_selection':data['items'],\n                })\n            }  \n            \n            else{\n                alert(data['error'])\n            }\n        })\n    }\n    selectItem(id, name){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice_items':{\n                    ...this.state.update.invoice_items,\n                    [this.state.current] : {\n                        ...this.state.update.invoice_items[this.state.current],\n                        'item_name' : name,\n                        'item':id\n                    },\n                }\n            }\n        })\n        var request_json = {\n            'action':'get',\n            'filter':'item',\n            'item_id':id\n        }\n        this.getPlacesData(request_json)\n    }\n\n    async refreshTable(){\n        var id = this.state.update.invoice.id;\n        var items= [];\n        const request_json = {\n            'action':'get',\n            'invoice_id':id\n        }\n        await getInvoice(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                items = data['invoice_items']\n            }\n            \n            else{\n                alert(data['error'])\n            }\n        })\n        if (items.length === 0){\n            items = [{\n                'id':\"Fake Key\",\n                'item_name': ''\n            }]\n        }\n        await this.setState({\n            ...this.state,\n            'popUp':false,\n            'update':{\n                ...this.state.update,\n                'invoice_items':items\n            }\n        })\n    }\n\n\n    stateman(){\n        console.log(this.state)\n    }\n\n\n    discount_columns =[\n        {\n            'id':1,\n            'name':'Name',\n            'prop':'name'\n        },{\n            'id':2,\n            'name':'Rate',\n            'prop':'rate'\n        },{\n            'id':3,\n            'name':'Code',\n            'prop':'code'\n        },{\n            'id':4,\n            'name':'Type',\n            'prop':'discount_type'\n        },{\n            'id':5,\n            'name':'Remove',\n            'prop':'removeButton'\n        },\n    ]\n\n    tax_columns =[\n        {\n            'id':1,\n            'name':'Name',\n            'prop':'name'\n        },{\n            'id':2,\n            'name':'Rate',\n            'prop':'rate'\n        },{\n            'id':3,\n            'name':'Code',\n            'prop':'code'\n        },{\n            'id':4,\n            'name':'Type',\n            'prop':'tax_type'\n        },{\n            'id':5,\n            'name':'Remove',\n            'prop':'removeButton'\n        },\n    ]\n\n    \n    add_discount_columns =[\n        {\n            'id':1,\n            'name':'Name',\n            'prop':'name'\n        },{\n            'id':2,\n            'name':'Rate',\n            'prop':'rate'\n        },{\n            'id':3,\n            'name':'Code',\n            'prop':'code'\n        },{\n            'id':4,\n            'name':'Type',\n            'prop':'discount_type'\n        }\n    ]\n\n    add_tax_columns =[\n        {\n            'id':1,\n            'name':'Name',\n            'prop':'name'\n        },{\n            'id':2,\n            'name':'Rate',\n            'prop':'rate'\n        },{\n            'id':3,\n            'name':'Code',\n            'prop':'code'\n        },{\n            'id':4,\n            'name':'Type',\n            'prop':'tax_type'\n        }\n    ]\n\n    async update_table (by,dis) {\n        var x = by<0?-1:1\n        if (dis){\n            if (by===0){\n                await this.setState({\n                    'discoount_loaded':false,\n                    discount_start: 0,\n                    discount_end: 10,\n                    discount_page:1\n                })\n            }\n            else{\n                if (this.state.discount_start+by>-1){\n                    await this.setState({\n                        'discount_loaded':false,\n                        discount_start: this.state.discount_start+by,\n                        discount_end: this.state.discount_end+by,\n                        discount_page:this.state.discount_page+x\n                    })\n                }\n                else{\n                    alert(\"Cannot move futher from here.\")\n                    return\n                }\n            }\n            var  request_json = {\n                'action':'get',\n                'filter':'none',\n                'start':this.state.discount_start,\n                'end':this.state.discount_end\n            }\n            this.getDiscountsData(request_json)\n        }\n    else { \n        if (by===0){\n            await this.setState({\n                'tax_loaded':false,\n                tax_start: 0,\n                tax_end: 10,\n                tax_page:1\n            })\n        }\n        else{\n            if (this.state.tax_start+by>-1){\n                await this.setState({\n                    'tax_loaded':false,\n                    tax_start: this.state.tax_start+by,\n                    tax_end: this.state.tax_end+by,\n                    tax_page:this.state.tax_page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.tax_start,\n            'end':this.state.tax_end\n        }\n        this.getTaxesData(request_json)\n\n    }\n    }\n    \n    async getDiscountsData (request_json) {\n        await getDiscounts(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'discount_selection':data['discounts'],\n                    'discount_loaded':true\n                })\n            }\n            else{\n                alert(data['error'])\n            }\n        })\n    }\n    async getTaxesData (request_json) {\n        await getTaxes(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'tax_selection':data['taxes'],\n                    'tax_loaded':true\n                })\n            }  \n        })\n    }\n \n    addEntryDiscount(id){\n        var dis;\n        for (dis in this.state.discount_selection){\n            if (this.state.discount_selection[dis].id === id){\n                var temp = this.state.update.invoice_items[this.state.current]['applied_discount']\n                var x = this.state.discount_selection[dis]\n                temp.push(x)\n                var temp2 = this.state.update.invoice_items[this.state.current]['discount']\n                temp2.push(id)\n                this.setState({\n                    ...this.state,\n                    update:{\n                        ...this.state.update,\n                        'invoice_items':{\n                            ...this.state.update.invoice_items,\n                            [this.state.current] : {\n                                ...this.state.update.invoice_items[this.state.current],\n                                'discount':temp2,\n                                'applied_discount': temp\n                            }\n                        }\n                    }\n                })\n            }\n        }\n    }\n\n    addEntryTax(id){\n        var dis;\n        for (dis in this.state.tax_selection){\n            if (this.state.tax_selection[dis].id === id){\n                var temp = this.state.update.invoice_items[this.state.current]['applied_tax']\n                var x = this.state.tax_selection[dis]\n                temp.push(x)\n                var temp2 = this.state.update.invoice_items[this.state.current]['taxes']\n                temp2.push(id)\n                this.setState({\n                    ...this.state,\n                    update:{\n                        ...this.state.update,\n                        'invoice_items':{\n                            ...this.state.update.invoice_items,\n                            [this.state.current] : {\n                                ...this.state.update.invoice_items[this.state.current],\n                                'tax':temp2,\n                                'applied_tax': temp\n                            }\n                        }\n                    }\n                })\n            }\n        }\n    }\n\n\n    render() {\n        const item_selection = this.state.item_selection\n        const itemPopUp = <Popup trigger={ <button>Select Item</button>} closeOnDocumentClick>\n        <div>\n            <input placeholder=\"Item Name\" id='item_search_box' name='item_serach_box' onChange={this.searchItem}></input>\n            <div className={style.dropdown_content} id='item_dropdown'>\n                    {item_selection.map(\n                        item => (\n                            // use css to get rid of <a>\n                        <a key={item.id} onClick={() => {this.selectItem(item.id, item.name)}} >{item.name} {item.sales_price}</a>\n                        )\n                    )}\n            </div>\n        </div>\n        </Popup>\n\n        var places = this.state.place_selection\n        const selectPlace =<select name='sold_from' id=\"sold_from\" onChange={this.onChangePlace} value={this.state.update.invoice_items[this.state.current].sold_from}  >\n            <option key=\"Fake Key\" value='Fake Value'>Select Place</option>\n                {places.map(\n                    x => (\n                    <option key={x.id} value={x.id}>{x.str_placed_on}</option>\n                    )\n                )}\n            </select>\n\n            \n        var stocks  = this.state.stock_selection\n        var stockValue = this.state.update.invoice_items[this.state.current].purchase_item ? this.state.update.invoice_items[this.state.current].purchase_item : ''\n        const selectStock = <select name='purchase_item' id=\"purchase_item\" onChange={this.onChangePI} value={stockValue} >\n                <option key='Fake Key' value=\"Fake Value\">Select Stock</option>\n                {stocks.map(\n                    x => (\n                    <option key={x.id} value={parseInt(x.id)}>{x.str}</option>\n                    )\n                )}\n            </select>\n        const addPopupDiscount = <div>\n            <h3> Click To Apply New Discount</h3>\n                            <List data={this.state.discount_selection} header={this.add_discount_columns} page={false} popUp={this.addEntryDiscount} />\n                            <button onClick={()=> {this.update_table(-5,true)}}>Previous</button><span>      {this.state.discount_page}       </span><button  onClick={()=> {this.update_table(5,true)}} >Next</button>\n                        </div>\n        \n        const addPopupTax = <div>\n            <h3>Click To Apply New Tax </h3>\n                            <List data={this.state.tax_selection} header={this.add_tax_columns} page={false} popUp={this.addEntryTax} />\n                            <button onClick={()=> {this.update_table(-5,false)}}>Previous</button><span>      {this.state.tax_page}       </span><button  onClick={()=> {this.update_table(5,false)}} >Next</button>\n                        </div>\n        \n\n        var dis;\n        const discounts =this.state.update.invoice_items[this.state.current].applied_discount\n        for (dis in discounts){\n            discounts[dis] = {\n                ...discounts[dis],\n                'removeButton':<button onClick={() => {this.removeEntry(dis,true)}}> Remove </button>\n            }\n        }\n        \n        const taxes = this.state.update.invoice_items[this.state.current].applied_tax\n        for (dis in taxes){\n            taxes[dis] = {\n                ...taxes[dis],\n                'removeButton':<button onClick={()=>{this.removeEntry(dis,false)}}> Remove </button>\n            }\n        }\n        const popUpItem = <div>\n                <button onClick={() => {this.refreshTable()}} >Back</button><br></br><br></br>\n                Item : {this.state.update.invoice_items[this.state.current].item_name}  {itemPopUp}<br></br>\n                Sold From: \n                Place : {this.state.update.invoice_items[this.state.current].item ? selectPlace : \"Select An Item First\" } <br></br>\n                Stock :   {this.state.update.invoice_items[this.state.current].item ? selectStock : \"Select An Item First\" } <br></br>\n                <br></br>\n\n                Quantity : <input name=\"quantity\" placeholder={this.state.update.invoice_items[this.state.current].quantity} type=\"number\" onChange={this.onChangePI} required min='1' ></input><br></br>\n                Price : <input name=\"price\" placeholder={this.state.update.invoice_items[this.state.current].price} type=\"number\" onChange={this.onChangePI} required></input><br></br>\n                Tax Total : {this.state.update.invoice_items[this.state.current].tax_total} <br></br>\n                Sub Total : {this.state.update.invoice_items[this.state.current].sub_total} <br></br>\n                Discount Amount : {this.state.update.invoice_items[this.state.current].discount_amount}<br></br>\n                Total without discount : {this.state.update.invoice_items[this.state.current].total_without_discount}<br></br>\n                Total : {this.state.update.invoice_items[this.state.current].total}<br></br>\n                <br></br>\n                Applied Discounts : :<List data={discounts} header={this.discount_columns} page={false} popUp={this.popUp} removeEntry={this.removeEntry} /><button onClick={() =>{this.update_table(0, true)}} >Apply New Discount</button> <br></br><br></br>\n                {this.state.discount_loaded ? addPopupDiscount : <span></span>}<br></br>\n                Applied Taxes : :<List data={taxes} header={this.tax_columns} page={false} popUp={this.popUp} removeEntry={this.removeEntry} /><br></br><button onClick={() => {this.update_table(0, false)}}>Apply New Tax</button><br></br><br></br>\n                {this.state.tax_loaded ? addPopupTax : <span></span>}<br></br>\n                {this.state.new ? <button onClick={() => {this.postInvoiceItem(true)}} >Add</button> : <button onClick={() => {this.postInvoiceItem()}} >Update</button>}<br></br><br></br>\n                <button onClick={() => {this.deleteInvoiceItem()}} >Delete</button>\n            </div>\n        const customer_selection = this.state.customer_selection\n        const customerPopup = <Popup trigger={<button>Change Customer</button>} closeOnDocumentClick>\n        <div>\n            <input placeholder=\"Customer's first name\" id='customer_serach_box' name='customer_serach_box' onChange={this.searchCustomer}></input>\n            <div className={style.dropdown_content} id='customer_dropdown'>\n                    {customer_selection.map(\n                        customer => (\n                            <a href=\"#\" key={customer.id} onClick={() => {this.selectCustomer(customer.id, customer.name)}} >{customer.name}</a>\n                        )\n                    )}\n            </div>\n        </div>\n        </Popup>\n        const status = this.state.status\n        return (\n            <div>\n                <h1>Invoice</h1>\n        <h3>{this.state.update.invoice.customer_name} </h3>\n                Added By : {this.state.update.invoice.added_by_name}<br></br>\n                Customer : {this.state.update.invoice.customer_name} {customerPopup}<br></br>\n                Order Number : {this.state.update.invoice.order_number}<br></br>\n                <br></br><br></br>\n                Invoiced On : \n                <DatePicker\n                name='invoiced_on'\n                selected={this.state.update.invoice.invoiced_on}\n                onChange={this.invoiceHandler}\n                />\n                Due On : \n                <DatePicker\n                name='completed_on'\n                selected={this.state.update.invoice.due_on}\n                onChange={this.dueOnHandler}\n                /><br></br><br></br>\n                \n                Total Amount : {this.state.update.invoice.total_amount}<br></br>\n                Total Tax : {this.state.update.invoice.tax_total}<br></br>\n                Total Discount: {this.state.update.invoice.discount_total}<br></br>\n                Paid Amount : {this.state.update.invoice.paid_amount}<br></br>\n\n                <br></br>\n                Additional Discount : <input placeholder={this.state.update.invoice.additional_discount} name='additional_discount' onChange={this.onChange} ></input>\n                <br></br><br></br>\n\n                \n                Status : <select name='status' id=\"status\" onChange={this.onChange} value={this.state.update.invoice.status}  >\n                                {status.map(\n                                    x => (\n                                    <option key={x.id} value={parseInt(x.id)}>{x.name}</option>\n                                    )\n                                )}\n                            </select> <br></br><br></br>\n                <button onClick={() => {this.updateInvoice()}}>Update Invoice</button><br></br><br></br>\n                <button onClick={() => {this.props.delete(this.props.invoice.id)}}>Delete</button>\n                <hr></hr>\n                <h3>Items</h3> <button  onClick={() => {this.addInvoiceItem()}}>Add New Items</button>\n                {this.state.popUp ? popUpItem :<List data={this.state.update.invoice_items} header={this.columns} page={false} popUp={this.popUp} />}\n            \n            <button onClick={() => {this.stateman()}}>State</button>\n            </div>\n\n        )\n    }\n}\nexport default PopUpEdit","import React, { Component } from 'react'\nimport List from '../list';\nimport { getInvoice, deleteInvoices, updateInvoice } from '../../api/sales/invoice';\nimport PopUpEdit from './popUpEdit';\n\nclass InvoiceListing extends Component {\n    \n    constructor(props){\n        super(props)\n        this.popUp = this.popUp.bind(this)\n        this.state = {\n            'popUp':false,\n            'invoices':{},\n            'invoice_items':[],\n            'update':{}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.invoiceDelete = this.invoiceDelete.bind(this)\n    }\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value]\n            }\n        })\n    }\n\n    \n    async onSubmit(e){\n        e.preventDefault();\n            var data = this.state.vendor\n            var ele;\n            for (ele in this.state.update){\n                data[ele] = this.state.update[ele][0]\n            }\n            data = {...data, 'action':'edit'}\n            updateInvoice(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        alert(\"Vendor Data updated.\")\n                        this.props.update(0)\n                    }\n                    else{\n                        alert(data['error'])\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    invoiceDelete(id){\n        var data = {\n            'invoices_id':[\n                id\n            ]\n        }\n        deleteInvoices(JSON.stringify(data)).then(data=>{\n            try {\n                if (data['status']){\n                    alert('Invoice has been Deleted.')\n                    this.props.update(0)\n                }   else{\n                    alert(data['error'])\n                }\n            }catch(e){\n                console.log(e)\n            }\n        })\n    }\n    \n    async popUp(id, uuid=0){\n        const data = {\n            'action':'get',\n            'invoice_id':id,\n        }\n        var data_main;\n        await getInvoice(JSON.stringify(data)).then(data => {\n            if (data['status']){\n                console.log(data)\n                data_main=data\n            }\n            else{\n                alert(data['error'])\n            }\n        })\n        if (data_main['invoice_items'].length === 0) {\n            console.log(\"blank\")\n            data_main['invoice_items'] = [{\n                id:0\n            }]\n        }\n        await this.setState({\n            'popUp':true,\n            'invoice':data_main['invoice'][0],\n            'invoice_items':data_main['invoice_items']\n        })\n    }\n\n\n    columns = [\n        {\n            id:1,\n            name:\"Customer's Name\",\n            prop: 'customer_name'\n        },\n        {\n            id:2,\n            name:\"Sold By\",\n            prop: 'added_by_name'\n        },\n        {\n            id:3,\n            name:\"Paid Amount\",\n            prop: 'paid_amount'\n        },\n        {\n            id:4,\n            name:\"Order Number\",\n            prop: 'order_number'\n        },\n        {\n            id:5,\n            name:'Invoiced On',\n            prop:'invoiced_on_str'\n        },\n        {\n            id:6,\n            name:'Status',\n            prop:'status_name'\n        }\n    ]\n    \n\n    render() {\n        const list = <List data={this.props.data} header={this.columns}   popUp={this.popUp} update={this.props.update} page={this.props.page} />\n        const popUpRender = <PopUpEdit invoice={this.state.invoice} invoice_items={this.state.invoice_items} update={this.props.update} delete={this.invoiceDelete} ></PopUpEdit>\n        return (\n            <div>\n                {this.state.popUp ? popUpRender : list}\n            </div>\n        )\n    }\n}\n\nexport default InvoiceListing\n","import React, { Component } from 'react'\nimport {getInvoices} from '../../api/sales/invoice';\nimport {  connect } from 'react-redux';\nimport  InvoiceListing  from './invoiceListing';\nimport { Link} from 'react-router-dom';\n\nclass Invoices extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            'invoices':[],\n            'loaded':false,\n            'start':0,\n            'end':10,\n            'page':1\n        }\n        this.update_table = this.update_table.bind(this)\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n    }\n\n    async update_table (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                'loaded':false,\n                start: 0,\n                end: 10,\n                page:1\n            })\n        }\n        else{\n            if (this.state.start+by>-1){\n                await this.setState({\n                    'loaded':false,\n                    start: this.state.start+by,\n                    end: this.state.end+by,\n                    page:this.state.page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.start,\n            'end':this.state.end\n        }\n        this.getInvoiceData(request_json)\n    }\n    \n    async getInvoiceData (request_json) {\n        var invoice\n        await getInvoices(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                for (invoice in data['invoices']){\n                    data['invoices'][invoice]['invoiced_on_str']=(data['invoices'][invoice]['invoiced_on']).split('T')[0]\n                    data['invoices'][invoice]['due_on_str']=(data['invoices'][invoice]['due_on']).split('T')[0]\n                }\n                this.setState({\n                    'invoices':data['invoices'],\n                    'loaded':true\n                })\n            }\n            else{\n                alert(data['error'])\n            }  \n        })\n    }\n\n \n\nrender() {\n    const render_after_load = (\n        <div>\n            <InvoiceListing data={this.state.invoices} update={this.update_table} page={this.state.page} />\n        </div>\n    )\n\n    return(\n        <div>\n            <Link to='/invoices/create'>Create New Invoice</Link><br></br>\n            <button onClick={() => {this.update_table(0)}}>Refresh table</button><br></br>\n            {this.state.loaded ? render_after_load : \"Loading...\"}\n        </div>\n    )\n}\n}\n\n\nconst mapStateToProps = state => ({\n    user: state.user,\n})\n\nexport default connect(mapStateToProps)(Invoices)","import React, { Component } from 'react'\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport List from '../list';\nimport Popup from \"reactjs-popup\";\nimport style from '../purchaseOrder/css/popUp.module.css';\nimport {getCustomers} from '../../api/sales/customer';\nimport {createInvoice,  getInvoice, getInvoiceStatus} from '../../api/sales/invoice';\nimport {updateInvoiceItem, deleteInvoiceItems, createInvoiceItem} from '../../api/sales/invoiceItem'\nimport {getItems} from '../../api/inventory/itemApi';\nimport {getPlaces} from '../../api/inventory/placeApi';\nimport { getDiscounts, getTaxes } from '../../api/misc'\n\nclass InvoiceCreation extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            'tax_start':0,\n            'tax_end':5,\n            'discount_start':0,\n            'discount_end':5,\n            'tax_loaded':false,\n            'discount_loaded':false,\n            'discount_page':[],\n            'tax_page':[],\n            'discount_selection':[],\n            'tax_selection':[],\n            'place_selection':[],\n            'stock_selection':[],\n            'sold_from_selection':[],\n            'popUp':false,\n            'new':false,\n            'current':0,\n            'status':[],\n            'customer_selection':[\n                {\n                    'id':0,\n                    'name':'None'\n                }\n            ],\n            'item_selection':[\n                {\n                    'id':0,\n                    'name':\"None\"\n                }\n            ],\n            update : {\n                'invoice':{\n                    'invoiced_on': new Date(),\n                    'due_on': new Date()\n                },\n                'invoice_items':[[{\n                    'id':'Fake Key',\n                    'discount':[],\n                    'applied_discount':[],\n                    'tax':[],\n                    'applied_tax':[]\n                }]]\n            }\n        }\n        this.update_table = this.update_table.bind(this)\n        this.stateman = this.stateman.bind(this)\n        this.refreshTable = this.refreshTable.bind(this)\n        this.getItemData = this.getItemData.bind(this)\n        this.selectItem = this.selectItem.bind(this)\n        this.searchItem = this.searchItem.bind(this)\n        this.addInvoiceItem = this.addInvoiceItem.bind(this)\n        this.invoiceHandler = this.invoiceHandler.bind(this)\n        this.dueOnHandler = this.dueOnHandler.bind(this)\n        this.getCustomerData = this.getCustomerData.bind(this)\n        this.converter = this.converter.bind(this)\n        this.popUp = this.popUp.bind(this)\n        this.searchCustomer = this.searchCustomer.bind(this)\n        this.selectCustomer = this.selectCustomer.bind(this)\n        this.onChange = this.onChange.bind(this)\n        this.updateInvoice = this.updateInvoice.bind(this)\n        this.onChangePI = this.onChangePI.bind(this)\n        this.postInvoiceItem = this.postInvoiceItem.bind(this)\n        this.deleteInvoiceItem = this.deleteInvoiceItem.bind(this)\n        this.onChangePlace = this.onChangePlace.bind(this)\n        this.removeEntry = this.removeEntry.bind(this)\n        this.addEntryDiscount = this.addEntryDiscount.bind(this)\n        this.addEntryTax = this.addEntryTax.bind(this)\n    }\n\n    removeEntry(id, dis){\n        if (dis){\n            var temp = this.state.update.invoice_items[this.state.current].applied_discount\n            temp.pop(dis)\n            var temp2 = this.state.update.invoice_items[this.state.current].discount\n            temp2.pop(temp.id)\n            this.setState({\n                ...this.state,\n                'update':{\n                    ...this.state.update,\n                    invoice_items:{\n                        ...this.state.update.invoice_items,\n                        [dis]:{\n                            'applied_discount':temp,\n                            'discount':temp2\n                        }\n                    }\n                }\n            })\n        }\n        else {\n            {\n                var temp = this.state.update.invoice_items[this.state.current].applied_tax\n                temp.pop(dis)\n                var temp2 = this.state.update.invoice_items[this.state.current].taxes\n                temp2.pop(temp.id)\n                this.setState({\n                    ...this.state,\n                    'update':{\n                        ...this.state.update,\n                        invoice_items:{\n                            ...this.state.update.invoice_items,\n                            [dis]:{\n                                'applied_tax':temp,\n                                'taxes':temp2\n                            }\n                        }\n                    }\n                })\n            }\n        }\n    }\n\n    async componentDidMount(){\n        var request_json = {\n            'action':'get',\n        }\n        await getInvoiceStatus(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    ...this.state,\n                    'status':data.data\n                })\n            }\n            else{\n                alert(data)\n            }\n        })\n    }\n\n    async getCustomerData (request_json) {\n        await getCustomers(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'customer_selection':data['customers'],\n                })\n            } \n            \n            else{\n                alert(data['error'])\n            } \n        })\n    }\n\n    selectCustomer(id,name){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice':{\n                    ...this.state.update.invoice,\n                    'customer':id,\n                    'customer_name':name\n                }\n            }\n        })\n    }\n\n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice':{\n                    ...this.state.update.invoice,\n                    [e.target.name] : [e.target.value][0]\n                }\n            }\n        })\n    }\n\n    converter(date){\n        return ( new Date(Date.parse(date)))\n    }\n\n    popUp(id){\n        var key\n        for (key in this.state.update.invoice_items){\n            if (this.state.update.invoice_items[key].id === id){\n                this.setState({\n                    ...this.state,\n                    'current':key,\n                    'popUp':true\n                }) \n                break;       \n            }\n        }\n        var request_json = {\n            'action':'get',\n            'filter':'item',\n            'item_id':this.state.update.invoice_items[key].item  \n        }\n        this.getPlacesData(request_json)\n    }\n\n    async getPlacesData(request_json) {\n        await getPlaces(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'sold_from_selection':data['placements'],\n                })\n                var temp = [], key, x;\n                for(key in data['placements']){\n                    x = {'id': data['placements'][key]['placed_on'], 'str_placed_on':data['placements'][key]['str_placed_on']}\n                    temp[data['placements'][key]['placed_on']] = x\n                    }\n                temp = temp.filter(function (el) {\n                    return el != null;\n                });\n                this.setState({\n                    'place_selection':temp\n                })\n                this.update_stock(data)\n            }\n        })\n\n    }\n\n    // data = sold_From_selection\n    update_stock(data){\n        console.log('data',data)\n        var sold_from\n        if (this.state.update.invoice_items[this.state.current]['sold_from']){\n            sold_from = this.state.update.invoice_items[this.state.current]['sold_from']\n        }else {\n            sold_from = data['placements'][0]['placed_on']\n            console.log('default',sold_from)\n        }\n        var temp=[];\n        var p ;\n        for (p in data['placements']){\n            console.log(sold_from, \"  \", data['placements'][p]['placed_on'])\n            if (parseInt(sold_from) === parseInt(data['placements'][p]['placed_on'])){\n                var string  = data['placements'][p]['purchase_item_details']['purchase_price'] + \"/-  \" + data['placements'][p]['purchase_item_details']['quantity'] + \" \" + data['placements'][p]['purchase_item_details']['vendor'] \n                temp.push({\n                    'id': data['placements'][p]['purchase_item'],\n                    'str':string\n                })\n                console.log(temp)\n            }\n            \n        }\n        this.setState({\n            ...this.state,\n            'stock_selection': temp\n        })\n    }  \n    \n\n    async onChangePlace(e){\n        await this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice_items':{\n                    ...this.state.update.invoice_items,\n                    [this.state.current] : {\n                        ...this.state.update.invoice_items[this.state.current],\n                        [e.target.name] : [e.target.value][0]\n                    },\n                }\n            }\n        })\n        var temp=[],p,sold_from;\n        if (this.state.update.invoice_items[this.state.current]['sold_from']){\n            sold_from = this.state.update.invoice_items[this.state.current]['sold_from']\n        }else {\n            sold_from = this.state.sold_from[0]['placed_on']\n            console.log('default',sold_from)\n        }\n        for (p in this.state.sold_from_selection){\n            if ( parseInt(sold_from) === parseInt(this.state.sold_from_selection[p]['placed_on'])){\n                var string  = this.state.sold_from_selection[p]['purchase_item_details']['purchase_price'] + \"/-  \" + this.state.sold_from_selection[p]['purchase_item_details']['quantity'] + \" \" + this.state.sold_from_selection[p]['purchase_item_details']['vendor'] \n                temp.push({\n                    'id': this.state.sold_from_selection[p]['purchase_item'],\n                    'str':string\n                })\n            }\n            \n        }\n        this.setState({\n            ...this.state,\n            'stock_selection': temp\n        }) \n    }\n\n    searchCustomer(e){\n        if ((e.target.value).length > 2 ){\n            var request_json = {\n                'action':'get',\n                'start':0,\n                'end':10,\n                'filter':'name',\n                'name':(e.target.value)\n            }\n            this.getCustomerData(request_json)\n        }\n    }\n    \n    invoiceHandler(date){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice':{\n                    ...this.state.update.invoice,\n                    'invoiced_on' : date\n                }\n            }\n        })\n    }\n    \n    dueOnHandler(date){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice':{\n                    ...this.state.update.invoice,\n                    'due_on' : date\n                }\n            }\n        })\n    }\n\n    updateInvoice(){\n        var request_json = {\n            ...this.state.update.invoice,\n            'action':'add',\n            'invoice_id':this.state.update.invoice.id\n        }\n        createInvoice(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                alert(\"Invoice Details Has Been Updated.\")\n                window.location.pathname = '/invoices'\n            }\n            else{\n                alert(data['error'])\n            }\n        })\n    }\n\n    onChangePI(e){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice_items':{\n                    ...this.state.update.invoice_items,\n                    [this.state.current] : {\n                        ...this.state.update.invoice_items[this.state.current],\n                        [e.target.name] : [e.target.value][0]\n                    },\n                }\n            }\n        })\n    }\n\n    postInvoiceItem(is_new=false){\n        var request_json\n        if (is_new){\n            request_json = {\n                'action':'add',\n                'invoice':this.state.update.invoice.id,\n                ...this.state.update.invoice_items[this.state.current],\n            }\n            request_json['applied_tax'] = []\n            request_json['applied_discount'] = []\n            createInvoiceItem(JSON.stringify(request_json)).then(data => {\n                if (data['status']){\n                    alert(\"Invoice Item Has Been Added.\")\n                    this.refreshTable()\n                }\n                else{\n                    alert(data['error'])\n                }\n            })\n            return\n        }\n        request_json = {\n            'action':'edit',\n            'invoice':this.state.update.invoice.id,\n            'invoice_item_id':this.state.update.invoice_items[this.state.current].id,\n            ...this.state.update.invoice_items[this.state.current]\n        }\n        request_json['applied_tax'] = []\n        request_json['applied_discount'] = []\n        updateInvoiceItem(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                alert(\"Invoice Item Details Has Been Updated.\")\n                this.refreshTable()\n            }\n            else{\n                alert(data['error'])\n            }\n        })\n    }\n\n    deleteInvoiceItem(){\n        var request_json = {\n            invoice_items_id : [this.state.update.invoice_items[this.state.current].id]\n        }\n        deleteInvoiceItems(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                alert(\"Invoice Item Has Beed Deleted.\")\n                this.refreshTable()\n            }\n            else{\n                alert(data['error'])\n            }\n        })\n    }\n\n\n    addInvoiceItem(){\n        var current =0;\n        var item,p_list=[];\n        for (item in this.state.update.invoice_items){\n            if (item.id){\n                if (item.id !== \"Fake Key\"){\n                    current = current + 1\n                    p_list.push(item)\n                }\n            }\n        }\n        this.setState({\n            'current':current,\n            'new':true,\n            'popUp':true,\n            'update':{\n                ...this.state.update,\n                'invoice_items':[\n                    ...p_list,\n                    {\n                        'item_name':\"None\",\n                        'discount_type':'percentage',\n                        'status':'incomplete',\n                        'applied_tax':[],\n                        'applied_discount':[],\n                        'purchase_item':'',\n                        'discount':[],\n                        'taxes':[]\n                    }\n                ]\n            }\n        })\n    }\n    columns = [\n        {\n            id:1,\n            name:\"Item Name\",\n            prop: 'item_name'\n        },\n        {\n            id:2,\n            name:\"Quantity\",\n            prop: 'quantity'\n        },\n        {\n            id:8,\n            name:\"Price\",\n            prop: 'price'\n        },\n        {\n            id:3,\n            name:\"Sold From\",\n            prop: 'sold_from_name'\n        },\n        {\n            id:4,\n            name:\"Tax Total\",\n            prop: 'tax_total'\n        },\n        ,\n        {\n            id:5,\n            name:\"Disount Amount\",\n            prop: 'discount_amount'\n        },   \n        {\n            id:6,\n            name:\"Sub Total\",\n            prop: 'sub_total'\n        },\n        {\n            id:7,\n            name:\"Total\",\n            prop: 'total'\n        }\n    ]\n\n    searchItem(e){\n        if ((e.target.value).length > 2 ){\n            var request_json = {\n                'action':'get',\n                'start':0,\n                'end':10,\n                'filter':'name',\n                'name':(e.target.value)\n            }\n            this.getItemData(request_json)\n        }\n    }\n\n    async getItemData(request_json){\n        await getItems(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    ...this.state,\n                    'item_selection':data['items'],\n                })\n            }  \n            \n            else{\n                alert(data['error'])\n            }\n        })\n    }\n    selectItem(id, name){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice_items':{\n                    ...this.state.update.invoice_items,\n                    [this.state.current] : {\n                        ...this.state.update.invoice_items[this.state.current],\n                        'item_name' : name,\n                        'item':id\n                    },\n                }\n            }\n        })\n        var request_json = {\n            'action':'get',\n            'filter':'item',\n            'item_id':id\n        }\n        this.getPlacesData(request_json)\n    }\n\n    async refreshTable(){\n        var id = this.state.update.invoice.id;\n        var items= [];\n        const request_json = {\n            'action':'get',\n            'invoice_id':id\n        }\n        await getInvoice(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                items = data['invoice_items']\n            }\n            \n            else{\n                alert(data['error'])\n            }\n        })\n        if (items.length === 0){\n            items = [{\n                'id':\"Fake Key\",\n                'item_name': ''\n            }]\n        }\n        await this.setState({\n            ...this.state,\n            'popUp':false,\n            'update':{\n                ...this.state.update,\n                'invoice_items':items\n            }\n        })\n    }\n\n\n    stateman(){\n        console.log(this.state)\n    }\n\n\n    discount_columns =[\n        {\n            'id':1,\n            'name':'Name',\n            'prop':'name'\n        },{\n            'id':2,\n            'name':'Rate',\n            'prop':'rate'\n        },{\n            'id':3,\n            'name':'Code',\n            'prop':'code'\n        },{\n            'id':4,\n            'name':'Type',\n            'prop':'discount_type'\n        },{\n            'id':5,\n            'name':'Remove',\n            'prop':'removeButton'\n        },\n    ]\n\n    tax_columns =[\n        {\n            'id':1,\n            'name':'Name',\n            'prop':'name'\n        },{\n            'id':2,\n            'name':'Rate',\n            'prop':'rate'\n        },{\n            'id':3,\n            'name':'Code',\n            'prop':'code'\n        },{\n            'id':4,\n            'name':'Type',\n            'prop':'tax_type'\n        },{\n            'id':5,\n            'name':'Remove',\n            'prop':'removeButton'\n        },\n    ]\n\n    \n    add_discount_columns =[\n        {\n            'id':1,\n            'name':'Name',\n            'prop':'name'\n        },{\n            'id':2,\n            'name':'Rate',\n            'prop':'rate'\n        },{\n            'id':3,\n            'name':'Code',\n            'prop':'code'\n        },{\n            'id':4,\n            'name':'Type',\n            'prop':'discount_type'\n        }\n    ]\n\n    add_tax_columns =[\n        {\n            'id':1,\n            'name':'Name',\n            'prop':'name'\n        },{\n            'id':2,\n            'name':'Rate',\n            'prop':'rate'\n        },{\n            'id':3,\n            'name':'Code',\n            'prop':'code'\n        },{\n            'id':4,\n            'name':'Type',\n            'prop':'tax_type'\n        }\n    ]\n\n    async update_table (by,dis) {\n        var x = by<0?-1:1\n        if (dis){\n            if (by===0){\n                await this.setState({\n                    'discoount_loaded':false,\n                    discount_start: 0,\n                    discount_end: 10,\n                    discount_page:1\n                })\n            }\n            else{\n                if (this.state.discount_start+by>-1){\n                    await this.setState({\n                        'discount_loaded':false,\n                        discount_start: this.state.discount_start+by,\n                        discount_end: this.state.discount_end+by,\n                        discount_page:this.state.discount_page+x\n                    })\n                }\n                else{\n                    alert(\"Cannot move futher from here.\")\n                    return\n                }\n            }\n            var  request_json = {\n                'action':'get',\n                'filter':'none',\n                'start':this.state.discount_start,\n                'end':this.state.discount_end\n            }\n            this.getDiscountsData(request_json)\n        }\n    else { \n        if (by===0){\n            await this.setState({\n                'tax_loaded':false,\n                tax_start: 0,\n                tax_end: 10,\n                tax_page:1\n            })\n        }\n        else{\n            if (this.state.tax_start+by>-1){\n                await this.setState({\n                    'tax_loaded':false,\n                    tax_start: this.state.tax_start+by,\n                    tax_end: this.state.tax_end+by,\n                    tax_page:this.state.tax_page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.tax_start,\n            'end':this.state.tax_end\n        }\n        this.getTaxesData(request_json)\n\n    }\n    }\n    \n    async getDiscountsData (request_json) {\n        await getDiscounts(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'discount_selection':data['discounts'],\n                    'discount_loaded':true\n                })\n            }\n            else{\n                alert(data['error'])\n            }\n        })\n    }\n    async getTaxesData (request_json) {\n        await getTaxes(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'tax_selection':data['taxes'],\n                    'tax_loaded':true\n                })\n            }  \n        })\n    }\n \n    addEntryDiscount(id){\n        var dis;\n        for (dis in this.state.discount_selection){\n            if (this.state.discount_selection[dis].id === id){\n                var temp = this.state.update.invoice_items[this.state.current]['applied_discount']\n                var x = this.state.discount_selection[dis]\n                temp.push(x)\n                var temp2 = this.state.update.invoice_items[this.state.current]['discount']\n                temp2.push(id)\n                this.setState({\n                    ...this.state,\n                    update:{\n                        ...this.state.update,\n                        'invoice_items':{\n                            ...this.state.update.invoice_items,\n                            [this.state.current] : {\n                                ...this.state.update.invoice_items[this.state.current],\n                                'discount':temp2,\n                                'applied_discount': temp\n                            }\n                        }\n                    }\n                })\n            }\n        }\n    }\n\n    addEntryTax(id){\n        var dis;\n        for (dis in this.state.tax_selection){\n            if (this.state.tax_selection[dis].id === id){\n                var temp = this.state.update.invoice_items[this.state.current]['applied_tax']\n                var x = this.state.tax_selection[dis]\n                temp.push(x)\n                var temp2 = this.state.update.invoice_items[this.state.current]['taxes']\n                temp2.push(id)\n                this.setState({\n                    ...this.state,\n                    update:{\n                        ...this.state.update,\n                        'invoice_items':{\n                            ...this.state.update.invoice_items,\n                            [this.state.current] : {\n                                ...this.state.update.invoice_items[this.state.current],\n                                'tax':temp2,\n                                'applied_tax': temp\n                            }\n                        }\n                    }\n                })\n            }\n        }\n    }\n\n\n    render() {\n        const item_selection = this.state.item_selection\n        const itemPopUp = <Popup trigger={ <button>Select Item</button>} closeOnDocumentClick>\n        <div>\n            <input placeholder=\"Item Name\" id='item_search_box' name='item_serach_box' onChange={this.searchItem}></input>\n            <div className={style.dropdown_content} id='item_dropdown'>\n                    {item_selection.map(\n                        item => (\n                            // use css to get rid of <a>\n                        <a key={item.id} onClick={() => {this.selectItem(item.id, item.name)}} >{item.name} {item.sales_price}</a>\n                        )\n                    )}\n            </div>\n        </div>\n        </Popup>\n\n        var places = this.state.place_selection\n        const selectPlace =<select name='sold_from' id=\"sold_from\" onChange={this.onChangePlace} value={this.state.update.invoice_items[this.state.current].sold_from}  >\n            <option key=\"Fake Key\" value='Fake Value'>Select Place</option>\n                {places.map(\n                    x => (\n                    <option key={x.id} value={x.id}>{x.str_placed_on}</option>\n                    )\n                )}\n            </select>\n\n            \n        var stocks  = this.state.stock_selection\n        var stockValue = this.state.update.invoice_items[this.state.current].purchase_item ? this.state.update.invoice_items[this.state.current].purchase_item : ''\n        const selectStock = <select name='purchase_item' id=\"purchase_item\" onChange={this.onChangePI} value={stockValue} >\n                <option key='Fake Key' value=\"Fake Value\">Select Stock</option>\n                {stocks.map(\n                    x => (\n                    <option key={x.id} value={parseInt(x.id)}>{x.str}</option>\n                    )\n                )}\n            </select>\n        const addPopupDiscount = <div>\n            <h3> Click To Apply New Discount</h3>\n                            <List data={this.state.discount_selection} header={this.add_discount_columns} page={false} popUp={this.addEntryDiscount} />\n                            <button onClick={()=> {this.update_table(-5,true)}}>Previous</button><span>      {this.state.discount_page}       </span><button  onClick={()=> {this.update_table(5,true)}} >Next</button>\n                        </div>\n        \n        const addPopupTax = <div>\n            <h3>Click To Apply New Tax </h3>\n                            <List data={this.state.tax_selection} header={this.add_tax_columns} page={false} popUp={this.addEntryTax} />\n                            <button onClick={()=> {this.update_table(-5,false)}}>Previous</button><span>      {this.state.tax_page}       </span><button  onClick={()=> {this.update_table(5,false)}} >Next</button>\n                        </div>\n        \n\n        var dis;\n        const discounts =this.state.update.invoice_items[this.state.current].applied_discount\n        for (dis in discounts){\n            discounts[dis] = {\n                ...discounts[dis],\n                'removeButton':<button onClick={() => {this.removeEntry(dis,true)}}> Remove </button>\n            }\n        }\n        \n        const taxes = this.state.update.invoice_items[this.state.current].applied_tax\n        for (dis in taxes){\n            taxes[dis] = {\n                ...taxes[dis],\n                'removeButton':<button onClick={()=>{this.removeEntry(dis,false)}}> Remove </button>\n            }\n        }\n        const popUpItem = <div>\n                <button onClick={() => {this.refreshTable()}} >Back</button><br></br><br></br>\n                Item : {this.state.update.invoice_items[this.state.current].item_name}  {itemPopUp}<br></br>\n                Sold From: \n                Place : {this.state.update.invoice_items[this.state.current].item ? selectPlace : \"Select An Item First\" } <br></br>\n                Stock :   {this.state.update.invoice_items[this.state.current].item ? selectStock : \"Select An Item First\" } <br></br>\n                <br></br>\n\n                Quantity : <input name=\"quantity\" placeholder={this.state.update.invoice_items[this.state.current].quantity} type=\"number\" onChange={this.onChangePI} required min='1' ></input><br></br>\n                Price : <input name=\"price\" placeholder={this.state.update.invoice_items[this.state.current].price} type=\"number\" onChange={this.onChangePI} required></input><br></br>\n                Tax Total : {this.state.update.invoice_items[this.state.current].tax_total} <br></br>\n                Sub Total : {this.state.update.invoice_items[this.state.current].sub_total} <br></br>\n                Discount Amount : {this.state.update.invoice_items[this.state.current].discount_amount}<br></br>\n                Total without discount : {this.state.update.invoice_items[this.state.current].total_without_discount}<br></br>\n                Total : {this.state.update.invoice_items[this.state.current].total}<br></br>\n                <br></br>\n                Applied Discounts : :<List data={discounts} header={this.discount_columns} page={false} popUp={this.popUp} removeEntry={this.removeEntry} /><button onClick={() =>{this.update_table(0, true)}} >Apply New Discount</button> <br></br><br></br>\n                {this.state.discount_loaded ? addPopupDiscount : <span></span>}<br></br>\n                Applied Taxes : :<List data={taxes} header={this.tax_columns} page={false} popUp={this.popUp} removeEntry={this.removeEntry} /><br></br><button onClick={() => {this.update_table(0, false)}}>Apply New Tax</button><br></br><br></br>\n                {this.state.tax_loaded ? addPopupTax : <span></span>}<br></br>\n                {this.state.new ? <button onClick={() => {this.postInvoiceItem(true)}} >Add</button> : <button onClick={() => {this.postInvoiceItem()}} >Update</button>}<br></br><br></br>\n                <button onClick={() => {this.deleteInvoiceItem()}} >Delete</button>\n            </div>\n        const customer_selection = this.state.customer_selection\n        const customerPopup = <Popup trigger={<button>Select Customer</button>} closeOnDocumentClick>\n        <div>\n            <input placeholder=\"Customer's first name\" id='customer_serach_box' name='customer_serach_box' onChange={this.searchCustomer}></input>\n            <div className={style.dropdown_content} id='customer_dropdown'>\n                    {customer_selection.map(\n                        customer => (\n                            <a href=\"#\" key={customer.id} onClick={() => {this.selectCustomer(customer.id, customer.name)}} >{customer.name}</a>\n                        )\n                    )}\n            </div>\n        </div>\n        </Popup>\n        const status = this.state.status\n        return (\n            <div>\n                <h1>Invoice</h1>\n        <h3>{this.state.update.invoice.customer_name} </h3>\n                Added By : {this.state.update.invoice.added_by_name}<br></br>\n                Customer : {this.state.update.invoice.customer_name} {customerPopup}<br></br>\n                Order Number : {this.state.update.invoice.order_number}<br></br>\n                <br></br><br></br>\n                Invoiced On : \n                <DatePicker\n                name='invoiced_on'\n                selected={this.state.update.invoice.invoiced_on}\n                onChange={this.invoiceHandler}\n                />\n                Due On : \n                <DatePicker\n                name='completed_on'\n                selected={this.state.update.invoice.due_on}\n                onChange={this.dueOnHandler}\n                /><br></br><br></br>\n                \n                Total Amount : {this.state.update.invoice.total_amount}<br></br>\n                Total Tax : {this.state.update.invoice.tax_total}<br></br>\n                Total Discount: {this.state.update.invoice.discount_total}<br></br>\n                Paid Amount : {this.state.update.invoice.paid_amount}<br></br>\n\n                <br></br>\n                Additional Discount : <input placeholder={this.state.update.invoice.additional_discount} name='additional_discount' onChange={this.onChange} ></input>\n                <br></br><br></br>\n\n                \n                Status : <select name='status' id=\"status\" onChange={this.onChange} value={this.state.update.invoice.status}  >\n                                {status.map(\n                                    x => (\n                                    <option key={x.id} value={parseInt(x.id)}>{x.name}</option>\n                                    )\n                                )}\n                            </select> <br></br><br></br>\n                <button onClick={() => {this.updateInvoice()}}>Add Invoice</button><br></br><br></br>\n                <hr></hr>\n            <button onClick={() => {this.stateman()}}>State</button>\n            </div>\n\n        )\n    }\n}\nexport default InvoiceCreation","import React, { Component } from 'react'\nimport List from '../list';\nimport { getDiscount, updateDiscount,  deleteDiscounts } from '../../api/misc';\nimport {Button, TextField } from '@material-ui/core';\n\nclass DiscountList extends Component {\n    \n    constructor(props){\n        super(props)\n        this.popUp = this.popUp.bind(this)\n        this.state = {\n            'popUp':false,\n            'discount':{},\n            'update':{}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.discountDelete = this.discountDelete.bind(this)\n    }\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value]\n            }\n        })\n    }\n\n    \n    async onSubmit(e){\n        e.preventDefault();\n            var data = this.state.discount\n            var ele;\n            for (ele in this.state.update){\n                data[ele] = this.state.update[ele][0]\n            }\n            data = {...data, 'action':'edit','discount_id':data.id}\n            console.log(data)\n            updateDiscount(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        alert(\"Discount Data updated.\")\n                        this.props.update(0)\n                    }\n                    else{\n                        alert(data['error'])\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    discountDelete(id){\n        var data = {\n            'discounts_id':[\n                id\n            ]\n        }\n        deleteDiscounts(JSON.stringify(data)).then(data=>{\n            try {\n                if (data['status']){\n                    alert('Discount data deleted.')\n                    this.props.update(0)\n                }   else{\n                    alert(data['error'])\n                }\n            }catch(e){\n                console.log(e)\n            }\n        })\n    }\n    \n    async popUp(id, uuid=0){\n        const data = {\n            'action':'get',\n            'discount_id':id,\n        }\n        var data_main;\n        await getDiscount(JSON.stringify(data)).then(data => {\n            if (data['status']){\n                data_main=data\n            }\n        })\n        await this.setState({\n            'popUp':true,\n            'discount':data_main['discounts'][0]\n        })\n    }\n\n\n    columns = [\n        {\n            id:1,\n            name:\"Name\",\n            prop: 'name'\n        },\n        {\n            id:2,\n            name:\"Code\",\n            prop: 'code'\n        },\n        {\n            id:3,\n            name:\"Discount Type\",\n            prop: 'discount_type'\n        },\n        {\n            id:4,\n            name:\"Rate\",\n            prop: 'rate'\n        }      \n    ]\n    \n\n    render() {\n        const list = <List data={this.props.data} header={this.columns}   popUp={this.popUp} update={this.props.update} page={this.props.page} />\n        const popUpRender = <div>\n                        <button onClick={()=> {this.setState({'popUp':false})}}>Back</button><br></br>\n                        <h1>{this.state.discount.name}</h1>\n                        <form onSubmit={this.onSubmit}>\n                            Name: <TextField\n                                id ='name'\n                                name=\"name\"\n                                type='text'\n                                onChange={this.onChange}  \n                                placeholder={this.state.discount.name}          \n                            />\n                            Code : <TextField\n                                id ='code'\n                                name=\"code\"\n                                type='text'\n                                onChange={this.onChange}\n                                placeholder={this.state.discount.code} \n                            />\n                             Discount Type :<select name='discount_type' id=\"discount_type\" defaultValue={this.state.discount.discount_type}  onChange={this.onChange}>\n                                    <option value=\"percent\">Percentage</option>\n                                    <option value=\"fixed\">Fixed</option>\n                                </select> <br></br>\n                            Rate : <input placeholder={this.state.discount.rate} name=\"rate\" onChange={this.onChange} ></input><br></br>\n                            <br></br>\n                            <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                >\n                                Update\n                                </Button> <Button variant=\"contained\" color=\"secondary\" onClick={() => {this.discountDelete(this.state.discount.id)}}>\n                            Delete Discount\n                        </Button> \n                        \n                </form>\n            \n                        <br>\n                        </br>\n                    </div>\n        return (\n            <div>\n                {this.state.popUp ? popUpRender : list}\n            </div>\n        )\n    }\n}\n\nexport default DiscountList\n","import React, { Component } from 'react'\nimport {getDiscounts} from '../../api/misc';\nimport {  connect } from 'react-redux';\nimport  DiscountList  from './discountList';\nimport { Link} from 'react-router-dom';\n\nclass Discounts extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            'taxes':[],\n            'loaded':false,\n            'start':0,\n            'end':10,\n            'page':1\n        }\n        this.update_table = this.update_table.bind(this)\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n    }\n\n    async update_table (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                'loaded':false,\n                start: 0,\n                end: 10,\n                page:1\n            })\n        }\n        else{\n            if (this.state.start+by>-1){\n                await this.setState({\n                    'loaded':false,\n                    start: this.state.start+by,\n                    end: this.state.end+by,\n                    page:this.state.page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.start,\n            'end':this.state.end\n        }\n        this.getDiscountsData(request_json)\n    }\n    \n    async getDiscountsData (request_json) {\n        await getDiscounts(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'discounts':data['discounts'],\n                    'loaded':true\n                })\n            }  \n        })\n    }\n\n \n\nrender() {\n    const render_after_load = (\n        <div>\n            <DiscountList data={this.state.discounts} update={this.update_table} page={this.state.page} />\n        </div>\n    )\n\n    return(\n        <div>\n            <Link to='/discounts/create'>Add New Discount</Link><br></br>\n            <button onClick={() => {this.update_table(0)}}>Refresh table</button><br></br>\n            {this.state.loaded ? render_after_load : \"Loading...\"}\n\n        </div>\n    )\n}\n}\n\n\n\n\nconst mapStateToProps = state => ({\n    user: state.user,\n})\n\nexport default connect(mapStateToProps)(Discounts)","import React, { Component } from 'react'\nimport {  connect } from 'react-redux';\nimport {Button, TextField } from '@material-ui/core';\nimport { createDiscount } from '../../api/misc';\n\n\nclass DiscountCreation extends Component {\n\n    constructor (props){\n        super(props)\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.state = {\n            'update':{\n                'name':'',\n                'code':'',\n                'discount_type':'percent',\n                'rate':''\n            }\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n    }\n\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value][0]\n            }\n        })\n    }\n\n\n    async onSubmit(e){\n        e.preventDefault();\n            var data = {...this.state.update}\n            var ele;\n            for (ele in this.state.update){\n                data[ele] = this.state.update[ele]\n            }\n            data = {...data, 'action':'add'}\n            console.log(data)\n            createDiscount(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        alert(\"New DIscount type Added\")\n                    }\n                    else{\n                        alert(data['error'])\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    render() {\n            const popUpRender = <div>\n                        <form onSubmit={this.onSubmit}>\n                            Name: <TextField\n                                id ='name'\n                                name=\"name\"\n                                type='text'\n                                onChange={this.onChange}  \n                            />\n                            Code : <TextField\n                                id ='code'\n                                name=\"code\"\n                                type='text'\n                                onChange={this.onChange}\n                            />\n                             Discount Type :<select name='discount_type' id=\"discount_type\" value={this.state.update.discont_type}  onChange={this.onChange}>\n                                    <option value=\"percent\">Percentage</option>\n                                    <option value=\"fixed\">Fixed</option>\n                                </select> <br></br>\n                            Rate : <input  name=\"rate\" id=\"rate\" type='number' onChange={this.onChange} value={this.state.update.rate} ></input><br></br>\n                            <br></br>\n                            <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                >\n                                Create\n                            </Button>\n                </form>\n            \n                        <br>\n                        </br>\n                    </div>\n        return (\n            popUpRender\n        )\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    user: state.user\n})\n\nexport default connect(mapStateToProps)(DiscountCreation)","import React, { Component } from 'react'\nimport List from '../list';\nimport { getTax, updateTax,  deleteTaxes } from '../../api/misc';\nimport {Button, TextField } from '@material-ui/core';\n\nclass TaxList extends Component {\n    \n    constructor(props){\n        super(props)\n        this.popUp = this.popUp.bind(this)\n        this.state = {\n            'popUp':false,\n            'tax':{},\n            'update':{}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.taxDelete = this.taxDelete.bind(this)\n    }\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value]\n            }\n        })\n    }\n\n    \n    async onSubmit(e){\n        e.preventDefault();\n            var data = this.state.tax\n            var ele;\n            for (ele in this.state.update){\n                data[ele] = this.state.update[ele][0]\n            }\n            data = {...data, 'action':'edit','tax_id':data.id}\n            console.log(data)\n            updateTax(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        alert(\"Tax Data updated.\")\n                        this.props.update(0)\n                    }\n                    else{\n                        alert(data['error'])\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    taxDelete(id){\n        var data = {\n            'taxes_id':[\n                id\n            ]\n        }\n        deleteTaxes(JSON.stringify(data)).then(data=>{\n            try {\n                if (data['status']){\n                    alert('Tax data deleted.')\n                    this.props.update(0)\n                }   else{\n                    alert(data['error'])\n                }\n            }catch(e){\n                console.log(e)\n            }\n        })\n    }\n    \n    async popUp(id, uuid=0){\n        const data = {\n            'action':'get',\n            'tax_id':id,\n        }\n        var data_main;\n        await getTax(JSON.stringify(data)).then(data => {\n            if (data['status']){\n                data_main=data\n            }\n        })\n        await this.setState({\n            'popUp':true,\n            'tax':data_main['taxes'][0]\n        })\n    }\n\n\n    columns = [\n        {\n            id:1,\n            name:\"Name\",\n            prop: 'name'\n        },\n        {\n            id:2,\n            name:\"Code\",\n            prop: 'code'\n        },\n        {\n            id:3,\n            name:\"Tax Type\",\n            prop: 'tax_type'\n        },\n        {\n            id:4,\n            name:\"Rate\",\n            prop: 'rate'\n        }      \n    ]\n    \n\n    render() {\n        const list = <List data={this.props.data} header={this.columns}   popUp={this.popUp} update={this.props.update} page={this.props.page} />\n        const popUpRender = <div>\n                        <button onClick={()=> {this.setState({'popUp':false})}}>Back</button><br></br>\n                        <h1>{this.state.tax.name}</h1>\n                        <form onSubmit={this.onSubmit}>\n                            Name: <TextField\n                                id ='name'\n                                name=\"name\"\n                                type='text'\n                                onChange={this.onChange}  \n                                placeholder={this.state.tax.name}          \n                            />\n                            Code : <TextField\n                                id ='code'\n                                name=\"code\"\n                                type='text'\n                                onChange={this.onChange}\n                                placeholder={this.state.tax.code} \n                            />\n                             Tax Type :<select name='tax_type' id=\"tax_type\" defaultValue={this.state.tax.tax_type}  onChange={this.onChange}>\n                                    <option value=\"normal\">Normal</option>\n                                    <option value=\"fixed\">Fixed</option>\n                                </select> <br></br>\n                            Rate : <input placeholder={this.state.tax.rate} name=\"rate\" onChange={this.onChange} ></input><br></br>\n                            <br></br>\n                            <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                >\n                                Update\n                                </Button> <Button variant=\"contained\" color=\"secondary\" onClick={() => {this.taxDelete(this.state.tax.id)}}>\n                            Delete Tax\n                        </Button> \n                        \n                </form>\n            \n                        <br>\n                        </br>\n                    </div>\n        return (\n            <div>\n                {this.state.popUp ? popUpRender : list}\n            </div>\n        )\n    }\n}\n\nexport default TaxList\n","import React, { Component } from 'react'\nimport {getTaxes} from '../../api/misc';\nimport {  connect } from 'react-redux';\nimport  TaxList  from './taxList';\nimport { Link} from 'react-router-dom';\n\nclass Taxes extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            'taxes':[],\n            'loaded':false,\n            'start':0,\n            'end':10,\n            'page':1\n        }\n        this.update_table = this.update_table.bind(this)\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n    }\n\n    async update_table (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                'loaded':false,\n                start: 0,\n                end: 10,\n                page:1\n            })\n        }\n        else{\n            if (this.state.start+by>-1){\n                await this.setState({\n                    'loaded':false,\n                    start: this.state.start+by,\n                    end: this.state.end+by,\n                    page:this.state.page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.start,\n            'end':this.state.end\n        }\n        this.getTaxesData(request_json)\n    }\n    \n    async getTaxesData (request_json) {\n        await getTaxes(JSON.stringify(request_json)).then(data => {\n            console.log(data)\n            if (data['status']){\n                this.setState({\n                    'taxes':data['taxes'],\n                    'loaded':true\n                })\n            }  \n        })\n    }\n\n \n\nrender() {\n    const render_after_load = (\n        <div>\n            <TaxList data={this.state.taxes} update={this.update_table} page={this.state.page} />\n        </div>\n    )\n\n    return(\n        <div>\n            <Link to='/taxes/create'>Add New Tax</Link><br></br>\n            <button onClick={() => {this.update_table(0)}}>Refresh table</button><br></br>\n            {this.state.loaded ? render_after_load : \"Loading...\"}\n\n        </div>\n    )\n}\n}\n\n\n\n\nconst mapStateToProps = state => ({\n    user: state.user,\n})\n\nexport default connect(mapStateToProps)(Taxes)","import React, { Component } from 'react'\nimport {  connect } from 'react-redux';\nimport {Button, TextField } from '@material-ui/core';\nimport { createTax } from '../../api/misc';\n\n\nclass TaxCreation extends Component {\n\n    constructor (props){\n        super(props)\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.state = {\n            'update':{\n                'name':'',\n                'code':'',\n                'tax_type':'normal',\n                'rate':''\n            }\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n    }\n\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value][0]\n            }\n        })\n    }\n\n\n    async onSubmit(e){\n        e.preventDefault();\n            var data = {...this.state.update}\n            var ele;\n            for (ele in this.state.update){\n                data[ele] = this.state.update[ele]\n            }\n            data = {...data, 'action':'add'}\n            console.log(data)\n            createTax(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        alert(\"New Tax type Added\")\n                    }\n                    else{\n                        alert(data['error'])\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    render() {\n            const popUpRender = <div>\n                        <form onSubmit={this.onSubmit}>\n                            Name: <TextField\n                                id ='name'\n                                name=\"name\"\n                                type='text'\n                                onChange={this.onChange}  \n                            />\n                            Code : <TextField\n                                id ='code'\n                                name=\"code\"\n                                type='text'\n                                onChange={this.onChange}\n                            />\n                             Tax Type :<select name='tax_type' id=\"tax_type\" value={this.state.update.discont_type}  onChange={this.onChange}>\n                                    <option value=\"normal\">Normal</option>\n                                    <option value=\"fixed\">Fixed</option>\n                                </select> <br></br>\n                            Rate : <input  name=\"rate\" id=\"rate\" type='number' onChange={this.onChange} value={this.state.update.rate} ></input><br></br>\n                            <br></br>\n                            <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                >\n                                Create\n                            </Button>\n                </form>\n            \n                        <br>\n                        </br>\n                    </div>\n        return (\n            popUpRender\n        )\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    user: state.user\n})\n\nexport default connect(mapStateToProps)(TaxCreation)","import { baseRequest } from '../base';\n// api for items \n\nconst getItemCatagories = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/items/catagories','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  \n  const deleteItemCatagory = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/items/catagories/delete','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const createItemCatagory = async data => {\n      try {\n        return await baseRequest('apiv1/inventory/items/catagories','POST', data);\n      } catch(e){\n        alert(e)\n      }\n  };\n  \n  \n  const getItemCatagory = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/items/catagory','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const updateItemCatagory= async data => {\n    try {\n      return await baseRequest('apiv1/inventory/items/catagory','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \nexport { getItemCatagories, deleteItemCatagory, createItemCatagory, getItemCatagory, updateItemCatagory}\n  ","import React, { Component } from 'react'\nimport List from '../list';\nimport { getItem, updateItem,  deleteItems } from '../../api/inventory/itemApi';\nimport {getItemCatagories} from '../../api/inventory/itemCatagory'\nimport {Button, TextField } from '@material-ui/core';\n\nclass ItemList extends Component {\n    \n    constructor(props){\n        super(props)\n        this.popUp = this.popUp.bind(this)\n        this.state = {\n            'catagories':[],\n            'popUp':false,\n            'item':{\n                'catagory':''\n            },\n            'update':{}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.itemDelete = this.itemDelete.bind(this)\n    }\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value][0]\n            }\n        })\n    }\n\n    async componentDidMount(){\n\n        \n    }\n    \n    async onSubmit(e){\n        e.preventDefault();\n            var data = this.state.update\n            data = {...data, 'action':'edit','item_id':data.id}\n            updateItem(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        alert(\"Item Data updated.\")\n                        this.props.update(0)\n                    }\n                    else{\n                        alert(data['error'])\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    itemDelete(id){\n        var data = {\n            'items_id':[\n                id\n            ]\n        }\n        deleteItems(JSON.stringify(data)).then(data=>{\n            try {\n                if (data['status']){\n                    alert('Item data deleted.')\n                    this.props.update(0)\n                }   else{\n                    alert(data['error'])\n                }\n            }catch(e){\n                console.log(e)\n            }\n        })\n    }\n    \n    async popUp(id, uuid=0){\n        var data = {\n            'action':'get',\n            'item_id':id,\n        }\n        var data_main;\n        await getItem(JSON.stringify(data)).then(data => {\n            if (data['status']){\n                data_main=data\n            }\n        })\n        await this.setState({\n            'popUp':true,\n            'update':data_main['items'][0]\n        })\n        data = {\n            'action':'get',\n            'start':0,\n            'end':50\n        }\n        await getItemCatagories(JSON.stringify(data)).then(data=> {\n            try { \n                if (data['status']){\n                    this.setState({\n                        ...this.state,\n                        'catagories':data['item_catagories']\n                    })\n                }\n                else{\n                    alert(data['error'])\n                }\n            }catch(e){\n                console.log(e)\n            }\n        })\n    }\n\n\n    columns = [\n        {\n            id:1,\n            name:\"Name\",\n            prop: 'name'\n        },\n        {\n            id:2,\n            name:\"Catagory\",\n            prop: 'catagory_str'\n        },\n        {\n            id:3,\n            name:\"Price\",\n            prop: 'sales_price'\n        },\n        ,\n        {\n            id:4,\n            name:\"Stock\",\n            prop: 'stock'\n        },\n        {\n            id:5,\n            name:\"Sold\",\n            prop: 'sold'\n        }      \n    ]\n    \n\n    render() {\n        const catagories = this.state.catagories\n        const list = <List data={this.props.data} header={this.columns}   popUp={this.popUp} update={this.props.update} page={this.props.page} />\n        const popUpRender = <div>\n                        <button onClick={()=> {this.setState({'popUp':false})}}>Back</button><br></br>\n                        <h1>{this.state.item.name}</h1>\n                        <form onSubmit={this.onSubmit}>\n                            Name: <TextField\n                                id ='name'\n                                name=\"name\"\n                                type='text'\n                                onChange={this.onChange}  \n                                placeholder={this.state.update.name}          \n                            />\n                            Catagory : <select name='catagory' id=\"catagory\" onChange={this.onChange} value={this.state.update.catagory} required >\n                                {catagories.map(\n                                    x => (\n                                    <option key={x.id} value={parseInt(x.id)}>{x.name}</option>\n                                    )\n                                )}\n                            </select> <br></br><br></br>\n                            \n                            Sales Price : <input placeholder={this.state.update.sales_price} onChange={this.onChange}></input><br></br>\n                            Stock : {this.state.update.stock} <br></br>\n                            Sold : {this.state.update.sold} <br></br>\n\n                            <br></br>\n                            <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                >\n                                Update\n                                </Button> <Button variant=\"contained\" color=\"secondary\" onClick={() => {this.itemDelete(this.state.update.id)}}>\n                            Delete Item\n                        </Button> \n                        \n                </form>\n            \n                        <br>\n                        </br>\n                    </div>\n        return (\n            <div>\n                {this.state.popUp ? popUpRender : list}\n            </div>\n        )\n    }\n}\n\nexport default ItemList\n","import React, { Component } from 'react'\nimport {getItems} from '../../api//inventory/itemApi';\nimport {  connect } from 'react-redux';\nimport  ItemList  from './itemList';\nimport { Link} from 'react-router-dom';\n\nclass Items extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            'items':[],\n            'loaded':false,\n            'start':0,\n            'end':10,\n            'page':1\n        }\n        this.update_table = this.update_table.bind(this)\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n    }\n\n    async update_table (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                'loaded':false,\n                start: 0,\n                end: 10,\n                page:1\n            })\n        }\n        else{\n            if (this.state.start+by>-1){\n                await this.setState({\n                    'loaded':false,\n                    start: this.state.start+by,\n                    end: this.state.end+by,\n                    page:this.state.page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.start,\n            'end':this.state.end\n        }\n        this.getItemsData(request_json)\n    }\n    \n    async getItemsData (request_json) {\n        await getItems(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'items':data['items'],\n                    'loaded':true\n                })\n            }  \n        })\n    }\n\n \n\nrender() {\n    const render_after_load = (\n        <div>\n            <ItemList data={this.state.items} update={this.update_table} page={this.state.page} />\n        </div>\n    )\n\n    return(\n        <div>\n            <Link to='/items/create'>Add New Item</Link><br></br>\n            <button onClick={() => {this.update_table(0)}}>Refresh table</button><br></br>\n            {this.state.loaded ? render_after_load : \"Loading...\"}\n        </div>\n    )\n}\n}\n\n\n\n\nconst mapStateToProps = state => ({\n    user: state.user,\n})\n\nexport default connect(mapStateToProps)(Items)","import React, { Component } from 'react'\nimport {  connect } from 'react-redux';\nimport {Button, TextField } from '@material-ui/core';\nimport { createItem } from '../../api/inventory/itemApi';\nimport {getItemCatagories} from '../../api/inventory/itemCatagory'\n\n\nclass ItemCreation extends Component {\n\n    constructor (props){\n        super(props)\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.state = {\n            'catagories':[],\n            'update':{\n            }\n        }\n    }\n\n    async componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n        var data = {\n            'action':'get',\n            'start':0,\n            'end':50\n        }\n        await getItemCatagories(JSON.stringify(data)).then(data=> {\n            try { \n                if (data['status']){\n                    this.setState({\n                        ...this.state,\n                        'catagories':data['item_catagories']\n                    })\n                }\n                else{\n                    alert(data['error'])\n                }\n            }catch(e){\n                console.log(e)\n            }\n        })\n    }\n\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value][0]\n            }\n        })\n    }\n\n\n    async onSubmit(e){\n        e.preventDefault();\n            var data = {...this.state.update}\n            var ele;\n            for (ele in this.state.update){\n                data[ele] = this.state.update[ele]\n            }\n            data = {...data, 'action':'add'}\n            console.log(data)\n            createItem(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        alert(\"New Item Added\")\n                    }\n                    else{\n                        alert(data['error'])\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    render() {\n        const catagories = this.state.catagories\n        const popUpRender = <div>\n                        <form onSubmit={this.onSubmit}>\n                            Name: <TextField\n                                id ='name'\n                                name=\"name\"\n                                type='text'\n                                onChange={this.onChange}      \n                            />\n                            Catagory : <select name='catagory' id=\"catagory\" onChange={this.onChange} required >\n                                {catagories.map(\n                                    x => (\n                                    <option key={x.id} value={parseInt(x.id)}>{x.name}</option>\n                                    )\n                                )}\n                            </select> <br></br><br></br>\n                            \n                            Sales Price : <input name='sales_price' type='float' onChange={this.onChange}></input><br></br>\n\n                            <br></br>\n                            <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                >\n                                Create</Button>\n                </form>\n            \n                        <br>\n                        </br>\n                    </div>\n        return (\n            popUpRender\n        )\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    user: state.user\n})\n\nexport default connect(mapStateToProps)(ItemCreation)","import React, { Component } from 'react'\nimport List from '../list';\nimport { getItemCatagory, updateItemCatagory,  deleteItemCatagory } from '../../api/inventory/itemCatagory';\nimport {Button, TextField } from '@material-ui/core';\n\nclass ItemCatagoryList extends Component {\n    \n    constructor(props){\n        super(props)\n        this.popUp = this.popUp.bind(this)\n        this.state = {\n            'popUp':false,\n            'itemCatagory':{},\n            'update':{}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.itemCatDelete = this.itemCatDelete.bind(this)\n    }\n    \n    onChange(e)\n    {\n        this.setState({\n            'itemCatagory': {\n                ...this.state.itemCatagory,\n                [e.target.name] : [e.target.value][0]\n            }\n        })\n    }\n\n    \n    async onSubmit(e){\n        e.preventDefault();\n            var data = this.state.itemCatagory\n            data = {...data, 'action':'edit','item_catagory_id':data.id}\n            console.log(data)\n            updateItemCatagory(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        alert(\"ItemCatagory Data updated.\")\n                        this.props.update(0)\n                    }\n                    else{\n                        alert(data['error'])\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    itemCatDelete(id){\n        var data = {\n            'item_catagories_id':[\n                id\n            ]\n        }\n        deleteItemCatagory(JSON.stringify(data)).then(data=>{\n            try {\n                if (data['status']){\n                    alert('itemCatagory data deleted.')\n                    this.props.update(0)\n                }   else{\n                    alert(data['error'])\n                }\n            }catch(e){\n                console.log(e)\n            }\n        })\n    }\n    \n    async popUp(id, uuid=0){\n        const data = {\n            'action':'get',\n            'item_catagory_id':id,\n        }\n        var data_main;\n        await getItemCatagory(JSON.stringify(data)).then(data => {\n            console.log(data)\n            if (data['status']){\n                data_main=data\n            }\n        })\n        await this.setState({\n            'popUp':true,\n            'itemCatagory':data_main['item_catagories'][0]\n        })\n    }\n\n\n    columns = [\n        {\n            id:1,\n            name:\"Name\",\n            prop: 'name'\n        }  \n    ]\n    \n\n    render() {\n        const list = <List data={this.props.data} header={this.columns}   popUp={this.popUp} update={this.props.update} page={this.props.page} />\n        const popUpRender = <div>\n                        <button onClick={()=> {this.setState({'popUp':false})}}>Back</button><br></br>\n                        <h1>{this.state.update.name}</h1>\n                        <form onSubmit={this.onSubmit}>\n                            Name: <TextField\n                                id ='name'\n                                name=\"name\"\n                                type='text'\n                                onChange={this.onChange}  \n                                placeholder={this.state.itemCatagory.name}          \n                            />\n                            <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                >\n                                Update\n                                </Button> <Button variant=\"contained\" color=\"secondary\" onClick={() => {this.itemCatDelete(this.state.itemCatagory.id)}}>\n                            Delete Discount\n                        </Button> \n                        \n                </form>\n            \n                        <br>\n                        </br>\n                    </div>\n        return (\n            <div>\n                {this.state.popUp ? popUpRender : list}\n            </div>\n        )\n    }\n}\n\nexport default ItemCatagoryList\n","import React, { Component } from 'react'\nimport {getItemCatagories} from '../../api//inventory/itemCatagory';\nimport {  connect } from 'react-redux';\nimport  ItemCatagoryList  from './itemCatagoryList';\nimport { Link} from 'react-router-dom';\n\nclass ItemCatagories extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            'items':[],\n            'loaded':false,\n            'start':0,\n            'end':10,\n            'page':1\n        }\n        this.update_table = this.update_table.bind(this)\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n    }\n\n    async update_table (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                'loaded':false,\n                start: 0,\n                end: 10,\n                page:1\n            })\n        }\n        else{\n            if (this.state.start+by>-1){\n                await this.setState({\n                    'loaded':false,\n                    start: this.state.start+by,\n                    end: this.state.end+by,\n                    page:this.state.page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.start,\n            'end':this.state.end\n        }\n        this.getItemCatagoriesData(request_json)\n    }\n    \n    async getItemCatagoriesData (request_json) {\n        await getItemCatagories(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'item_catagories':data['item_catagories'],\n                    'loaded':true\n                })\n            }  \n        })\n    }\n\n \n\nrender() {\n    const render_after_load = (\n        <div>\n            <ItemCatagoryList data={this.state.item_catagories} update={this.update_table} page={this.state.page} />\n        </div>\n    )\n\n    return(\n        <div>\n            <Link to='/itemcatagories/create'>Add New Item Catagroy</Link><br></br>\n            <button onClick={() => {this.update_table(0)}}>Refresh table</button><br></br>\n            {this.state.loaded ? render_after_load : \"Loading...\"}\n        </div>\n    )\n}\n}\n\n\n\n\nconst mapStateToProps = state => ({\n    user: state.user,\n})\n\nexport default connect(mapStateToProps)(ItemCatagories)","import React, { Component } from 'react'\nimport {  connect } from 'react-redux';\nimport {Button, TextField } from '@material-ui/core';\nimport { createItemCatagory } from '../../api/inventory/itemCatagory';\n\n\nclass DiscountCreation extends Component {\n\n    constructor (props){\n        super(props)\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.state = {\n           'itemCatagory':{}\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n    }\n\n    \n    onChange(e)\n    {\n        this.setState({\n            'itemCatagory': {\n                ...this.state.itemCatagory,\n                [e.target.name] : [e.target.value][0]\n            }\n        })\n    }\n\n\n    async onSubmit(e){\n        e.preventDefault();\n            var data = {...this.state.itemCatagory}\n            data = {...data, 'action':'add'}\n            createItemCatagory(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        alert(\"New Item Catagory Added\")\n                    }\n                    else{\n                        alert(data['error'])\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    render() {\n        const popUpRender = <div>\n                        <form onSubmit={this.onSubmit}>\n                            Name: <TextField\n                                id ='name'\n                                name=\"name\"\n                                type='text'\n                                onChange={this.onChange}  \n                                placeholder={this.state.itemCatagory.name}          \n                            />\n                            <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                >\n                                Add\n                                </Button>\n                </form>\n            \n                        <br>\n                        </br>\n                    </div>\n        return (\n            popUpRender\n        )\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    user: state.user\n})\n\nexport default connect(mapStateToProps)(DiscountCreation)","import React, { Component } from 'react'\nimport List from '../list';\nimport { getPlace, updatePlace,  deletePlaces } from '../../api/inventory/placeApi';\nimport {Button, TextField } from '@material-ui/core';\n\nclass PlaceList extends Component {\n    \n    constructor(props){\n        super(props)\n        this.popUp = this.popUp.bind(this)\n        this.state = {\n            'popUp':false,\n            'place':{},\n            'update':{}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.placeDelete = this.placeDelete.bind(this)\n    }\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value]\n            }\n        })\n    }\n\n    \n    async onSubmit(e){\n        e.preventDefault();\n            var data = this.state.place\n            var ele;\n            for (ele in this.state.update){\n                data[ele] = this.state.update[ele][0]\n            }\n            data = {...data, 'action':'edit','place_id':data.id}\n            console.log(data)\n            updatePlace(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        alert(\"Place Data updated.\")\n                        this.props.update(0)\n                    }\n                    else{\n                        alert(data['error'])\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    placeDelete(id){\n        var data = {\n            'places_id':[\n                id\n            ]\n        }\n        deletePlaces(JSON.stringify(data)).then(data=>{\n            try {\n                if (data['status']){\n                    alert('Place data deleted.')\n                    this.props.update(0)\n                }   else{\n                    alert(data['error'])\n                }\n            }catch(e){\n                console.log(e)\n            }\n        })\n    }\n    \n    async popUp(id, uuid=0){\n        const data = {\n            'action':'get',\n            'place_id':id,\n        }\n        var data_main;\n        await getPlace(JSON.stringify(data)).then(data => {\n            if (data['status']){\n                data_main=data\n            }\n        })\n        await this.setState({\n            'popUp':true,\n            'place':data_main['places'][0]\n        })\n    }\n\n\n    columns = [\n        {\n            id:1,\n            name:\"Name\",\n            prop: 'name'\n        },\n        {\n            id:2,\n            name:\"Number of Items Assigned To The Place (different Purchase orders)\",\n            prop: 'count_assignment'\n        }     \n    ]\n\n    second_columns =[\n        {\n            id:1,\n            name:\"Item Name\",\n            prop:'item_name'\n        },\n        {\n            id:2,\n            name:\"Stock\",\n            prop:'stock'\n        },\n        {\n            id:3,\n            name:'Purchase Order',\n            prop:'purchase_order_uuid'\n        }\n    ]\n    \n\n    render() {\n        const list = <List data={this.props.data} header={this.columns}   popUp={this.popUp} update={this.props.update} page={this.props.page} />\n        const popUpRender = <div>\n                        <button onClick={()=> {this.setState({'popUp':false})}}>Back</button><br></br>\n                        <h1>{this.state.place.name}</h1>\n                        <form onSubmit={this.onSubmit}>\n                            Name: <TextField\n                                id ='name'\n                                name=\"name\"\n                                type='text'\n                                onChange={this.onChange}  \n                                placeholder={this.state.place.name}          \n                            />\n                            <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                >\n                                Update\n                                </Button> <Button variant=\"contained\" color=\"secondary\" onClick={() => {this.placeDelete(this.state.place.id)}}>\n                            Delete Discount\n                        </Button> \n                        \n                </form>\n            \n                        <br>\n                        </br>\n                    </div>\n        return (\n            <div>\n                {this.state.popUp ? popUpRender : list}\n            </div>\n        )\n    }\n}\n\nexport default PlaceList\n","import React, { Component } from 'react'\nimport {getPlaces} from '../../api/inventory/placeApi';\nimport {  connect } from 'react-redux';\nimport  PlaceList  from './placeList';\nimport { Link} from 'react-router-dom';\n\nclass Placements extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            'places':[],\n            'loaded':false,\n            'start':0,\n            'end':10,\n            'page':1\n        }\n        this.update_table = this.update_table.bind(this)\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n    }\n\n    async update_table (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                'loaded':false,\n                start: 0,\n                end: 10,\n                page:1\n            })\n        }\n        else{\n            if (this.state.start+by>-1){\n                await this.setState({\n                    'loaded':false,\n                    start: this.state.start+by,\n                    end: this.state.end+by,\n                    page:this.state.page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.start,\n            'end':this.state.end\n        }\n        this.getPlacesData(request_json)\n    }\n    \n    async getPlacesData(request_json) {\n        await getPlaces(JSON.stringify(request_json)).then(data => {\n            console.log(data)\n            if (data['status']){\n                this.setState({\n                    'places':data['places'],\n                    'loaded':true\n                })\n            }  \n        })\n    }\n\n \n\nrender() {\n    const render_after_load = (\n        <div>\n            <PlaceList data={this.state.places} update={this.update_table} page={this.state.page} />\n        </div>\n    )\n\n    return(\n        <div>\n            <Link to='/places/create'>Add New Place</Link><br></br>\n            <button onClick={() => {this.update_table(0)}}>Refresh table</button><br></br>\n            {this.state.loaded ? render_after_load : \"Loading...\"}\n        </div>\n    )\n}\n}\n\n\n\n\nconst mapStateToProps = state => ({\n    user: state.user,\n})\n\nexport default connect(mapStateToProps)(Placements)","import React, { Component } from 'react'\nimport {  connect } from 'react-redux';\nimport {Button, TextField } from '@material-ui/core';\nimport { createPlace } from '../../api/inventory/placeApi';\n\n\nclass PlaceCreation extends Component {\n\n    constructor (props){\n        super(props)\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.state = {\n            'update':{\n            }\n        }\n    }\n\n    async componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n    }\n\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value][0]\n            }\n        })\n    }\n\n\n    async onSubmit(e){\n        e.preventDefault();\n            var data = {...this.state.update}\n            data = {...data, 'action':'add'}\n            console.log(data)\n            createPlace(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        alert(\"New Place Added\")\n                    }\n                    else{\n                        alert(data['error'])\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    render() {\n        const popUpRender = <div>\n                        <form onSubmit={this.onSubmit}>\n                            Name: <TextField\n                                id ='name'\n                                name=\"name\"\n                                type='text'\n                                onChange={this.onChange}      \n                            />\n                            <br></br>\n                            <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                >\n                                Create</Button>\n                </form>\n            \n                        <br>\n                        </br>\n                    </div>\n        return (\n            popUpRender\n        )\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    user: state.user\n})\n\nexport default connect(mapStateToProps)(PlaceCreation)","import React, { Component } from 'react'\nimport {  connect } from 'react-redux';\n// import { useSelector, useDispatch } from 'react-redux'\nimport { getCurrentUser } from '../api/user';\nimport { loggedIn } from '../actions';\nimport Login from './users/login';\nimport Logout from './users/logout';\nimport VendorCreation from './vendors/vendorCreation';\nimport UserCreation from './users/userCreation';\nimport { BrowserRouter as Router, Switch , Route, Link} from 'react-router-dom';\nimport Users from './users';\nimport Vendors from './vendors/index';\nimport Customers from './customer/index';\nimport CustomerCreation from './customer/customerCreation'\nimport swal from 'sweetalert';\nimport PurchaseOrders from './purchaseOrder/index'\nimport PurchaseOrderCreation from './purchaseOrder/purchaseOrderCreation'\nimport Invoices from './invoices/index';\nimport InvoiceCreation from './invoices/invoiceCreation';\nimport Discounts from './discounts/index';\nimport DiscountCreation from './discounts/discountCreation'\n\nimport Taxes from './taxes/index';\nimport TaxCreation from './taxes/taxCreation'\n\nimport Items from './items/index'\nimport ItemCreation from './items/itemCreation'\n\nimport ItemCatagories from './itemCatagories/index';\nimport ItemCatagoryCreation from './itemCatagories/itemCreation';\n\nimport Places from './placement/index'\nimport PlaceCreation from './placement/placeCreation'\n\nclass Index extends Component {\n    constructor (props){\n        super(props)\n        this.state = {\n            'loading':true\n        }\n    }\n    async componentDidMount() { \n        await getCurrentUser().then(data => {\n            if (data){\n                if (data['status'])\n                {\n                    this.props.dispatch(loggedIn(data['user_data']))\n                }\n                this.state.loading=false\n            }\n            else{\n                swal('Cannot connet to the server, make sure you have a stable internet connection.')\n            }\n        })\n    }\n    render() {\n        var log;\n        if (this.props.user.isLoggedIn){\n            log = (\n                    <div>\n                        <Link to='/logout'>Logout</Link><br></br>\n                        <Link to='/users'>Users</Link><br></br>\n                        <br></br>\n                        <Link to='/vendors'>Vendors</Link><br></br>\n                        <Link to='/customers'>Customers</Link><br></br>\n                        <Link to='/taxes'>Taxes</Link><br></br>\n                        <Link to='/discounts'>Discounts</Link><br></br>\n                        <Link to='/items'>Item Management</Link><br></br>\n                        <Link to='/itemcatagories'>Item Catagory</Link><br></br>\n                        <Link to='/places'>Places</Link><br></br>\n                        <br></br>\n                        <Link to='/purchaseorders'>Purchase Orders</Link><br></br>\n                        <Link to='/invoices'>Invoices</Link><br></br>\n                        <br></br>\n                        <hr></hr>\n                    </div>                    \n                    )\n          }\n          else{\n            log =  (\n                <div>\n                    <Link to='/login'>Login</Link>\n                </div>\n                )\n          }\n          var render_x\n            render_x = <div>\n            <Router>\n                <Link to='/'>\n                    Home\n                </Link><br></br>\n                {log}\n                    <Switch>\n                    <Route path='/login' component={Login}></Route>\n                    <Route path='/logout' component={Logout}></Route>\n                    <Route path='/users/create' component = {UserCreation}></Route>\n                    <Route path='/users' component = {Users}></Route>\n                    <Route path='/vendors/create' component = {VendorCreation}></Route>\n                    <Route path='/vendors' component = {Vendors}></Route>\n                    \n                    <Route path='/customers/create' component = {CustomerCreation}></Route>\n                    <Route path='/customers' component = {Customers}></Route>\n                    <Route path='/purchaseorders/create' component = {PurchaseOrderCreation}></Route>\n                    <Route path='/purchaseorders' component = {PurchaseOrders}></Route>\n                    \n                    <Route path='/invoices/create' component = {InvoiceCreation}></Route>\n                    <Route path='/invoices' component = {Invoices}></Route>\n\n                    <Route path='/discounts/create' component= {DiscountCreation}></Route>\n                    <Route path='/discounts' component= {Discounts}></Route>\n\n                    \n                    <Route path='/taxes/create' component= {TaxCreation}></Route>\n                    <Route path='/taxes' component= {Taxes}></Route>\n                    \n                    <Route path='/items/create' component= {ItemCreation}></Route>\n                    <Route path='/items' component= {Items}></Route>\n\n                    <Route path='/itemcatagories/create' component= {ItemCatagoryCreation}></Route>\n                    <Route path='/itemcatagories' component= {ItemCatagories}></Route>\n\n\n                    <Route path='/places/create' component= {PlaceCreation}></Route>\n                    <Route path='/places' component= {Places}></Route>\n\n                    </Switch>\n            </Router>\n        </div>\n        return (\n         <div>\n             {render_x}\n         </div>   \n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    user: state.user\n})\n\nexport default connect(mapStateToProps)(Index)","import React from 'react';\nimport './App.css';\nimport Index from './components';\n\n\nfunction  App() {\n  return (\n    <div>\n      <Index></Index>\n    </div>\n  );\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","var initState = {\n    'isLoggedIn':false,\n    'data':{}\n}\nconst userReducer = (state=initState, action) => {\n    switch(action.type){\n        case 'logout':\n            state.data = {}\n            state.isLoggedIn = false;\n            return{\n                isLoggedIn: state.isLoggedIn\n            }\n        case 'loggedIn':\n            state.data = action.payload\n            state.isLoggedIn = true;\n            return {\n                data: state.data,\n                isLoggedIn: state.isLoggedIn\n            }\n        default:\n            return state;\n    }\n\n};\n\nexport default userReducer","var initState = {\n    'data':{}\n}\nconst usersReducer = (state=initState, action) => {\n    switch(action.type){\n        case 'setUsers':\n            state.users = action.payload\n            return{\n                users: state.users\n            }\n        default:\n            return state;\n    }\n\n};\n\nexport default usersReducer","import { combineReducers } from 'redux';\nimport userReducer from './userReducer';\nimport usersReducer from './usersReducer';\n\nconst rootReducers = combineReducers ({\n    user: userReducer,\n    users : usersReducer\n})\n\nexport default rootReducers","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { applyMiddleware, createStore } from 'redux';\nimport rootReducer from './reducers';\nimport { Provider } from 'react-redux';\nimport thunkMiddleware from 'redux-thunk';\n\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.getElementById('root')\n    );\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"popUp_loader__ji3PT\",\"spin\":\"popUp_spin__1nLou\",\"dropbtn\":\"popUp_dropbtn__1fyGN\",\"dropdown\":\"popUp_dropdown__2vgTr\",\"dropdown_content\":\"popUp_dropdown_content__1rTux\"};"],"sourceRoot":""}