{"version":3,"sources":["Pages/Authentication/SignIn/SignIn.js"],"names":["connect","state","auth","signin","props","React","useState","username","password","signinData","setSigninData","signingIn","setSigningIn","errors","setErrors","_signin","a","isEmpty","res","console","log","error","err","style","zIndex","position","width","className","to","display","flexDirection","type","placeholder","value","onChange","e","preventDefault","target","fontSize","color","top","onKeyDown","key","disabled","onClick"],"mappings":"iPA0IeA,uBAJS,SAAAC,GAAK,MAAK,CAC9BC,KAAMD,EAAMC,QAGwB,CAAEC,YAA3BH,EA9HA,SAACI,GAAW,IAAD,EAEcC,IAAMC,SAAS,CAAEC,SAAU,QAASC,SAAU,SAF5D,mBAEfC,EAFe,KAEHC,EAFG,OAGYL,IAAMC,UAAS,GAH3B,mBAGfK,EAHe,KAGJC,EAHI,OAIMP,IAAMC,SAAS,IAJrB,mBAIfO,EAJe,KAIPC,EAJO,KA0BhBC,EAAO,uCAAG,4BAAAC,EAAA,sEACNF,EAAU,IADJ,WAERG,YAAQR,EAAWF,YAAaU,YAAQR,EAAWD,UAF3C,gCAGFM,EAAU,CACZP,SAAUU,YAAQR,EAAWF,UAAY,iCAAoC,GAC7EC,SAAUS,YAAQR,EAAWD,UAAY,gCAAmC,KALxE,wDAUNI,GAAa,GAVP,wBAWMR,EAAMD,OAAOM,EAAWF,SAAUE,EAAWD,UAXnD,kDAWgE,GAXhE,QAWNU,EAXM,KAYZC,QAAQC,IAAIF,GACRA,EAAIG,QACJP,EAAU,2BAAKD,GAAN,IAAcL,SAAUU,EAAIG,SACrCT,GAAa,IAEbM,EAAII,KACJV,GAAa,GAlBL,4CAAH,qDAsBb,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,MACA,yBAAKW,MAAO,CAAEC,OAAQ,IAAMC,SAAU,QAASC,MAAO,UAClD,yBAAKC,UAAU,8BACX,yBAAKA,UAAU,eACX,kBAAC,IAAD,CAASC,GAAG,gBAAe,uBAAGD,UAAU,2CAIpD,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,WACX,0BAAMA,UAAU,MAChB,0BAAMA,UAAU,QAChB,0BAAMA,UAAU,QAChB,0BAAMA,UAAU,OAEpB,yBAAKA,UAAU,QACX,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,QACX,uBAAGA,UAAU,mCAEjB,wBAAIA,UAAU,QAAd,SACA,yBAAKA,UAAU,mBAAmBJ,MAAO,CAAEM,QAAS,OAAQC,cAAe,QACvE,2BACIP,MAAO,CAAEM,QAAS,SAClBE,KAAK,OACLJ,UAAU,eACVK,YAAY,WACZC,MAAOxB,EAAWF,SAClB2B,SAvER,SAACC,GACrBA,EAAEC,iBACFtB,EAAU,2BAAKD,GAAN,IAAcN,SAAU,MACjCG,EAAc,2BAAKD,GAAN,IAAkBF,SAAU4B,EAAEE,OAAOJ,aAuE7BpB,EAAON,SAAY,yBAAKgB,MAAO,CAAEe,SAAU,QAASC,MAAO,YAAaV,QAAS,QAASJ,SAAU,WAAYe,IAAK,YAAc3B,EAAON,UAAmB,KAC9J,yBAAKoB,UAAU,mBAAmBJ,MAAO,CAAEM,QAAS,SAChD,2BACIE,KAAK,WACLJ,UAAU,eACVK,YAAY,WACZC,MAAOxB,EAAWD,SAClB0B,SA3ER,SAACC,GACrBA,EAAEC,iBACFtB,EAAU,2BAAKD,GAAN,IAAcL,SAAU,MACjCE,EAAc,2BAAKD,GAAN,IAAkBD,SAAU2B,EAAEE,OAAOJ,UAyEtBQ,UArEf,SAACN,GACA,UAAVA,EAAEO,KACF3B,QAsEiBF,EAAOL,SAAY,yBAAKe,MAAO,CAAEe,SAAU,QAASC,MAAO,YAAaV,QAAS,QAASJ,SAAU,WAAYe,IAAK,YAAc3B,EAAOL,UAAmB,KAO9J,4BACImC,SAAUhC,EACVgB,UAAU,gCACViB,QAAS7B,GAERJ,EAAY,oCAAE,uBAAGgB,UAAU,mDAAf,cAAoF,WAGrG,uBAAGA,UAAU,mBAAb,oBAAgD,kBAAC,IAAD,CAASC,GAAG,mBAAZ","file":"static/js/111.0735354c.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux';\r\n\r\nimport './../../../assets/scss/style.scss';\r\nimport Aux from \"../../../hoc/_Aux\";\r\nimport Breadcrumb from \"../../../App/layout/AdminLayout/Breadcrumb\";\r\nimport { signin } from '../../../redux/actions/authActions';\r\n\r\nimport isEmpty from '../../../validation/isEmpty';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Signin = (props) => {\r\n\r\n    const [signinData, setSigninData] = React.useState({ username: 'admin', password: 'pass', });\r\n    const [signingIn, setSigningIn] = React.useState(false);\r\n    const [errors, setErrors] = React.useState({});\r\n\r\n\r\n\r\n    const _usernameChange = (e) => {\r\n        e.preventDefault();\r\n        setErrors({ ...errors, username: '' })\r\n        setSigninData({ ...signinData, username: e.target.value })\r\n\r\n    }\r\n    const _passwordChange = (e) => {\r\n        e.preventDefault();\r\n        setErrors({ ...errors, password: '' })\r\n        setSigninData({ ...signinData, password: e.target.value })\r\n\r\n    }\r\n\r\n    const _onEnter = (e) => {\r\n        if (e.key === 'Enter') {\r\n            _signin();\r\n        }\r\n    }\r\n    const _signin = async () => {\r\n        await setErrors({})\r\n        if (isEmpty(signinData.username) || isEmpty(signinData.password)) {\r\n            await setErrors({\r\n                username: isEmpty(signinData.username) ? 'Username field  can\\'t be empty' : '',\r\n                password: isEmpty(signinData.password) ? 'Password field can\\'t be empty' : ''\r\n            })\r\n            return\r\n        }\r\n\r\n        await setSigningIn(true)\r\n        const res = await props.signin(signinData.username, signinData.password) || {}\r\n        console.log(res)\r\n        if (res.error) {\r\n            setErrors({ ...errors, password: res.error });\r\n            setSigningIn(false)\r\n        }\r\n        if (res.err) {\r\n            setSigningIn(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Aux>\r\n            <Breadcrumb />\r\n            <div style={{ zIndex: 1000, position: 'fixed', width: '100vw' }}>\r\n                <div className=\"d-flex justify-content-end\">\r\n                    <div className='p-20 p-r-20'>\r\n                        <NavLink to='/user-manual'><i className=\"icon feather icon-help-circle f-20\" /></NavLink>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"auth-wrapper\">\r\n                <div className=\"auth-content\">\r\n                    <div className=\"auth-bg\">\r\n                        <span className=\"r\" />\r\n                        <span className=\"r s\" />\r\n                        <span className=\"r s\" />\r\n                        <span className=\"r\" />\r\n                    </div>\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body text-center\">\r\n                            <div className=\"mb-4\">\r\n                                <i className=\"feather icon-unlock auth-icon\" />\r\n                            </div>\r\n                            <h3 className=\"mb-4\">Login</h3>\r\n                            <div className=\"input-group mb-3\" style={{ display: 'flex', flexDirection: 'row' }}>\r\n                                <input\r\n                                    style={{ display: 'block' }}\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Username\"\r\n                                    value={signinData.username}\r\n                                    onChange={_usernameChange}\r\n                                />\r\n                            </div>\r\n                            {errors.username ? (<div style={{ fontSize: '0.9em', color: 'orangered', display: 'block', position: 'relative', top: '-0.9rem' }}>{errors.username}</div>) : null}\r\n                            <div className=\"input-group mb-4\" style={{ display: 'flex', }}>\r\n                                <input\r\n                                    type=\"password\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Password\"\r\n                                    value={signinData.password}\r\n                                    onChange={_passwordChange}\r\n                                    onKeyDown={_onEnter}\r\n                                />\r\n                            </div>\r\n                            {errors.password ? (<div style={{ fontSize: '0.9em', color: 'orangered', display: 'block', position: 'relative', top: '-1.3rem' }}>{errors.password}</div>) : null}\r\n                            {/* <div className=\"form-group text-left\">\r\n                                    <div className=\"checkbox checkbox-fill d-inline\">\r\n                                        <input type=\"checkbox\" name=\"checkbox-fill-1\" id=\"checkbox-fill-a1\" />\r\n                                            <label htmlFor=\"checkbox-fill-a1\" className=\"cr\"> Save credentials</label>\r\n                                    </div>\r\n                                </div> */}\r\n                            <button\r\n                                disabled={signingIn}\r\n                                className=\"btn btn-primary shadow-2 mb-4\"\r\n                                onClick={_signin}\r\n                            >\r\n                                {signingIn ? <><i className=\"fa fa-spinner text-c-white f-15 fa-pulse m-l-1\"></i>Signing In</> : 'Sign In'}\r\n\r\n                            </button>\r\n                            <p className=\"mb-2 text-muted\">Forgot password? <NavLink to=\"forgot-password\">Reset</NavLink></p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Aux>\r\n    );\r\n}\r\n\r\nSignin.propTypes = {\r\n    signin: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n})\r\n\r\nexport default connect(mapStateToProps, { signin })(Signin);\r\n\r\n\r\n"],"sourceRoot":""}