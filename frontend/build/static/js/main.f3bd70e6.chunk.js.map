{"version":3,"sources":["server.js","api/base.js","api/user.js","actions/index.js","components/users/login.jsx","components/users/logout.jsx","api/inventory/vendorApi.js","components/vendors/vendorCreation.jsx","components/users/userCreation.jsx","components/list.jsx","components/users/userList.jsx","components/users/index.jsx","components/vendors/vendorList.jsx","components/vendors/index.jsx","api/sales/customer.js","components/customer/customerList.jsx","components/loading.js","components/customer/index.jsx","components/customer/customerCreation.jsx","api/inventory/purchaseOrder.js","api/inventory/purchaseItem.js","api/misc.js","api/inventory/itemApi.js","components/purchaseOrder/popUpEdit.jsx","components/purchaseOrder/purchaseOrderList.jsx","components/purchaseOrder/index.jsx","components/purchaseOrder/purchaseOrderCreation.jsx","api/sales/invoice.js","api/sales/invoiceItem.js","api/inventory/placeApi.js","components/invoices/popUpEdit.jsx","components/invoices/invoiceListing.jsx","components/invoices/index.jsx","components/invoices/invoiceCreation.jsx","components/discounts/discountList.jsx","components/discounts/index.jsx","components/discounts/discountCreation.jsx","components/taxes/taxList.jsx","components/taxes/index.jsx","components/taxes/taxCreation.jsx","api/inventory/itemCatagory.js","components/items/itemList.jsx","components/items/index.jsx","components/items/itemCreation.jsx","components/itemCatagories/itemCatagoryList.jsx","components/itemCatagories/index.jsx","components/itemCatagories/itemCreation.jsx","components/placement/placeList.jsx","components/placement/index.jsx","components/placement/placeCreation.jsx","components/dashboard.js","components/index.jsx","App.js","serviceWorker.js","reducers/userReducer.js","reducers/usersReducer.js","reducers/index.js","index.js","components/purchaseOrder/css/popUp.module.css"],"names":["dev","window","location","protocol","host","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","setCookie","value","days","expires","date","Date","setTime","getTime","toUTCString","getResponse","response","a","headers","get","json","baseRequest","url","method","body","signal","fetch","URL","serverUrl","credentials","myResponse","loginUser","data","alert","logoutUser","createUser","getUsers","getUser","updateUser","getCurrentUser","loggedIn","type","payload","Login","props","state","username","password","status","onChange","bind","onSubmit","this","current_state","user","isLoggedIn","href","e","setState","target","preventDefault","JSON","stringify","then","dispatch","Container","component","maxWidth","CssBaseline","Avatar","style","padding","margin","backgroundColor","noValidate","TextField","variant","fullWidth","id","label","autoComplete","autoFocus","FormControlLabel","control","Checkbox","color","Button","Alert","severity","display","Grid","container","Box","mt","Component","connect","Logout","res","history","push","getVendors","createVendor","deleteVendors","updateVendor","getVendor","VendorCreation","update","ele","console","log","required","UserCreation","user_type","password2","defaultValue","useStyles","makeStyles","table","minWidth","List","page","temp","classes","header","rows","no_data","pagination","IconButton","onClick","aria-label","disabled","TableContainer","Paper","Table","className","TableHead","TableRow","map","TableCell","key","TableBody","row","popUp","uuid","prop","justify","alignItems","item","xs","UserList","columns","user_data","data_main","list","popUpRender","placeholder","first_name","last_name","email","is_active","userDelete","userRevive","Users","update_table","request_json","by","x","start","end","getUsersData","render_after_load","users","to","loaded","VendorList","vendorDelete","vendor","middle_name","website","tax_number","phone1","phone2","address","Vendors","getVendorsData","vendors","getCustomers","deleteCustomers","createCustomer","getCustomer","updateCustomer","styles","theme","root","flexGrow","paper","spacing","textAlign","palette","text","secondary","CustomerList","customerDelete","Swal","fire","icon","title","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","showConfirmButton","timer","size","alignContent","xm","md","FormControl","InputLabel","htmlFor","Input","customer","withStyles","left","bottom","right","LoadingIcon","React","useState","progress","setProgress","useEffect","setInterval","oldProgress","clearInterval","direction","minHeight","CircularProgress","Customers","getCustomersData","customers","textDecoration","CustomerCreation","getPurchaseOrders","deletePurchaseOrder","createPurchaseOrder","getPurchaseOrder","updatePurchaseOrder","deletePurchaseItems","createPurchaseItem","updatePurchaseItem","getDiscounts","deleteDiscounts","createDiscount","getDiscount","updateDiscount","getTaxes","deleteTaxes","createTax","getTax","updateTax","getPurchaseOrderStatus","getItems","deleteItems","createItem","getItem","updateItem","PopUpEdit","purchase_order","converter","invoiced_on","completed_on","purchase_items","refreshTable","getItemData","selectItem","searchItem","addPurchaseItem","invoiceHandler","completeHandler","searchVendor","selectVendor","onChangePI","postPurchaseItem","deletePurchaseItem","parse","error","current","is_new","purchase_items_id","p_list","items","item_selection","itemPopUp","trigger","closeOnDocumentClick","dropdown_content","popUpItem","item_name","new","quantity","defective","discount_type","discount","purchase_price","vendor_selection","vendorPopup","vendor_name","selected","added_by_name","total_cost","parseInt","delete","PurchaseOrderList","purchaseOrderDelete","PurchaseOrders","getPurchaseOrdersData","purchaseOrders","PurchaseOrderCreation","toISOString","addPurchaseOrder","getInvoices","deleteInvoices","createInvoice","getInvoice","updateInvoice","getInvoiceStatus","deleteInvoiceItems","createInvoiceItem","updateInvoiceItem","getPlaces","deletePlaces","createPlace","getPlace","updatePlace","discount_columns","tax_columns","add_discount_columns","add_tax_columns","invoice","due_on","invoice_items","stateman","addInvoiceItem","dueOnHandler","getCustomerData","searchCustomer","selectCustomer","postInvoiceItem","deleteInvoiceItem","onChangePlace","removeEntry","addEntryDiscount","addEntryTax","dis","temp2","applied_discount","pop","applied_tax","taxes","getPlacesData","filter","el","update_stock","sold_from","p","string","sold_from_selection","invoice_items_id","discount_start","discount_end","discount_page","getDiscountsData","tax_start","tax_end","tax_page","getTaxesData","discount_selection","tax_selection","sales_price","places","place_selection","selectPlace","str_placed_on","stocks","stock_selection","stockValue","purchase_item","selectStock","str","addPopupDiscount","addPopupTax","discounts","min","price","tax_total","sub_total","discount_amount","total_without_discount","total","discount_loaded","tax_loaded","customer_selection","customerPopup","customer_name","order_number","total_amount","discount_total","paid_amount","additional_discount","InvoiceListing","invoiceDelete","Invoices","getInvoiceData","invoices","InvoiceCreation","pathname","DiscountList","discountDelete","code","rate","Discounts","DiscountCreation","discont_type","TaxList","taxDelete","tax","tax_type","Taxes","TaxCreation","getItemCatagories","deleteItemCatagory","createItemCatagory","getItemCatagory","updateItemCatagory","ItemList","itemDelete","catagories","catagory","stock","sold","Items","getItemsData","ItemCreation","ItemCatagoryList","itemCatDelete","itemCatagory","ItemCatagories","getItemCatagoriesData","item_catagories","PlaceList","second_columns","placeDelete","place","Placements","PlaceCreation","toolbar","paddingRight","toolbarIcon","justifyContent","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","height","overflow","paddingTop","paddingBottom","flexDirection","fixedHeight","Dashboard","open","setOpen","clsx","useSelector","AppBar","Toolbar","edge","Typography","noWrap","Drawer","Divider","ListItem","button","ListItemIcon","ListItemText","primary","path","ItemCatagoryCreation","Places","Index","swal","render_x","loading","App","Boolean","hostname","match","initState","userReducer","action","usersReducer","rootReducers","combineReducers","store","createStore","rootReducer","applyMiddleware","thunkMiddleware","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.f3bd70e6.chunk.js","sourcesContent":["const prod = `${window.location.protocol}//${window.location.host}/`;\n// const dev = \"http://localhost:8000/\";\nconst dev =\"https://simpleim.herokuapp.com/\"\n// const serverUrl = process.env.NODE_ENV === \"development\" ? dev : prod;\nexport default dev;\n","import serverUrl from \"../server\";\n\nfunction getCookie(name) {\n  var cookieValue = null;\n  if (document.cookie && document.cookie !== \"\") {\n    var cookies = document.cookie.split(\";\");\n    for (var i = 0; i < cookies.length; i++) {\n      var cookie = cookies[i].trim();\n      if (cookie.substring(0, name.length + 1) === name + \"=\") {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n  return cookieValue;\n}\n\nfunction setCookie(name,value,days) {\n  var expires = \"\";\n  if (days) {\n      var date = new Date();\n      date.setTime(date.getTime() + (days*24*60*60*1000));\n      expires = \"; expires=\" + date.toUTCString();\n  }\n  document.cookie = name + \"=\" + (value || \"\")  + expires + \"; path=/\";\n}\n\nconst getResponse = async response => {\n  const contentType = response.headers.get(\"content-type\");\n  if (contentType === \"application/json\") {\n    const json = await response.json();\n    return { response, json };\n  }\n  return { response };\n};\n\nconst baseRequest = async (url, method, body, signal) => {\n    var cookie = getCookie(\"x-csrftoken\")\n    if (cookie === null) {\n      const response = await fetch(new URL('apiv1/users/verify', serverUrl), {\n        method: 'GET'\n      });\n      const temp = await getResponse(response)\n      setCookie('x-csrftoken', temp.json['x-csrftoken'], 2)\n    }\n    cookie = getCookie(\"x-csrftoken\")\n    const response = await fetch(new URL(url, serverUrl), {\n        method: method,\n        body: body,\n        signal: signal,\n        credentials: \"include\",\n        headers: {\n        \"x-csrftoken\": cookie,\n        \"Content-Type\": \"application/json\"\n        }\n    });\n    const myResponse = await getResponse(response);\n    return myResponse.json;\n};\n\n\nexport { baseRequest };","import { baseRequest } from './base';\n\nconst loginUser = async data => {\n    try {\n      return await baseRequest(\"apiv1/users/login\", \"POST\", data);\n    } catch (e) {\n      alert(e);\n    }\n  };\n\nconst csrfToken = async () => {\n    try {\n        return await baseRequest(\"apiv1/users/verify\", \"GET\");\n      } catch (e) {\n        alert(e);\n      }\n    };\n\nconst logoutUser = async data => {\n  try {\n    return await baseRequest('apiv1/users/logout', \"GET\");\n  } catch(e){\n    alert(e);\n  }\n};\n\nconst createUser = async data => {\n  try {\n    return await baseRequest('apiv1/users/create','POST', data);\n  } catch(e){\n    alert(e)\n  }\n};\n\nconst getUsers = async data => {\n  try {\n    return await baseRequest('apiv1/users/get','POST', data);\n  } catch(e){\n    alert(e)\n  }\n};\n\n\nconst getUser = async data => {\n  try {\n    return await baseRequest('apiv1/users/get/0','POST', data);\n  } catch(e){\n    alert(e)\n  }\n};\n\nconst updateUser = async data => {\n  try{\n    return await baseRequest('apiv1/users/get/0', 'POST', data);\n  } catch (e){\n    alert(e)\n  }\n};\n\n\nconst getCurrentUser = async data => {\n  try{\n    return await baseRequest('apiv1/users/current', 'POST', data);\n  } catch (e){\n    alert(e)\n  }\n};\n\nexport { loginUser, csrfToken, logoutUser, getUsers, createUser, getUser, updateUser, getCurrentUser }","export const logout = () => {\n    return {\n        type: 'logout'\n    };\n}\n\nexport const loggedIn = (data) => {\n    return {\n        type: 'loggedIn',\n        payload: data\n    };\n}\n\nexport const setUsers = (data) => {\n    return{\n        type: 'setUsers',\n        payload: data\n    }\n}\n\n\nexport const setVendors = (data) => {\n    return{\n        type: 'setVendors',\n        payload: data\n    }\n}","import React, { Component } from 'react';\nimport { loginUser, getCurrentUser } from '../../api/user';\nimport {  connect } from 'react-redux';\nimport { loggedIn } from '../../actions';\n\n//material-ui import button\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\n\nimport Alert from '@material-ui/lab/Alert';\n\nclass Login extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            username:'',\n            password:'',\n            status:'',\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n    componentDidMount() {\n        if (this.props.current_state.user.isLoggedIn === true){\n          window.location.href=\"/\"\n        }\n    }\n    onChange(e)\n    {\n        this.setState({[e.target.name]: [e.target.value]})\n    }\n    async onSubmit(e){\n        e.preventDefault();\n        const data = {\n            username: this.state.username[0],\n            password: this.state.password[0]\n        }\n        loginUser(JSON.stringify(data)).then(data => {\n            try{\n                if (data['status']){\n                    getCurrentUser().then(data => {\n                        this.props.dispatch(loggedIn(data['user_data']))\n                    })\n                    window.location.href=\"/\"\n                  }else if ((this.state.username===\"\" && this.state.password===\"\")|\n                (this.state.username===\"\" || this.state.password===\"\")){\n                        this.setState((state) => {\n                            return {status: \"Username and password empty\"};\n                          });\n                }\n                else if (data['status']=== false){\n                    this.setState((state) => {\n                        return {status: data['msg']};\n                      });\n                }\n            }catch(e){\n                alert(e)\n            }\n        })       \n    }\n\n    render() {\n      \n        return (\n            <Container component=\"main\" maxWidth=\"xs\">\n                \n                <CssBaseline />\n                <div>\n                  <Avatar style={{padding:30,margin:'auto',backgroundColor:'#1a237e'}} >\n                    <h3>O</h3>\n                  </Avatar>\n                  {/* <Typography component=\"h1\" variant=\"h4\" style={{textAlign:'center'}}>\n                    LOGIN\n                  </Typography> */}\n                  <form  onSubmit={this.onSubmit} noValidate>\n                    <TextField\n                      variant=\"outlined\"\n                      margin=\"normal\"\n                      fullWidth\n                      id=\"uname\"\n                      label=\"Username\"\n                      name=\"username\"\n                      autoComplete=\"email\"\n                      autoFocus\n                      type='text'\n                      onChange={this.onChange}\n                      value={this.state.username}\n                    />\n                    {/* required */}\n                    <TextField\n                      variant=\"outlined\"\n                      margin=\"normal\"\n                      fullWidth\n                      name=\"password\"\n                      label=\"Password\"\n                      type=\"password\"\n                      id=\"password\"\n                      autoComplete=\"current-password\"\n                      onChange={this.onChange}\n                      value={this.state.password}\n                    />\n                    <FormControlLabel\n                      control={<Checkbox value=\"remember\" color=\"primary\" />}\n                      label=\"Remember me\"\n                    />\n                    <Button\n                      type='submit'\n                      fullWidth\n                      variant=\"contained\"\n                      color=\"primary\"\n                    >\n                      Login\n                    </Button>\n                    <br/><br/>\n                    <Alert severity=\"error\" style={{display: this.state.status ? \"\":'none'}}>\n                        {this.state.status}\n                    </Alert>\n\n                    <Grid container>\n                      {/* <Grid item xs>\n                        <Link href=\"#\" variant=\"body2\">\n                          Forgot password?\n                        </Link>\n                      </Grid> */}\n                      {/* <Grid item>\n                        <Link href=\"#\" variant=\"body2\">\n                          {\"Don't have an account? Sign Up\"}\n                        </Link>\n                      </Grid> */}\n                    </Grid>\n                  </form>\n                </div>\n                <Box mt={8}>\n                  {/* <Copyright /> */}\n                </Box>\n              </Container>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    current_state: state\n})\n\nexport default connect(mapStateToProps)(Login)","import React, { Component } from 'react'\nimport { logoutUser } from '../../api/user';\nimport {  connect } from 'react-redux';\nimport { logout } from '../../actions';\n\n\nclass Logout extends Component {\n    componentDidMount(){\n        logoutUser().then(res => {\n            this.props.dispatch(logout())\n            this.props.history.push('/')\n\n        });\n    }\n\n    render() {\n        return (\n            <div>\n            </div>\n        )\n    }\n}\n\nexport default connect()(Logout)","import { baseRequest } from '../base';\n// api for vendors\n\nconst getVendors = async data => {\n  try {\n    return await baseRequest('apiv1/inventory/vendors','POST', data);\n  } catch(e){\n    alert(e)\n  }\n};\n\nconst createVendor = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/vendors','POST', data);\n    } catch(e){\n      alert(e)\n    }\n};\n\n\nconst deleteVendors = async data => {\n  try {\n    return await baseRequest('apiv1/inventory/vendors/delete','POST', data);\n  } catch(e){\n    alert(e)\n  }\n};\n\n\nconst updateVendor = async data => {\n  try {\n    return await baseRequest('apiv1/inventory/vendor','POST', data);\n  } catch(e){\n    alert(e)\n  }\n};\n\nconst getVendor = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/vendor','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n\nexport { getVendors, createVendor, deleteVendors, updateVendor, getVendor}","import React, { Component } from 'react'\nimport {  connect } from 'react-redux';\nimport {Button, TextField } from '@material-ui/core';\nimport { createVendor } from '../../api/inventory/vendorApi';\n\n\nclass VendorCreation extends Component {\n\n    constructor (props){\n        super(props)\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.state = {\n            'update':{\n                'middle_name':[''],\n                'website':[''],\n                'phone2':[''],\n                'address':['']\n            }\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n    }\n\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value]\n            }\n        })\n    }\n\n\n    async onSubmit(e){\n        e.preventDefault();\n            var data = {...this.state.update}\n            var ele;\n            for (ele in this.state.update){\n                data[ele] = this.state.update[ele][0]\n            }\n            data = {...data, 'action':'add'}\n            createVendor(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        alert(\"New Vendor Added\")\n                    }\n                    else{\n                        alert(data['error'])\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Add New Vendor</h1>\n                <form onSubmit={this.onSubmit}>\n                            First Name: <TextField\n                                id ='first_name'\n                                name=\"first_name\"\n                                type='text'\n                                onChange={this.onChange}  \n                                required                  \n                            />\n                            Middle Name : <TextField\n                                id ='middle_name'\n                                name=\"middle_name\"\n                                type='text'\n                                onChange={this.onChange} \n                            />\n                            Last Name  : <TextField\n                                id ='last_name'\n                                name=\"last_name\"\n                                type='text'\n                                onChange={this.onChange}\n                                required \n                            />\n                            <br></br>\n                            Email : <TextField\n                                id ='email'\n                                name=\"email\"\n                                type='email'\n                                onChange={this.onChange}\n                                required \n                            />\n                            <br></br>\n                            Website : <TextField\n                                id ='website'\n                                name=\"website\"\n                                type='text'\n                                onChange={this.onChange}\n                            />\n                            <br></br>\n                            Tax Number : <TextField\n                                id ='tax_number'\n                                name=\"tax_number\"\n                                type='number'\n                                onChange={this.onChange}\n                                required \n                            />\n                            <br></br>\n                            Contact Number: <TextField\n                                id ='phone1'\n                                name=\"phone1\"\n                                type='number'\n                                onChange={this.onChange}\n                                required \n                            />\n                            <br></br>\n                            Contact Number 2 : <TextField\n                                id ='phone2'\n                                name=\"phone2\"\n                                type='number'\n                                onChange={this.onChange}\n                            />\n                            <br></br>\n                            \n                            Addresss : <TextField\n                                id ='address'\n                                name=\"address\"\n                                type='text'\n                                onChange={this.onChange}\n                            />\n                            <br></br>\n                            <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                >\n                                Update\n                                </Button>\n                        \n                </form>\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    user: state.user\n})\n\nexport default connect(mapStateToProps)(VendorCreation)","import React, { Component } from 'react'\nimport {  connect } from 'react-redux';\nimport { createUser } from '../../api/user';\nimport {Button, TextField } from '@material-ui/core';\n\n\nclass UserCreation extends Component {\n\n    constructor (props){\n        super(props)\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.state = {\n            'udpate':{}\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n        if (this.props.user.data.user_type !== \"MANAGER\"){\n            this.props.history.push('/')\n        }\n    }\n\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value]\n            }\n        })\n    }\n\n\n    async onSubmit(e){\n        e.preventDefault();\n        if (this.state.update.password[0] === this.state.update.password2[0]){\n            var data = {...this.state.update}\n            var ele;\n            for (ele in this.state.update){\n                data[ele] = this.state.update[ele][0]\n            }\n            createUser(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        alert(\"New User Created\")\n                    }\n                    else{\n                        alert(data['error'])\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n        }\n        else {\n            alert(\"Password didn't match\")\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Create New User</h1>\n                <form onSubmit={this.onSubmit}>\n                            First Name: <TextField\n                                id ='first_name'\n                                name=\"first_name\"\n                                type='text'\n                                onChange={this.onChange}  \n                                required                  \n                            />\n                            Last Name<TextField\n                                id ='last_name'\n                                name=\"last_name\"\n                                type='text'\n                                onChange={this.onChange}\n                                required \n                            />\n                            \n                            <br></br>\n                             Username :<TextField\n                             \n                                id ='username'\n                                name=\"username\"\n                                type='text'\n                                onChange={this.onChange}\n                                required \n                            />\n                            <br></br>\n                            Password <TextField\n                                id=\"password\"\n                                name=\"password\"\n                                type=\"password\"\n                                autoComplete=\"current-password\"\n                                onChange={this.onChange}\n                                required \n                                />\n                               Confirm Password <TextField\n                                id=\"password2\"\n                                type=\"password\"\n                                name=\"password2\"\n                                autoComplete=\"current-password\"\n                                onChange={this.onChange}\n                                required \n                                />\n                                <br></br>\n                            Email : <TextField\n                                id ='email'\n                                name=\"email\"\n                                type='email'\n                                onChange={this.onChange}\n                                required \n                            />\n                            <br></br>\n                            User Post:\n                            <select name='user_type' id=\"user_type\" onChange={this.onChange} defaultValue=\"STAFF\">\n                                <option value=\"MANAGER\">Manager</option>\n                                <option value=\"STAFF\">Staff</option>\n                            </select>\n                            <br></br>\n                            <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                >\n                                Update\n                                </Button>\n                        \n                </form>\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    user: state.user\n})\n\nexport default connect(mapStateToProps)(UserCreation)","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid'\nimport IconButton from '@material-ui/core/IconButton';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst List = (props) => {\n  var page = true;\n  if (!props.page){\n    page=props.page\n  }\n  const classes = useStyles();\n  const headers = props.header\n  const rows = props.data\n  var temp;\n  var no_data=false\n  if (rows.length === 0){\n    no_data=true\n  } \n\n\n  const pagination = <div>\n    <IconButton color=\"secondary\" onClick={() => {props.update(-10)}} aria-label=\"pervious-button\">\n      <NavigateBeforeIcon />\n    </IconButton><b>\n    Page: {props.page}</b>\n    {no_data? <IconButton color=\"secondary\" onClick={() => {props.update(10)}} aria-label=\"pervious-button\" disabled>\n      <NavigateNextIcon />\n    </IconButton> : <IconButton color=\"secondary\" onClick={() => {props.update(10)}} aria-label=\"pervious-button\">\n      <NavigateNextIcon />\n    </IconButton>}\n  </div>\n\n  return (\n      <div>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n                {headers.map(\n                    header =>(\n                    <TableCell key={header.id}><b>{header.name}</b></TableCell>\n                    )\n                )}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          {rows.map(\n              row =>(\n                  <TableRow key={row.id} onClick={() => {props.popUp(row.id, row.uuid)}}>\n                      {headers.map(\n                          header =>\n                              (\n                                  temp = header.prop,\n                              <TableCell key={header.id}>{row[temp]}</TableCell>\n                              )\n                      )}\n                  </TableRow>\n              )\n          )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      <Grid container justify=\"center\" alignItems=\"center\">\n    <Grid item xs={\"auto\"}>\n    {no_data ? <h2>No More Data Available</h2> : <span></span>}\n    </Grid>\n    </Grid>\n    <br></br>\n    <Grid container justify=\"center\" alignItems=\"center\">\n    <Grid item xs={\"auto\"}>\n    {page ? pagination : <span></span>}\n    </Grid>    \n    </Grid>\n    <br></br>\n    </div>\n  );\n}\n\nexport default List","import React, { Component } from 'react'\nimport List from '../list';\nimport { getUser, updateUser } from '../../api/user';\nimport {Button, TextField } from '@material-ui/core';\n\nclass UserList extends Component {\n    constructor(props){\n        super(props)\n        this.popUp = this.popUp.bind(this)\n        this.state = {\n            'popUp':false,\n            'user_data':{},\n            'update':{}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n    \n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value]\n            }\n        })\n    }\n\n    onSubmit(e){\n        e.preventDefault();\n        var data = this.state.user_data;\n        var ele;\n        for (ele in data){\n            if (this.state.update[ele]){\n                data[ele] = this.state.update[ele][0]\n            }\n        }\n        data = {\n            ...data,\n            'action':'edit',\n            'user_id':data.id\n        }\n        updateUser(JSON.stringify(data)).then(data =>{\n            if (data['status']){\n                alert('You Details has been updated.')\n                this.props.update(0)\n            }\n        })\n    }\n\n    userDelete(id,uuid){\n        var data = {\n            'action':'delete',\n            'user_id':id,\n            'uuid':uuid\n        }\n        updateUser(JSON.stringify(data)).then(data =>{\n            if (data['status']){\n                alert('User has been deleted. They cannot login now')\n                this.props.update(0)\n            }\n        })\n    }\n\n    \n    userRevive(id,uuid){\n        var data = {\n            'action':'revive',\n            'user_id':id,\n            'uuid':uuid\n        }\n        updateUser(JSON.stringify(data)).then(data =>{\n            if (data['status']){\n                alert('User has been made active. They login now')\n                this.props.update(0)\n            }\n        })\n    }\n\n    async popUp(id, uuid=0){\n        const data = {\n            'action':'get',\n            'user_id':id,\n            'uuid':uuid\n        }\n        var data_main;\n        await getUser(JSON.stringify(data)).then(data => {\n            if (data['status']){\n                data_main=data\n            }\n        })\n        await this.setState({\n            'popUp':true,\n            'user_data':data_main\n        })\n    }\n\n    columns = [\n        {\n            id:1,\n            name:\"Name\",\n            prop: 'name'\n        },\n        {\n            id:2,\n            name:\"Post\",\n            prop: 'status'\n        },\n        {\n            id:3,\n            name:\"Username\",\n            prop: 'username'\n        },\n        {\n            id:4,\n            name:\"Status\",\n            prop: 'is_active_str'\n        }      \n    ]\n    \n\n    render() {\n        const list = <List data={this.props.data} header={this.columns} popUp={this.popUp} update={this.props.update} page={this.props.page}/>\n        const popUpRender = <div>\n                        <button onClick={()=> {this.setState({'popUp':false})}}>Back</button><br></br>\n                        <h1>{this.state.user_data.name}</h1>\n\n                        <form onSubmit={this.onSubmit}>\n                            First Name : <TextField\n                                id ='first_name'\n                                name=\"first_name\"\n                                placeholder = {this.state.user_data.first_name}   \n                                type='text'\n                                onChange={this.onChange}\n                                // value={this.state.update.first_name}                       \n                            />\n                            \n                            Last Name : <TextField\n                            \n                                id ='last_name'\n                                name=\"last_name\"\n\n                                placeholder = {this.state.user_data.last_name}   \n                                type='text'\n                                onChange={this.onChange}\n                                // value={this.state.update.last_name}                       \n                            />\n                            \n                            <br></br>\n                             Username :<TextField\n                             \n                                id ='username'\n\n                                name=\"username\"\n                                placeholder = {this.state.user_data.username}   \n                                type='text'\n                                onChange={this.onChange}\n                                // value={this.state.update.username}                       \n                            />\n                            <br></br>\n                            Email : <TextField\n                                id ='email'\n                                name=\"email\"\n                                placeholder = {this.state.user_data.email}   \n                                type='email'\n                                onChange={this.onChange}\n                                // value={this.state.update.email}                       \n                            />\n                            <br></br>\n                            User Post:\n                            <select name='user_type' onChange={this.onChange} defaultValue={this.state.user_data.user_type}>\n                                <option value=\"MANAGER\">Manager</option>\n                                <option value=\"STAFF\">Staff</option>\n                            </select>\n                            <br></br>\n                            <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                >\n                                Update\n                                </Button>\n                        </form>\n                        <br>\n                        </br>\n                        {this.state.user_data.is_active ? <Button variant=\"contained\" color=\"secondary\" onClick={() => {this.userDelete(this.state.user_data.id, this.state.user_data.uuid)}}>\n                            Deactivate User\n                        </Button> : <Button variant=\"contained\" color=\"secondary\" onClick={() => {this.userRevive(this.state.user_data.id, this.state.user_data.uuid)}}>\n                            Activate User\n                        </Button> }\n                        \n                        <br>\n                        </br>\n                    </div>\n        return (\n            <div>\n                {this.state.popUp ? popUpRender : list}\n            </div>\n        )\n    }\n}\n\nexport default  UserList","import React, { Component } from 'react'\nimport { getUsers } from '../../api/user'\nimport {  connect } from 'react-redux';\nimport UserList from './userList';\nimport { Link} from 'react-router-dom';\n\nclass Users extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            'users':[],\n            'loaded':false,\n            'start':0,\n            'end':10,\n            'page':1\n        }\n        this.update_table = this.update_table.bind(this)\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n        if (this.props.user.data.user_type !== \"MANAGER\"){\n            this.props.history.push('/')\n        }\n    }\n\n    async getUsersData (request_json) {\n        await getUsers(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'users':data['users'],\n                    'loaded':true\n                })\n            }  \n        })\n    }\n\n    async update_table (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                'loaded':false,\n                start: 0,\n                end: 10,\n                page:1\n            })\n        }\n        else{\n            if (this.state.start+by>-1){\n                await this.setState({\n                    'loaded':false,\n                    start: this.state.start+by,\n                    end: this.state.end+by,\n                    page:this.state.page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.start,\n            'end':this.state.end\n        }\n        this.getUsersData(request_json)\n    }\n    \n\n    render() {\n        const render_after_load = (\n            <div>\n                <UserList data={this.state.users} update={this.update_table} page={this.state.page} />\n            </div>\n        )\n\n        return(\n            <div>\n                <Link to='users/create'>Create New User</Link><br></br>\n                <button onClick={() => {this.update_table(0)}}>Refresh table</button>\n                {this.state.loaded ? render_after_load : \"Loading...\"}\n\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    user: state.user,\n})\n\nexport default connect(mapStateToProps)(Users)","import React, { Component } from 'react'\nimport List from '../list';\nimport { getVendor, updateVendor,  deleteVendors } from '../../api/inventory/vendorApi';\nimport {Button, TextField } from '@material-ui/core';\n\nclass VendorList extends Component {\n    \n    constructor(props){\n        super(props)\n        this.popUp = this.popUp.bind(this)\n        this.state = {\n            'popUp':false,\n            'vendor':{},\n            'update':{}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.vendorDelete = this.vendorDelete.bind(this)\n    }\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value]\n            }\n        })\n    }\n\n    \n    async onSubmit(e){\n        e.preventDefault();\n            var data = this.state.vendor\n            var ele;\n            for (ele in this.state.update){\n                data[ele] = this.state.update[ele][0]\n            }\n            data = {...data, 'action':'edit'}\n            updateVendor(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        alert(\"Vendor Data updated.\")\n                        this.props.update(0)\n                    }\n                    else{\n                        alert(data['error'])\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    vendorDelete(id){\n        var data = {\n            'vendors_id':[\n                id\n            ]\n        }\n        deleteVendors(JSON.stringify(data)).then(data=>{\n            try {\n                if (data['status']){\n                    alert('Vendor data deleted.')\n                    this.props.update(0)\n                }   else{\n                    alert(data['error'])\n                }\n            }catch(e){\n                console.log(e)\n            }\n        })\n    }\n    \n    async popUp(id, uuid=0){\n        const data = {\n            'action':'get',\n            'vendor_id':id,\n        }\n        var data_main;\n        await getVendor(JSON.stringify(data)).then(data => {\n            if (data['status']){\n                data_main=data\n            }\n        })\n        await this.setState({\n            'popUp':true,\n            'vendor':data_main['vendors'][0]\n        })\n    }\n\n\n    columns = [\n        {\n            id:1,\n            name:\"Name\",\n            prop: 'name'\n        },\n        {\n            id:2,\n            name:\"Phone Number\",\n            prop: 'phone1'\n        },\n        {\n            id:3,\n            name:\"Email\",\n            prop: 'email'\n        },\n        {\n            id:4,\n            name:\"Address\",\n            prop: 'address'\n        }      \n    ]\n    \n\n    render() {\n        const list = <List data={this.props.data} header={this.columns}   popUp={this.popUp} update={this.props.update} page={this.props.page} />\n        const popUpRender = <div>\n                        <button onClick={()=> {this.setState({'popUp':false})}}>Back</button><br></br>\n                        <h1>{this.state.vendor.name}</h1>\n                        <form onSubmit={this.onSubmit}>\n                            First Name: <TextField\n                                id ='first_name'\n                                name=\"first_name\"\n                                type='text'\n                                onChange={this.onChange}  \n                                placeholder={this.state.vendor.first_name}          \n                            />\n                            Middle Name : <TextField\n                                id ='middle_name'\n                                name=\"middle_name\"\n                                type='text'\n                                onChange={this.onChange}\n                                placeholder={this.state.vendor.middle_name} \n                            />\n                            Last Name  : <TextField\n                                id ='last_name'\n                                name=\"last_name\"\n                                type='text'\n                                onChange={this.onChange}\n                                placeholder={this.state.vendor.last_name}\n                                  \n                            />\n                            <br></br>\n                            Email : <TextField\n                                id ='email'\n                                name=\"email\"\n                                type='email'\n                                onChange={this.onChange}                                \n                                placeholder={this.state.vendor.email}\n                                  \n                            />\n                            <br></br>\n                            Website : <TextField\n                                id ='website'\n                                name=\"website\"\n                                type='text'\n                                onChange={this.onChange}                                \n                                placeholder={this.state.vendor.website}\n                            />\n                            <br></br>\n                            Tax Number : <TextField\n                                id ='tax_number'\n                                name=\"tax_number\"\n                                type='number'\n                                onChange={this.onChange}                                \n                                placeholder={this.state.vendor.tax_number}\n                                  \n                            />\n                            <br></br>\n                            Contact Number: <TextField\n                                id ='phone1'\n                                name=\"phone1\"\n                                type='number'\n                                onChange={this.onChange}                                  \n                                placeholder={this.state.vendor.phone1}\n                            />\n                            <br></br>\n                            Contact Number 2 : <TextField\n                                id ='phone2'\n                                name=\"phone2\"\n                                type='number'\n                                onChange={this.onChange}                                \n                                placeholder={this.state.vendor.phone2}\n                            />\n                            <br></br>\n                            \n                            Addresss : <TextField\n                                id ='address'\n                                name=\"address\"\n                                type='text'\n                                onChange={this.onChange}\n                                placeholder={this.state.vendor.address}\n                            />\n                            <br></br>\n                            <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                >\n                                Update\n                                </Button> <Button variant=\"contained\" color=\"secondary\" onClick={() => {this.vendorDelete(this.state.vendor.id)}}>\n                            Delete Vendor\n                        </Button> \n                        \n                </form>\n            \n                        <br>\n                        </br>\n                    </div>\n        return (\n            <div>\n                {this.state.popUp ? popUpRender : list}\n            </div>\n        )\n    }\n}\n\nexport default VendorList\n","import React, { Component } from 'react'\nimport {getVendors} from '../../api/inventory/vendorApi';\nimport {  connect } from 'react-redux';\nimport  VendorList  from './vendorList';\nimport { Link} from 'react-router-dom';\n\nclass Vendors extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            'vendors':[],\n            'loaded':false,\n            'start':0,\n            'end':10,\n            'page':1\n        }\n        this.update_table = this.update_table.bind(this)\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n    }\n\n    async update_table (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                'loaded':false,\n                start: 0,\n                end: 10,\n                page:1\n            })\n        }\n        else{\n            if (this.state.start+by>-1){\n                await this.setState({\n                    'loaded':false,\n                    start: this.state.start+by,\n                    end: this.state.end+by,\n                    page:this.state.page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.start,\n            'end':this.state.end\n        }\n        this.getVendorsData(request_json)\n    }\n    \n    async getVendorsData (request_json) {\n        await getVendors(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'vendors':data['vendors'],\n                    'loaded':true\n                })\n            }  \n        })\n    }\n\n \n\nrender() {\n    const render_after_load = (\n        <div>\n            <VendorList data={this.state.vendors} update={this.update_table} page={this.state.page} />\n        </div>\n    )\n\n    return(\n        <div>\n            <Link to='/vendors/create'>Add New Vendor</Link><br></br>\n            <button onClick={() => {this.update_table(0)}}>Refresh table</button><br></br>\n            {this.state.loaded ? render_after_load : \"Loading...\"}\n\n        </div>\n    )\n}\n}\n\n\n\n\nconst mapStateToProps = state => ({\n    user: state.user,\n})\n\nexport default connect(mapStateToProps)(Vendors)","import { baseRequest } from '../base';\n// api for Invoices \n\nconst getCustomers = async data => {\n    try {\n      return await baseRequest('apiv1/sales/customers','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  \n  const deleteCustomers = async data => {\n    try {\n      return await baseRequest('apiv1/sales/customers/delete','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const createCustomer = async data => {\n      try {\n        return await baseRequest('apiv1/sales/customers','POST', data);\n      } catch(e){\n        alert(e)\n      }\n  };\n  \n  \n  const getCustomer = async data => {\n    try {\n      return await baseRequest('apiv1/sales/customer','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const updateCustomer= async data => {\n    try {\n      return await baseRequest('apiv1/sales/customer','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \nexport {getCustomers, createCustomer, deleteCustomers, updateCustomer, getCustomer}\n  ","import React, { Component } from 'react'\nimport List from '../list';\nimport { getCustomer, updateCustomer,  deleteCustomers } from '../../api/sales/customer';\nimport {Button, TextField, Grid, Paper, withStyles } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\n\nimport {FormControl, InputLabel, Input, FormHelperText} from '@material-ui/core'\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\nimport Swal from 'sweetalert2'\n\nconst styles = makeStyles((theme) => ({\n    root: {\n    flexGrow: 12,\n    },\n    paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    },\n}));\n\n\nclass CustomerList extends Component {\n    \n    constructor(props){\n        super(props)\n        this.popUp = this.popUp.bind(this)\n        this.state = {\n            'popUp':false,\n            'customer':{},\n            'update':{}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.customerDelete = this.customerDelete.bind(this)\n    }\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value][0]\n            }\n        })\n    }\n\n    \n    async onSubmit(){\n            var data = this.state.update\n            data = {...data, 'action':'edit'}\n            updateCustomer(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        Swal.fire(\n                            'Updated!',\n                            'Customer Details has been updated.',\n                            'success'\n                          )\n                        this.props.update(0)\n                    }\n                    else{\n                        Swal.fire({\n                            icon:'error',\n                            title:data['error']\n                        })\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    customerDelete(id){\n        var data = {\n            'customers_id':[\n                id\n            ]\n        }\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to revert this!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, delete it!'\n          }).then((result) => {\n            if (result.value) {\n                deleteCustomers(JSON.stringify(data)).then(data=>{\n                    try {\n                        if (data['status']){\n                            Swal.fire({\n                                icon:'success',\n                                title:'Customer entry has been deleted.',\n                                showConfirmButton: false,\n                                timer:1000\n                            })\n                            this.props.update(0)\n                        }   else{\n                            Swal.fire({\n                                icon:'error',\n                                title:data['error']\n                            })\n                        }\n                    }catch(e){\n                        console.log(e)\n                    }\n                })\n              \n            }\n          })\n        \n    }\n    \n    async popUp(id, uuid=0){\n        const data = {\n            'action':'get',\n            'customer_id':id,\n        }\n        var data_main;\n        await getCustomer(JSON.stringify(data)).then(data => {\n            if (data['status']){\n                data_main=data\n            }\n        })\n        await this.setState({\n            'popUp':true,\n            'update':data_main['customers'][0],\n            'customer':data_main['customers'][0]\n        })\n    }\n\n\n    columns = [\n        {\n            id:1,\n            name:\"Name\",\n            prop: 'name'\n        },\n        {\n            id:2,\n            name:\"Phone Number\",\n            prop: 'phone1'\n        },\n        {\n            id:3,\n            name:\"Email\",\n            prop: 'email'\n        },\n        {\n            id:4,\n            name:\"Address\",\n            prop: 'address'\n        }      \n    ]\n\n\n    render() {\n        const { classes } = this.props;\n\n        const list = <List data={this.props.data} header={this.columns}   popUp={this.popUp} update={this.props.update} page={this.props.page} />\n         const popUpRender =\n         <div>\n            &nbsp;\n            &nbsp;\n            &nbsp;\n            &nbsp;\n            &nbsp;\n            &nbsp; <Button  variant=\"contained\" size='small' color=\"primary\" onClick={()=> {this.setState({...this.state, popUp:false})}}>\n                <ArrowLeftIcon></ArrowLeftIcon>\n         Back\n     </Button>\n        <Grid  container spacing={3} justify=\"center\" alignContent='center' alignItems=\"center\">\n            <Grid item xm={4}>\n            \n            </Grid>\n            <Grid item xs={4}>\n            <h1>{this.state.update.name}</h1>\n            </Grid>\n            <Grid item xm={4}>\n            </Grid>\n        </Grid>\n\n        <Grid container  justify=\"center\" alignContent='center' alignItems=\"center\">\n        <Grid item xm={6}>\n            <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n                <Grid item xm={2} > \n                <TextField required id=\"first_name\" label=\"First Name\" name='first_name' defaultValue={this.state.update.first_name} onChange={this.onChange} autoFocus/>\n                </Grid>\n                <Grid item xm={2}>\n                <TextField required id=\"middle_name\" label=\"Middle Name\" name='middle_name' defaultValue={this.state.update.middle_name} onChange={this.onChange} />\n                </Grid>\n                <Grid item xm={2}>\n                <TextField required id=\"last_name\" label=\"Last Name\" name='last_name' defaultValue={this.state.update.last_name} onChange={this.onChange} />\n                </Grid>\n            </Grid>\n            \n            <Grid container spacing={3}>\n                <Grid item xm={6} md={6}> \n                <FormControl fullWidth>\n                <InputLabel htmlFor=\"email\">Email address</InputLabel>\n                <Input id=\"email\" required name='email' fullWidth onChange={this.onChange} defaultValue={this.state.update.email}  />\n                </FormControl>\n                </Grid>\n                <Grid item xm={6} md={6}> \n                 <TextField\n                                id ='website'\n                                name=\"website\"\n                                label='Website'\n                                type='text'\n                                fullWidth\n                                onChange={this.onChange}                                \n                                defaultValue={this.state.update.website}\n                            />\n\n               </Grid>\n            </Grid>\n\n\n            <Grid container spacing={3} >\n                \n                <Grid item xm={6} md={6}> \n                <TextField\n                label=\"Primary Phone Number\"\n                                id ='phone1'\n                                name=\"phone1\"\n                                fullWidth\n                                onChange={this.onChange}                                  \n                                value={this.state.update.phone1}\n                            />\n                </Grid>\n                <Grid item xm={6} md={6}> \n                 \n                <TextField\n                    label='Second Phone Number'\n                                id ='phone2'\n                                name=\"phone2\"\n                                fullWidth\n                                onChange={this.onChange}                                \n                                value={this.state.update.phone2}\n                            />\n\n               </Grid>\n            </Grid>\n\n\n            <Grid container spacing={3}>\n\n                <Grid item xm={6} md={6}> \n                <TextField\n                                id ='address'\n                                name=\"address\"\n                                type='text'\n                                label='Address'\n                                fullWidth\n                                onChange={this.onChange}\n                                value={this.state.update.address}\n                            />\n                </Grid>\n                <Grid item xm={6} md={6} > \n                <TextField\n                                id ='tax_number'\n                                name=\"tax_number\"\n                                type='number'\n                                fullWidth\n                                label='Tax Number'\n                                onChange={this.onChange}                                \n                                value={this.state.update.tax_number}   \n                            />\n               </Grid>\n            </Grid>\n            <Grid container spacing={3}  alignItems='flex-end'>\n\n                <Grid item xm={3} md={6}> \n                <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={()=>{this.onSubmit()}}\n                                >\n                                Update\n                                </Button>\n                </Grid>\n                <Grid item xm={3} md={6}> \n                <Button variant=\"contained\" color=\"secondary\" onClick={() => {this.customerDelete(this.state.customer.id)}}>\n                    Delete Customer\n                </Button> \n               </Grid>\n            </Grid>\n        </Grid>\n        </Grid><br></br>\n        </div>\n        return (\n            <div>\n                {this.state.popUp ? popUpRender : list}\n            </div>\n        )\n    }\n}\n\nCustomerList.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n\n\nexport default withStyles(styles)(CustomerList)","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    backgroundColor: \"black\",\n        \n    // position: 'fixed',\n    left: theme.spacing(2),\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n    },\n}));\n\nexport default function LoadingIcon() {\n  const classes = useStyles();\n  const [progress, setProgress] = React.useState(0);\n\n  React.useEffect(() => {\n    function tick() {\n      // reset when reaching 100%\n      setProgress(oldProgress => (oldProgress >= 100 ? 0 : oldProgress + 1));\n    }\n\n    const timer = setInterval(tick, 20);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  return (\n    <Grid\n    container\n    spacing={0}\n    direction=\"column\"\n    alignItems=\"center\"\n    justify=\"center\"\n    style={{ minHeight: '100vh' }}\n  >\n  \n    <Grid item xs={3}>\n    <CircularProgress variant=\"determinate\" value={progress} />\n\n    </Grid>   \n  \n  </Grid> \n        \n  );\n}","import React, { Component } from 'react'\nimport {getCustomers} from '../../api/sales/customer';\nimport {  connect } from 'react-redux';\nimport  CustomerList  from './customerList';\nimport { Link} from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/styles';\nimport PropTypes from 'prop-types';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport LoadingIcon from '../loading';\n\nconst styles = makeStyles((theme) => ({\n    root: {\n    flexGrow: 12,\n    },\n    paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    },\n}));\n\n\nclass Customers extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            'customers':[],\n            'loaded':false,\n            'start':0,\n            'end':10,\n            'page':1\n        }\n        this.update_table = this.update_table.bind(this)\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n        this.update_table(0)\n    }\n\n    async update_table (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                'loaded':false,\n                start: 0,\n                end: 10,\n                page:1\n            })\n        }\n        else{\n            if (this.state.start+by>-1){\n                await this.setState({\n                    'loaded':false,\n                    start: this.state.start+by,\n                    end: this.state.end+by,\n                    page:this.state.page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.start,\n            'end':this.state.end\n        }\n        this.getCustomersData(request_json)\n    }\n    \n    async getCustomersData (request_json) {\n        await getCustomers(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'customers':data['customers'],\n                    'loaded':true\n                })\n            }  \n        })\n    }\n\n \n\nrender() {\n    const { classes } = this.props;\n\n    const render_after_load = (\n        <div>\n            <CustomerList data={this.state.customers} update={this.update_table} page={this.state.page} />\n        </div>\n    )\n\n    return(\n        <div className={classes.root}>\n      <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n          <Grid item xs={3} >\n          <Button variant=\"contained\" color=\"primary\" onClick={() => {this.update_table(0)}}>\n            <RefreshIcon/>&nbsp;&nbsp;&nbsp;Refresh Table\n            </Button>\n          </Grid>\n          <Grid item xs={5}>\n\n          </Grid>\n            <Grid item xs={3}>\n            <Link to='/customers/create' style={{ textDecoration: 'none' }}>\n            <Button variant=\"contained\" color=\"secondary\">\n            <AddCircleIcon/>&nbsp;&nbsp;&nbsp;Add New Customers\n            </Button>\n            </Link>\n            </Grid>\n\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n          {this.state.loaded ? render_after_load : <LoadingIcon></LoadingIcon>}\n          </Paper>\n        </Grid>\n        \n      </Grid>\n    </div>\n    )\n}\n}\n\n\n\n\n\nCustomers.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n\nconst mapStateToProps = state => ({\n    user: state.user,\n})\n\nexport default withStyles(styles)(connect(mapStateToProps)(Customers))","import React, { Component } from 'react'\nimport {  connect } from 'react-redux';\nimport {Button, TextField } from '@material-ui/core';\nimport { createCustomer } from '../../api/sales/customer';\n\n\nclass CustomerCreation extends Component {\n\n    constructor (props){\n        super(props)\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.state = {\n            'update':{\n                'middle_name':[''],\n                'website':[''],\n                'phone2':[''],\n                'address':['']\n            }\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n    }\n\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value]\n            }\n        })\n    }\n\n\n    async onSubmit(e){\n        e.preventDefault();\n            var data = {...this.state.update}\n            var ele;\n            for (ele in this.state.update){\n                data[ele] = this.state.update[ele][0]\n            }\n            data = {...data, 'action':'add'}\n            createCustomer(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        alert(\"New Customer Added\")\n                    }\n                    else{\n                        alert(data['error'])\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Add New Vendor</h1>\n                <form onSubmit={this.onSubmit}>\n                            First Name: <TextField\n                                id ='first_name'\n                                name=\"first_name\"\n                                type='text'\n                                onChange={this.onChange}  \n                                required                  \n                            />\n                            Middle Name : <TextField\n                                id ='middle_name'\n                                name=\"middle_name\"\n                                type='text'\n                                onChange={this.onChange} \n                            />\n                            Last Name  : <TextField\n                                id ='last_name'\n                                name=\"last_name\"\n                                type='text'\n                                onChange={this.onChange}\n                                required \n                            />\n                            <br></br>\n                            Email : <TextField\n                                id ='email'\n                                name=\"email\"\n                                type='email'\n                                onChange={this.onChange}\n                                required \n                            />\n                            <br></br>\n                            Website : <TextField\n                                id ='website'\n                                name=\"website\"\n                                type='text'\n                                onChange={this.onChange}\n                            />\n                            <br></br>\n                            Tax Number : <TextField\n                                id ='tax_number'\n                                name=\"tax_number\"\n                                type='number'\n                                onChange={this.onChange}\n                                required \n                            />\n                            <br></br>\n                            Contact Number: <TextField\n                                id ='phone1'\n                                name=\"phone1\"\n                                type='number'\n                                onChange={this.onChange}\n                                required \n                            />\n                            <br></br>\n                            Contact Number 2 : <TextField\n                                id ='phone2'\n                                name=\"phone2\"\n                                type='number'\n                                onChange={this.onChange}\n                            />\n                            <br></br>\n                            \n                            Addresss : <TextField\n                                id ='address'\n                                name=\"address\"\n                                type='text'\n                                onChange={this.onChange}\n                            />\n                            <br></br>\n                            <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                >\n                                Update\n                                </Button>\n                        \n                </form>\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    user: state.user\n})\n\nexport default connect(mapStateToProps)(CustomerCreation)","import { baseRequest } from '../base';\n// api for items \n\nconst getPurchaseOrders = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/porders','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  \n  const deletePurchaseOrder = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/porders/delete','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const createPurchaseOrder = async data => {\n      try {\n        return await baseRequest('apiv1/inventory/porders','POST', data);\n      } catch(e){\n        alert(e)\n      }\n  };\n  \n  \n  const getPurchaseOrder = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/porder','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const updatePurchaseOrder= async data => {\n    try {\n      return await baseRequest('apiv1/inventory/porder','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \nexport {getPurchaseOrders, deletePurchaseOrder, createPurchaseOrder, getPurchaseOrder, updatePurchaseOrder}\n  ","import { baseRequest } from '../base';\n// api for items \n\n  \n  const deletePurchaseItems = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/pitems/delete','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const createPurchaseItem = async data => {\n      try {\n        return await baseRequest('apiv1/inventory/pitems','POST', data);\n      } catch(e){\n        alert(e)\n      }\n  };\n  \n  const updatePurchaseItem= async data => {\n    try {\n      return await baseRequest('apiv1/inventory/pitem','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \nexport { deletePurchaseItems, createPurchaseItem, updatePurchaseItem}\n  ","import { baseRequest } from './base';\n \n\nconst getDiscounts = async data => {\n    try {\n      return await baseRequest('apiv1/sales/discounts','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  \n  const deleteDiscounts = async data => {\n    try {\n      return await baseRequest('apiv1/sales/discounts/delete','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const createDiscount = async data => {\n      try {\n        return await baseRequest('apiv1/sales/discounts','POST', data);\n      } catch(e){\n        alert(e)\n      }\n  };\n  \n  \n  const getDiscount = async data => {\n    try {\n      return await baseRequest('apiv1/sales/discount','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const updateDiscount= async data => {\n    try {\n      return await baseRequest('apiv1/sales/discount','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n\n\n  \nconst getTaxes = async data => {\n    try {\n      return await baseRequest('apiv1/sales/taxes','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  \n  const deleteTaxes = async data => {\n    try {\n      return await baseRequest('apiv1/sales/taxes/delete','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const createTax = async data => {\n      try {\n        return await baseRequest('apiv1/sales/taxes','POST', data);\n      } catch(e){\n        alert(e)\n      }\n  };\n  \n  \n  const getTax = async data => {\n    try {\n      return await baseRequest('apiv1/sales/tax','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const updateTax= async data => {\n    try {\n      return await baseRequest('apiv1/sales/tax','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n\n  const getPurchaseOrderStatus= async data => {\n    try {\n      return await baseRequest('apiv1/inventory/status/porders','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n\n  \nexport {getPurchaseOrderStatus, getDiscounts, createDiscount, deleteDiscounts, updateDiscount, getDiscount, getTaxes, createTax, deleteTaxes, updateTax, getTax}\n  ","import { baseRequest } from '../base';\n// api for items \n\nconst getItems = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/items','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  \n  const deleteItems = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/items/delete','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const createItem = async data => {\n      try {\n        return await baseRequest('apiv1/inventory/items','POST', data);\n      } catch(e){\n        alert(e)\n      }\n  };\n  \n  \n  const getItem = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/item','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const updateItem= async data => {\n    try {\n      return await baseRequest('apiv1/inventory/item','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \nexport {getItems, createItem, deleteItems, updateItem, getItem}\n  ","import React, { Component } from 'react'\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport List from '../list';\nimport Popup from \"reactjs-popup\";\nimport style from './css/popUp.module.css';\nimport {getVendors} from '../../api/inventory/vendorApi';\nimport {updatePurchaseOrder, getPurchaseOrder} from '../../api/inventory/purchaseOrder';\nimport {updatePurchaseItem, deletePurchaseItems, createPurchaseItem} from '../../api/inventory/purchaseItem'\nimport {getPurchaseOrderStatus} from '../../api/misc';\nimport {getItems} from '../../api/inventory/itemApi';\nclass PopUpEdit extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            'popUp':false,\n            'new':false,\n            'current':0,\n            'status':[],\n            'vendor_selection':[\n                {\n                    'id':0,\n                    'name':'None'\n                }\n            ],\n            'item_selection':[\n                {\n                    'id':0,\n                    'name':\"None\"\n                }\n            ],\n            update : {\n                'purchase_order':{\n                    ...this.props.purchase_order,\n                    'invoiced_on': this.converter(this.props.purchase_order.invoiced_on),\n                    'completed_on': this.converter(this.props.purchase_order.completed_on)\n                },\n                'purchase_items':this.props.purchase_items\n            }\n        }\n        this.refreshTable = this.refreshTable.bind(this)\n        this.getItemData = this.getItemData.bind(this)\n        this.selectItem = this.selectItem.bind(this)\n        this.searchItem = this.searchItem.bind(this)\n        this.addPurchaseItem = this.addPurchaseItem.bind(this)\n        this.invoiceHandler = this.invoiceHandler.bind(this)\n        this.completeHandler = this.completeHandler.bind(this)\n        this.getVendorsData = this.getVendorsData.bind(this)\n        this.converter = this.converter.bind(this)\n        this.popUp = this.popUp.bind(this)\n        this.searchVendor = this.searchVendor.bind(this)\n        this.selectVendor = this.selectVendor.bind(this)\n        this.onChange = this.onChange.bind(this)\n        this.updatePurchaseOrder = this.updatePurchaseOrder.bind(this)\n        this.onChangePI = this.onChangePI.bind(this)\n        this.postPurchaseItem = this.postPurchaseItem.bind(this)\n        this.deletePurchaseItem = this.deletePurchaseItem.bind(this)\n    }\n\n\n    async componentDidMount(){\n        var request_json = {\n            'action':'get',\n        }\n        await getPurchaseOrderStatus(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    ...this.state,\n                    'status':data.data\n                })\n            }  \n        })\n    }\n\n    async getVendorsData (request_json) {\n        await getVendors(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'vendor_selection':data['vendors'],\n                })\n            }  \n        })\n    }\n\n    selectVendor(id,name){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_order':{\n                    ...this.state.update.purchase_order,\n                    'vendor':id,\n                    'vendor_name':name\n                }\n            }\n        })\n    }\n\n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_order':{\n                    ...this.state.update.purchase_order,\n                    [e.target.name] : [e.target.value][0]\n                }\n            }\n        })\n    }\n\n    converter(date){\n        return ( new Date(Date.parse(date)))\n    }\n\n    popUp(id){\n        var key\n        for (key in this.state.update.purchase_items){\n            if (this.state.update.purchase_items[key].id === id){\n                this.setState({\n                    ...this.state,\n                    'current':key,\n                    'popUp':true\n                })        \n                return\n            }\n        }\n    }\n\n    searchVendor(e){\n        if ((e.target.value).length > 2 ){\n            var request_json = {\n                'action':'get',\n                'start':0,\n                'end':10,\n                'filter':'name',\n                'first_name':(e.target.value)\n            }\n            this.getVendorsData(request_json)\n        }\n    }\n    \n    invoiceHandler(date){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_order':{\n                    ...this.state.update.purchase_order,\n                    'invoiced_on' : date\n                }\n            }\n        })\n    }\n    \n    completeHandler(date){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_order':{\n                    ...this.state.update.purchase_order,\n                    'completed_on' : date\n                }\n            }\n        })\n    }\n\n    updatePurchaseOrder(){\n        var request_json = {\n            ...this.state.update.purchase_order,\n            'action':'edit',\n            'purchase_order_id':this.state.update.purchase_order.id\n        }\n        updatePurchaseOrder(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                alert(\"Purchase Order Details Has Been Updated.\")\n                this.props.update(0)\n            }\n            else{\n                alert(\"Error : \",data.error)\n            }\n        })\n    }\n\n    onChangePI(e){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_items':{\n                    ...this.state.update.purchase_items,\n                    [this.state.current] : {\n                        ...this.state.update.purchase_items[this.state.current],\n                        [e.target.name] : [e.target.value][0]\n                    },\n                }\n            }\n        })\n    }\n\n    postPurchaseItem(is_new=false){\n        var request_json\n        if (is_new){\n            request_json = {\n                'action':'add',\n                'purchase_order':this.state.update.purchase_order.id,\n                ...this.state.update.purchase_items[this.state.current]\n            }\n            createPurchaseItem(JSON.stringify(request_json)).then(data => {\n                if (data['status']){\n                    alert(\"Purchase Item Has Been Added.\")\n                    this.refreshTable()\n                }\n                else{\n                    alert(data['error'])\n                }\n            })\n            return\n        }\n        request_json = {\n            'action':'edit',\n            ...this.state.update.purchase_items[this.state.current]\n        }\n        updatePurchaseItem(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                alert(\"Purchase Item Details Has Been Updated.\")\n                this.refreshTable()\n            }\n            else{\n                alert(data['error'])\n            }\n        })\n    }\n\n    deletePurchaseItem(){\n        var request_json = {\n            purchase_items_id : [this.state.update.purchase_items[this.state.current].id]\n        }\n        deletePurchaseItems(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                alert(\"Purchase Item Has Beed Deleted.\")\n                this.refreshTable()\n            }\n            else{\n                alert(data['error'])\n            }\n        })\n    }\n\n\n    addPurchaseItem(){\n        var current =0;\n        var item,p_list=[];\n        for (item in this.state.update.purchase_items){\n            if (item.id){\n                if (item.id !== \"Fake Key\"){\n                    current = current + 1\n                    p_list.push(item)\n                }\n            }\n        }\n        this.setState({\n            'current':current,\n            'new':true,\n            'popUp':true,\n            'update':{\n                ...this.state.update,\n                'purchase_items':[\n                    ...p_list,\n                    {\n                        'item_name':\"None\",\n                        'discount_type':'percentage',\n                        'status':'incomplete'\n                    }\n                ]\n            }\n        })\n    }\n    columns = [\n        {\n            id:1,\n            name:\"Item Name\",\n            prop: 'item_name'\n        },\n        {\n            id:2,\n            name:\"Quantity\",\n            prop: 'quantity'\n        },\n        {\n            id:3,\n            name:\"Stock\",\n            prop: 'stock'\n        },\n        {\n            id:4,\n            name:\"Defective\",\n            prop: 'defective'\n        },   \n        {\n            id:5,\n            name:\"Sold\",\n            prop: 'sold'\n        },\n        {\n            id:6,\n            name:\"Discount\",\n            prop: 'discount'\n        },\n        {\n            id:7,\n            name:\"Purchase Price\",\n            prop: 'purchase_price'\n        },\n        {\n            id:8,\n            name:\"Status\",\n            prop: 'status'\n        }\n    ]\n\n    searchItem(e){\n        if ((e.target.value).length > 2 ){\n            var request_json = {\n                'action':'get',\n                'start':0,\n                'end':10,\n                'filter':'name',\n                'name':(e.target.value)\n            }\n            this.getItemData(request_json)\n        }\n    }\n\n    async getItemData(request_json){\n        await getItems(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    ...this.state,\n                    'item_selection':data['items'],\n                })\n            }  \n        })\n    }\n    selectItem(id, name){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_items':{\n                    ...this.state.update.purchase_items,\n                    [this.state.current] : {\n                        ...this.state.update.purchase_items[this.state.current],\n                        'item_name' : name,\n                        'item':id\n                    },\n                }\n            }\n        })\n\n    }\n\n    async refreshTable(){\n        var id = this.state.update.purchase_order.id;\n        var items= [];\n        const request_json = {\n            'action':'get',\n            'purchase_order_id':id\n        }\n        await getPurchaseOrder(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                items = data['p_items']\n            }\n        })\n        if (items.length === 0){\n            items = [{\n                'id':\"Fake Key\",\n                'item_name': ''\n            }]\n        }\n        await this.setState({\n            ...this.state,\n            'popUp':false,\n            'update':{\n                ...this.state.update,\n                'purchase_items':items\n            }\n        })\n    }\n\n\n    render() {\n        const item_selection = this.state.item_selection\n        const itemPopUp = <Popup trigger={ <button>Select Item</button>} closeOnDocumentClick>\n        <div>\n            <input placeholder=\"Item Name\" id='item_search_box' name='item_serach_box' onChange={this.searchItem}></input>\n            <div className={style.dropdown_content} id='vendor_dropdown'>\n                    {item_selection.map(\n                        item => (\n                            // use css to get rid of <a>\n                            <a href=\"#\" key={item.id} onClick={() => {this.selectItem(item.id, item.name)}} >{item.name}</a>\n                        )\n                    )}\n            </div>\n        </div>\n        </Popup>\n        const popUpItem = <div>\n                <button onClick={() => {this.refreshTable()}} >Back</button><br></br><br></br>\n                Item : {this.state.update.purchase_items[this.state.current].item_name}  {this.state.new ? itemPopUp: <span></span>}<br></br>\n                Quantity : <input name=\"quantity\" placeholder={this.state.update.purchase_items[this.state.current].quantity} type=\"number\" onChange={this.onChangePI} required></input><br></br>\n                Defective : <input name=\"defective\" placeholder={this.state.update.purchase_items[this.state.current].defective} type=\"number\"  onChange={this.onChangePI} required></input><br></br>\n                \n                Discount Type :<select name='discount_type' id=\"discount_type\" defaultValue={this.state.update.purchase_items[this.state.current].discount_type}  onChange={this.onChangePI}>\n                                    <option value=\"percent\">Percentage</option>\n                                    <option value=\"fixed\">Fixed</option>\n                                </select> <br></br>\n                Discount : <input placeholder={this.state.update.purchase_items[this.state.current].discount} name=\"discount\" onChange={this.onChangePI} ></input><br></br>\n                Purchase Price : <input placeholder={this.state.update.purchase_items[this.state.current].purchase_price} name=\"purchase_price\" onChange={this.onChangePI} required></input> <br></br>\n                Status : <select defaultValue= {this.state.update.purchase_items[this.state.current].status} name=\"status\" onChange={this.onChangePI}>\n                    <option value=\"delivered\">Delivered</option>\n                    <option value=\"incomplete\">Incomplete</option>\n                    <option value=\"addedtocirculation\">Added To Circulation</option>\n                </select><br></br>\n                {this.state.new ? <button onClick={() => {this.postPurchaseItem(true)}} >Add</button> : <button onClick={() => {this.postPurchaseItem()}} >Update</button>}<br></br><br></br>\n                <button onClick={() => {this.deletePurchaseItem()}} >Delete</button>\n            </div>\n        const vendor_selection = this.state.vendor_selection\n        const vendorPopup = <Popup trigger={<button>Change Vendor</button>} closeOnDocumentClick>\n        <div>\n            <input placeholder=\"Vendor's first name\" id='vendor_serach_box' name='vendor_serach_box' onChange={this.searchVendor}></input>\n            <div className={style.dropdown_content} id='vendor_dropdown'>\n                    {vendor_selection.map(\n                        vendor => (\n                            // use css to get rid of <a>\n                            <a href=\"#\" key={vendor.id} onClick={() => {this.selectVendor(vendor.id, vendor.name)}} >{vendor.name}</a>\n                        )\n                    )}\n            </div>\n        </div>\n        </Popup>\n        const status = this.state.status\n        return (\n            <div>\n                <h1>Purchase Order</h1>\n                <h1>{this.props.purchase_order.vendor_name}</h1>\n                Vendor : {this.state.update.purchase_order.vendor_name}\n                {vendorPopup}<br></br>\n                Invoiced On : \n                <DatePicker\n                name='invoiced_on'\n                selected={this.state.update.purchase_order.invoiced_on}\n                onChange={this.invoiceHandler}\n                />\n                Completed On : \n                <DatePicker\n                name='completed_on'\n                selected={this.state.update.purchase_order.completed_on}\n                onChange={this.completeHandler}\n                /><br></br>\n                Added By : {this.state.update.purchase_order.added_by_name}<br></br>\n                Total Cost : <input placeholder={this.state.update.purchase_order.total_cost} name=\"total_cost\" onChange={this.onChange}/><br></br>\n                Discount Type :<select name='discount_type' id=\"discount_type\" onChange={this.onChange} defaultValue={this.state.update.purchase_order.discount_type}>\n                                <option value=\"percent\">Percentage</option>\n                                <option value=\"fixed\">Fixed</option>\n                            </select> <br></br>\n                Discount : <input placeholder={this.state.update.purchase_order.discount} name=\"discount\" onChange={this.onChange}></input><br></br>\n                Status : <select name='status' id=\"status\" onChange={this.onChange} value={this.state.update.purchase_order.status}  >\n                                {status.map(\n                                    x => (\n                                    <option key={x.id} value={parseInt(x.id)}>{x.name}</option>\n                                    )\n                                )}\n                            </select> <br></br><br></br>\n                <button onClick={() => {this.updatePurchaseOrder()}}>Update Purchase Order</button><br></br><br></br>\n                <button onClick={() => {this.props.delete(this.props.purchase_order.id)}}>Delete</button>\n                <hr></hr>\n                <h3>Items</h3> <button  onClick={() => {this.addPurchaseItem()}}>Add New Items</button>\n                {this.state.popUp ? popUpItem :<List data={this.state.update.purchase_items} header={this.columns} page={false} popUp={this.popUp} />}\n            </div>\n        )\n    }\n}\nexport default PopUpEdit","import React, { Component } from 'react'\nimport List from '../list';\nimport { getPurchaseOrder, deletePurchaseOrder, updatePurchaseOrder } from '../../api/inventory/purchaseOrder';\nimport PopUpEdit from './popUpEdit';\n\nclass PurchaseOrderList extends Component {\n    \n    constructor(props){\n        super(props)\n        this.popUp = this.popUp.bind(this)\n        this.state = {\n            'popUp':false,\n            'purchase_order':{},\n            'purchase_items':[],\n            'update':{}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.purchaseOrderDelete = this.purchaseOrderDelete.bind(this)\n    }\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value]\n            }\n        })\n    }\n\n    \n    async onSubmit(e){\n        e.preventDefault();\n            var data = this.state.vendor\n            var ele;\n            for (ele in this.state.update){\n                data[ele] = this.state.update[ele][0]\n            }\n            data = {...data, 'action':'edit'}\n            updatePurchaseOrder(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        alert(\"Vendor Data updated.\")\n                        this.props.update(0)\n                    }\n                    else{\n                        alert(data['error'])\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    purchaseOrderDelete(id){\n        var data = {\n            'purchase_orders_id':[\n                id\n            ]\n        }\n        deletePurchaseOrder(JSON.stringify(data)).then(data=>{\n            try {\n                if (data['status']){\n                    alert('Purchase Order Deleted.')\n                    this.props.update(0)\n                }   else{\n                    alert(data['error'])\n                }\n            }catch(e){\n                console.log(e)\n            }\n        })\n    }\n    \n    async popUp(id, uuid=0){\n        const data = {\n            'action':'get',\n            'purchase_order_id':id,\n        }\n        var data_main;\n        await getPurchaseOrder(JSON.stringify(data)).then(data => {\n            if (data['status']){\n                data_main=data\n            }\n        })\n        if (data_main['p_items'].length === 0) {\n            console.log(\"blank\")\n            data_main['p_items'] = [{\n                id:0\n            }]\n        }\n        await this.setState({\n            'popUp':true,\n            'purchase_order':data_main['p_order'][0],\n            'purchase_items':data_main['p_items']\n        })\n    }\n\n\n    columns = [\n        {\n            id:1,\n            name:\"Vendor Name\",\n            prop: 'vendor_name'\n        },\n        {\n            id:2,\n            name:\"Items\",\n            prop: 'items'\n        },\n        {\n            id:3,\n            name:\"Invoiced On\",\n            prop: 'invoiced_on'\n        },\n        {\n            id:4,\n            name:\"Total Cost\",\n            prop: 'total_cost'\n        },   \n        {\n            id:5,\n            name:\"Status\",\n            prop: 'status_name'\n        }      \n    ]\n    \n\n    render() {\n        const list = <List data={this.props.data} header={this.columns}   popUp={this.popUp} update={this.props.update} page={this.props.page} />\n        const popUpRender = <PopUpEdit purchase_order={this.state.purchase_order} purchase_items={this.state.purchase_items} update={this.props.update} delete={this.purchaseOrderDelete} ></PopUpEdit>\n        return (\n            <div>\n                {this.state.popUp ? popUpRender : list}\n            </div>\n        )\n    }\n}\n\nexport default PurchaseOrderList\n","import React, { Component } from 'react'\nimport {getPurchaseOrders} from '../../api/inventory/purchaseOrder';\nimport {  connect } from 'react-redux';\nimport  PurchaseOrderList  from './purchaseOrderList';\nimport { Link} from 'react-router-dom';\n\nclass PurchaseOrders extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            'purchaseOrders':[],\n            'loaded':false,\n            'start':0,\n            'end':10,\n            'page':1\n        }\n        this.update_table = this.update_table.bind(this)\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n    }\n\n    async update_table (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                'loaded':false,\n                start: 0,\n                end: 10,\n                page:1\n            })\n        }\n        else{\n            if (this.state.start+by>-1){\n                await this.setState({\n                    'loaded':false,\n                    start: this.state.start+by,\n                    end: this.state.end+by,\n                    page:this.state.page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.start,\n            'end':this.state.end\n        }\n        this.getPurchaseOrdersData(request_json)\n    }\n    \n    async getPurchaseOrdersData (request_json) {\n        await getPurchaseOrders(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'purchaseOrders':data['p_orders'],\n                    'loaded':true\n                })\n            }  \n        })\n    }\n\n \n\nrender() {\n    const render_after_load = (\n        <div>\n            <PurchaseOrderList data={this.state.purchaseOrders} update={this.update_table} page={this.state.page} />\n        </div>\n    )\n\n    return(\n        <div>\n            <Link to='/purchaseorders/create'>Create New Purchase Order</Link><br></br>\n            <button onClick={() => {this.update_table(0)}}>Refresh table</button><br></br>\n            {this.state.loaded ? render_after_load : \"Loading...\"}\n\n        </div>\n    )\n}\n}\n\n\n\n\nconst mapStateToProps = state => ({\n    user: state.user,\n})\n\nexport default connect(mapStateToProps)(PurchaseOrders)","import React, { Component } from 'react'\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport List from '../list';\nimport Popup from \"reactjs-popup\";\nimport style from './css/popUp.module.css';\nimport {getVendors} from '../../api/inventory/vendorApi';\nimport {getPurchaseOrder , updatePurchaseOrder, createPurchaseOrder} from '../../api/inventory/purchaseOrder';\nimport {updatePurchaseItem, deletePurchaseItems, createPurchaseItem} from '../../api/inventory/purchaseItem'\nimport {getPurchaseOrderStatus} from '../../api/misc';\nimport {getItems} from '../../api/inventory/itemApi';\n\nclass PurchaseOrderCreation extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            'popUp':false,\n            'new':false,\n            'current':0,\n            'status':[],\n            'vendor_selection':[\n                {\n                    'id':0,\n                    'name':'None'\n                }\n            ],\n            'item_selection':[\n                {\n                    'id':0,\n                    'name':\"None\"\n                }\n            ],\n            update : {\n                'purchase_order':{\n                    'invoiced_on': this.converter((new Date()).toISOString()),\n                    'completed_on': this.converter((new Date()).toISOString()),\n                    'discount_type':'percent'\n                },\n                'purchase_items':[{\n                    'id':\"Fake Key\"\n                }]\n            }\n        }\n        this.converter = this.converter.bind(this)\n        this.addPurchaseOrder = this.addPurchaseOrder.bind(this)\n        this.getItemData = this.getItemData.bind(this)\n        this.selectItem = this.selectItem.bind(this)\n        this.searchItem = this.searchItem.bind(this)\n        this.addPurchaseItem = this.addPurchaseItem.bind(this)\n        this.invoiceHandler = this.invoiceHandler.bind(this)\n        this.completeHandler = this.completeHandler.bind(this)\n        this.getVendorsData = this.getVendorsData.bind(this)\n        this.popUp = this.popUp.bind(this)\n        this.searchVendor = this.searchVendor.bind(this)\n        this.selectVendor = this.selectVendor.bind(this)\n        this.onChange = this.onChange.bind(this)\n        this.updatePurchaseOrder = this.updatePurchaseOrder.bind(this)\n        this.onChangePI = this.onChangePI.bind(this)\n        this.postPurchaseItem = this.postPurchaseItem.bind(this)\n        this.deletePurchaseItem = this.deletePurchaseItem.bind(this)\n        this.refreshTable = this.refreshTable.bind(this)\n    }\n\n    async componentDidMount(){\n        var request_json = {\n            'action':'get',\n        }\n        await getPurchaseOrderStatus(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    ...this.state,\n                    'status':data.data\n                })\n            }  \n        })\n    }\n\n    async getVendorsData (request_json) {\n        await getVendors(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'vendor_selection':data['vendors'],\n                })\n            }  \n        })\n    }\n\n    selectVendor(id,name){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_order':{\n                    ...this.state.update.purchase_order,\n                    'vendor':id,\n                    'vendor_name':name\n                }\n            }\n        })\n    }\n\n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_order':{\n                    ...this.state.update.purchase_order,\n                    [e.target.name] : [e.target.value][0]\n                }\n            }\n        })\n    }\n\n    converter(date){\n        return ( new Date(Date.parse(date)))\n    }\n\n    popUp(id){\n        var key\n        for (key in this.state.update.purchase_items){\n            if (this.state.update.purchase_items[key].id === id){\n                this.setState({\n                    ...this.state,\n                    'current':key,\n                    'popUp':true\n                })        \n                return\n            }\n        }\n    }\n\n    searchVendor(e){\n        if ((e.target.value).length > 2 ){\n            var request_json = {\n                'action':'get',\n                'start':0,\n                'end':10,\n                'filter':'name',\n                'first_name':(e.target.value)\n            }\n            this.getVendorsData(request_json)\n        }\n    }\n    \n    invoiceHandler(date){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_order':{\n                    ...this.state.update.purchase_order,\n                    'invoiced_on' : date\n                }\n            }\n        })\n    }\n    \n    completeHandler(date){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_order':{\n                    ...this.state.update.purchase_order,\n                    'completed_on' : date\n                }\n            }\n        })\n    }\n\n    updatePurchaseOrder(){\n        var request_json = {\n            ...this.state.update.purchase_order,\n            'action':'edit',\n            'purchase_order_id':this.state.update.purchase_order.id\n        }\n        updatePurchaseOrder(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                alert(\"Purchase Order Details Has Been Updated.\")\n            }\n            else{\n                alert(\"Error : \",data.error)\n            }\n        })\n    }\n    addPurchaseOrder(){\n        var request_json = {\n            ...this.state.update.purchase_order,\n            'action':'add',\n        }\n        createPurchaseOrder(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                alert(\"Purchase Order Has Been Added.\")\n                data['p_orders'][0]['invoiced_on'] = this.converter(data['p_orders'][0]['invoiced_on'])\n                data['p_orders'][0]['completed_on'] = this.converter(data['p_orders'][0]['completed_on'])\n                this.setState({\n                    ...this.state,\n                    'update':{\n                        ...this.state.update,\n                        'purchase_order':data['p_orders'][0]\n                    }\n                })\n            }\n            else{\n                alert(\"Error : \",data.error)\n            }\n        })\n    }\n\n    onChangePI(e){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_items':{\n                    ...this.state.update.purchase_items,\n                    [this.state.current] : {\n                        ...this.state.update.purchase_items[this.state.current],\n                        [e.target.name] : [e.target.value][0]\n                    },\n                }\n            }\n        })\n    }\n\n    postPurchaseItem(is_new=false){\n        var request_json;\n        if (is_new){\n            request_json = {\n                'action':'add',\n                'purchase_order':this.state.update.purchase_order.id,\n                ...this.state.update.purchase_items[this.state.current]\n            }\n            createPurchaseItem(JSON.stringify(request_json)).then(data => {\n                if (data['status']){\n                    alert(\"Purchase Item Has Been Added.\")\n                    this.refreshTable()\n                }\n                else{\n                    alert(data['error'])\n                }\n            })\n            return\n        }\n        request_json = {\n            'action':'edit',\n            ...this.state.update.purchase_items[this.state.current]\n        }\n        updatePurchaseItem(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                alert(\"Purchase Item Details Has Been Updated.\")\n                this.refreshTable()\n            }\n            else{\n                alert(data['error'])\n            }\n        })\n    }\n\n  \n    deletePurchaseItem(){\n        var request_json = {\n            purchase_items_id : [this.state.update.purchase_items[this.state.current].id]\n        }\n        deletePurchaseItems(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                alert(\"Purchase Item Has Beed Deleted.\")\n                this.refreshTable()\n            }\n            else{\n                alert(data['error'])\n            }\n        })\n    }\n\n\n    addPurchaseItem(){\n        var current =0;\n        var item,p_list=[];\n        for (item in this.state.update.purchase_items){\n            if (item.id){\n                if (item.id !== \"Fake Key\"){\n                    current = current + 1\n                    p_list.push(item)\n                }\n            }\n        }\n        this.setState({\n            'current':current,\n            'new':true,\n            'popUp':true,\n            'update':{\n                ...this.state.update,\n                'purchase_items':[\n                    ...p_list,\n                    {\n                        'item_name':\"None\",\n                        'discount_type':'percentage',\n                        'status':'incomplete'\n                    }\n                ]\n            }\n        })\n    }\n\n    columns = [\n        {\n            id:1,\n            name:\"Item Name\",\n            prop: 'item_name'\n        },\n        {\n            id:2,\n            name:\"Quantity\",\n            prop: 'quantity'\n        },\n        {\n            id:3,\n            name:\"Stock\",\n            prop: 'stock'\n        },\n        {\n            id:4,\n            name:\"Defective\",\n            prop: 'defective'\n        },   \n        {\n            id:5,\n            name:\"Sold\",\n            prop: 'sold'\n        },\n        {\n            id:6,\n            name:\"Discount\",\n            prop: 'discount'\n        },\n        {\n            id:7,\n            name:\"Purchase Price\",\n            prop: 'purchase_price'\n        },\n        {\n            id:8,\n            name:\"Status\",\n            prop: 'status'\n        }\n    ]\n\n    searchItem(e){\n        if ((e.target.value).length > 2 ){\n            var request_json = {\n                'action':'get',\n                'start':0,\n                'end':10,\n                'filter':'name',\n                'name':(e.target.value)\n            }\n            this.getItemData(request_json)\n        }\n    }\n\n    async getItemData(request_json){\n        await getItems(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    ...this.state,\n                    'item_selection':data['items'],\n                })\n            }  \n        })\n    }\n    selectItem(id, name){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_items':{\n                    ...this.state.update.purchase_items,\n                    [this.state.current] : {\n                        ...this.state.update.purchase_items[this.state.current],\n                        'item_name' : name,\n                        'item':id\n                    },\n                }\n            }\n        })\n\n    }\n\n    async refreshTable(){\n        var id = this.state.update.purchase_order.id;\n        var items= [];\n        const request_json = {\n            'action':'get',\n            'purchase_order_id':id\n        }\n        await getPurchaseOrder(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                items = data['p_items']\n            }\n        })\n        if (items.length === 0){\n            items = [{\n                'id':\"Fake Key\",\n                'item_name': ''\n            }]\n        }\n        await this.setState({\n            ...this.state,\n            'popUp':false,\n            'update':{\n                ...this.state.update,\n                'purchase_items':items\n            }\n        })\n    }\n\n\n    render() {\n        const item_selection = this.state.item_selection\n        const itemPopUp = <Popup trigger={ <button>Select Item</button>} closeOnDocumentClick>\n        <div>\n            <input placeholder=\"Item Name\" id='item_search_box' name='item_serach_box' onChange={this.searchItem}></input>\n            <div className={style.dropdown_content} id='vendor_dropdown'>\n                    {item_selection.map(\n                        item => (\n                            // use css to get rid of <a>\n                            <a key={item.id} onClick={() => {this.selectItem(item.id, item.name)}} >{item.name}</a>\n                        )\n                    )}\n            </div>\n        </div>\n        </Popup>\n        const popUpItem = <div>\n                <button onClick={() => {this.refreshTable()}} >Back</button><br></br><br></br>\n                Item : {this.state.update.purchase_items[this.state.current].item_name}  {this.state.new ? itemPopUp: <span></span>}<br></br>\n                Quantity : <input name=\"quantity\" placeholder={this.state.update.purchase_items[this.state.current].quantity} type=\"number\" onChange={this.onChangePI} required></input><br></br>\n                Defective : <input name=\"defective\" placeholder={this.state.update.purchase_items[this.state.current].defective} type=\"number\"  onChange={this.onChangePI} required></input><br></br>\n                \n                Discount Type :<select name='discount_type' id=\"discount_type\" defaultValue={this.state.update.purchase_items[this.state.current].discount_type}  onChange={this.onChangePI}>\n                                    <option value=\"percent\">Percentage</option>\n                                    <option value=\"fixed\">Fixed</option>\n                                </select> <br></br>\n                Discount : <input placeholder={this.state.update.purchase_items[this.state.current].discount} name=\"discount\" onChange={this.onChangePI} ></input><br></br>\n                Purchase Price : <input placeholder={this.state.update.purchase_items[this.state.current].purchase_price} name=\"purchase_price\" onChange={this.onChangePI} required></input> <br></br>\n                Status : <select defaultValue= {this.state.update.purchase_items[this.state.current].status} name=\"status\" onChange={this.onChangePI}>\n                    <option value=\"delivered\">Delivered</option>\n                    <option value=\"incomplete\">Incomplete</option>\n                    <option value=\"addedtocirculation\">Added To Circulation</option>\n                </select><br></br>\n                {this.state.new ? <button onClick={() => {this.postPurchaseItem(true)}} >Add</button> : <button onClick={() => {this.postPurchaseItem()}} >Update</button>}<br></br><br></br>\n                <button onClick={() => {this.deletePurchaseItem()}} >Delete</button>\n            </div>\n        const vendor_selection = this.state.vendor_selection\n        const vendorPopup = <Popup trigger={this.state.update.purchase_order.id ?<button>Change Vendor</button> :<button>Select Vendor</button> } closeOnDocumentClick>\n        <div>\n            <input placeholder=\"Vendor's first name\" id='vendor_serach_box' name='vendor_serach_box' onChange={this.searchVendor}></input>\n            <div className={style.dropdown_content} id='vendor_dropdown'>\n                    {vendor_selection.map(\n                        vendor => (\n                            // use css to get rid of <a>\n                            <a key={vendor.id} onClick={() => {this.selectVendor(vendor.id, vendor.name)}} >{vendor.name}</a>\n                        )\n                    )}\n            </div>\n        </div>\n        </Popup>\n        const status = this.state.status\n        return (\n            <div>\n                Vendor : {this.state.update.purchase_order.vendor_name}\n                {vendorPopup}<br></br>\n                Invoiced On : \n                <DatePicker\n                name='invoiced_on'\n                selected={this.state.update.purchase_order.invoiced_on}\n                onChange={this.invoiceHandler}\n                required\n                />\n                Completed On : \n                <DatePicker\n                name='completed_on'\n                selected={this.state.update.purchase_order.completed_on}\n                onChange={this.completeHandler}\n                required\n                /><br></br>\n                Total Cost : <input placeholder={this.state.update.purchase_order.total_cost} name=\"total_cost\" onChange={this.onChange} /><br></br>\n                Discount Type :<select name='discount_type' id=\"discount_type\" onChange={this.onChange} defaultValue={this.state.update.purchase_order.discount_type}>\n                                <option value=\"percent\">Percentage</option>\n                                <option value=\"fixed\">Fixed</option>\n                            </select> <br></br>\n                Discount : <input placeholder={this.state.update.purchase_order.discount} name=\"discount\" onChange={this.onChange}></input><br></br>\n                Status : <select name='status' id=\"status\" onChange={this.onChange} value={this.state.update.purchase_order.status} required >\n                                {status.map(\n                                    x => (\n                                    <option key={x.id} value={parseInt(x.id)}>{x.name}</option>\n                                    )\n                                )}\n                            </select> <br></br><br></br>\n                {this.state.update.purchase_order.id ? <button onClick={() => {this.updatePurchaseOrder()}}>Update Purchase Order</button> : <button onClick={() => {this.addPurchaseOrder()}}>Create Purchase Order</button>}\n                <br></br><br></br>\n                <hr></hr>\n                <h3>Items</h3> {this.state.update.purchase_order.id ? <button  onClick={() => {this.addPurchaseItem()}}>Add New Items</button> : ''} \n                {this.state.update.purchase_order.id ?this.state.popUp ? popUpItem :<List data={this.state.update.purchase_items} header={this.columns} page={false} popUp={this.popUp} /> : \"Fill in Purchase Order first to add new items.\" }\n                \n            </div>\n        )\n    }\n}\nexport default PurchaseOrderCreation","import { baseRequest } from '../base';\n// api for Invoices \n\nconst getInvoices = async data => {\n    try {\n      return await baseRequest('apiv1/sales/invoices','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  \n  const deleteInvoices = async data => {\n    try {\n      return await baseRequest('apiv1/sales/invoices/delete','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const createInvoice = async data => {\n      try {\n        return await baseRequest('apiv1/sales/invoices','POST', data);\n      } catch(e){\n        alert(e)\n      }\n  };\n  \n  \n  const getInvoice = async data => {\n    try {\n      return await baseRequest('apiv1/sales/invoice','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const updateInvoice= async data => {\n    try {\n      return await baseRequest('apiv1/sales/invoice','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  const getInvoiceStatus= async data => {\n    try {\n      return await baseRequest('apiv1/sales/invoices/status','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \nexport {getInvoiceStatus, getInvoices, createInvoice, deleteInvoices, updateInvoice, getInvoice}\n  ","import { baseRequest } from '../base';\n// api for Invoices \n\nconst getInvoiceItems = async data => {\n    try {\n      return await baseRequest('apiv1/sales/invoiceitems','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  \n  const deleteInvoiceItems = async data => {\n    try {\n      return await baseRequest('apiv1/sales/invoiceitems/delete','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const createInvoiceItem = async data => {\n      try {\n        return await baseRequest('apiv1/sales/invoiceitems','POST', data);\n      } catch(e){\n        alert(e)\n      }\n  };\n  \n  \n  const getInvoiceItem = async data => {\n    try {\n      return await baseRequest('apiv1/sales/invoiceitem','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const updateInvoiceItem= async data => {\n    try {\n      return await baseRequest('apiv1/sales/invoiceitem','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \nexport {getInvoiceItems, createInvoiceItem, deleteInvoiceItems, updateInvoiceItem, getInvoiceItem}\n  ","import { baseRequest } from '../base';\n// api for items \n\nconst getPlaces = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/places','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  \n  const deletePlaces = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/places/delete','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const createPlace = async data => {\n      try {\n        return await baseRequest('apiv1/inventory/places','POST', data);\n      } catch(e){\n        alert(e)\n      }\n  };\n  \n  \n  const getPlace = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/place','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const updatePlace = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/place','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n\n  const assignPlace = async data => {\n    try { \n      return await  baseRequest('apiv1/inventory/places/assign','POST', data);\n    } catch (e){\n      alert(e)\n    }\n  }\n  \nexport {getPlaces, createPlace, deletePlaces, updatePlace, getPlace, assignPlace}\n  ","import React, { Component } from 'react'\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport List from '../list';\nimport Popup from \"reactjs-popup\";\nimport style from '../purchaseOrder/css/popUp.module.css';\nimport {getCustomers} from '../../api/sales/customer';\nimport {updateInvoice, getInvoice, deleteInvoices, getInvoiceStatus} from '../../api/sales/invoice';\nimport {updateInvoiceItem, deleteInvoiceItems, createInvoiceItem} from '../../api/sales/invoiceItem'\nimport {getItems} from '../../api/inventory/itemApi';\nimport {getPlaces} from '../../api/inventory/placeApi';\nimport { getDiscounts, getTaxes } from '../../api/misc'\n\nclass PopUpEdit extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            'tax_start':0,\n            'tax_end':5,\n            'discount_start':0,\n            'discount_end':5,\n            'tax_loaded':false,\n            'discount_loaded':false,\n            'discount_page':[],\n            'tax_page':[],\n            'discount_selection':[],\n            'tax_selection':[],\n            'place_selection':[],\n            'stock_selection':[],\n            'sold_from_selection':[],\n            'popUp':false,\n            'new':false,\n            'current':0,\n            'status':[],\n            'customer_selection':[\n                {\n                    'id':0,\n                    'name':'None'\n                }\n            ],\n            'item_selection':[\n                {\n                    'id':0,\n                    'name':\"None\"\n                }\n            ],\n            update : {\n                'invoice':{\n                    ...this.props.invoice,\n                    'invoiced_on': this.converter(this.props.invoice.invoiced_on),\n                    'due_on': this.converter(this.props.invoice.due_on)\n                },\n                'invoice_items':this.props.invoice_items\n            }\n        }\n        this.update_table = this.update_table.bind(this)\n        this.stateman = this.stateman.bind(this)\n        this.refreshTable = this.refreshTable.bind(this)\n        this.getItemData = this.getItemData.bind(this)\n        this.selectItem = this.selectItem.bind(this)\n        this.searchItem = this.searchItem.bind(this)\n        this.addInvoiceItem = this.addInvoiceItem.bind(this)\n        this.invoiceHandler = this.invoiceHandler.bind(this)\n        this.dueOnHandler = this.dueOnHandler.bind(this)\n        this.getCustomerData = this.getCustomerData.bind(this)\n        this.converter = this.converter.bind(this)\n        this.popUp = this.popUp.bind(this)\n        this.searchCustomer = this.searchCustomer.bind(this)\n        this.selectCustomer = this.selectCustomer.bind(this)\n        this.onChange = this.onChange.bind(this)\n        this.updateInvoice = this.updateInvoice.bind(this)\n        this.onChangePI = this.onChangePI.bind(this)\n        this.postInvoiceItem = this.postInvoiceItem.bind(this)\n        this.deleteInvoiceItem = this.deleteInvoiceItem.bind(this)\n        this.onChangePlace = this.onChangePlace.bind(this)\n        this.removeEntry = this.removeEntry.bind(this)\n        this.addEntryDiscount = this.addEntryDiscount.bind(this)\n        this.addEntryTax = this.addEntryTax.bind(this)\n    }\n\n    removeEntry(id, dis){\n        if (dis){\n            var temp = this.state.update.invoice_items[this.state.current].applied_discount\n            temp.pop(dis)\n            var temp2 = this.state.update.invoice_items[this.state.current].discount\n            temp2.pop(temp.id)\n            this.setState({\n                ...this.state,\n                'update':{\n                    ...this.state.update,\n                    invoice_items:{\n                        ...this.state.update.invoice_items,\n                        [dis]:{\n                            'applied_discount':temp,\n                            'discount':temp2\n                        }\n                    }\n                }\n            })\n        }\n        else {\n            {\n                var temp = this.state.update.invoice_items[this.state.current].applied_tax\n                temp.pop(dis)\n                var temp2 = this.state.update.invoice_items[this.state.current].taxes\n                temp2.pop(temp.id)\n                this.setState({\n                    ...this.state,\n                    'update':{\n                        ...this.state.update,\n                        invoice_items:{\n                            ...this.state.update.invoice_items,\n                            [dis]:{\n                                'applied_tax':temp,\n                                'taxes':temp2\n                            }\n                        }\n                    }\n                })\n            }\n        }\n    }\n\n    async componentDidMount(){\n        var request_json = {\n            'action':'get',\n        }\n        await getInvoiceStatus(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    ...this.state,\n                    'status':data.data\n                })\n            }\n            else{\n                alert(data)\n            }\n        })\n    }\n\n    async getCustomerData (request_json) {\n        await getCustomers(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'customer_selection':data['customers'],\n                })\n            } \n            \n            else{\n                alert(data['error'])\n            } \n        })\n    }\n\n    selectCustomer(id,name){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice':{\n                    ...this.state.update.invoice,\n                    'customer':id,\n                    'customer_name':name\n                }\n            }\n        })\n    }\n\n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice':{\n                    ...this.state.update.invoice,\n                    [e.target.name] : [e.target.value][0]\n                }\n            }\n        })\n    }\n\n    converter(date){\n        return ( new Date(Date.parse(date)))\n    }\n\n    popUp(id){\n        var key\n        for (key in this.state.update.invoice_items){\n            if (this.state.update.invoice_items[key].id === id){\n                this.setState({\n                    ...this.state,\n                    'current':key,\n                    'popUp':true\n                }) \n                break;       \n            }\n        }\n        var request_json = {\n            'action':'get',\n            'filter':'item',\n            'item_id':this.state.update.invoice_items[key].item  \n        }\n        this.getPlacesData(request_json)\n    }\n\n    async getPlacesData(request_json) {\n        await getPlaces(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'sold_from_selection':data['placements'],\n                })\n                var temp = [], key, x;\n                for(key in data['placements']){\n                    x = {'id': data['placements'][key]['placed_on'], 'str_placed_on':data['placements'][key]['str_placed_on']}\n                    temp[data['placements'][key]['placed_on']] = x\n                    }\n                temp = temp.filter(function (el) {\n                    return el != null;\n                });\n                this.setState({\n                    'place_selection':temp\n                })\n                this.update_stock(data)\n            }\n        })\n\n    }\n\n    // data = sold_From_selection\n    update_stock(data){\n        var sold_from\n        if (this.state.update.invoice_items[this.state.current]['sold_from']){\n            sold_from = this.state.update.invoice_items[this.state.current]['sold_from']\n        }else {\n            sold_from = data['placements'][0]['placed_on']\n        }\n        var temp=[];\n        var p ;\n        for (p in data['placements']){\n            if (sold_from === data['placements'][p]['placed_on']){\n                var string  = data['placements'][p]['purchase_item_details']['purchase_price'] + \"/-  \" + data['placements'][p]['purchase_item_details']['quantity'] + \" \" + data['placements'][p]['purchase_item_details']['vendor'] \n                temp.push({\n                    'id': data['placements'][p]['purchase_item'],\n                    'str':string\n                })\n            }\n            \n        }\n        this.setState({\n            ...this.state,\n            'stock_selection': temp\n        })\n    }  \n    \n\n    async onChangePlace(e){\n        await this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice_items':{\n                    ...this.state.update.invoice_items,\n                    [this.state.current] : {\n                        ...this.state.update.invoice_items[this.state.current],\n                        [e.target.name] : [e.target.value][0]\n                    },\n                }\n            }\n        })\n        var temp=[],p;\n                for (p in this.state.sold_from_selection){\n                    if ( this.state.update.invoice_items[this.state.current]['sold_from'] === this.state.sold_from_selection[p]['placed_on']){\n                        var string  = this.state.sold_from_selection[p]['purchase_item_details']['purchase_price'] + \"/-  \" + this.state.sold_from_selection[p]['purchase_item_details']['quantity'] + \" \" + this.state.sold_from_selection[p]['purchase_item_details']['vendor'] \n                        temp.push({\n                            'id': this.state.sold_from_selection[p]['purchase_item'],\n                            'str':string\n                        })\n                    }\n                    \n                }\n                this.setState({\n                    ...this.state,\n                    'stock_selection': temp\n                }) \n    }\n\n    searchCustomer(e){\n        if ((e.target.value).length > 2 ){\n            var request_json = {\n                'action':'get',\n                'start':0,\n                'end':10,\n                'filter':'name',\n                'name':(e.target.value)\n            }\n            this.getCustomerData(request_json)\n        }\n    }\n    \n    invoiceHandler(date){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice':{\n                    ...this.state.update.invoice,\n                    'invoiced_on' : date\n                }\n            }\n        })\n    }\n    \n    dueOnHandler(date){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice':{\n                    ...this.state.update.invoice,\n                    'due_on' : date\n                }\n            }\n        })\n    }\n\n    updateInvoice(){\n        var request_json = {\n            ...this.state.update.invoice,\n            'action':'edit',\n            'invoice_id':this.state.update.invoice.id\n        }\n        updateInvoice(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                alert(\"Invoice Details Has Been Updated.\")\n                this.props.update(0)\n            }\n            else{\n                alert(data['error'])\n            }\n        })\n    }\n\n    onChangePI(e){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice_items':{\n                    ...this.state.update.invoice_items,\n                    [this.state.current] : {\n                        ...this.state.update.invoice_items[this.state.current],\n                        [e.target.name] : [e.target.value][0]\n                    },\n                }\n            }\n        })\n    }\n\n    postInvoiceItem(is_new=false){\n        var request_json\n        if (is_new){\n            request_json = {\n                'action':'add',\n                'invoice':this.state.update.invoice.id,\n                ...this.state.update.invoice_items[this.state.current],\n            }\n            request_json['applied_tax'] = []\n            request_json['applied_discount'] = []\n            createInvoiceItem(JSON.stringify(request_json)).then(data => {\n                if (data['status']){\n                    alert(\"Invoice Item Has Been Added.\")\n                    this.refreshTable()\n                }\n                else{\n                    alert(data['error'])\n                }\n            })\n            return\n        }\n        request_json = {\n            'action':'edit',\n            'invoice':this.state.update.invoice.id,\n            'invoice_item_id':this.state.update.invoice_items[this.state.current].id,\n            ...this.state.update.invoice_items[this.state.current]\n        }\n        request_json['applied_tax'] = []\n        request_json['applied_discount'] = []\n        updateInvoiceItem(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                alert(\"Invoice Item Details Has Been Updated.\")\n                this.refreshTable()\n            }\n            else{\n                alert(data['error'])\n            }\n        })\n    }\n\n    deleteInvoiceItem(){\n        var request_json = {\n            invoice_items_id : [this.state.update.invoice_items[this.state.current].id]\n        }\n        deleteInvoiceItems(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                alert(\"Invoice Item Has Beed Deleted.\")\n                this.refreshTable()\n            }\n            else{\n                alert(data['error'])\n            }\n        })\n    }\n\n\n    addInvoiceItem(){\n        var current =0;\n        var item,p_list=[];\n        for (item in this.state.update.invoice_items){\n            if (item.id){\n                if (item.id !== \"Fake Key\"){\n                    current = current + 1\n                    p_list.push(item)\n                }\n            }\n        }\n        this.setState({\n            'current':current,\n            'new':true,\n            'popUp':true,\n            'update':{\n                ...this.state.update,\n                'invoice_items':[\n                    ...p_list,\n                    {\n                        'item_name':\"None\",\n                        'discount_type':'percentage',\n                        'status':'incomplete',\n                        'applied_tax':[],\n                        'applied_discount':[],\n                        'purchase_item':'',\n                    }\n                ]\n            }\n        })\n    }\n    columns = [\n        {\n            id:1,\n            name:\"Item Name\",\n            prop: 'item_name'\n        },\n        {\n            id:2,\n            name:\"Quantity\",\n            prop: 'quantity'\n        },\n        {\n            id:8,\n            name:\"Price\",\n            prop: 'price'\n        },\n        {\n            id:3,\n            name:\"Sold From\",\n            prop: 'sold_from_name'\n        },\n        {\n            id:4,\n            name:\"Tax Total\",\n            prop: 'tax_total'\n        },\n        ,\n        {\n            id:5,\n            name:\"Disount Amount\",\n            prop: 'discount_amount'\n        },   \n        {\n            id:6,\n            name:\"Sub Total\",\n            prop: 'sub_total'\n        },\n        {\n            id:7,\n            name:\"Total\",\n            prop: 'total'\n        }\n    ]\n\n    searchItem(e){\n        if ((e.target.value).length > 2 ){\n            var request_json = {\n                'action':'get',\n                'start':0,\n                'end':10,\n                'filter':'name',\n                'name':(e.target.value)\n            }\n            this.getItemData(request_json)\n        }\n    }\n\n    async getItemData(request_json){\n        await getItems(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    ...this.state,\n                    'item_selection':data['items'],\n                })\n            }  \n            \n            else{\n                alert(data['error'])\n            }\n        })\n    }\n    selectItem(id, name){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice_items':{\n                    ...this.state.update.invoice_items,\n                    [this.state.current] : {\n                        ...this.state.update.invoice_items[this.state.current],\n                        'item_name' : name,\n                        'item':id\n                    },\n                }\n            }\n        })\n        var request_json = {\n            'action':'get',\n            'filter':'item',\n            'item_id':id\n        }\n        this.getPlacesData(request_json)\n    }\n\n    async refreshTable(){\n        var id = this.state.update.invoice.id;\n        var items= [];\n        const request_json = {\n            'action':'get',\n            'invoice_id':id\n        }\n        await getInvoice(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                items = data['invoice_items']\n            }\n            \n            else{\n                alert(data['error'])\n            }\n        })\n        if (items.length === 0){\n            items = [{\n                'id':\"Fake Key\",\n                'item_name': ''\n            }]\n        }\n        await this.setState({\n            ...this.state,\n            'popUp':false,\n            'update':{\n                ...this.state.update,\n                'invoice_items':items\n            }\n        })\n    }\n\n\n    stateman(){\n        console.log(this.state)\n    }\n\n\n    discount_columns =[\n        {\n            'id':1,\n            'name':'Name',\n            'prop':'name'\n        },{\n            'id':2,\n            'name':'Rate',\n            'prop':'rate'\n        },{\n            'id':3,\n            'name':'Code',\n            'prop':'code'\n        },{\n            'id':4,\n            'name':'Type',\n            'prop':'discount_type'\n        },{\n            'id':5,\n            'name':'Remove',\n            'prop':'removeButton'\n        },\n    ]\n\n    tax_columns =[\n        {\n            'id':1,\n            'name':'Name',\n            'prop':'name'\n        },{\n            'id':2,\n            'name':'Rate',\n            'prop':'rate'\n        },{\n            'id':3,\n            'name':'Code',\n            'prop':'code'\n        },{\n            'id':4,\n            'name':'Type',\n            'prop':'tax_type'\n        },{\n            'id':5,\n            'name':'Remove',\n            'prop':'removeButton'\n        },\n    ]\n\n    \n    add_discount_columns =[\n        {\n            'id':1,\n            'name':'Name',\n            'prop':'name'\n        },{\n            'id':2,\n            'name':'Rate',\n            'prop':'rate'\n        },{\n            'id':3,\n            'name':'Code',\n            'prop':'code'\n        },{\n            'id':4,\n            'name':'Type',\n            'prop':'discount_type'\n        }\n    ]\n\n    add_tax_columns =[\n        {\n            'id':1,\n            'name':'Name',\n            'prop':'name'\n        },{\n            'id':2,\n            'name':'Rate',\n            'prop':'rate'\n        },{\n            'id':3,\n            'name':'Code',\n            'prop':'code'\n        },{\n            'id':4,\n            'name':'Type',\n            'prop':'tax_type'\n        }\n    ]\n\n    async update_table (by,dis) {\n        var x = by<0?-1:1\n        if (dis){\n            if (by===0){\n                await this.setState({\n                    'discoount_loaded':false,\n                    discount_start: 0,\n                    discount_end: 10,\n                    discount_page:1\n                })\n            }\n            else{\n                if (this.state.discount_start+by>-1){\n                    await this.setState({\n                        'discount_loaded':false,\n                        discount_start: this.state.discount_start+by,\n                        discount_end: this.state.discount_end+by,\n                        discount_page:this.state.discount_page+x\n                    })\n                }\n                else{\n                    alert(\"Cannot move futher from here.\")\n                    return\n                }\n            }\n            var  request_json = {\n                'action':'get',\n                'filter':'none',\n                'start':this.state.discount_start,\n                'end':this.state.discount_end\n            }\n            this.getDiscountsData(request_json)\n        }\n    else { \n        if (by===0){\n            await this.setState({\n                'tax_loaded':false,\n                tax_start: 0,\n                tax_end: 10,\n                tax_page:1\n            })\n        }\n        else{\n            if (this.state.tax_start+by>-1){\n                await this.setState({\n                    'tax_loaded':false,\n                    tax_start: this.state.tax_start+by,\n                    tax_end: this.state.tax_end+by,\n                    tax_page:this.state.tax_page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.tax_start,\n            'end':this.state.tax_end\n        }\n        this.getTaxesData(request_json)\n\n    }\n    }\n    \n    async getDiscountsData (request_json) {\n        await getDiscounts(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'discount_selection':data['discounts'],\n                    'discount_loaded':true\n                })\n            }\n            else{\n                alert(data['error'])\n            }\n        })\n    }\n    async getTaxesData (request_json) {\n        await getTaxes(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'tax_selection':data['taxes'],\n                    'tax_loaded':true\n                })\n            }  \n        })\n    }\n \n    addEntryDiscount(id){\n        var dis;\n        for (dis in this.state.discount_selection){\n            if (this.state.discount_selection[dis].id === id){\n                var temp = this.state.update.invoice_items[this.state.current]['applied_discount']\n                var x = this.state.discount_selection[dis]\n                temp.push(x)\n                var temp2 = this.state.update.invoice_items[this.state.current]['discount']\n                temp2.push(id)\n                this.setState({\n                    ...this.state,\n                    update:{\n                        ...this.state.update,\n                        'invoice_items':{\n                            ...this.state.update.invoice_items,\n                            [this.state.current] : {\n                                ...this.state.update.invoice_items[this.state.current],\n                                'discount':temp2,\n                                'applied_discount': temp\n                            }\n                        }\n                    }\n                })\n            }\n        }\n    }\n\n    addEntryTax(id){\n        var dis;\n        for (dis in this.state.tax_selection){\n            if (this.state.tax_selection[dis].id === id){\n                var temp = this.state.update.invoice_items[this.state.current]['applied_tax']\n                var x = this.state.tax_selection[dis]\n                temp.push(x)\n                var temp2 = this.state.update.invoice_items[this.state.current]['taxes']\n                temp2.push(id)\n                this.setState({\n                    ...this.state,\n                    update:{\n                        ...this.state.update,\n                        'invoice_items':{\n                            ...this.state.update.invoice_items,\n                            [this.state.current] : {\n                                ...this.state.update.invoice_items[this.state.current],\n                                'tax':temp2,\n                                'applied_tax': temp\n                            }\n                        }\n                    }\n                })\n            }\n        }\n    }\n\n\n    render() {\n        const item_selection = this.state.item_selection\n        const itemPopUp = <Popup trigger={ <button>Select Item</button>} closeOnDocumentClick>\n        <div>\n            <input placeholder=\"Item Name\" id='item_search_box' name='item_serach_box' onChange={this.searchItem}></input>\n            <div className={style.dropdown_content} id='item_dropdown'>\n                    {item_selection.map(\n                        item => (\n                            // use css to get rid of <a>\n                        <a key={item.id} onClick={() => {this.selectItem(item.id, item.name)}} >{item.name} {item.sales_price}</a>\n                        )\n                    )}\n            </div>\n        </div>\n        </Popup>\n\n        var places = this.state.place_selection\n        const selectPlace =<select name='sold_from' id=\"sold_from\" onChange={this.onChangePlace} value={this.state.update.invoice_items[this.state.current].sold_from}  >\n            <option key=\"Fake Key\" value='Fake Value'>Select Place</option>\n                {places.map(\n                    x => (\n                    <option key={x.id} value={x.id}>{x.str_placed_on}</option>\n                    )\n                )}\n            </select>\n\n            \n        var stocks  = this.state.stock_selection\n        var stockValue = this.state.update.invoice_items[this.state.current].purchase_item ? this.state.update.invoice_items[this.state.current].purchase_item : ''\n        const selectStock = <select name='purchase_item' id=\"purchase_item\" onChange={this.onChangePI} value={stockValue} >\n                <option key='Fake Key' value=\"Fake Value\">Select Stock</option>\n                {stocks.map(\n                    x => (\n                    <option key={x.id} value={parseInt(x.id)}>{x.str}</option>\n                    )\n                )}\n            </select>\n        const addPopupDiscount = <div>\n            <h3> Click To Apply New Discount</h3>\n                            <List data={this.state.discount_selection} header={this.add_discount_columns} page={false} popUp={this.addEntryDiscount} />\n                            <button onClick={()=> {this.update_table(-5,true)}}>Previous</button><span>      {this.state.discount_page}       </span><button  onClick={()=> {this.update_table(5,true)}} >Next</button>\n                        </div>\n        \n        const addPopupTax = <div>\n            <h3>Click To Apply New Tax </h3>\n                            <List data={this.state.tax_selection} header={this.add_tax_columns} page={false} popUp={this.addEntryTax} />\n                            <button onClick={()=> {this.update_table(-5,false)}}>Previous</button><span>      {this.state.tax_page}       </span><button  onClick={()=> {this.update_table(5,false)}} >Next</button>\n                        </div>\n        \n\n        var dis;\n        const discounts =this.state.update.invoice_items[this.state.current].applied_discount\n        for (dis in discounts){\n            discounts[dis] = {\n                ...discounts[dis],\n                'removeButton':<button onClick={() => {this.removeEntry(dis,true)}}> Remove </button>\n            }\n        }\n        \n        const taxes = this.state.update.invoice_items[this.state.current].applied_tax\n        for (dis in taxes){\n            taxes[dis] = {\n                ...taxes[dis],\n                'removeButton':<button onClick={()=>{this.removeEntry(dis,false)}}> Remove </button>\n            }\n        }\n        const popUpItem = <div>\n                <button onClick={() => {this.refreshTable()}} >Back</button><br></br><br></br>\n                Item : {this.state.update.invoice_items[this.state.current].item_name}  {itemPopUp}<br></br>\n                Sold From: \n                Place : {this.state.update.invoice_items[this.state.current].item ? selectPlace : \"Select An Item First\" } <br></br>\n                Stock :   {this.state.update.invoice_items[this.state.current].item ? selectStock : \"Select An Item First\" } <br></br>\n                <br></br>\n\n                Quantity : <input name=\"quantity\" placeholder={this.state.update.invoice_items[this.state.current].quantity} type=\"number\" onChange={this.onChangePI} required min='1' ></input><br></br>\n                Price : <input name=\"price\" placeholder={this.state.update.invoice_items[this.state.current].price} type=\"number\" onChange={this.onChangePI} required></input><br></br>\n                Tax Total : {this.state.update.invoice_items[this.state.current].tax_total} <br></br>\n                Sub Total : {this.state.update.invoice_items[this.state.current].sub_total} <br></br>\n                Discount Amount : {this.state.update.invoice_items[this.state.current].discount_amount}<br></br>\n                Total without discount : {this.state.update.invoice_items[this.state.current].total_without_discount}<br></br>\n                Total : {this.state.update.invoice_items[this.state.current].total}<br></br>\n                <br></br>\n                Applied Discounts : :<List data={discounts} header={this.discount_columns} page={false} popUp={this.popUp} removeEntry={this.removeEntry} /><button onClick={() =>{this.update_table(0, true)}} >Apply New Discount</button> <br></br><br></br>\n                {this.state.discount_loaded ? addPopupDiscount : <span></span>}<br></br>\n                Applied Taxes : :<List data={taxes} header={this.tax_columns} page={false} popUp={this.popUp} removeEntry={this.removeEntry} /><br></br><button onClick={() => {this.update_table(0, false)}}>Apply New Tax</button><br></br><br></br>\n                {this.state.tax_loaded ? addPopupTax : <span></span>}<br></br>\n                {this.state.new ? <button onClick={() => {this.postInvoiceItem(true)}} >Add</button> : <button onClick={() => {this.postInvoiceItem()}} >Update</button>}<br></br><br></br>\n                <button onClick={() => {this.deleteInvoiceItem()}} >Delete</button>\n            </div>\n        const customer_selection = this.state.customer_selection\n        const customerPopup = <Popup trigger={<button>Change Customer</button>} closeOnDocumentClick>\n        <div>\n            <input placeholder=\"Customer's first name\" id='customer_serach_box' name='customer_serach_box' onChange={this.searchCustomer}></input>\n            <div className={style.dropdown_content} id='customer_dropdown'>\n                    {customer_selection.map(\n                        customer => (\n                            <a href=\"#\" key={customer.id} onClick={() => {this.selectCustomer(customer.id, customer.name)}} >{customer.name}</a>\n                        )\n                    )}\n            </div>\n        </div>\n        </Popup>\n        const status = this.state.status\n        return (\n            <div>\n                <h1>Invoice</h1>\n        <h3>{this.state.update.invoice.customer_name} </h3>\n                Added By : {this.state.update.invoice.added_by_name}<br></br>\n                Customer : {this.state.update.invoice.customer_name} {customerPopup}<br></br>\n                Order Number : {this.state.update.invoice.order_number}<br></br>\n                <br></br><br></br>\n                Invoiced On : \n                <DatePicker\n                name='invoiced_on'\n                selected={this.state.update.invoice.invoiced_on}\n                onChange={this.invoiceHandler}\n                />\n                Due On : \n                <DatePicker\n                name='completed_on'\n                selected={this.state.update.invoice.due_on}\n                onChange={this.dueOnHandler}\n                /><br></br><br></br>\n                \n                Total Amount : {this.state.update.invoice.total_amount}<br></br>\n                Total Tax : {this.state.update.invoice.tax_total}<br></br>\n                Total Discount: {this.state.update.invoice.discount_total}<br></br>\n                Paid Amount : {this.state.update.invoice.paid_amount}<br></br>\n\n                <br></br>\n                Additional Discount : <input placeholder={this.state.update.invoice.additional_discount} name='additional_discount' onChange={this.onChange} ></input>\n                <br></br><br></br>\n\n                \n                Status : <select name='status' id=\"status\" onChange={this.onChange} value={this.state.update.invoice.status}  >\n                                {status.map(\n                                    x => (\n                                    <option key={x.id} value={parseInt(x.id)}>{x.name}</option>\n                                    )\n                                )}\n                            </select> <br></br><br></br>\n                <button onClick={() => {this.updateInvoice()}}>Update Invoice</button><br></br><br></br>\n                <button onClick={() => {this.props.delete(this.props.invoice.id)}}>Delete</button>\n                <hr></hr>\n                <h3>Items</h3> <button  onClick={() => {this.addInvoiceItem()}}>Add New Items</button>\n                {this.state.popUp ? popUpItem :<List data={this.state.update.invoice_items} header={this.columns} page={false} popUp={this.popUp} />}\n            \n            <button onClick={() => {this.stateman()}}>State</button>\n            </div>\n\n        )\n    }\n}\nexport default PopUpEdit","import React, { Component } from 'react'\nimport List from '../list';\nimport { getInvoice, deleteInvoices, updateInvoice } from '../../api/sales/invoice';\nimport PopUpEdit from './popUpEdit';\n\nclass InvoiceListing extends Component {\n    \n    constructor(props){\n        super(props)\n        this.popUp = this.popUp.bind(this)\n        this.state = {\n            'popUp':false,\n            'invoices':{},\n            'invoice_items':[],\n            'update':{}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.invoiceDelete = this.invoiceDelete.bind(this)\n    }\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value]\n            }\n        })\n    }\n\n    \n    async onSubmit(e){\n        e.preventDefault();\n            var data = this.state.vendor\n            var ele;\n            for (ele in this.state.update){\n                data[ele] = this.state.update[ele][0]\n            }\n            data = {...data, 'action':'edit'}\n            updateInvoice(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        alert(\"Vendor Data updated.\")\n                        this.props.update(0)\n                    }\n                    else{\n                        alert(data['error'])\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    invoiceDelete(id){\n        var data = {\n            'invoices_id':[\n                id\n            ]\n        }\n        deleteInvoices(JSON.stringify(data)).then(data=>{\n            try {\n                if (data['status']){\n                    alert('Invoice has been Deleted.')\n                    this.props.update(0)\n                }   else{\n                    alert(data['error'])\n                }\n            }catch(e){\n                console.log(e)\n            }\n        })\n    }\n    \n    async popUp(id, uuid=0){\n        const data = {\n            'action':'get',\n            'invoice_id':id,\n        }\n        var data_main;\n        await getInvoice(JSON.stringify(data)).then(data => {\n            if (data['status']){\n                console.log(data)\n                data_main=data\n            }\n            else{\n                alert(data['error'])\n            }\n        })\n        if (data_main['invoice_items'].length === 0) {\n            console.log(\"blank\")\n            data_main['invoice_items'] = [{\n                id:0\n            }]\n        }\n        await this.setState({\n            'popUp':true,\n            'invoice':data_main['invoice'][0],\n            'invoice_items':data_main['invoice_items']\n        })\n    }\n\n\n    columns = [\n        {\n            id:1,\n            name:\"Customer's Name\",\n            prop: 'customer_name'\n        },\n        {\n            id:2,\n            name:\"Sold By\",\n            prop: 'added_by_name'\n        },\n        {\n            id:3,\n            name:\"Paid Amount\",\n            prop: 'paid_amount'\n        },\n        {\n            id:4,\n            name:\"Order Number\",\n            prop: 'order_number'\n        },\n        {\n            id:5,\n            name:'Invoiced On',\n            prop:'invoiced_on_str'\n        },\n        {\n            id:6,\n            name:'Status',\n            prop:'status_name'\n        }\n    ]\n    \n\n    render() {\n        const list = <List data={this.props.data} header={this.columns}   popUp={this.popUp} update={this.props.update} page={this.props.page} />\n        const popUpRender = <PopUpEdit invoice={this.state.invoice} invoice_items={this.state.invoice_items} update={this.props.update} delete={this.invoiceDelete} ></PopUpEdit>\n        return (\n            <div>\n                {this.state.popUp ? popUpRender : list}\n            </div>\n        )\n    }\n}\n\nexport default InvoiceListing\n","import React, { Component } from 'react'\nimport {getInvoices} from '../../api/sales/invoice';\nimport {  connect } from 'react-redux';\nimport  InvoiceListing  from './invoiceListing';\nimport { Link} from 'react-router-dom';\n\nclass Invoices extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            'invoices':[],\n            'loaded':false,\n            'start':0,\n            'end':10,\n            'page':1\n        }\n        this.update_table = this.update_table.bind(this)\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n    }\n\n    async update_table (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                'loaded':false,\n                start: 0,\n                end: 10,\n                page:1\n            })\n        }\n        else{\n            if (this.state.start+by>-1){\n                await this.setState({\n                    'loaded':false,\n                    start: this.state.start+by,\n                    end: this.state.end+by,\n                    page:this.state.page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.start,\n            'end':this.state.end\n        }\n        this.getInvoiceData(request_json)\n    }\n    \n    async getInvoiceData (request_json) {\n        var invoice\n        await getInvoices(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                for (invoice in data['invoices']){\n                    data['invoices'][invoice]['invoiced_on_str']=(data['invoices'][invoice]['invoiced_on']).split('T')[0]\n                    data['invoices'][invoice]['due_on_str']=(data['invoices'][invoice]['due_on']).split('T')[0]\n                }\n                this.setState({\n                    'invoices':data['invoices'],\n                    'loaded':true\n                })\n            }\n            else{\n                alert(data['error'])\n            }  \n        })\n    }\n\n \n\nrender() {\n    const render_after_load = (\n        <div>\n            <InvoiceListing data={this.state.invoices} update={this.update_table} page={this.state.page} />\n        </div>\n    )\n\n    return(\n        <div>\n            <Link to='/invoices/create'>Create New Invoice</Link><br></br>\n            <button onClick={() => {this.update_table(0)}}>Refresh table</button><br></br>\n            {this.state.loaded ? render_after_load : \"Loading...\"}\n        </div>\n    )\n}\n}\n\n\nconst mapStateToProps = state => ({\n    user: state.user,\n})\n\nexport default connect(mapStateToProps)(Invoices)","import React, { Component } from 'react'\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport List from '../list';\nimport Popup from \"reactjs-popup\";\nimport style from '../purchaseOrder/css/popUp.module.css';\nimport {getCustomers} from '../../api/sales/customer';\nimport {createInvoice,  getInvoice, getInvoiceStatus} from '../../api/sales/invoice';\nimport {updateInvoiceItem, deleteInvoiceItems, createInvoiceItem} from '../../api/sales/invoiceItem'\nimport {getItems} from '../../api/inventory/itemApi';\nimport {getPlaces} from '../../api/inventory/placeApi';\nimport { getDiscounts, getTaxes } from '../../api/misc'\n\nclass InvoiceCreation extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            'tax_start':0,\n            'tax_end':5,\n            'discount_start':0,\n            'discount_end':5,\n            'tax_loaded':false,\n            'discount_loaded':false,\n            'discount_page':[],\n            'tax_page':[],\n            'discount_selection':[],\n            'tax_selection':[],\n            'place_selection':[],\n            'stock_selection':[],\n            'sold_from_selection':[],\n            'popUp':false,\n            'new':false,\n            'current':0,\n            'status':[],\n            'customer_selection':[\n                {\n                    'id':0,\n                    'name':'None'\n                }\n            ],\n            'item_selection':[\n                {\n                    'id':0,\n                    'name':\"None\"\n                }\n            ],\n            update : {\n                'invoice':{\n                    'invoiced_on': new Date(),\n                    'due_on': new Date()\n                },\n                'invoice_items':[[{\n                    'id':'Fake Key',\n                    'discount':[],\n                    'applied_discount':[],\n                    'tax':[],\n                    'applied_tax':[]\n                }]]\n            }\n        }\n        this.update_table = this.update_table.bind(this)\n        this.stateman = this.stateman.bind(this)\n        this.refreshTable = this.refreshTable.bind(this)\n        this.getItemData = this.getItemData.bind(this)\n        this.selectItem = this.selectItem.bind(this)\n        this.searchItem = this.searchItem.bind(this)\n        this.addInvoiceItem = this.addInvoiceItem.bind(this)\n        this.invoiceHandler = this.invoiceHandler.bind(this)\n        this.dueOnHandler = this.dueOnHandler.bind(this)\n        this.getCustomerData = this.getCustomerData.bind(this)\n        this.converter = this.converter.bind(this)\n        this.popUp = this.popUp.bind(this)\n        this.searchCustomer = this.searchCustomer.bind(this)\n        this.selectCustomer = this.selectCustomer.bind(this)\n        this.onChange = this.onChange.bind(this)\n        this.updateInvoice = this.updateInvoice.bind(this)\n        this.onChangePI = this.onChangePI.bind(this)\n        this.postInvoiceItem = this.postInvoiceItem.bind(this)\n        this.deleteInvoiceItem = this.deleteInvoiceItem.bind(this)\n        this.onChangePlace = this.onChangePlace.bind(this)\n        this.removeEntry = this.removeEntry.bind(this)\n        this.addEntryDiscount = this.addEntryDiscount.bind(this)\n        this.addEntryTax = this.addEntryTax.bind(this)\n    }\n\n    removeEntry(id, dis){\n        if (dis){\n            var temp = this.state.update.invoice_items[this.state.current].applied_discount\n            temp.pop(dis)\n            var temp2 = this.state.update.invoice_items[this.state.current].discount\n            temp2.pop(temp.id)\n            this.setState({\n                ...this.state,\n                'update':{\n                    ...this.state.update,\n                    invoice_items:{\n                        ...this.state.update.invoice_items,\n                        [dis]:{\n                            'applied_discount':temp,\n                            'discount':temp2\n                        }\n                    }\n                }\n            })\n        }\n        else {\n            {\n                var temp = this.state.update.invoice_items[this.state.current].applied_tax\n                temp.pop(dis)\n                var temp2 = this.state.update.invoice_items[this.state.current].taxes\n                temp2.pop(temp.id)\n                this.setState({\n                    ...this.state,\n                    'update':{\n                        ...this.state.update,\n                        invoice_items:{\n                            ...this.state.update.invoice_items,\n                            [dis]:{\n                                'applied_tax':temp,\n                                'taxes':temp2\n                            }\n                        }\n                    }\n                })\n            }\n        }\n    }\n\n    async componentDidMount(){\n        var request_json = {\n            'action':'get',\n        }\n        await getInvoiceStatus(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    ...this.state,\n                    'status':data.data\n                })\n            }\n            else{\n                alert(data)\n            }\n        })\n    }\n\n    async getCustomerData (request_json) {\n        await getCustomers(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'customer_selection':data['customers'],\n                })\n            } \n            \n            else{\n                alert(data['error'])\n            } \n        })\n    }\n\n    selectCustomer(id,name){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice':{\n                    ...this.state.update.invoice,\n                    'customer':id,\n                    'customer_name':name\n                }\n            }\n        })\n    }\n\n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice':{\n                    ...this.state.update.invoice,\n                    [e.target.name] : [e.target.value][0]\n                }\n            }\n        })\n    }\n\n    converter(date){\n        return ( new Date(Date.parse(date)))\n    }\n\n    popUp(id){\n        var key\n        for (key in this.state.update.invoice_items){\n            if (this.state.update.invoice_items[key].id === id){\n                this.setState({\n                    ...this.state,\n                    'current':key,\n                    'popUp':true\n                }) \n                break;       \n            }\n        }\n        var request_json = {\n            'action':'get',\n            'filter':'item',\n            'item_id':this.state.update.invoice_items[key].item  \n        }\n        this.getPlacesData(request_json)\n    }\n\n    async getPlacesData(request_json) {\n        await getPlaces(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'sold_from_selection':data['placements'],\n                })\n                var temp = [], key, x;\n                for(key in data['placements']){\n                    x = {'id': data['placements'][key]['placed_on'], 'str_placed_on':data['placements'][key]['str_placed_on']}\n                    temp[data['placements'][key]['placed_on']] = x\n                    }\n                temp = temp.filter(function (el) {\n                    return el != null;\n                });\n                this.setState({\n                    'place_selection':temp\n                })\n                this.update_stock(data)\n            }\n        })\n\n    }\n\n    // data = sold_From_selection\n    update_stock(data){\n        console.log('data',data)\n        var sold_from\n        if (this.state.update.invoice_items[this.state.current]['sold_from']){\n            sold_from = this.state.update.invoice_items[this.state.current]['sold_from']\n        }else {\n            sold_from = data['placements'][0]['placed_on']\n            console.log('default',sold_from)\n        }\n        var temp=[];\n        var p ;\n        for (p in data['placements']){\n            console.log(sold_from, \"  \", data['placements'][p]['placed_on'])\n            if (parseInt(sold_from) === parseInt(data['placements'][p]['placed_on'])){\n                var string  = data['placements'][p]['purchase_item_details']['purchase_price'] + \"/-  \" + data['placements'][p]['purchase_item_details']['quantity'] + \" \" + data['placements'][p]['purchase_item_details']['vendor'] \n                temp.push({\n                    'id': data['placements'][p]['purchase_item'],\n                    'str':string\n                })\n                console.log(temp)\n            }\n            \n        }\n        this.setState({\n            ...this.state,\n            'stock_selection': temp\n        })\n    }  \n    \n\n    async onChangePlace(e){\n        await this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice_items':{\n                    ...this.state.update.invoice_items,\n                    [this.state.current] : {\n                        ...this.state.update.invoice_items[this.state.current],\n                        [e.target.name] : [e.target.value][0]\n                    },\n                }\n            }\n        })\n        var temp=[],p,sold_from;\n        if (this.state.update.invoice_items[this.state.current]['sold_from']){\n            sold_from = this.state.update.invoice_items[this.state.current]['sold_from']\n        }else {\n            sold_from = this.state.sold_from[0]['placed_on']\n            console.log('default',sold_from)\n        }\n        for (p in this.state.sold_from_selection){\n            if ( parseInt(sold_from) === parseInt(this.state.sold_from_selection[p]['placed_on'])){\n                var string  = this.state.sold_from_selection[p]['purchase_item_details']['purchase_price'] + \"/-  \" + this.state.sold_from_selection[p]['purchase_item_details']['quantity'] + \" \" + this.state.sold_from_selection[p]['purchase_item_details']['vendor'] \n                temp.push({\n                    'id': this.state.sold_from_selection[p]['purchase_item'],\n                    'str':string\n                })\n            }\n            \n        }\n        this.setState({\n            ...this.state,\n            'stock_selection': temp\n        }) \n    }\n\n    searchCustomer(e){\n        if ((e.target.value).length > 2 ){\n            var request_json = {\n                'action':'get',\n                'start':0,\n                'end':10,\n                'filter':'name',\n                'name':(e.target.value)\n            }\n            this.getCustomerData(request_json)\n        }\n    }\n    \n    invoiceHandler(date){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice':{\n                    ...this.state.update.invoice,\n                    'invoiced_on' : date\n                }\n            }\n        })\n    }\n    \n    dueOnHandler(date){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice':{\n                    ...this.state.update.invoice,\n                    'due_on' : date\n                }\n            }\n        })\n    }\n\n    updateInvoice(){\n        var request_json = {\n            ...this.state.update.invoice,\n            'action':'add',\n            'invoice_id':this.state.update.invoice.id\n        }\n        createInvoice(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                alert(\"Invoice Details Has Been Updated.\")\n                window.location.pathname = '/invoices'\n            }\n            else{\n                alert(data['error'])\n            }\n        })\n    }\n\n    onChangePI(e){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice_items':{\n                    ...this.state.update.invoice_items,\n                    [this.state.current] : {\n                        ...this.state.update.invoice_items[this.state.current],\n                        [e.target.name] : [e.target.value][0]\n                    },\n                }\n            }\n        })\n    }\n\n    postInvoiceItem(is_new=false){\n        var request_json\n        if (is_new){\n            request_json = {\n                'action':'add',\n                'invoice':this.state.update.invoice.id,\n                ...this.state.update.invoice_items[this.state.current],\n            }\n            request_json['applied_tax'] = []\n            request_json['applied_discount'] = []\n            createInvoiceItem(JSON.stringify(request_json)).then(data => {\n                if (data['status']){\n                    alert(\"Invoice Item Has Been Added.\")\n                    this.refreshTable()\n                }\n                else{\n                    alert(data['error'])\n                }\n            })\n            return\n        }\n        request_json = {\n            'action':'edit',\n            'invoice':this.state.update.invoice.id,\n            'invoice_item_id':this.state.update.invoice_items[this.state.current].id,\n            ...this.state.update.invoice_items[this.state.current]\n        }\n        request_json['applied_tax'] = []\n        request_json['applied_discount'] = []\n        updateInvoiceItem(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                alert(\"Invoice Item Details Has Been Updated.\")\n                this.refreshTable()\n            }\n            else{\n                alert(data['error'])\n            }\n        })\n    }\n\n    deleteInvoiceItem(){\n        var request_json = {\n            invoice_items_id : [this.state.update.invoice_items[this.state.current].id]\n        }\n        deleteInvoiceItems(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                alert(\"Invoice Item Has Beed Deleted.\")\n                this.refreshTable()\n            }\n            else{\n                alert(data['error'])\n            }\n        })\n    }\n\n\n    addInvoiceItem(){\n        var current =0;\n        var item,p_list=[];\n        for (item in this.state.update.invoice_items){\n            if (item.id){\n                if (item.id !== \"Fake Key\"){\n                    current = current + 1\n                    p_list.push(item)\n                }\n            }\n        }\n        this.setState({\n            'current':current,\n            'new':true,\n            'popUp':true,\n            'update':{\n                ...this.state.update,\n                'invoice_items':[\n                    ...p_list,\n                    {\n                        'item_name':\"None\",\n                        'discount_type':'percentage',\n                        'status':'incomplete',\n                        'applied_tax':[],\n                        'applied_discount':[],\n                        'purchase_item':'',\n                        'discount':[],\n                        'taxes':[]\n                    }\n                ]\n            }\n        })\n    }\n    columns = [\n        {\n            id:1,\n            name:\"Item Name\",\n            prop: 'item_name'\n        },\n        {\n            id:2,\n            name:\"Quantity\",\n            prop: 'quantity'\n        },\n        {\n            id:8,\n            name:\"Price\",\n            prop: 'price'\n        },\n        {\n            id:3,\n            name:\"Sold From\",\n            prop: 'sold_from_name'\n        },\n        {\n            id:4,\n            name:\"Tax Total\",\n            prop: 'tax_total'\n        },\n        ,\n        {\n            id:5,\n            name:\"Disount Amount\",\n            prop: 'discount_amount'\n        },   \n        {\n            id:6,\n            name:\"Sub Total\",\n            prop: 'sub_total'\n        },\n        {\n            id:7,\n            name:\"Total\",\n            prop: 'total'\n        }\n    ]\n\n    searchItem(e){\n        if ((e.target.value).length > 2 ){\n            var request_json = {\n                'action':'get',\n                'start':0,\n                'end':10,\n                'filter':'name',\n                'name':(e.target.value)\n            }\n            this.getItemData(request_json)\n        }\n    }\n\n    async getItemData(request_json){\n        await getItems(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    ...this.state,\n                    'item_selection':data['items'],\n                })\n            }  \n            \n            else{\n                alert(data['error'])\n            }\n        })\n    }\n    selectItem(id, name){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice_items':{\n                    ...this.state.update.invoice_items,\n                    [this.state.current] : {\n                        ...this.state.update.invoice_items[this.state.current],\n                        'item_name' : name,\n                        'item':id\n                    },\n                }\n            }\n        })\n        var request_json = {\n            'action':'get',\n            'filter':'item',\n            'item_id':id\n        }\n        this.getPlacesData(request_json)\n    }\n\n    async refreshTable(){\n        var id = this.state.update.invoice.id;\n        var items= [];\n        const request_json = {\n            'action':'get',\n            'invoice_id':id\n        }\n        await getInvoice(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                items = data['invoice_items']\n            }\n            \n            else{\n                alert(data['error'])\n            }\n        })\n        if (items.length === 0){\n            items = [{\n                'id':\"Fake Key\",\n                'item_name': ''\n            }]\n        }\n        await this.setState({\n            ...this.state,\n            'popUp':false,\n            'update':{\n                ...this.state.update,\n                'invoice_items':items\n            }\n        })\n    }\n\n\n    stateman(){\n        console.log(this.state)\n    }\n\n\n    discount_columns =[\n        {\n            'id':1,\n            'name':'Name',\n            'prop':'name'\n        },{\n            'id':2,\n            'name':'Rate',\n            'prop':'rate'\n        },{\n            'id':3,\n            'name':'Code',\n            'prop':'code'\n        },{\n            'id':4,\n            'name':'Type',\n            'prop':'discount_type'\n        },{\n            'id':5,\n            'name':'Remove',\n            'prop':'removeButton'\n        },\n    ]\n\n    tax_columns =[\n        {\n            'id':1,\n            'name':'Name',\n            'prop':'name'\n        },{\n            'id':2,\n            'name':'Rate',\n            'prop':'rate'\n        },{\n            'id':3,\n            'name':'Code',\n            'prop':'code'\n        },{\n            'id':4,\n            'name':'Type',\n            'prop':'tax_type'\n        },{\n            'id':5,\n            'name':'Remove',\n            'prop':'removeButton'\n        },\n    ]\n\n    \n    add_discount_columns =[\n        {\n            'id':1,\n            'name':'Name',\n            'prop':'name'\n        },{\n            'id':2,\n            'name':'Rate',\n            'prop':'rate'\n        },{\n            'id':3,\n            'name':'Code',\n            'prop':'code'\n        },{\n            'id':4,\n            'name':'Type',\n            'prop':'discount_type'\n        }\n    ]\n\n    add_tax_columns =[\n        {\n            'id':1,\n            'name':'Name',\n            'prop':'name'\n        },{\n            'id':2,\n            'name':'Rate',\n            'prop':'rate'\n        },{\n            'id':3,\n            'name':'Code',\n            'prop':'code'\n        },{\n            'id':4,\n            'name':'Type',\n            'prop':'tax_type'\n        }\n    ]\n\n    async update_table (by,dis) {\n        var x = by<0?-1:1\n        if (dis){\n            if (by===0){\n                await this.setState({\n                    'discoount_loaded':false,\n                    discount_start: 0,\n                    discount_end: 10,\n                    discount_page:1\n                })\n            }\n            else{\n                if (this.state.discount_start+by>-1){\n                    await this.setState({\n                        'discount_loaded':false,\n                        discount_start: this.state.discount_start+by,\n                        discount_end: this.state.discount_end+by,\n                        discount_page:this.state.discount_page+x\n                    })\n                }\n                else{\n                    alert(\"Cannot move futher from here.\")\n                    return\n                }\n            }\n            var  request_json = {\n                'action':'get',\n                'filter':'none',\n                'start':this.state.discount_start,\n                'end':this.state.discount_end\n            }\n            this.getDiscountsData(request_json)\n        }\n    else { \n        if (by===0){\n            await this.setState({\n                'tax_loaded':false,\n                tax_start: 0,\n                tax_end: 10,\n                tax_page:1\n            })\n        }\n        else{\n            if (this.state.tax_start+by>-1){\n                await this.setState({\n                    'tax_loaded':false,\n                    tax_start: this.state.tax_start+by,\n                    tax_end: this.state.tax_end+by,\n                    tax_page:this.state.tax_page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.tax_start,\n            'end':this.state.tax_end\n        }\n        this.getTaxesData(request_json)\n\n    }\n    }\n    \n    async getDiscountsData (request_json) {\n        await getDiscounts(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'discount_selection':data['discounts'],\n                    'discount_loaded':true\n                })\n            }\n            else{\n                alert(data['error'])\n            }\n        })\n    }\n    async getTaxesData (request_json) {\n        await getTaxes(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'tax_selection':data['taxes'],\n                    'tax_loaded':true\n                })\n            }  \n        })\n    }\n \n    addEntryDiscount(id){\n        var dis;\n        for (dis in this.state.discount_selection){\n            if (this.state.discount_selection[dis].id === id){\n                var temp = this.state.update.invoice_items[this.state.current]['applied_discount']\n                var x = this.state.discount_selection[dis]\n                temp.push(x)\n                var temp2 = this.state.update.invoice_items[this.state.current]['discount']\n                temp2.push(id)\n                this.setState({\n                    ...this.state,\n                    update:{\n                        ...this.state.update,\n                        'invoice_items':{\n                            ...this.state.update.invoice_items,\n                            [this.state.current] : {\n                                ...this.state.update.invoice_items[this.state.current],\n                                'discount':temp2,\n                                'applied_discount': temp\n                            }\n                        }\n                    }\n                })\n            }\n        }\n    }\n\n    addEntryTax(id){\n        var dis;\n        for (dis in this.state.tax_selection){\n            if (this.state.tax_selection[dis].id === id){\n                var temp = this.state.update.invoice_items[this.state.current]['applied_tax']\n                var x = this.state.tax_selection[dis]\n                temp.push(x)\n                var temp2 = this.state.update.invoice_items[this.state.current]['taxes']\n                temp2.push(id)\n                this.setState({\n                    ...this.state,\n                    update:{\n                        ...this.state.update,\n                        'invoice_items':{\n                            ...this.state.update.invoice_items,\n                            [this.state.current] : {\n                                ...this.state.update.invoice_items[this.state.current],\n                                'tax':temp2,\n                                'applied_tax': temp\n                            }\n                        }\n                    }\n                })\n            }\n        }\n    }\n\n\n    render() {\n        const item_selection = this.state.item_selection\n        const itemPopUp = <Popup trigger={ <button>Select Item</button>} closeOnDocumentClick>\n        <div>\n            <input placeholder=\"Item Name\" id='item_search_box' name='item_serach_box' onChange={this.searchItem}></input>\n            <div className={style.dropdown_content} id='item_dropdown'>\n                    {item_selection.map(\n                        item => (\n                            // use css to get rid of <a>\n                        <a key={item.id} onClick={() => {this.selectItem(item.id, item.name)}} >{item.name} {item.sales_price}</a>\n                        )\n                    )}\n            </div>\n        </div>\n        </Popup>\n\n        var places = this.state.place_selection\n        const selectPlace =<select name='sold_from' id=\"sold_from\" onChange={this.onChangePlace} value={this.state.update.invoice_items[this.state.current].sold_from}  >\n            <option key=\"Fake Key\" value='Fake Value'>Select Place</option>\n                {places.map(\n                    x => (\n                    <option key={x.id} value={x.id}>{x.str_placed_on}</option>\n                    )\n                )}\n            </select>\n\n            \n        var stocks  = this.state.stock_selection\n        var stockValue = this.state.update.invoice_items[this.state.current].purchase_item ? this.state.update.invoice_items[this.state.current].purchase_item : ''\n        const selectStock = <select name='purchase_item' id=\"purchase_item\" onChange={this.onChangePI} value={stockValue} >\n                <option key='Fake Key' value=\"Fake Value\">Select Stock</option>\n                {stocks.map(\n                    x => (\n                    <option key={x.id} value={parseInt(x.id)}>{x.str}</option>\n                    )\n                )}\n            </select>\n        const addPopupDiscount = <div>\n            <h3> Click To Apply New Discount</h3>\n                            <List data={this.state.discount_selection} header={this.add_discount_columns} page={false} popUp={this.addEntryDiscount} />\n                            <button onClick={()=> {this.update_table(-5,true)}}>Previous</button><span>      {this.state.discount_page}       </span><button  onClick={()=> {this.update_table(5,true)}} >Next</button>\n                        </div>\n        \n        const addPopupTax = <div>\n            <h3>Click To Apply New Tax </h3>\n                            <List data={this.state.tax_selection} header={this.add_tax_columns} page={false} popUp={this.addEntryTax} />\n                            <button onClick={()=> {this.update_table(-5,false)}}>Previous</button><span>      {this.state.tax_page}       </span><button  onClick={()=> {this.update_table(5,false)}} >Next</button>\n                        </div>\n        \n\n        var dis;\n        const discounts =this.state.update.invoice_items[this.state.current].applied_discount\n        for (dis in discounts){\n            discounts[dis] = {\n                ...discounts[dis],\n                'removeButton':<button onClick={() => {this.removeEntry(dis,true)}}> Remove </button>\n            }\n        }\n        \n        const taxes = this.state.update.invoice_items[this.state.current].applied_tax\n        for (dis in taxes){\n            taxes[dis] = {\n                ...taxes[dis],\n                'removeButton':<button onClick={()=>{this.removeEntry(dis,false)}}> Remove </button>\n            }\n        }\n        const popUpItem = <div>\n                <button onClick={() => {this.refreshTable()}} >Back</button><br></br><br></br>\n                Item : {this.state.update.invoice_items[this.state.current].item_name}  {itemPopUp}<br></br>\n                Sold From: \n                Place : {this.state.update.invoice_items[this.state.current].item ? selectPlace : \"Select An Item First\" } <br></br>\n                Stock :   {this.state.update.invoice_items[this.state.current].item ? selectStock : \"Select An Item First\" } <br></br>\n                <br></br>\n\n                Quantity : <input name=\"quantity\" placeholder={this.state.update.invoice_items[this.state.current].quantity} type=\"number\" onChange={this.onChangePI} required min='1' ></input><br></br>\n                Price : <input name=\"price\" placeholder={this.state.update.invoice_items[this.state.current].price} type=\"number\" onChange={this.onChangePI} required></input><br></br>\n                Tax Total : {this.state.update.invoice_items[this.state.current].tax_total} <br></br>\n                Sub Total : {this.state.update.invoice_items[this.state.current].sub_total} <br></br>\n                Discount Amount : {this.state.update.invoice_items[this.state.current].discount_amount}<br></br>\n                Total without discount : {this.state.update.invoice_items[this.state.current].total_without_discount}<br></br>\n                Total : {this.state.update.invoice_items[this.state.current].total}<br></br>\n                <br></br>\n                Applied Discounts : :<List data={discounts} header={this.discount_columns} page={false} popUp={this.popUp} removeEntry={this.removeEntry} /><button onClick={() =>{this.update_table(0, true)}} >Apply New Discount</button> <br></br><br></br>\n                {this.state.discount_loaded ? addPopupDiscount : <span></span>}<br></br>\n                Applied Taxes : :<List data={taxes} header={this.tax_columns} page={false} popUp={this.popUp} removeEntry={this.removeEntry} /><br></br><button onClick={() => {this.update_table(0, false)}}>Apply New Tax</button><br></br><br></br>\n                {this.state.tax_loaded ? addPopupTax : <span></span>}<br></br>\n                {this.state.new ? <button onClick={() => {this.postInvoiceItem(true)}} >Add</button> : <button onClick={() => {this.postInvoiceItem()}} >Update</button>}<br></br><br></br>\n                <button onClick={() => {this.deleteInvoiceItem()}} >Delete</button>\n            </div>\n        const customer_selection = this.state.customer_selection\n        const customerPopup = <Popup trigger={<button>Select Customer</button>} closeOnDocumentClick>\n        <div>\n            <input placeholder=\"Customer's first name\" id='customer_serach_box' name='customer_serach_box' onChange={this.searchCustomer}></input>\n            <div className={style.dropdown_content} id='customer_dropdown'>\n                    {customer_selection.map(\n                        customer => (\n                            <a href=\"#\" key={customer.id} onClick={() => {this.selectCustomer(customer.id, customer.name)}} >{customer.name}</a>\n                        )\n                    )}\n            </div>\n        </div>\n        </Popup>\n        const status = this.state.status\n        return (\n            <div>\n                <h1>Invoice</h1>\n        <h3>{this.state.update.invoice.customer_name} </h3>\n                Added By : {this.state.update.invoice.added_by_name}<br></br>\n                Customer : {this.state.update.invoice.customer_name} {customerPopup}<br></br>\n                Order Number : {this.state.update.invoice.order_number}<br></br>\n                <br></br><br></br>\n                Invoiced On : \n                <DatePicker\n                name='invoiced_on'\n                selected={this.state.update.invoice.invoiced_on}\n                onChange={this.invoiceHandler}\n                />\n                Due On : \n                <DatePicker\n                name='completed_on'\n                selected={this.state.update.invoice.due_on}\n                onChange={this.dueOnHandler}\n                /><br></br><br></br>\n                \n                Total Amount : {this.state.update.invoice.total_amount}<br></br>\n                Total Tax : {this.state.update.invoice.tax_total}<br></br>\n                Total Discount: {this.state.update.invoice.discount_total}<br></br>\n                Paid Amount : {this.state.update.invoice.paid_amount}<br></br>\n\n                <br></br>\n                Additional Discount : <input placeholder={this.state.update.invoice.additional_discount} name='additional_discount' onChange={this.onChange} ></input>\n                <br></br><br></br>\n\n                \n                Status : <select name='status' id=\"status\" onChange={this.onChange} value={this.state.update.invoice.status}  >\n                                {status.map(\n                                    x => (\n                                    <option key={x.id} value={parseInt(x.id)}>{x.name}</option>\n                                    )\n                                )}\n                            </select> <br></br><br></br>\n                <button onClick={() => {this.updateInvoice()}}>Add Invoice</button><br></br><br></br>\n                <hr></hr>\n            <button onClick={() => {this.stateman()}}>State</button>\n            </div>\n\n        )\n    }\n}\nexport default InvoiceCreation","import React, { Component } from 'react'\nimport List from '../list';\nimport { getDiscount, updateDiscount,  deleteDiscounts } from '../../api/misc';\nimport {Button, TextField } from '@material-ui/core';\n\nclass DiscountList extends Component {\n    \n    constructor(props){\n        super(props)\n        this.popUp = this.popUp.bind(this)\n        this.state = {\n            'popUp':false,\n            'discount':{},\n            'update':{}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.discountDelete = this.discountDelete.bind(this)\n    }\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value]\n            }\n        })\n    }\n\n    \n    async onSubmit(e){\n        e.preventDefault();\n            var data = this.state.discount\n            var ele;\n            for (ele in this.state.update){\n                data[ele] = this.state.update[ele][0]\n            }\n            data = {...data, 'action':'edit','discount_id':data.id}\n            console.log(data)\n            updateDiscount(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        alert(\"Discount Data updated.\")\n                        this.props.update(0)\n                    }\n                    else{\n                        alert(data['error'])\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    discountDelete(id){\n        var data = {\n            'discounts_id':[\n                id\n            ]\n        }\n        deleteDiscounts(JSON.stringify(data)).then(data=>{\n            try {\n                if (data['status']){\n                    alert('Discount data deleted.')\n                    this.props.update(0)\n                }   else{\n                    alert(data['error'])\n                }\n            }catch(e){\n                console.log(e)\n            }\n        })\n    }\n    \n    async popUp(id, uuid=0){\n        const data = {\n            'action':'get',\n            'discount_id':id,\n        }\n        var data_main;\n        await getDiscount(JSON.stringify(data)).then(data => {\n            if (data['status']){\n                data_main=data\n            }\n        })\n        await this.setState({\n            'popUp':true,\n            'discount':data_main['discounts'][0]\n        })\n    }\n\n\n    columns = [\n        {\n            id:1,\n            name:\"Name\",\n            prop: 'name'\n        },\n        {\n            id:2,\n            name:\"Code\",\n            prop: 'code'\n        },\n        {\n            id:3,\n            name:\"Discount Type\",\n            prop: 'discount_type'\n        },\n        {\n            id:4,\n            name:\"Rate\",\n            prop: 'rate'\n        }      \n    ]\n    \n\n    render() {\n        const list = <List data={this.props.data} header={this.columns}   popUp={this.popUp} update={this.props.update} page={this.props.page} />\n        const popUpRender = <div>\n                        <button onClick={()=> {this.setState({'popUp':false})}}>Back</button><br></br>\n                        <h1>{this.state.discount.name}</h1>\n                        <form onSubmit={this.onSubmit}>\n                            Name: <TextField\n                                id ='name'\n                                name=\"name\"\n                                type='text'\n                                onChange={this.onChange}  \n                                placeholder={this.state.discount.name}          \n                            />\n                            Code : <TextField\n                                id ='code'\n                                name=\"code\"\n                                type='text'\n                                onChange={this.onChange}\n                                placeholder={this.state.discount.code} \n                            />\n                             Discount Type :<select name='discount_type' id=\"discount_type\" defaultValue={this.state.discount.discount_type}  onChange={this.onChange}>\n                                    <option value=\"percent\">Percentage</option>\n                                    <option value=\"fixed\">Fixed</option>\n                                </select> <br></br>\n                            Rate : <input placeholder={this.state.discount.rate} name=\"rate\" onChange={this.onChange} ></input><br></br>\n                            <br></br>\n                            <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                >\n                                Update\n                                </Button> <Button variant=\"contained\" color=\"secondary\" onClick={() => {this.discountDelete(this.state.discount.id)}}>\n                            Delete Discount\n                        </Button> \n                        \n                </form>\n            \n                        <br>\n                        </br>\n                    </div>\n        return (\n            <div>\n                {this.state.popUp ? popUpRender : list}\n            </div>\n        )\n    }\n}\n\nexport default DiscountList\n","import React, { Component } from 'react'\nimport {getDiscounts} from '../../api/misc';\nimport {  connect } from 'react-redux';\nimport  DiscountList  from './discountList';\nimport { Link} from 'react-router-dom';\n\nclass Discounts extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            'taxes':[],\n            'loaded':false,\n            'start':0,\n            'end':10,\n            'page':1\n        }\n        this.update_table = this.update_table.bind(this)\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n    }\n\n    async update_table (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                'loaded':false,\n                start: 0,\n                end: 10,\n                page:1\n            })\n        }\n        else{\n            if (this.state.start+by>-1){\n                await this.setState({\n                    'loaded':false,\n                    start: this.state.start+by,\n                    end: this.state.end+by,\n                    page:this.state.page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.start,\n            'end':this.state.end\n        }\n        this.getDiscountsData(request_json)\n    }\n    \n    async getDiscountsData (request_json) {\n        await getDiscounts(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'discounts':data['discounts'],\n                    'loaded':true\n                })\n            }  \n        })\n    }\n\n \n\nrender() {\n    const render_after_load = (\n        <div>\n            <DiscountList data={this.state.discounts} update={this.update_table} page={this.state.page} />\n        </div>\n    )\n\n    return(\n        <div>\n            <Link to='/discounts/create'>Add New Discount</Link><br></br>\n            <button onClick={() => {this.update_table(0)}}>Refresh table</button><br></br>\n            {this.state.loaded ? render_after_load : \"Loading...\"}\n\n        </div>\n    )\n}\n}\n\n\n\n\nconst mapStateToProps = state => ({\n    user: state.user,\n})\n\nexport default connect(mapStateToProps)(Discounts)","import React, { Component } from 'react'\nimport {  connect } from 'react-redux';\nimport {Button, TextField } from '@material-ui/core';\nimport { createDiscount } from '../../api/misc';\n\n\nclass DiscountCreation extends Component {\n\n    constructor (props){\n        super(props)\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.state = {\n            'update':{\n                'name':'',\n                'code':'',\n                'discount_type':'percent',\n                'rate':''\n            }\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n    }\n\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value][0]\n            }\n        })\n    }\n\n\n    async onSubmit(e){\n        e.preventDefault();\n            var data = {...this.state.update}\n            var ele;\n            for (ele in this.state.update){\n                data[ele] = this.state.update[ele]\n            }\n            data = {...data, 'action':'add'}\n            console.log(data)\n            createDiscount(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        alert(\"New DIscount type Added\")\n                    }\n                    else{\n                        alert(data['error'])\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    render() {\n            const popUpRender = <div>\n                        <form onSubmit={this.onSubmit}>\n                            Name: <TextField\n                                id ='name'\n                                name=\"name\"\n                                type='text'\n                                onChange={this.onChange}  \n                            />\n                            Code : <TextField\n                                id ='code'\n                                name=\"code\"\n                                type='text'\n                                onChange={this.onChange}\n                            />\n                             Discount Type :<select name='discount_type' id=\"discount_type\" value={this.state.update.discont_type}  onChange={this.onChange}>\n                                    <option value=\"percent\">Percentage</option>\n                                    <option value=\"fixed\">Fixed</option>\n                                </select> <br></br>\n                            Rate : <input  name=\"rate\" id=\"rate\" type='number' onChange={this.onChange} value={this.state.update.rate} ></input><br></br>\n                            <br></br>\n                            <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                >\n                                Create\n                            </Button>\n                </form>\n            \n                        <br>\n                        </br>\n                    </div>\n        return (\n            popUpRender\n        )\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    user: state.user\n})\n\nexport default connect(mapStateToProps)(DiscountCreation)","import React, { Component } from 'react'\nimport List from '../list';\nimport { getTax, updateTax,  deleteTaxes } from '../../api/misc';\nimport {Button, TextField } from '@material-ui/core';\n\nclass TaxList extends Component {\n    \n    constructor(props){\n        super(props)\n        this.popUp = this.popUp.bind(this)\n        this.state = {\n            'popUp':false,\n            'tax':{},\n            'update':{}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.taxDelete = this.taxDelete.bind(this)\n    }\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value]\n            }\n        })\n    }\n\n    \n    async onSubmit(e){\n        e.preventDefault();\n            var data = this.state.tax\n            var ele;\n            for (ele in this.state.update){\n                data[ele] = this.state.update[ele][0]\n            }\n            data = {...data, 'action':'edit','tax_id':data.id}\n            console.log(data)\n            updateTax(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        alert(\"Tax Data updated.\")\n                        this.props.update(0)\n                    }\n                    else{\n                        alert(data['error'])\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    taxDelete(id){\n        var data = {\n            'taxes_id':[\n                id\n            ]\n        }\n        deleteTaxes(JSON.stringify(data)).then(data=>{\n            try {\n                if (data['status']){\n                    alert('Tax data deleted.')\n                    this.props.update(0)\n                }   else{\n                    alert(data['error'])\n                }\n            }catch(e){\n                console.log(e)\n            }\n        })\n    }\n    \n    async popUp(id, uuid=0){\n        const data = {\n            'action':'get',\n            'tax_id':id,\n        }\n        var data_main;\n        await getTax(JSON.stringify(data)).then(data => {\n            if (data['status']){\n                data_main=data\n            }\n        })\n        await this.setState({\n            'popUp':true,\n            'tax':data_main['taxes'][0]\n        })\n    }\n\n\n    columns = [\n        {\n            id:1,\n            name:\"Name\",\n            prop: 'name'\n        },\n        {\n            id:2,\n            name:\"Code\",\n            prop: 'code'\n        },\n        {\n            id:3,\n            name:\"Tax Type\",\n            prop: 'tax_type'\n        },\n        {\n            id:4,\n            name:\"Rate\",\n            prop: 'rate'\n        }      \n    ]\n    \n\n    render() {\n        const list = <List data={this.props.data} header={this.columns}   popUp={this.popUp} update={this.props.update} page={this.props.page} />\n        const popUpRender = <div>\n                        <button onClick={()=> {this.setState({'popUp':false})}}>Back</button><br></br>\n                        <h1>{this.state.tax.name}</h1>\n                        <form onSubmit={this.onSubmit}>\n                            Name: <TextField\n                                id ='name'\n                                name=\"name\"\n                                type='text'\n                                onChange={this.onChange}  \n                                placeholder={this.state.tax.name}          \n                            />\n                            Code : <TextField\n                                id ='code'\n                                name=\"code\"\n                                type='text'\n                                onChange={this.onChange}\n                                placeholder={this.state.tax.code} \n                            />\n                             Tax Type :<select name='tax_type' id=\"tax_type\" defaultValue={this.state.tax.tax_type}  onChange={this.onChange}>\n                                    <option value=\"normal\">Normal</option>\n                                    <option value=\"fixed\">Fixed</option>\n                                </select> <br></br>\n                            Rate : <input placeholder={this.state.tax.rate} name=\"rate\" onChange={this.onChange} ></input><br></br>\n                            <br></br>\n                            <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                >\n                                Update\n                                </Button> <Button variant=\"contained\" color=\"secondary\" onClick={() => {this.taxDelete(this.state.tax.id)}}>\n                            Delete Tax\n                        </Button> \n                        \n                </form>\n            \n                        <br>\n                        </br>\n                    </div>\n        return (\n            <div>\n                {this.state.popUp ? popUpRender : list}\n            </div>\n        )\n    }\n}\n\nexport default TaxList\n","import React, { Component } from 'react'\nimport {getTaxes} from '../../api/misc';\nimport {  connect } from 'react-redux';\nimport  TaxList  from './taxList';\nimport { Link} from 'react-router-dom';\n\nclass Taxes extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            'taxes':[],\n            'loaded':false,\n            'start':0,\n            'end':10,\n            'page':1\n        }\n        this.update_table = this.update_table.bind(this)\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n    }\n\n    async update_table (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                'loaded':false,\n                start: 0,\n                end: 10,\n                page:1\n            })\n        }\n        else{\n            if (this.state.start+by>-1){\n                await this.setState({\n                    'loaded':false,\n                    start: this.state.start+by,\n                    end: this.state.end+by,\n                    page:this.state.page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.start,\n            'end':this.state.end\n        }\n        this.getTaxesData(request_json)\n    }\n    \n    async getTaxesData (request_json) {\n        await getTaxes(JSON.stringify(request_json)).then(data => {\n            console.log(data)\n            if (data['status']){\n                this.setState({\n                    'taxes':data['taxes'],\n                    'loaded':true\n                })\n            }  \n        })\n    }\n\n \n\nrender() {\n    const render_after_load = (\n        <div>\n            <TaxList data={this.state.taxes} update={this.update_table} page={this.state.page} />\n        </div>\n    )\n\n    return(\n        <div>\n            <Link to='/taxes/create'>Add New Tax</Link><br></br>\n            <button onClick={() => {this.update_table(0)}}>Refresh table</button><br></br>\n            {this.state.loaded ? render_after_load : \"Loading...\"}\n\n        </div>\n    )\n}\n}\n\n\n\n\nconst mapStateToProps = state => ({\n    user: state.user,\n})\n\nexport default connect(mapStateToProps)(Taxes)","import React, { Component } from 'react'\nimport {  connect } from 'react-redux';\nimport {Button, TextField } from '@material-ui/core';\nimport { createTax } from '../../api/misc';\n\n\nclass TaxCreation extends Component {\n\n    constructor (props){\n        super(props)\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.state = {\n            'update':{\n                'name':'',\n                'code':'',\n                'tax_type':'normal',\n                'rate':''\n            }\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n    }\n\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value][0]\n            }\n        })\n    }\n\n\n    async onSubmit(e){\n        e.preventDefault();\n            var data = {...this.state.update}\n            var ele;\n            for (ele in this.state.update){\n                data[ele] = this.state.update[ele]\n            }\n            data = {...data, 'action':'add'}\n            console.log(data)\n            createTax(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        alert(\"New Tax type Added\")\n                    }\n                    else{\n                        alert(data['error'])\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    render() {\n            const popUpRender = <div>\n                        <form onSubmit={this.onSubmit}>\n                            Name: <TextField\n                                id ='name'\n                                name=\"name\"\n                                type='text'\n                                onChange={this.onChange}  \n                            />\n                            Code : <TextField\n                                id ='code'\n                                name=\"code\"\n                                type='text'\n                                onChange={this.onChange}\n                            />\n                             Tax Type :<select name='tax_type' id=\"tax_type\" value={this.state.update.discont_type}  onChange={this.onChange}>\n                                    <option value=\"normal\">Normal</option>\n                                    <option value=\"fixed\">Fixed</option>\n                                </select> <br></br>\n                            Rate : <input  name=\"rate\" id=\"rate\" type='number' onChange={this.onChange} value={this.state.update.rate} ></input><br></br>\n                            <br></br>\n                            <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                >\n                                Create\n                            </Button>\n                </form>\n            \n                        <br>\n                        </br>\n                    </div>\n        return (\n            popUpRender\n        )\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    user: state.user\n})\n\nexport default connect(mapStateToProps)(TaxCreation)","import { baseRequest } from '../base';\n// api for items \n\nconst getItemCatagories = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/items/catagories','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  \n  const deleteItemCatagory = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/items/catagories/delete','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const createItemCatagory = async data => {\n      try {\n        return await baseRequest('apiv1/inventory/items/catagories','POST', data);\n      } catch(e){\n        alert(e)\n      }\n  };\n  \n  \n  const getItemCatagory = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/items/catagory','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const updateItemCatagory= async data => {\n    try {\n      return await baseRequest('apiv1/inventory/items/catagory','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \nexport { getItemCatagories, deleteItemCatagory, createItemCatagory, getItemCatagory, updateItemCatagory}\n  ","import React, { Component } from 'react'\nimport List from '../list';\nimport { getItem, updateItem,  deleteItems } from '../../api/inventory/itemApi';\nimport {getItemCatagories} from '../../api/inventory/itemCatagory'\nimport {Button, TextField } from '@material-ui/core';\n\nclass ItemList extends Component {\n    \n    constructor(props){\n        super(props)\n        this.popUp = this.popUp.bind(this)\n        this.state = {\n            'catagories':[],\n            'popUp':false,\n            'item':{\n                'catagory':''\n            },\n            'update':{}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.itemDelete = this.itemDelete.bind(this)\n    }\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value][0]\n            }\n        })\n    }\n\n    async componentDidMount(){\n\n        \n    }\n    \n    async onSubmit(e){\n        e.preventDefault();\n            var data = this.state.update\n            data = {...data, 'action':'edit','item_id':data.id}\n            updateItem(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        alert(\"Item Data updated.\")\n                        this.props.update(0)\n                    }\n                    else{\n                        alert(data['error'])\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    itemDelete(id){\n        var data = {\n            'items_id':[\n                id\n            ]\n        }\n        deleteItems(JSON.stringify(data)).then(data=>{\n            try {\n                if (data['status']){\n                    alert('Item data deleted.')\n                    this.props.update(0)\n                }   else{\n                    alert(data['error'])\n                }\n            }catch(e){\n                console.log(e)\n            }\n        })\n    }\n    \n    async popUp(id, uuid=0){\n        var data = {\n            'action':'get',\n            'item_id':id,\n        }\n        var data_main;\n        await getItem(JSON.stringify(data)).then(data => {\n            if (data['status']){\n                data_main=data\n            }\n        })\n        await this.setState({\n            'popUp':true,\n            'update':data_main['items'][0]\n        })\n        data = {\n            'action':'get',\n            'start':0,\n            'end':50\n        }\n        await getItemCatagories(JSON.stringify(data)).then(data=> {\n            try { \n                if (data['status']){\n                    this.setState({\n                        ...this.state,\n                        'catagories':data['item_catagories']\n                    })\n                }\n                else{\n                    alert(data['error'])\n                }\n            }catch(e){\n                console.log(e)\n            }\n        })\n    }\n\n\n    columns = [\n        {\n            id:1,\n            name:\"Name\",\n            prop: 'name'\n        },\n        {\n            id:2,\n            name:\"Catagory\",\n            prop: 'catagory_str'\n        },\n        {\n            id:3,\n            name:\"Price\",\n            prop: 'sales_price'\n        },\n        ,\n        {\n            id:4,\n            name:\"Stock\",\n            prop: 'stock'\n        },\n        {\n            id:5,\n            name:\"Sold\",\n            prop: 'sold'\n        }      \n    ]\n    \n\n    render() {\n        const catagories = this.state.catagories\n        const list = <List data={this.props.data} header={this.columns}   popUp={this.popUp} update={this.props.update} page={this.props.page} />\n        const popUpRender = <div>\n                        <button onClick={()=> {this.setState({'popUp':false})}}>Back</button><br></br>\n                        <h1>{this.state.item.name}</h1>\n                        <form onSubmit={this.onSubmit}>\n                            Name: <TextField\n                                id ='name'\n                                name=\"name\"\n                                type='text'\n                                onChange={this.onChange}  \n                                placeholder={this.state.update.name}          \n                            />\n                            Catagory : <select name='catagory' id=\"catagory\" onChange={this.onChange} value={this.state.update.catagory} required >\n                                {catagories.map(\n                                    x => (\n                                    <option key={x.id} value={parseInt(x.id)}>{x.name}</option>\n                                    )\n                                )}\n                            </select> <br></br><br></br>\n                            \n                            Sales Price : <input placeholder={this.state.update.sales_price} onChange={this.onChange}></input><br></br>\n                            Stock : {this.state.update.stock} <br></br>\n                            Sold : {this.state.update.sold} <br></br>\n\n                            <br></br>\n                            <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                >\n                                Update\n                                </Button> <Button variant=\"contained\" color=\"secondary\" onClick={() => {this.itemDelete(this.state.update.id)}}>\n                            Delete Item\n                        </Button> \n                        \n                </form>\n            \n                        <br>\n                        </br>\n                    </div>\n        return (\n            <div>\n                {this.state.popUp ? popUpRender : list}\n            </div>\n        )\n    }\n}\n\nexport default ItemList\n","import React, { Component } from 'react'\nimport {getItems} from '../../api//inventory/itemApi';\nimport {  connect } from 'react-redux';\nimport  ItemList  from './itemList';\nimport { Link} from 'react-router-dom';\n\nclass Items extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            'items':[],\n            'loaded':false,\n            'start':0,\n            'end':10,\n            'page':1\n        }\n        this.update_table = this.update_table.bind(this)\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n    }\n\n    async update_table (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                'loaded':false,\n                start: 0,\n                end: 10,\n                page:1\n            })\n        }\n        else{\n            if (this.state.start+by>-1){\n                await this.setState({\n                    'loaded':false,\n                    start: this.state.start+by,\n                    end: this.state.end+by,\n                    page:this.state.page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.start,\n            'end':this.state.end\n        }\n        this.getItemsData(request_json)\n    }\n    \n    async getItemsData (request_json) {\n        await getItems(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'items':data['items'],\n                    'loaded':true\n                })\n            }  \n        })\n    }\n\n \n\nrender() {\n    const render_after_load = (\n        <div>\n            <ItemList data={this.state.items} update={this.update_table} page={this.state.page} />\n        </div>\n    )\n\n    return(\n        <div>\n            <Link to='/items/create'>Add New Item</Link><br></br>\n            <button onClick={() => {this.update_table(0)}}>Refresh table</button><br></br>\n            {this.state.loaded ? render_after_load : \"Loading...\"}\n        </div>\n    )\n}\n}\n\n\n\n\nconst mapStateToProps = state => ({\n    user: state.user,\n})\n\nexport default connect(mapStateToProps)(Items)","import React, { Component } from 'react'\nimport {  connect } from 'react-redux';\nimport {Button, TextField } from '@material-ui/core';\nimport { createItem } from '../../api/inventory/itemApi';\nimport {getItemCatagories} from '../../api/inventory/itemCatagory'\n\n\nclass ItemCreation extends Component {\n\n    constructor (props){\n        super(props)\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.state = {\n            'catagories':[],\n            'update':{\n            }\n        }\n    }\n\n    async componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n        var data = {\n            'action':'get',\n            'start':0,\n            'end':50\n        }\n        await getItemCatagories(JSON.stringify(data)).then(data=> {\n            try { \n                if (data['status']){\n                    this.setState({\n                        ...this.state,\n                        'catagories':data['item_catagories']\n                    })\n                }\n                else{\n                    alert(data['error'])\n                }\n            }catch(e){\n                console.log(e)\n            }\n        })\n    }\n\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value][0]\n            }\n        })\n    }\n\n\n    async onSubmit(e){\n        e.preventDefault();\n            var data = {...this.state.update}\n            var ele;\n            for (ele in this.state.update){\n                data[ele] = this.state.update[ele]\n            }\n            data = {...data, 'action':'add'}\n            console.log(data)\n            createItem(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        alert(\"New Item Added\")\n                    }\n                    else{\n                        alert(data['error'])\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    render() {\n        const catagories = this.state.catagories\n        const popUpRender = <div>\n                        <form onSubmit={this.onSubmit}>\n                            Name: <TextField\n                                id ='name'\n                                name=\"name\"\n                                type='text'\n                                onChange={this.onChange}      \n                            />\n                            Catagory : <select name='catagory' id=\"catagory\" onChange={this.onChange} required >\n                                {catagories.map(\n                                    x => (\n                                    <option key={x.id} value={parseInt(x.id)}>{x.name}</option>\n                                    )\n                                )}\n                            </select> <br></br><br></br>\n                            \n                            Sales Price : <input name='sales_price' type='float' onChange={this.onChange}></input><br></br>\n\n                            <br></br>\n                            <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                >\n                                Create</Button>\n                </form>\n            \n                        <br>\n                        </br>\n                    </div>\n        return (\n            popUpRender\n        )\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    user: state.user\n})\n\nexport default connect(mapStateToProps)(ItemCreation)","import React, { Component } from 'react'\nimport List from '../list';\nimport { getItemCatagory, updateItemCatagory,  deleteItemCatagory } from '../../api/inventory/itemCatagory';\nimport {Button, TextField } from '@material-ui/core';\n\nclass ItemCatagoryList extends Component {\n    \n    constructor(props){\n        super(props)\n        this.popUp = this.popUp.bind(this)\n        this.state = {\n            'popUp':false,\n            'itemCatagory':{},\n            'update':{}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.itemCatDelete = this.itemCatDelete.bind(this)\n    }\n    \n    onChange(e)\n    {\n        this.setState({\n            'itemCatagory': {\n                ...this.state.itemCatagory,\n                [e.target.name] : [e.target.value][0]\n            }\n        })\n    }\n\n    \n    async onSubmit(e){\n        e.preventDefault();\n            var data = this.state.itemCatagory\n            data = {...data, 'action':'edit','item_catagory_id':data.id}\n            console.log(data)\n            updateItemCatagory(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        alert(\"ItemCatagory Data updated.\")\n                        this.props.update(0)\n                    }\n                    else{\n                        alert(data['error'])\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    itemCatDelete(id){\n        var data = {\n            'item_catagories_id':[\n                id\n            ]\n        }\n        deleteItemCatagory(JSON.stringify(data)).then(data=>{\n            try {\n                if (data['status']){\n                    alert('itemCatagory data deleted.')\n                    this.props.update(0)\n                }   else{\n                    alert(data['error'])\n                }\n            }catch(e){\n                console.log(e)\n            }\n        })\n    }\n    \n    async popUp(id, uuid=0){\n        const data = {\n            'action':'get',\n            'item_catagory_id':id,\n        }\n        var data_main;\n        await getItemCatagory(JSON.stringify(data)).then(data => {\n            console.log(data)\n            if (data['status']){\n                data_main=data\n            }\n        })\n        await this.setState({\n            'popUp':true,\n            'itemCatagory':data_main['item_catagories'][0]\n        })\n    }\n\n\n    columns = [\n        {\n            id:1,\n            name:\"Name\",\n            prop: 'name'\n        }  \n    ]\n    \n\n    render() {\n        const list = <List data={this.props.data} header={this.columns}   popUp={this.popUp} update={this.props.update} page={this.props.page} />\n        const popUpRender = <div>\n                        <button onClick={()=> {this.setState({'popUp':false})}}>Back</button><br></br>\n                        <h1>{this.state.update.name}</h1>\n                        <form onSubmit={this.onSubmit}>\n                            Name: <TextField\n                                id ='name'\n                                name=\"name\"\n                                type='text'\n                                onChange={this.onChange}  \n                                placeholder={this.state.itemCatagory.name}          \n                            />\n                            <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                >\n                                Update\n                                </Button> <Button variant=\"contained\" color=\"secondary\" onClick={() => {this.itemCatDelete(this.state.itemCatagory.id)}}>\n                            Delete Discount\n                        </Button> \n                        \n                </form>\n            \n                        <br>\n                        </br>\n                    </div>\n        return (\n            <div>\n                {this.state.popUp ? popUpRender : list}\n            </div>\n        )\n    }\n}\n\nexport default ItemCatagoryList\n","import React, { Component } from 'react'\nimport {getItemCatagories} from '../../api//inventory/itemCatagory';\nimport {  connect } from 'react-redux';\nimport  ItemCatagoryList  from './itemCatagoryList';\nimport { Link} from 'react-router-dom';\n\nclass ItemCatagories extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            'items':[],\n            'loaded':false,\n            'start':0,\n            'end':10,\n            'page':1\n        }\n        this.update_table = this.update_table.bind(this)\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n    }\n\n    async update_table (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                'loaded':false,\n                start: 0,\n                end: 10,\n                page:1\n            })\n        }\n        else{\n            if (this.state.start+by>-1){\n                await this.setState({\n                    'loaded':false,\n                    start: this.state.start+by,\n                    end: this.state.end+by,\n                    page:this.state.page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.start,\n            'end':this.state.end\n        }\n        this.getItemCatagoriesData(request_json)\n    }\n    \n    async getItemCatagoriesData (request_json) {\n        await getItemCatagories(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'item_catagories':data['item_catagories'],\n                    'loaded':true\n                })\n            }  \n        })\n    }\n\n \n\nrender() {\n    const render_after_load = (\n        <div>\n            <ItemCatagoryList data={this.state.item_catagories} update={this.update_table} page={this.state.page} />\n        </div>\n    )\n\n    return(\n        <div>\n            <Link to='/itemcatagories/create'>Add New Item Catagroy</Link><br></br>\n            <button onClick={() => {this.update_table(0)}}>Refresh table</button><br></br>\n            {this.state.loaded ? render_after_load : \"Loading...\"}\n        </div>\n    )\n}\n}\n\n\n\n\nconst mapStateToProps = state => ({\n    user: state.user,\n})\n\nexport default connect(mapStateToProps)(ItemCatagories)","import React, { Component } from 'react'\nimport {  connect } from 'react-redux';\nimport {Button, TextField } from '@material-ui/core';\nimport { createItemCatagory } from '../../api/inventory/itemCatagory';\n\n\nclass DiscountCreation extends Component {\n\n    constructor (props){\n        super(props)\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.state = {\n           'itemCatagory':{}\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n    }\n\n    \n    onChange(e)\n    {\n        this.setState({\n            'itemCatagory': {\n                ...this.state.itemCatagory,\n                [e.target.name] : [e.target.value][0]\n            }\n        })\n    }\n\n\n    async onSubmit(e){\n        e.preventDefault();\n            var data = {...this.state.itemCatagory}\n            data = {...data, 'action':'add'}\n            createItemCatagory(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        alert(\"New Item Catagory Added\")\n                    }\n                    else{\n                        alert(data['error'])\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    render() {\n        const popUpRender = <div>\n                        <form onSubmit={this.onSubmit}>\n                            Name: <TextField\n                                id ='name'\n                                name=\"name\"\n                                type='text'\n                                onChange={this.onChange}  \n                                placeholder={this.state.itemCatagory.name}          \n                            />\n                            <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                >\n                                Add\n                                </Button>\n                </form>\n            \n                        <br>\n                        </br>\n                    </div>\n        return (\n            popUpRender\n        )\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    user: state.user\n})\n\nexport default connect(mapStateToProps)(DiscountCreation)","import React, { Component } from 'react'\nimport List from '../list';\nimport { getPlace, updatePlace,  deletePlaces } from '../../api/inventory/placeApi';\nimport {Button, TextField } from '@material-ui/core';\n\nclass PlaceList extends Component {\n    \n    constructor(props){\n        super(props)\n        this.popUp = this.popUp.bind(this)\n        this.state = {\n            'popUp':false,\n            'place':{},\n            'update':{}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.placeDelete = this.placeDelete.bind(this)\n    }\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value]\n            }\n        })\n    }\n\n    \n    async onSubmit(e){\n        e.preventDefault();\n            var data = this.state.place\n            var ele;\n            for (ele in this.state.update){\n                data[ele] = this.state.update[ele][0]\n            }\n            data = {...data, 'action':'edit','place_id':data.id}\n            console.log(data)\n            updatePlace(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        alert(\"Place Data updated.\")\n                        this.props.update(0)\n                    }\n                    else{\n                        alert(data['error'])\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    placeDelete(id){\n        var data = {\n            'places_id':[\n                id\n            ]\n        }\n        deletePlaces(JSON.stringify(data)).then(data=>{\n            try {\n                if (data['status']){\n                    alert('Place data deleted.')\n                    this.props.update(0)\n                }   else{\n                    alert(data['error'])\n                }\n            }catch(e){\n                console.log(e)\n            }\n        })\n    }\n    \n    async popUp(id, uuid=0){\n        const data = {\n            'action':'get',\n            'place_id':id,\n        }\n        var data_main;\n        await getPlace(JSON.stringify(data)).then(data => {\n            if (data['status']){\n                data_main=data\n            }\n        })\n        await this.setState({\n            'popUp':true,\n            'place':data_main['places'][0]\n        })\n    }\n\n\n    columns = [\n        {\n            id:1,\n            name:\"Name\",\n            prop: 'name'\n        },\n        {\n            id:2,\n            name:\"Number of Items Assigned To The Place (different Purchase orders)\",\n            prop: 'count_assignment'\n        }     \n    ]\n\n    second_columns =[\n        {\n            id:1,\n            name:\"Item Name\",\n            prop:'item_name'\n        },\n        {\n            id:2,\n            name:\"Stock\",\n            prop:'stock'\n        },\n        {\n            id:3,\n            name:'Purchase Order',\n            prop:'purchase_order_uuid'\n        }\n    ]\n    \n\n    render() {\n        const list = <List data={this.props.data} header={this.columns}   popUp={this.popUp} update={this.props.update} page={this.props.page} />\n        const popUpRender = <div>\n                        <button onClick={()=> {this.setState({'popUp':false})}}>Back</button><br></br>\n                        <h1>{this.state.place.name}</h1>\n                        <form onSubmit={this.onSubmit}>\n                            Name: <TextField\n                                id ='name'\n                                name=\"name\"\n                                type='text'\n                                onChange={this.onChange}  \n                                placeholder={this.state.place.name}          \n                            />\n                            <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                >\n                                Update\n                                </Button> <Button variant=\"contained\" color=\"secondary\" onClick={() => {this.placeDelete(this.state.place.id)}}>\n                            Delete Discount\n                        </Button> \n                        \n                </form>\n            \n                        <br>\n                        </br>\n                    </div>\n        return (\n            <div>\n                {this.state.popUp ? popUpRender : list}\n            </div>\n        )\n    }\n}\n\nexport default PlaceList\n","import React, { Component } from 'react'\nimport {getPlaces} from '../../api/inventory/placeApi';\nimport {  connect } from 'react-redux';\nimport  PlaceList  from './placeList';\nimport { Link} from 'react-router-dom';\n\nclass Placements extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            'places':[],\n            'loaded':false,\n            'start':0,\n            'end':10,\n            'page':1\n        }\n        this.update_table = this.update_table.bind(this)\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n    }\n\n    async update_table (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                'loaded':false,\n                start: 0,\n                end: 10,\n                page:1\n            })\n        }\n        else{\n            if (this.state.start+by>-1){\n                await this.setState({\n                    'loaded':false,\n                    start: this.state.start+by,\n                    end: this.state.end+by,\n                    page:this.state.page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.start,\n            'end':this.state.end\n        }\n        this.getPlacesData(request_json)\n    }\n    \n    async getPlacesData(request_json) {\n        await getPlaces(JSON.stringify(request_json)).then(data => {\n            console.log(data)\n            if (data['status']){\n                this.setState({\n                    'places':data['places'],\n                    'loaded':true\n                })\n            }  \n        })\n    }\n\n \n\nrender() {\n    const render_after_load = (\n        <div>\n            <PlaceList data={this.state.places} update={this.update_table} page={this.state.page} />\n        </div>\n    )\n\n    return(\n        <div>\n            <Link to='/places/create'>Add New Place</Link><br></br>\n            <button onClick={() => {this.update_table(0)}}>Refresh table</button><br></br>\n            {this.state.loaded ? render_after_load : \"Loading...\"}\n        </div>\n    )\n}\n}\n\n\n\n\nconst mapStateToProps = state => ({\n    user: state.user,\n})\n\nexport default connect(mapStateToProps)(Placements)","import React, { Component } from 'react'\nimport {  connect } from 'react-redux';\nimport {Button, TextField } from '@material-ui/core';\nimport { createPlace } from '../../api/inventory/placeApi';\n\n\nclass PlaceCreation extends Component {\n\n    constructor (props){\n        super(props)\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.state = {\n            'update':{\n            }\n        }\n    }\n\n    async componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n    }\n\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value][0]\n            }\n        })\n    }\n\n\n    async onSubmit(e){\n        e.preventDefault();\n            var data = {...this.state.update}\n            data = {...data, 'action':'add'}\n            console.log(data)\n            createPlace(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        alert(\"New Place Added\")\n                    }\n                    else{\n                        alert(data['error'])\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    render() {\n        const popUpRender = <div>\n                        <form onSubmit={this.onSubmit}>\n                            Name: <TextField\n                                id ='name'\n                                name=\"name\"\n                                type='text'\n                                onChange={this.onChange}      \n                            />\n                            <br></br>\n                            <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                >\n                                Create</Button>\n                </form>\n            \n                        <br>\n                        </br>\n                    </div>\n        return (\n            popUpRender\n        )\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    user: state.user\n})\n\nexport default connect(mapStateToProps)(PlaceCreation)","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport Login from './users/login';\nimport Logout from './users/logout';\nimport VendorCreation from './vendors/vendorCreation';\nimport UserCreation from './users/userCreation';\nimport { BrowserRouter as Router, Switch , Route, Link} from 'react-router-dom';\nimport Users from './users';\nimport Vendors from './vendors/index';\nimport Customers from './customer/index';\nimport CustomerCreation from './customer/customerCreation'\nimport swal from 'sweetalert';\nimport PurchaseOrders from './purchaseOrder/index'\nimport PurchaseOrderCreation from './purchaseOrder/purchaseOrderCreation'\nimport Invoices from './invoices/index';\nimport InvoiceCreation from './invoices/invoiceCreation';\nimport Discounts from './discounts/index';\nimport DiscountCreation from './discounts/discountCreation'\nimport Taxes from './taxes/index';\nimport TaxCreation from './taxes/taxCreation'\nimport Items from './items/index'\nimport ItemCreation from './items/itemCreation'\nimport ItemCatagories from './itemCatagories/index';\nimport ItemCatagoryCreation from './itemCatagories/itemCreation';\nimport Places from './placement/index'\nimport PlaceCreation from './placement/placeCreation'\nimport Button from '@material-ui/core/Button';\n\nimport { useSelector } from \"react-redux\";\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\n\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport PeopleIcon from '@material-ui/icons/People';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\nimport FeaturedPlayListIcon from '@material-ui/icons/FeaturedPlayList';\nimport SettingsIcon from '@material-ui/icons/Settings';\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24,\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    textAlign: 'center',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nfunction Dashboard() {\n  \n\n\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  const user = useSelector(state => state.user);\n\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            Mandala IMS\n          </Typography>\n          <IconButton color=\"inherit\"  onClick={()=> {window.location.href=\"/logout\"}}>\n          <ExitToAppIcon/>\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <Typography>\n            {user.data.first_name} <span>  </span> {user.data.last_name}<br></br>\n            {user.data.user_type}\n          </Typography>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Router>\n        <Divider />\n        <List>\n    <ListItem button onClick={()=> {window.location.href=\"/\"}}>\n      <ListItemIcon>\n        <DashboardIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Dashboard\" />\n    </ListItem>\n    <ListItem button  onClick={()=> {window.location.href=\"/purchaseorders\"}}>\n      <ListItemIcon>\n        <ShoppingCartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Purchase Orders\" />\n    </ListItem>\n    <ListItem button onClick={()=> {window.location.href=\"/vendors\"}}>\n      <ListItemIcon>\n        <PeopleIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Vendors\" />\n    </ListItem>\n    <ListItem button onClick={()=> {window.location.href=\"/invoices\"}}>\n      <ListItemIcon>\n        <DescriptionIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Invoices\" />\n    </ListItem>\n    <ListItem button onClick={()=> {window.location.href=\"/customers\"}}>\n      <ListItemIcon>\n        <MonetizationOnIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Customers\" />\n    </ListItem>\n    <ListItem button onClick={()=> {window.location.href=\"/items\"}}>\n      <ListItemIcon>\n      <FeaturedPlayListIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Items\" />\n    </ListItem>\n        </List>\n        <Divider />\n        <List>\n    <ListItem button onClick={()=> {window.location.href=\"/items\"}}>\n      <ListItemIcon>\n      <SettingsIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Item Managements\" />\n    </ListItem>\n    <ListItem button onClick={()=> {window.location.href=\"/discounts\"}}>\n      <ListItemIcon>\n      <SettingsIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Discounts\" />\n    </ListItem>\n    <ListItem button onClick={()=> {window.location.href=\"/taxes\"}}>\n      <ListItemIcon>\n      <SettingsIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Taxes\" />\n    </ListItem>\n    <ListItem button onClick={()=> {window.location.href=\"/itemcatagories\"}}>\n      <ListItemIcon>\n      <SettingsIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Item Catagories\" />\n    </ListItem>\n        </List>\n        </Router>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n\n          <Grid container direction=\"row\" justify=\"center\">\n            <Grid item xs={12} >\n            <Router>\n            <Switch>\n                    <Route path='/login' component={Login}></Route>\n                    <Route path='/logout' component={Logout}></Route>\n                    <Route path='/users/create' component = {UserCreation}></Route>\n                    <Route path='/users' component = {Users}></Route>\n                    <Route path='/vendors/create' component = {VendorCreation}></Route>\n                    <Route path='/vendors' component = {Vendors}></Route>\n                    \n                    <Route path='/customers/create' component = {CustomerCreation}></Route>\n                    <Route path='/customers' component = {Customers}></Route>\n\n                    <Route path='/purchaseorders/create' component = {PurchaseOrderCreation}></Route>\n                    <Route path='/purchaseorders' component = {PurchaseOrders}></Route>\n                    \n                    <Route path='/invoices/create' component = {InvoiceCreation}></Route>\n                    <Route path='/invoices' component = {Invoices}></Route>\n\n                    <Route path='/discounts/create' component= {DiscountCreation}></Route>\n                    <Route path='/discounts' component= {Discounts}></Route>\n                    \n                    <Route path='/taxes/create' component= {TaxCreation}></Route>\n                    <Route path='/taxes' component= {Taxes}></Route>\n                    \n                    <Route path='/items/create' component= {ItemCreation}></Route>\n                    <Route path='/items' component= {Items}></Route>\n\n                    <Route path='/itemcatagories/create' component= {ItemCatagoryCreation}></Route>\n                    <Route path='/itemcatagories' component= {ItemCatagories}></Route>\n\n                    <Route path='/places/create' component= {PlaceCreation}></Route>\n                    <Route path='/places' component= {Places}></Route>\n                    </Switch>\n            </Router>\n            </Grid>            \n          </Grid>\n        </Container>\n      </main>\n    </div>\n  );\n}\n\nexport default Dashboard","import React, { Component } from 'react'\nimport {  connect } from 'react-redux';\nimport { getCurrentUser } from '../api/user';\nimport { loggedIn } from '../actions';\nimport swal from 'sweetalert';\nimport Dashboard from './dashboard'\nimport LoadingIcon from './loading'\nimport Login from './users/login'\n\nclass Index extends Component {\n    constructor (props){\n        super(props)\n        this.state = {\n            'loading':true\n        }\n    }\n    \n    \n\n    async componentDidMount() { \n        await getCurrentUser().then(data => {\n            if (data){\n              \n              console.log(data)\n                if (data['status'])\n                {\n                    this.props.dispatch(loggedIn(data['user_data']))\n                }\n                this.setState({\n                  'loading':false\n                })\n            }\n            else{\n                swal('Cannot connet to the server, make sure you have a stable internet connection.')\n            }\n        })\n    }\n    render() {\n        var render_x=<LoadingIcon></LoadingIcon>;\n        if(this.state.loading){\n          render_x = <LoadingIcon></LoadingIcon>\n        }\n        else{\n          if (this.props.user.isLoggedIn){\n            render_x = <Dashboard></Dashboard>\n          }\n          else{\n            render_x = <Login></Login>\n          }\n        }\n        \n        return (\n          <div>\n            {render_x}\n          </div>\n          \n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    user: state.user\n})\n\nexport default connect(mapStateToProps)(Index)","import React from 'react';\nimport './App.css';\nimport Index from './components';\n\n\nfunction  App() {\n  return (\n    <div>\n      <Index></Index>\n    </div>\n  );\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","var initState = {\n    'isLoggedIn':false,\n    'data':{}\n}\nconst userReducer = (state=initState, action) => {\n    switch(action.type){\n        case 'logout':\n            state.data = {}\n            state.isLoggedIn = false;\n            return{\n                isLoggedIn: state.isLoggedIn\n            }\n        case 'loggedIn':\n            state.data = action.payload\n            state.isLoggedIn = true;\n            return {\n                data: state.data,\n                isLoggedIn: state.isLoggedIn\n            }\n        default:\n            return state;\n    }\n\n};\n\nexport default userReducer","var initState = {\n    'data':{}\n}\nconst usersReducer = (state=initState, action) => {\n    switch(action.type){\n        case 'setUsers':\n            state.users = action.payload\n            return{\n                users: state.users\n            }\n        default:\n            return state;\n    }\n\n};\n\nexport default usersReducer","import { combineReducers } from 'redux';\nimport userReducer from './userReducer';\nimport usersReducer from './usersReducer';\n\nconst rootReducers = combineReducers ({\n    user: userReducer,\n    users : usersReducer\n})\n\nexport default rootReducers","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { applyMiddleware, createStore } from 'redux';\nimport rootReducer from './reducers';\nimport { Provider } from 'react-redux';\nimport thunkMiddleware from 'redux-thunk';\n\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.getElementById('root')\n    );\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"popUp_loader__ji3PT\",\"spin\":\"popUp_spin__1nLou\",\"dropbtn\":\"popUp_dropbtn__1fyGN\",\"dropdown\":\"popUp_dropdown__2vgTr\",\"dropdown_content\":\"popUp_dropdown_content__1rTux\"};"],"sourceRoot":""}