{"version":3,"sources":["api/settings.js","validation/settings.js","Pages/Settings/General.js","Pages/Settings/Accounting.js","Pages/Settings/Sales.js","Pages/Settings/Payment.js","Pages/Settings/Settings.js","Pages/Settings/Notification.js","App/components/Reusables/ErrorBody.js","../node_modules/react-bootstrap/esm/Col.js","api/misc.js","../node_modules/react-select/dist/react-select.browser.esm.js","../node_modules/react-bootstrap/esm/Row.js","api/accounting/account.js","api/sales/customer.js","App/components/Reusables/CustomSelectMenuList.js","api/inventory/placeApi.js","api/userManagement/roles.js","api/payment/payment.js"],"names":["updateGeneralSettings","data","signal","a","baseRequest","alert","getSalesSettings","updateSalesSettings","getPaymentSettings","updatePaymentSettings","getAccountingSettings","updateAccountingSettings","getNotificationSettings","updateNotificationSettings","validatePaymentSettings","settingsData","errors","isValid","isEmpty","connect","state","settings","setSettings","props","React","useState","submitting","setSubmitting","defaultWeightUnit","company","companyAddress","branch","branchCode","panNumber","manufacturer","distributor","contact","manufacturerAddress","manufacturerWebsite","changeFiscalYear","stockLowNotificationOn","irdUsername","irdPassword","setSettingsData","setErrors","useEffect","default_weight_unit","company_address","branch_code","pan_number","manufacturer_address","manufacturer_website","Date","change_fisal_year","stock_low_notification_on","ird_username","ird_password","_settingsDataChange","e","target","name","value","console","log","Row","Col","md","Form","Group","Label","Control","onChange","type","placeholder","ErrorBody","as","selectedDate","selected","title","className","aria-hidden","Button","disabled","variant","onClick","preventDefault","validateGeneralSettings","requestJson","then","res","json","status","Jhilikka","fire","icon","background","store","dispatch","error","catch","err","defaultAccountsLabel","isAddLabel","defaultAccountsModel","cashPurchase","cashPurchaseName","creditPurchase","creditPurchaseName","bankPurchase","bankPurchaseName","transferPurchase","transferPurchaseName","prepaidPurchase","prepaidPurchaseName","cashSales","cashSalesName","creditSales","creditSalesName","bankSales","bankSalesName","transferSales","transferSalesName","prepaidSales","prepaidSalesName","isAddModel","purchaseSelected","salesSelected","Accounting","defaultAccounts","setDefaultAccounts","isAdd","setIsAdd","accountInputText","setAccountInputText","defaultAccountOptions","setDefaultAccountOptions","accountOptionsMaxLength","setAccountOptionsMaxLength","defaultQuickSalesAccount","defaultQuickSalesAccountName","getAccounts_","getAccounts","length","DEMO","INSTANCE_PER_LOAD","accounts","map","itm","index","label","id","count","SET_FETCH_MORE_OPTIONS","payload","controller","AbortController","Promise","all","default_invoice_account_on_cash","default_invoice_account_on_cash_str","default_invoice_account_on_credit","default_invoice_account_on_credit_str","default_invoice_account_on_bank","default_invoice_account_on_bank_str","default_invoice_account_on_transfer","default_invoice_account_on_transfer_str","default_invoice_account_on_pre_paid","default_invoice_account_on_pre_paid_str","default_purchase_account_on_cash","default_purchase_account_on_cash_str","default_purchase_account_on_credit","default_purchase_account_on_credit_str","default_purchase_account_on_bank","default_purchase_account_on_bank_str","default_purchase_account_on_transfer","default_purchase_account_on_transfer_str","default_purchase_account_on_pre_paid","default_purchase_account_on_pre_paid_str","default_purchase_action_on_cash_is_add","default_purchase_action_on_credit_is_add","default_purchase_action_on_bank_is_add","default_purchase_action_on_transfer_is_add","default_purchase_action_on_pre_paid_is_add","default_invoice_action_on_cash_is_add","default_invoice_action_on_credit_is_add","default_invoice_action_on_bank_is_add","default_invoice_action_on_transfer_is_add","default_invoice_action_on_pre_paid_is_add","default_purchase_action_on_selected_account","default_invoice_action_on_selected_account","default_account_qk_sales","default_account_qk_sales_str","abort","loadAccountOptions","inputText","action","filter","start","end","uuid","_accountInputChange","_scrollAccountMenuToBottom","_checkedChange","key","checked","isAddKeys","Object","keys","style","fontSize","checkedLabel","checkedValue","FormGroup","defaultOptions","account","_selectedAccountChange","loadOptions","onInputChange","components","MenuList","CustomSelectMenuList","onMenuScrollToBottom","onMenuClose","RESET_FETCH_MORE_OPTIONS","SET_IS_MENU_OPEN","onMenuOpen","htmlFor","ac","validateAccountingSettings","JSON","stringify","Sales","taxesLoading","setTaxesLoading","placesLoading","setPlacesLoading","taxesArr","setTaxesArr","placesArr","setPlacessArr","defaultPlace","defaultVat","defaultCustomerQuickSales","defaultCustomerNameQuickSales","customerInputText","setCustomerInputText","customerOptionsMaxLength","setCustomerOptionsMaxLength","defaultCustomerOptions","setDefaultCustomerOptions","getCustomers_","getCustomers","customers","instance","first_name","middle_name","last_name","details","default_place_to_sold_from","default_vat_tax","default_customer_qk_sales","getTaxes","taxes","getPlaces","places","loadCustomerOptions","ven","_selectedCustomerChange","cus","tax_type","rate","validateSalesSettings","Payment","methodsLoading","setMethodsLoading","methodsArr","setMethodsArr","defaultGiftCardPaymentMethod","defaultPaymentMethodQuickSales","default_gitf_card_payment_method","default_payment_method_qk_sales","getPaymentMethods","payment_methods","settingsRoutes","path","pathname","component","General","SalesSettings","PaymentSettings","AccountingSettings","rolesArr","setRolesArr","i","j","roles","getRoles","model","instances","row","tempSettingsData","roles_to_get_notified","role","_selectedRolesChange","options","closeMenuOnSelect","isMulti","Exception","msg","this","message","requestJsons","forEach","setting","push","ress","Settings","useRouteMatch","url","pathname1","location","split","SettingsNav","to","Routes","route","propps","from","children","Text","color","DEVICE_SIZES","forwardRef","_ref","ref","bsPrefix","_ref$as","Component","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","spans","classes","brkPoint","span","offset","order","propValue","_propValue$span","infix","createElement","_extends","classNames","apply","concat","displayName","getDiscounts","deleteDiscounts","createDiscount","getDiscount","updateDiscount","deleteTaxes","createTax","getTax","updateTax","getPurchaseOrderStatus","getPlacements","createPlacement","deletePlacement","updatePlacement","getCountries","manageState","Select","noGutters","decoratedBsPrefix","sizePrefix","cols","defaultProps","getTransactions","deleteAccounts","createAccount","getAccount","closeAccount","updateAccount","getAccountTypes","createAccountType","updateAccountType","deleteAccountTypes","deleteCustomers","createCustomer","getCustomer","updateCustomer","selectDropdown","activeFetchMoreFor","padding","backgroundColor","deletePlaces","createPlace","getPlace","updatePlace","getRole","deleteRole","createRole","updateRole","getPowers","assignRole","createPayment","paybackCredit","getPayment","deletePayment"],"mappings":"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","file":"static/js/52.769c4ff2.chunk.js","sourcesContent":["import { baseRequest, normalRequest } from './base';\n\n//api of self(user) management of self user and is different than the userManagement APIs\n\nconst getGeneralSettings = async (data, signal) => {\n    try {\n        return await baseRequest(\"api/v1/user/settings/get\", \"GET\", data, signal);\n    } catch (e) {\n        alert(e);\n    }\n};\n\nconst updateGeneralSettings = async (data, signal) => {\n    try {\n        return await baseRequest(\"api/v1/user/settings/update\", \"POST\", data, signal);\n    } catch (e) {\n        alert(e);\n    }\n};\n\nconst getSalesSettings = async (data, signal) => {\n    try {\n        return await baseRequest(\"api/v1/sales/settings/get\", \"GET\", data, signal);\n    } catch (e) {\n        alert(e);\n    }\n};\n\nconst updateSalesSettings = async (data, signal) => {\n    try {\n        return await baseRequest(\"api/v1/sales/settings/update\", \"POST\", data, signal);\n    } catch (e) {\n        alert(e);\n    }\n};\n\nconst getPaymentSettings = async (data, signal) => {\n    try {\n        return await baseRequest(\"api/v1/payment/settings/get\", \"GET\", data, signal);\n    } catch (e) {\n        alert(e);\n    }\n};\n\nconst updatePaymentSettings = async (data, signal) => {\n    try {\n        return await baseRequest(\"api/v1/payment/settings/update\", \"POST\", data, signal);\n    } catch (e) {\n        alert(e);\n    }\n};\n\nconst getAccountingSettings = async (data, signal) => {\n    try {\n        return await baseRequest(\"api/v1/accounting/settings/get\", \"GET\", data, signal);\n    } catch (e) {\n        alert(e);\n    }\n};\nconst updateAccountingSettings = async (data, signal) => {\n    try {\n        return await baseRequest(\"api/v1/accounting/settings/update\", \"POST\", data, signal);\n    } catch (e) {\n        alert(e);\n    }\n};\n\nconst getNotificationSettings = async (data, signal) => {\n    try {\n        return await baseRequest(\"api/v1/user/notification/settings/get\", \"GET\", data, signal);\n    } catch (e) {\n        alert(e);\n    }\n};\nconst updateNotificationSettings = async (data, signal) => {\n    try {\n        return await baseRequest(\"api/v1/user/notification/settings/update\", \"POST\", data, signal);\n    } catch (e) {\n        alert(e);\n    }\n};\n\n\n\n\nexport {\n    getGeneralSettings,\n    updateGeneralSettings,\n    getSalesSettings,\n    updateSalesSettings,\n    getPaymentSettings,\n    updatePaymentSettings,\n    getAccountingSettings,\n    updateAccountingSettings,\n    getNotificationSettings,\n    updateNotificationSettings,\n}","import isEmpty from \"./isEmpty\"\n\n\nconst validateGeneralSettings = (settingsData) => {\n    const errors = {}\n\n    if (isEmpty(settingsData.company)) {\n        errors.company = 'Provide Name of the company!'\n    }\n    if (isEmpty(settingsData.defaultWeightUnit)) {\n        errors.defaultWeightUnit = 'Provide default weight unit!'\n    }\n    if (isEmpty(settingsData.manufacturer)) {\n        errors.manufacturer = 'Provide name of manufacturer!'\n    }\n    // if (isEmpty(settingsData.changeFiscalYear)) {\n    //     errors.changeFiscalYear = 'Provide date of fiscal year end!'\n    // }\n    if (isEmpty(settingsData.stockLowNotificationOn)) {\n        errors.stockLowNotificationOn = 'Field cannot be empty!'\n    }\n\n    //Will be valid if the errors are empty\n    const isValid = isEmpty(errors);\n    return { isValid, errors }\n}\n\nconst validateSalesSettings = (settingsData) => {\n    const errors = {}\n    //Will be valid if the errors are empty\n    const isValid = isEmpty(errors);\n    return { isValid, errors }\n}\n\nconst validateAccountingSettings = (settingsData) => {\n    const errors = {}\n    //Will be valid if the errors are empty\n    const isValid = isEmpty(errors);\n    return { isValid, errors }\n}\n\nconst validatePaymentSettings = (settingsData) => {\n    const errors = {}\n    //Will be valid if the errors are empty\n    const isValid = isEmpty(errors);\n    return { isValid, errors }\n}\n\nexport {\n    validateGeneralSettings,\n    validateSalesSettings,\n    validateAccountingSettings,\n    validatePaymentSettings,\n}","import React from 'react';\nimport { Row, Col, Card, Form, Button, InputGroup, FormControl, DropdownButton, Dropdown } from 'react-bootstrap';\nimport DatePicker from 'react-datepicker';\nimport PropTypes from 'prop-types'\n\n\nimport Aux from \"../../hoc/_Aux\";\n\n\nimport ErrorBody from '../../App/components/Reusables/ErrorBody';\nimport Jhilikka from '../../App/components/Reusables/Jhilikka';\nimport { getGeneralSettings, updateGeneralSettings } from '../../api/settings';\nimport { validateGeneralSettings } from '../../validation/settings';\nimport { connect } from 'react-redux';\nimport { setSettings } from '../../redux/actions/settingsActions'\nimport store from '../../redux/store';\n\nconst General = (props) => {\n    const [submitting, setSubmitting] = React.useState(false)\n    const [settingsData, setSettingsData] = React.useState({\n        defaultWeightUnit: '',\n        company: '',\n        companyAddress: '',\n        branch: '',\n        branchCode: '',\n        panNumber: '',\n        manufacturer: '',\n        distributor: '',\n        contact: '',\n        manufacturerAddress: '',\n        manufacturerWebsite: '',\n        changeFiscalYear: '',\n        stockLowNotificationOn: '',\n        irdUsername: '',\n        irdPassword: '',\n    })\n    const [errors, setErrors] = React.useState({});\n\n\n    React.useEffect(() => {\n        const settings = props.settings;\n        setSettingsData({\n            ...settingsData,\n            defaultWeightUnit: settings.default_weight_unit,\n            company: settings.company,\n            companyAddress: settings.company_address,\n            branch: settings.branch,\n            branchCode: settings.branch_code,\n            panNumber: settings.pan_number,\n            manufacturer: settings.manufacturer,\n            distributor: settings.distributor,\n            contact: settings.contact,\n            manufacturerAddress: settings.manufacturer_address,\n            manufacturerWebsite: settings.manufacturer_website,\n            changeFiscalYear: new Date(settings.change_fisal_year),\n            stockLowNotificationOn: settings.stock_low_notification_on,\n            irdUsername: settings.ird_username,\n            irdPassword: settings.ird_password,\n        })\n    }, []);\n\n\n    const _fiscalYearChange = (selectedDate) => {\n        setErrors({ ...errors, changeFiscalYear: '' })\n        setSettingsData({ ...settingsData, changeFiscalYear: selectedDate })\n    }\n\n\n    const _settingsDataChange = (e) => {\n        setErrors({ ...errors, [e.target.name]: '' })\n\n        setSettingsData({\n            ...settingsData,\n            [e.target.name]: e.target.value\n        })\n    }\n\n\n    const _submit = (e) => {\n        e.preventDefault()\n        const { isValid, errors } = validateGeneralSettings(settingsData);\n\n        if (!isValid) {\n            console.log(errors);\n            setErrors({ ...errors })\n            return;\n        };\n\n        setSubmitting(true)\n        //if no errros api call\n        const requestJson = {\n            \"action\": \"update\",\n            \"default_weight_unit\": settingsData.defaultWeightUnit || '',\n            \"company\": settingsData.company || '',\n            \"company_address\": settingsData.companyAddress || '',\n            \"branch\": settingsData.branch || '',\n            \"branch_code\": settingsData.branchCode || '',\n            \"pan_number\": settingsData.panNumber || '',\n            \"manufacturer\": settingsData.manufacturer || '',\n            \"distributor\": settingsData.distributor || '',\n            \"contact\": settingsData.contact || '',\n            \"manufacturer_address\": settingsData.manufacturerAddress || '',\n            \"manufacturer_website\": settingsData.manufacturerWebsite || '',\n            \"change_fisal_year\": settingsData.changeFiscalYear,\n            \"stock_low_notification_on\": settingsData.stockLowNotificationOn || '',\n            \"ird_username\": settingsData.irdUsername,\n            \"ird_password\": settingsData.irdPassword,\n        }\n        // console.log(JSON.stringify(requestJson));\n        updateGeneralSettings(requestJson)\n            .then((res) => {\n                setSubmitting(false)\n                if (res.json.status) {\n                    Jhilikka.fire({ icon: 'success', title: 'Settings updated successfully!', background: '#dffff0' })\n                    store.dispatch(props.setSettings(res.json.settings));\n                } else {\n                    Jhilikka.fire({ icon: 'error', title: res.json.error, background: '#ffe5de' })\n                }\n            }).catch((err) => {\n                setSubmitting(false)\n                console.log(err)\n            })\n    }\n\n    console.log(props.settings, 'Is the settings here okay!!');\n\n    return (\n        <Aux>\n            <Row>\n                <Col>\n                    <Row>\n                        <Col md={6}>\n                            <Form.Group  >\n                                <Form.Label>Company Name*</Form.Label>\n                                <Form.Control name=\"company\" value={settingsData.company} onChange={_settingsDataChange} type=\"text\" placeholder=\"Company Name\" />\n                                <ErrorBody>{errors.company}</ErrorBody>\n                            </Form.Group>\n                        </Col>\n                        <Col md={6}>\n                            <Form.Group  >\n                                <Form.Label>Company Address</Form.Label>\n                                <Form.Control name=\"companyAddress\" value={settingsData.companyAddress} onChange={_settingsDataChange} type=\"text\" placeholder=\"Address\" />\n                                <ErrorBody>{errors.companyAddress}</ErrorBody>\n                            </Form.Group>\n                        </Col>\n                        <Col md={6}>\n                            <Form.Group  >\n                                <Form.Label>Branch</Form.Label>\n                                <Form.Control name=\"branch\" value={settingsData.branch} onChange={_settingsDataChange} type=\"text\" placeholder=\"Branch Name\" />\n                                <ErrorBody>{errors.branch}</ErrorBody>\n                            </Form.Group>\n                        </Col>\n                        <Col md={6}>\n                            <Form.Group  >\n                                <Form.Label>Branch Code</Form.Label>\n                                <Form.Control name=\"branchCode\" value={settingsData.branchCode} onChange={_settingsDataChange} type=\"text\" placeholder=\"Branch Code\" />\n                                <ErrorBody>{errors.branchCode}</ErrorBody>\n                            </Form.Group>\n                        </Col>\n\n                        <Col md={6}>\n                            <Form.Group  >\n                                <Form.Label>Default Weight Unit*</Form.Label>\n                                <Form.Control name=\"defaultWeightUnit\" value={settingsData.defaultWeightUnit} onChange={_settingsDataChange} as=\"select\">\n\n                                    <option value='kg' >Kilograms</option>\n                                    <option value='g' >Grams</option>\n                                    <option value='lb' >LB</option>\n                                </Form.Control>\n                                <ErrorBody>{errors.defaultWeightUnit}</ErrorBody>\n                            </Form.Group>\n                        </Col>\n\n                        <Col md={6}>\n                            <Form.Group  >\n                                <Form.Label>Pan Number*</Form.Label>\n                                <Form.Control name=\"panNumber\" value={settingsData.panNumber} onChange={_settingsDataChange} type=\"text\" placeholder=\"PAN Number\" />\n                                <ErrorBody>{errors.panNumber}</ErrorBody>\n                            </Form.Group>\n                        </Col>\n                        <Col md={6}>\n                            <Form.Group  >\n                                <Form.Label>Manufacturer*</Form.Label>\n                                <Form.Control name=\"manufacturer\" value={settingsData.manufacturer} onChange={_settingsDataChange} type=\"text\" placeholder=\"Manufacturer Name\" />\n                                <ErrorBody>{errors.manufacturer}</ErrorBody>\n                            </Form.Group>\n                        </Col>\n                        <Col md={6}>\n                            <Form.Group  >\n                                <Form.Label>Manufacturer Address*</Form.Label>\n                                <Form.Control name=\"manufacturerAddress\" value={settingsData.manufacturerAddress} onChange={_settingsDataChange} type=\"text\" placeholder=\"Address\" />\n                                <ErrorBody>{errors.manufacturerAddress}</ErrorBody>\n                            </Form.Group>\n                        </Col>\n                        <Col md={6}>\n                            <Form.Group  >\n                                <Form.Label>Manufacturer Website*</Form.Label>\n                                <Form.Control name=\"manufacturerWebsite\" value={settingsData.manufacturerWebsite} onChange={_settingsDataChange} type=\"text\" placeholder=\"Website\" />\n                                <ErrorBody>{errors.manufacturerWebsite}</ErrorBody>\n                            </Form.Group>\n                        </Col>\n                        <Col md={6}>\n                            <Form.Group  >\n                                <Form.Label>Distributor Name</Form.Label>\n                                <Form.Control name=\"distributor\" value={settingsData.distributor} onChange={_settingsDataChange} type=\"text\" placeholder=\"Distributor Name\" />\n                                <ErrorBody>{errors.distributor}</ErrorBody>\n                            </Form.Group>\n                        </Col>\n                        <Col md={6}>\n                            <Form.Group  >\n                                <Form.Label>Contact*</Form.Label>\n                                <Form.Control name=\"contact\" value={settingsData.contact} onChange={_settingsDataChange} type=\"text\" placeholder=\"Contact\" />\n                                <ErrorBody>{errors.contact}</ErrorBody>\n                            </Form.Group>\n                        </Col>\n                        <Col md={6}>\n                            <Form.Group  >\n                                <Form.Label>Fiscal Year Ends On*</Form.Label>\n                                <DatePicker onChange={_fiscalYearChange} placeholder=\"Pick Date\" name=\"changeFiscalYear\" selected={settingsData.changeFiscalYear} />\n                                <ErrorBody>{errors.changeFiscalYear}</ErrorBody>\n                            </Form.Group>\n                        </Col>\n\n\n\n                        <Col md={6}>\n                            <Form.Group  >\n                                <Form.Label>IRD Username*</Form.Label>\n                                <Form.Control name=\"irdUsername\" value={settingsData.irdUsername} onChange={_settingsDataChange} type=\"text\" placeholder=\"IRD Username\" />\n                                <ErrorBody>{errors.irdUsername}</ErrorBody>\n                            </Form.Group>\n                        </Col>\n\n                        <Col md={6}>\n                            <Form.Group  >\n                                <Form.Label>IRD Password*</Form.Label>\n                                <Form.Control name=\"irdPassword\" value={settingsData.irdPassword} onChange={_settingsDataChange} type=\"text\" placeholder=\"IRD Password\" />\n                                <ErrorBody>{errors.irdPassword}</ErrorBody>\n                            </Form.Group>\n                        </Col>\n\n\n\n\n\n                        <Col md={6}>\n                            <Form.Group  >\n                                <Form.Label>Notify when stock is below* <i title=\"You will be notified when the stock of an item is below the give value\" className=\"fa fa-info-circle\" aria-hidden=\"true\"></i></Form.Label>\n                                <Form.Control name=\"stockLowNotificationOn\" value={settingsData.stockLowNotificationOn} onChange={_settingsDataChange} type=\"text\" placeholder=\"Stock\" />\n                                <ErrorBody>{errors.stockLowNotificationOn}</ErrorBody>\n                            </Form.Group>\n                        </Col>\n\n\n\n\n\n                    </Row>\n                    <div className=\"d-flex justify-content-end\" >\n                        <Button\n                            disabled={submitting}\n                            variant=\"primary\"\n                            onClick={_submit}\n                        >\n                            {submitting ? <><i className=\"fa fa-spinner text-c-white f-15 fa-pulse m-l-1\"></i>Submitting</> : 'Submit'}\n\n                        </Button>\n                    </div>\n\n                </Col>\n            </Row>\n        </Aux>\n    );\n\n}\n\n\nGeneral.propTypes = {\n    setSettings: PropTypes.func.isRequired,\n}\nconst mapStateToProps = state => ({\n    settings: state.settings\n})\n\n\n\nexport default connect(mapStateToProps, { setSettings })(General);\n","import React from 'react';\nimport { Row, Col, Card, Form, Button, InputGroup, FormControl, DropdownButton, Dropdown, FormGroup } from 'react-bootstrap';\nimport DatePicker from 'react-datepicker';\nimport AsyncSelect from 'react-select/async'\n\n\nimport Aux from \"../../hoc/_Aux\";\n\n\nimport ErrorBody from '../../App/components/Reusables/ErrorBody';\nimport Jhilikka from '../../App/components/Reusables/Jhilikka';\nimport { getGeneralSettings, updateGeneralSettings, getSalesSettings, updateSalesSettings, getAccountingSettings, updateAccountingSettings } from '../../api/settings';\nimport { validateSalesSettings, validateAccountingSettings } from '../../validation/settings';\nimport { getPlaces } from '../../api/inventory/placeApi';\nimport { getTaxes } from '../../api/misc';\nimport { getAccounts } from '../../api/accounting/account';\nimport store from '../../redux/store';\nimport { RESET_FETCH_MORE_OPTIONS, SET_FETCH_MORE_OPTIONS, SET_IS_MENU_OPEN } from '../../redux/actions/types';\nimport CustomSelectMenuList from '../../App/components/Reusables/CustomSelectMenuList';\nimport DEMO from '../../globals/constant';\n\nconst defaultAccountsLabel = [\n    'Default Account on Cash Purchase',\n    'Default Account on Credit Purchase',\n    'Default Account on Purchasing thorugh Bank',\n    'Default Account on Purchasing through Online Transer',\n    'Default Account on Purchase while Prepaid',\n    'Default Account on Cash Sales',\n    'Default Account on Credit Sales',\n    'Default Account on Selling thorugh Bank',\n    'Default Account on Selling through Online Transer',\n    'Default Account on Selling while Prepaid',\n]\n\nconst isAddLabel = [\n    'Given Account is Debit on Cash Purchase',\n    'Given Account is Debit on Credit Purchase',\n    'Given Account is Debit on Purchasing thorugh Bank',\n    'Given Account is Debit on Purchasing through Online Transer',\n    'Given Account is Debit on Purchase while Prepaid',\n    'Given Account is Debit on Cash Sales',\n    'Given Account is Debit on Credit Sales',\n    'Given Account is Debit on Selling thorugh Bank',\n    'Given Account is Debit on Selling through Online Transer',\n    'Given Account is Debit on Selling while Prepaid',\n]\n\nconst defaultAccountsModel = {\n    cashPurchase: null,\n    cashPurchaseName: null,\n    creditPurchase: null,\n    creditPurchaseName: null,\n    bankPurchase: null,\n    bankPurchaseName: null,\n    transferPurchase: null,\n    transferPurchaseName: null,\n    prepaidPurchase: null,\n    prepaidPurchaseName: null,\n    cashSales: null,\n    cashSalesName: null,\n    creditSales: null,\n    creditSalesName: null,\n    bankSales: null,\n    bankSalesName: null,\n    transferSales: null,\n    transferSalesName: null,\n    prepaidSales: null,\n    prepaidSalesName: null,\n}\nconst isAddModel = {\n    cashPurchase: false,\n    creditPurchase: false,\n    bankPurchase: false,\n    transferPurchase: false,\n    prepaidPurchase: false,\n    cashSales: false,\n    creditSales: false,\n    bankSales: false,\n    transferSales: false,\n    prepaidSales: false,\n\n    purchaseSelected: true,\n    salesSelected: true,\n}\n\nconst Accounting = (props) => {\n\n    //default accounts\n    const [defaultAccounts, setDefaultAccounts] = React.useState({ ...defaultAccountsModel });\n    const [isAdd, setIsAdd] = React.useState({ ...isAddModel })\n    const [errors, setErrors] = React.useState({});\n    const [submitting, setSubmitting] = React.useState(false)\n\n    const [accountInputText, setAccountInputText] = React.useState('');\n    const [defaultAccountOptions, setDefaultAccountOptions] = React.useState([]);\n    const [accountOptionsMaxLength, setAccountOptionsMaxLength] = React.useState(0)\n\n    const [settingsData, setSettingsData] = React.useState({\n        defaultQuickSalesAccount: '',\n        defaultQuickSalesAccountName: ''\n    })\n\n    //custom API call\n    const getAccounts_ = async (signal) => {\n        getAccounts({\n            \"action\": 'get',\n            \"filter\": 'none',\n            \"start\": defaultAccountOptions.length,\n            \"end\": defaultAccountOptions.length + DEMO.INSTANCE_PER_LOAD\n        }, signal)\n            .then((res) => {\n                if (res.json.status) {\n                    setDefaultAccountOptions([\n                        ...defaultAccountOptions,\n                        ...res.json.accounts.map((itm, index) => ({ label: `${itm.name}`, value: itm.id }))\n                    ]);\n                    setAccountOptionsMaxLength(res.json.count)\n                    store.dispatch({\n                        type: SET_FETCH_MORE_OPTIONS,\n                        payload: ['fetchMoreOptionsAccs', false]\n                    })\n                } else {\n                    Jhilikka.fire({ icon: 'error', title: res.json.error, background: '#ffe5de' })\n                }\n            }).catch((err) => {\n                console.log(err)\n            });\n    }\n\n    React.useEffect(() => {\n        const controller = new AbortController();\n        getAccounts_(controller.signal);\n\n        Promise.all([\n            getAccountingSettings(null, controller.signal),\n        ])\n            .then(([res]) => {\n                const settings = res.json.settings;\n                console.log(settings)\n                if (res.json.status) {\n                    setDefaultAccounts({\n                        ...defaultAccounts,\n                        cashSales: settings.default_invoice_account_on_cash,\n                        cashSalesName: settings.default_invoice_account_on_cash_str,\n                        creditSales: settings.default_invoice_account_on_credit,\n                        creditSalesName: settings.default_invoice_account_on_credit_str,\n                        bankSales: settings.default_invoice_account_on_bank,\n                        bankSalesName: settings.default_invoice_account_on_bank_str,\n                        transferSales: settings.default_invoice_account_on_transfer,\n                        transferSalesName: settings.default_invoice_account_on_transfer_str,\n                        prepaidSales: settings.default_invoice_account_on_pre_paid,\n                        prepaidSalesName: settings.default_invoice_account_on_pre_paid_str,\n\n                        cashPurchase: settings.default_purchase_account_on_cash,\n                        cashPurchaseName: settings.default_purchase_account_on_cash_str,\n                        creditPurchase: settings.default_purchase_account_on_credit,\n                        creditPurchaseName: settings.default_purchase_account_on_credit_str,\n                        bankPurchase: settings.default_purchase_account_on_bank,\n                        bankPurchaseName: settings.default_purchase_account_on_bank_str,\n                        transferPurchase: settings.default_purchase_account_on_transfer,\n                        transferPurchaseName: settings.default_purchase_account_on_transfer_str,\n                        prepaidPurchase: settings.default_purchase_account_on_pre_paid,\n                        prepaidPurchaseName: settings.default_purchase_account_on_pre_paid_str,\n                    });\n\n                    setIsAdd({\n                        ...isAdd,\n                        cashPurchase: settings.default_purchase_action_on_cash_is_add,\n                        creditPurchase: settings.default_purchase_action_on_credit_is_add,\n                        bankPurchase: settings.default_purchase_action_on_bank_is_add,\n                        transferPurchase: settings.default_purchase_action_on_transfer_is_add,\n                        prepaidPurchase: settings.default_purchase_action_on_pre_paid_is_add,\n                        cashSales: settings.default_invoice_action_on_cash_is_add,\n                        creditSales: settings.default_invoice_action_on_credit_is_add,\n                        bankSales: settings.default_invoice_action_on_bank_is_add,\n                        transferSales: settings.default_invoice_action_on_transfer_is_add,\n                        prepaidSales: settings.default_invoice_action_on_pre_paid_is_add,\n\n                        purchaseSelected: settings.default_purchase_action_on_selected_account,\n                        salesSelected: settings.default_invoice_action_on_selected_account,\n                    })\n\n                    setSettingsData({\n                        ...settingsData,\n                        defaultQuickSalesAccount: settings.default_account_qk_sales,\n                        defaultQuickSalesAccountName: settings.default_account_qk_sales_str\n                    })\n                } else {\n                    Jhilikka.fire({ icon: 'error', title: res.json.error, background: '#ffe5de' })\n                }\n            })\n            .catch(err => {\n                console.log(err);\n            })\n        return () => controller.abort()\n    }, []);\n\n\n    const loadAccountOptions = async (inputText) => {\n        const requestJson = { action: 'get', filter: 'name', name: inputText, start: 0, end: 50 }\n        return getAccounts(requestJson)\n            .then((res) => {\n                console.log(res);\n                if (res.json.status) {\n                    return res.json.accounts.map((itm, index) => ({ label: `${itm.name}`, value: itm.id, uuid: itm.uuid }));\n                } else { Jhilikka.fire({ icon: 'error', title: res.json.error, background: '#ffe5de' }) }\n            }).catch((err) => {\n                console.log(err)\n            });\n    }\n\n    const _accountInputChange = (inputText) => {\n        setAccountInputText(inputText);\n    }\n\n    const _scrollAccountMenuToBottom = (e) => {\n        e.preventDefault();\n        if (accountOptionsMaxLength > defaultAccountOptions.length && !accountInputText) {\n            store.dispatch({\n                type: SET_FETCH_MORE_OPTIONS,\n                payload: ['fetchMoreOptionsAccs', true]\n            })\n            getAccounts_();\n        }\n    }\n\n    const _selectedQuickSalesAccountChange = (ac) => {\n        setErrors({ ...errors, defaultQuickSalesAccount: '' });\n        setSettingsData({ ...settingsData, defaultQuickSalesAccount: ac.value, defaultQuickSalesAccountName: ac.label });\n    }\n\n    const _settingsDataChange = (e) => {\n        setErrors({ ...errors, [e.target.name]: '' })\n    }\n\n    const _checkedChange = (e, key) => {\n        console.log(e.target.checked, 'is the checkbox value');\n        setIsAdd({\n            ...isAdd,\n            [key]: e.target.checked,\n        })\n    }\n\n    const _selectedAccountChange = (key, account) => {\n        setErrors({ ...errors, [key]: '' })\n        setDefaultAccounts({ ...defaultAccounts, [key]: account.value, [`${key}Name`]: account.label })\n    }\n\n\n    const _submit = () => {\n\n        const { isValid, errors } = validateAccountingSettings(defaultAccounts);\n\n        if (!isValid) {\n            console.log(errors);\n            setErrors({ ...errors })\n            return;\n        };\n\n        console.log('no errros');\n\n        setSubmitting(true)\n        //if no errros api call\n        const requestJson = {\n            \"action\": \"update\",\n\n            \"default_purchase_account_on_cash\": defaultAccounts.cashPurchase,\n            \"default_purchase_account_on_credit\": defaultAccounts.creditPurchase,\n            \"default_purchase_account_on_bank\": defaultAccounts.bankPurchase,\n            \"default_purchase_account_on_transfer\": defaultAccounts.transferPurchase,\n            \"default_purchase_account_on_pre_paid\": defaultAccounts.prepaidPurchase,\n            \"default_invoice_account_on_cash\": defaultAccounts.cashSales,\n            \"default_invoice_account_on_bank\": defaultAccounts.bankSales,\n            \"default_invoice_account_on_transfer\": defaultAccounts.transferSales,\n            \"default_invoice_account_on_pre_paid\": defaultAccounts.prepaidSales,\n            \"default_invoice_account_on_credit\": defaultAccounts.creditSales,\n\n            \"default_purchase_action_on_cash_is_add\": { state: isAdd.cashPurchase },\n            \"default_purchase_action_on_credit_is_add\": { state: isAdd.creditPurchase },\n            \"default_purchase_action_on_bank_is_add\": { state: isAdd.bankPurchase, },\n            \"default_purchase_action_on_transfer_is_add\": { state: isAdd.transferPurchase },\n            \"default_purchase_action_on_pre_paid_is_add\": { state: isAdd.prepaidPurchase },\n            \"default_invoice_action_on_cash_is_add\": { state: isAdd.cashSales },\n            \"default_invoice_action_on_credit_is_add\": { state: isAdd.creditSales },\n            \"default_invoice_action_on_bank_is_add\": { state: isAdd.bankSales },\n            \"default_invoice_action_on_transfer_is_add\": { state: isAdd.transferSales },\n            \"default_invoice_action_on_pre_paid_is_add\": { state: isAdd.prepaidSales },\n\n            \"default_purchase_action_on_selected_account\": { state: isAdd.purchaseSelected },\n            \"default_invoice_action_on_selected_account\": { state: isAdd.salesSelected },\n\n            \"default_account_qk_sales\": settingsData.defaultQuickSalesAccount\n\n        }\n        console.log(JSON.stringify(requestJson));\n        updateAccountingSettings(requestJson)\n            .then((res) => {\n                setSubmitting(false)\n                if (res.json.status) {\n                    Jhilikka.fire({ icon: 'success', title: 'Accounting Settings updated successfully!', background: '#dffff0' })\n                } else {\n                    Jhilikka.fire({ icon: 'error', title: res.json.error, background: '#ffe5de' })\n                }\n            }).catch((err) => {\n                setSubmitting(false)\n                console.log(err)\n            });\n    }\n\n    const isAddKeys = Object.keys(isAdd);\n\n    return (\n        <Aux>\n            <Row style={{ fontSize: '0.925em' }}>\n                <Col>\n                    <Row>\n\n                        {Object.keys(defaultAccounts).filter((key, index) => index % 2 === 0)\n                            .map((key, index) => {\n\n                                const checkedLabel = isAddLabel[index];\n                                const checkedValue = isAdd[Object.keys(isAdd)[index]]\n\n                                return <Col key={index} md={6}>\n                                    <FormGroup>\n                                        <Form.Label>{defaultAccountsLabel[index]}</Form.Label>\n                                        <AsyncSelect\n                                            defaultOptions={defaultAccountOptions}\n                                            value={defaultAccounts[key] ? { label: defaultAccounts[`${key}Name`], value: defaultAccounts[key] } : null}\n                                            onChange={(account) => _selectedAccountChange(key, account)}\n                                            loadOptions={loadAccountOptions}\n                                            placeholder='Select...'\n                                            onInputChange={_accountInputChange}\n                                            components={{\n                                                MenuList: CustomSelectMenuList,\n                                            }}\n                                            onMenuScrollToBottom={_scrollAccountMenuToBottom}\n                                            onMenuClose={() => {\n                                                store.dispatch({ type: RESET_FETCH_MORE_OPTIONS })\n                                                store.dispatch({ type: SET_IS_MENU_OPEN, payload: ['acc', false] })\n                                            }}\n                                            onMenuOpen={() => {\n                                                store.dispatch({ type: SET_IS_MENU_OPEN, payload: ['acc', true] })\n                                            }}\n                                        />\n                                        <ErrorBody>{errors[key] ? errors[key] : null}</ErrorBody>\n                                        <div className=\"checkbox checkbox-fill d-inline \">\n                                            <input checked={checkedValue} onChange={(e) => _checkedChange(e, isAddKeys[index])} type=\"checkbox\" name={`checkbox${index}`} id={`checkbox${index}`} />\n                                            <label htmlFor={`checkbox${index}`} className=\"cr mt-2\">{checkedLabel}</label>\n                                        </div>\n                                    </FormGroup>\n                                </Col>\n                            })}\n\n\n\n                        <Col md={6}>\n                            <div className=\"checkbox checkbox-fill d-inline \">\n                                <input checked={isAdd[isAddKeys[isAddKeys.length - 2]]} onChange={(e) => _checkedChange(e, isAddKeys[isAddKeys.length - 2])} type=\"checkbox\" name={`checkbox-ll`} id={`checkbox-ll`} />\n                                <label htmlFor={`checkbox-ll`} className=\"cr mt-2\">Selected Account on Purchase is Debit</label>\n                            </div>\n                        </Col>\n\n                        <Col md={6}>\n                            <div className=\"checkbox checkbox-fill d-inline \">\n                                <input checked={isAdd[isAddKeys[isAddKeys.length - 1]]} onChange={(e) => _checkedChange(e, isAddKeys[isAddKeys.length - 1])} type=\"checkbox\" name={`checkbox1`} id={`checkbox-l`} />\n                                <label htmlFor={`checkbox-l`} className=\"cr mt-2\">Selected Account on Sales is Debit</label>\n                            </div>\n                        </Col>\n                        <Col md={6}>\n\n                            <Form.Group  >\n                                <Form.Label className=\"mt-3\">Default Account of Payment on Quick Sales </Form.Label>\n                                <AsyncSelect\n                                    value={{ label: settingsData.defaultQuickSalesAccountName, value: settingsData.defaultQuickSalesAccount }}\n                                    onChange={_selectedQuickSalesAccountChange}\n                                    loadOptions={loadAccountOptions}\n                                    placeholder='Start typing'\n\n                                />\n                                <ErrorBody>{errors.defaultQuickSalesAccount}</ErrorBody>\n                            </Form.Group>\n                        </Col>\n\n                    </Row>\n                    <div className=\"d-flex justify-content-end\" >\n                        <Button\n                            disabled={submitting}\n                            variant=\"primary\"\n                            onClick={_submit}\n                        >\n                            {submitting ? <><i className=\"fa fa-spinner text-c-white f-15 fa-pulse m-l-1\"></i>Submitting</> : 'Submit'}\n\n                        </Button>\n                    </div>\n\n                </Col>\n            </Row>\n        </Aux>\n    );\n}\n\nexport default Accounting;\n","import React from 'react';\nimport { Row, Col, Card, Form, Button, InputGroup, FormControl, DropdownButton, Dropdown } from 'react-bootstrap';\nimport DatePicker from 'react-datepicker';\nimport AsyncSelect from 'react-select/async'\n\n\nimport Aux from \"../../hoc/_Aux\";\n\n\nimport ErrorBody from '../../App/components/Reusables/ErrorBody';\nimport Jhilikka from '../../App/components/Reusables/Jhilikka';\nimport { getGeneralSettings, updateGeneralSettings, getSalesSettings, updateSalesSettings } from '../../api/settings';\nimport { validateSalesSettings } from '../../validation/settings';\nimport { getPlaces } from '../../api/inventory/placeApi';\nimport { getTaxes } from '../../api/misc';\nimport { getCustomers } from '../../api/sales/customer';\nimport CustomSelectMenuList from '../../App/components/Reusables/CustomSelectMenuList';\nimport DEMO from '../../globals/constant';\nimport store from '../../redux/store';\nimport { RESET_FETCH_MORE_OPTIONS, SET_FETCH_MORE_OPTIONS, SET_IS_MENU_OPEN } from '../../redux/actions/types';\n\nconst Sales = (props) => {\n    const [submitting, setSubmitting] = React.useState(false)\n    const [taxesLoading, setTaxesLoading] = React.useState(true);\n    const [placesLoading, setPlacesLoading] = React.useState(true);\n    const [taxesArr, setTaxesArr] = React.useState([]);\n    const [placesArr, setPlacessArr] = React.useState([]);\n    const [settingsData, setSettingsData] = React.useState({\n        defaultPlace: '',\n        defaultVat: '',\n        defaultCustomerQuickSales: '',\n        defaultCustomerNameQuickSales: '',\n    })\n\n\n    const [customerInputText, setCustomerInputText] = React.useState('')\n    const [customerOptionsMaxLength, setCustomerOptionsMaxLength] = React.useState(0)\n    const [defaultCustomerOptions, setDefaultCustomerOptions] = React.useState([])\n    const [customerSearchMode, setCustomerSearchMode] = React.useState('static')\n\n\n    const [errors, setErrors] = React.useState({});\n\n\n\n    const getCustomers_ = async (signal) => {\n        await getCustomers({\n            \"action\": 'get',\n            filter: 'none',\n            start: defaultCustomerOptions.length,\n            end: defaultCustomerOptions.length + DEMO.INSTANCE_PER_LOAD\n        }, signal)\n            .then(res => {\n                console.log('here is one', res);\n                if (res.json.status) {\n                    setDefaultCustomerOptions([\n                        ...defaultCustomerOptions,\n                        ...res.json.customers.map(instance => ({ label: `${instance.first_name} ${instance.middle_name} ${instance.last_name}`, value: instance.id }))\n                    ]);\n                    setCustomerOptionsMaxLength(res.json.count)\n                    store.dispatch({\n                        type: SET_FETCH_MORE_OPTIONS,\n                        payload: ['fetchMoreOptionsCustomers', false]\n                    })\n                } else {\n                    Jhilikka.fire({ icon: 'error', title: res.json.error, background: '#ffe5de' })\n                }\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n\n\n    React.useEffect(() => {\n        const controller = new AbortController();\n\n        getCustomers_(controller.signal)\n\n        getSalesSettings(null, controller.signal)\n            .then(res => {\n                console.log(res);\n                if (res.json.status) {\n                    const settings = res.json.settings;\n                    const details = res.json.details;\n                    setSettingsData({\n                        ...settingsData,\n                        defaultPlace: settings.default_place_to_sold_from,\n                        defaultVat: settings.default_vat_tax,\n                        defaultCustomerQuickSales: details.default_customer_qk_sales[0].id,\n                        defaultCustomerNameQuickSales: details.default_customer_qk_sales[0].name,\n                    })\n                }\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        //get all taxes\n        getTaxes({\n            \"action\": \"get\",\n            \"filter\": \"none\",\n            \"start\": 0,\n            \"end\": 999999,\n        }, controller.signal)\n            .then((res) => {\n                console.log(res);\n                if (res.json.status) {\n                    setTaxesArr(res.json.taxes);\n                    setTaxesLoading(false)\n                } else { Jhilikka.fire({ icon: 'error', title: res.json.error, background: '#ffe5de' }) }\n            })\n            .catch((err) => {\n                console.log(err)\n            });\n\n        //get all places\n        getPlaces({\n            \"action\": \"get\",\n            \"filter\": \"none\",\n            \"start\": 0,\n            \"end\": 999999,\n        }, controller.signal)\n            .then((res) => {\n                console.log(res)\n                if (res.json.status) {\n                    setPlacessArr(res.json.places);\n                    setPlacesLoading(false)\n                } else { Jhilikka.fire({ icon: 'error', title: res.json.error, background: '#ffe5de' }) }\n            })\n            .catch((err) => {\n                console.log(err)\n            });\n\n        return () => controller.abort();\n    }, []);\n\n\n\n    const loadCustomerOptions = async (inputText) => {\n        const requestJson = { action: 'get', filter: 'name', name: inputText, start: 0, end: 50 }\n        return getCustomers(requestJson)\n            .then((res) => {\n                console.log(res);\n                if (res.json.status) {\n                    return res.json.customers.map((ven, index) => ({ label: `${ven.first_name} ${ven.middle_name || ''} ${ven.last_name}`, value: ven.id }));\n                } else { Jhilikka.fire({ icon: 'error', title: res.json.error, background: '#ffe5de' }) }\n            }).catch((err) => {\n                console.log(err)\n            });\n    }\n\n\n    const _customerInputChange = (inputText) => {\n        setCustomerInputText(inputText)\n    }\n\n    const _scrollCustomerMenuToBottom = (e) => {\n        e.preventDefault();\n        console.log(customerOptionsMaxLength, defaultCustomerOptions.length)\n        if (customerOptionsMaxLength > defaultCustomerOptions.length && !customerInputText) {\n            store.dispatch({\n                type: SET_FETCH_MORE_OPTIONS,\n                payload: ['fetchMoreOptionsCustomers', true]\n            })\n            getCustomers_();\n        }\n    }\n\n    const _selectedCustomerChange = cus => {\n        setErrors({ ...errors, defaultCustomerQuickSales: '' })\n        setSettingsData({ ...settingsData, defaultCustomerQuickSales: cus.value, defaultCustomerNameQuickSales: cus.label })\n    };\n\n    const _settingsDataChange = (e) => {\n        setErrors({ ...errors, [e.target.name]: '' })\n\n        setSettingsData({\n            ...settingsData,\n            [e.target.name]: e.target.value\n        })\n    }\n\n\n    const _submit = () => {\n\n        const { isValid, errors } = validateSalesSettings(settingsData);\n\n        if (!isValid) {\n            console.log(errors);\n            setErrors({ ...errors })\n            return;\n        };\n\n        setSubmitting(true)\n        //if no errros api call\n        const requestJson = {\n            \"action\": \"update\",\n            \"default_place_to_sold_from\": settingsData.defaultPlace,\n            \"default_vat_tax\": settingsData.defaultVat,\n            \"default_customer_qk_sales\": settingsData.defaultCustomerQuickSales\n        }\n        console.log(JSON.stringify(requestJson));\n        updateSalesSettings(requestJson)\n            .then((res) => {\n                setSubmitting(false)\n                if (res.json.status) {\n                    Jhilikka.fire({ icon: 'success', title: 'Sales Settings updated successfully!', background: '#dffff0' })\n                } else {\n                    Jhilikka.fire({ icon: 'error', title: res.json.error, background: '#ffe5de' })\n                }\n            }).catch((err) => {\n                setSubmitting(false)\n                console.log(err)\n            });\n    }\n\n    return (\n        <Aux>\n            <Row>\n                <Col>\n                    <Row>\n\n                        <Col md={6}>\n                            <Form.Group  >\n                                <Form.Label>Default Place of Sale*</Form.Label>\n                                <Form.Control name=\"defaultPlace\" value={settingsData.defaultPlace} onChange={_settingsDataChange} as=\"select\">\n                                    <option value='' disabled >{placesLoading ? 'Loading...' : 'Select'}</option>\n                                    {placesArr.map((instance, index) => {\n                                        return <option key={index} value={instance.id} >{instance.name}</option>\n                                    })}\n\n                                </Form.Control>\n                                <ErrorBody>{errors.defaultPlace}</ErrorBody>\n                            </Form.Group>\n                        </Col>\n\n                        <Col md={6}>\n                            <Form.Group  >\n                                <Form.Label>Default VAT Applied*</Form.Label>\n                                <Form.Control name=\"defaultVat\" value={settingsData.defaultVat} onChange={_settingsDataChange} as=\"select\">\n                                    <option value='' disabled >{taxesLoading ? 'Loading...' : 'Select'}</option>\n                                    {taxesArr.map((instance, index) => {\n                                        return <option key={index} value={instance.id} >\n                                            {instance.name} ({instance.tax_type === 'percent' ? instance.rate + \"%\" : 'Rs. ' + instance.rate})\n                                        </option>\n                                    })}\n                                </Form.Control>\n                                <ErrorBody>{errors.defaultVat}</ErrorBody>\n                            </Form.Group>\n                        </Col>\n\n\n                        <Col md={6}>\n                            <Form.Group  >\n                                <Form.Label>Default Customer on Quick Sales</Form.Label>\n                                <AsyncSelect\n                                    defaultOptions={defaultCustomerOptions}\n                                    value={{ label: settingsData.defaultCustomerNameQuickSales, value: settingsData.defaultCustomerQuickSales }}\n                                    onChange={_selectedCustomerChange}\n                                    loadOptions={loadCustomerOptions}\n                                    onChange={_selectedCustomerChange}\n                                    onInputChange={_customerInputChange}\n                                    components={{\n                                        MenuList: CustomSelectMenuList,\n                                    }}\n                                    onMenuScrollToBottom={_scrollCustomerMenuToBottom}\n                                    onMenuClose={() => {\n                                        store.dispatch({ type: RESET_FETCH_MORE_OPTIONS })\n                                        store.dispatch({ type: SET_IS_MENU_OPEN, payload: ['customer', false] })\n                                    }}\n                                    onMenuOpen={() => {\n                                        store.dispatch({ type: SET_IS_MENU_OPEN, payload: ['customer', true] })\n                                    }}\n                                />\n                                <ErrorBody>{errors.defaultCustomerQuickSales}</ErrorBody>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <div className=\"d-flex justify-content-end\" >\n                        <Button\n                            disabled={submitting}\n                            variant=\"primary\"\n                            onClick={_submit}\n                        >\n                            {submitting ? <><i className=\"fa fa-spinner text-c-white f-15 fa-pulse m-l-1\"></i>Submitting</> : 'Submit'}\n                        </Button>\n                    </div>\n\n                </Col>\n            </Row>\n        </Aux>\n    );\n}\n\nexport default Sales;\n","import React from 'react';\nimport { Row, Col, Card, Form, Button, InputGroup, FormControl, DropdownButton, Dropdown } from 'react-bootstrap';\nimport DatePicker from 'react-datepicker';\n\n\nimport Aux from \"../../hoc/_Aux\";\n\n\nimport ErrorBody from '../../App/components/Reusables/ErrorBody';\nimport Jhilikka from '../../App/components/Reusables/Jhilikka';\nimport { getGeneralSettings, updateGeneralSettings, getPaymentSettings, updatePaymentSettings } from '../../api/settings';\nimport { validateGeneralSettings, validatePaymentSettings } from '../../validation/settings';\nimport { getPaymentMethods } from '../../api/payment/payment';\n\nconst Payment = (props) => {\n    const [submitting, setSubmitting] = React.useState(false)\n    const [methodsLoading, setMethodsLoading] = React.useState(true);\n    const [methodsArr, setMethodsArr] = React.useState([]);\n    const [settingsData, setSettingsData] = React.useState({\n        defaultGiftCardPaymentMethod: '',\n        defaultPaymentMethodQuickSales: '',\n    })\n    const [errors, setErrors] = React.useState({});\n\n\n    React.useEffect(() => {\n        const controller = new AbortController();\n        getPaymentSettings(null, controller.signal)\n            .then(res => {\n                console.log(res);\n                if (res.json.status) {\n                    const settings = res.json.settings;\n                    setSettingsData({\n                        ...settingsData,\n                        defaultGiftCardPaymentMethod: settings.default_gitf_card_payment_method,\n                        defaultPaymentMethodQuickSales: settings.default_payment_method_qk_sales,\n                    })\n                }\n            })\n            .catch(err => {\n                console.log(err)\n            })\n\n        //get all payment methods\n        getPaymentMethods({ action: 'get' }, controller.signal)\n            .then(res => {\n                console.log(res);\n                if (res.json.status) {\n                    setMethodsArr([...res.json.payment_methods]);\n                    setMethodsLoading(false)\n                } else {\n                    Jhilikka.fire({ icon: 'error', title: res.json.error, background: '#ffe5de' })\n                }\n            })\n            .catch(err => {\n                console.log(err);\n            })\n        return () => controller.abort();\n    }, []);\n\n\n    const _settingsDataChange = (e) => {\n        setErrors({ ...errors, [e.target.name]: '' })\n\n        setSettingsData({\n            ...settingsData,\n            [e.target.name]: e.target.value\n        })\n    }\n\n\n    const _submit = () => {\n\n        const { isValid, errors } = validatePaymentSettings(settingsData);\n\n        if (!isValid) {\n            console.log(errors);\n            setErrors({ ...errors })\n            return;\n        };\n        setSubmitting(true)\n        //if no errros api call\n        const requestJson = {\n            \"action\": \"update\",\n            \"default_gitf_card_payment_method\": settingsData.defaultGiftCardPaymentMethod || null,\n            \"default_payment_method_qk_sales\": settingsData.defaultPaymentMethodQuickSales || null\n        }\n        console.log(JSON.stringify(requestJson));\n        updatePaymentSettings(requestJson)\n            .then((res) => {\n                setSubmitting(false)\n                if (res.json.status) {\n                    Jhilikka.fire({ icon: 'success', title: 'Payment settings updated successfully!', background: '#dffff0' })\n                } else {\n                    Jhilikka.fire({ icon: 'error', title: res.json.error, background: '#ffe5de' })\n                }\n            }).catch((err) => {\n                setSubmitting(false)\n                console.log(err)\n            });\n    }\n\n    return (\n        <Aux>\n            <Row>\n                <Col>\n                    <Row>\n                        <Col md={6}>\n                            <Form.Group  >\n                                <Form.Label>Applied Payment Method When Paid with Gift Card*</Form.Label>\n                                <Form.Control name=\"defaultGiftCardPaymentMethod\" value={settingsData.defaultGiftCardPaymentMethod} onChange={_settingsDataChange} as=\"select\">\n                                    <option value='' disabled >{methodsLoading ? 'Loading...' : 'Select'}</option>\n                                    {methodsArr.map((instance, index) => {\n                                        return <option key={index} value={instance.id} >{instance.name}</option>\n                                    })}\n                                </Form.Control>\n                                <ErrorBody>{errors.defaultGiftCardPaymentMethod}</ErrorBody>\n                            </Form.Group>\n                        </Col>\n                        <Col md={6}>\n                            <Form.Group  >\n                                <Form.Label>Default Payment for quick sales*</Form.Label>\n                                <Form.Control name=\"defaultPaymentMethodQuickSales\" value={settingsData.defaultPaymentMethodQuickSales} onChange={_settingsDataChange} as=\"select\">\n                                    <option value='' disabled >{methodsLoading ? 'Loading...' : 'Select'}</option>\n                                    {methodsArr.map((instance, index) => {\n                                        return <option key={index} value={instance.id} >{instance.name}</option>\n                                    })}\n                                </Form.Control>\n                                <ErrorBody>{errors.defaultPaymentMethodQuickSales}</ErrorBody>\n                            </Form.Group>\n                        </Col>\n\n\n\n                    </Row>\n                    <div className=\"d-flex justify-content-end\" >\n                        <Button\n                            disabled={submitting}\n                            variant=\"primary\"\n                            onClick={_submit}\n                        >\n                            {submitting ? <><i className=\"fa fa-spinner text-c-white f-15 fa-pulse m-l-1\"></i>Submitting</> : 'Submit'}\n                        </Button>\n                    </div>\n\n                </Col>\n            </Row>\n        </Aux>\n    );\n}\n\nexport default Payment;\n","import React from 'react'\nimport { Row } from 'react-bootstrap';\nimport { NavLink, useRouteMatch, Route, Redirect, Switch } from 'react-router-dom';\nimport General from './General';\nimport AccountingSettings from './Accounting';\nimport SalesSettings from './Sales';\nimport PaymentSettings from './Payment';\nimport NotificationSettings from './Notification';\n\nconst settingsRoutes = [\n    {\n        path: '/general-settings',\n        pathname: '/general-settings',\n        title: 'General',\n        component: General\n    },\n    {\n        path: '/sales-settings',\n        pathname: '/sales-settings',\n        title: 'Sales',\n        component: SalesSettings\n    },\n\n    {\n        path: '/payment-settings',\n        pathname: '/payment-settings',\n        title: 'Payment',\n        component: PaymentSettings\n    },\n    {\n        path: '/accounting-settings',\n        pathname: '/accounting-settings',\n        title: 'Accounting',\n        component: AccountingSettings\n    },\n    {\n        path: '/notification-settings',\n        pathname: '/notification-settings',\n        title: 'Notification',\n        component: NotificationSettings\n    },\n]\n\nfunction Settings(props) {\n\n    let { path, url } = useRouteMatch();\n\n    const pathname1 = props.location.pathname.split('/')[2];\n\n\n    React.useEffect(() => {\n        // props.history.push(`${url}/general-settings`);\n        // console.log('somethignis changed')\n    }, [url]);\n\n    const SettingsNav = settingsRoutes.map((instance, index) => {\n        const className = pathname1 === instance.pathname ?\n            `nav-item nav-link active nav-link2` :\n            `nav-item nav-link nav-link2`\n        return (\n            <NavLink\n                key={index}\n                to={`${url}${instance.pathname}`}\n                className={className}\n            >\n                <b>{instance.title}</b>\n            </NavLink>)\n    });\n\n    const Routes = settingsRoutes.map((route, index) => {\n        return <Route\n            key={index}\n            path={`${url}${route.pathname}`}\n            name={route.name}\n            component={propps => (\n                <route.component {...propps} />\n            )} />\n    })\n\n    return (\n        <>\n            <Row className=\"d-flex                                                                              justify-content-between pageHead\" >\n                <h4 className=\"m-b-20\">Settings</h4>\n                <div>\n\n                </div>\n            </Row>\n            <nav className=\"nav nav-tabs\" role=\"tablist\">\n                {SettingsNav}\n            </nav>\n            <div className=\"tab-content\">\n                <Switch>\n                    {Routes}\n                    <Redirect from='/settings' to='/settings/general-settings' />\n                </Switch>\n                {/* <Redirect exact from=\"/settings\" to='/settings/general-settings' /> */}\n            </div>\n        </>\n    )\n}\n\nexport default Settings;\n","import React from 'react';\nimport { Row, Col, Card, Form, Button, InputGroup, FormControl, DropdownButton, Dropdown } from 'react-bootstrap';\nimport Select from 'react-select';\n\nimport Aux from \"../../hoc/_Aux\";\n\n\nimport ErrorBody from '../../App/components/Reusables/ErrorBody';\nimport Jhilikka from '../../App/components/Reusables/Jhilikka';\nimport { getNotificationSettings, updateNotificationSettings } from '../../api/settings';\nimport { validateGeneralSettings, validatePaymentSettings } from '../../validation/settings';\nimport { getRoles } from '../../api/userManagement/roles';\nimport isEmpty from '../../validation/isEmpty';\nimport { error } from 'jquery';\n\nconst Notification = (props) => {\n    const [submitting, setSubmitting] = React.useState(false)\n    const [settingsData, setSettingsData] = React.useState([]);\n    const [rolesArr, setRolesArr] = React.useState([]);\n    const [errors, setErrors] = React.useState({});\n\n\n    React.useEffect(() => {\n        const controller = new AbortController();\n        getNotificationSettings(null, controller.signal)\n            .then(res => {\n                console.log(res);\n                if (res.json.status) {\n\n                    const settings = res.json.settings;\n                    for (let i in settings) {\n                        for (let j in settings[i].roles) {\n                            settings[i].roles[j] = {\n                                label: settings[i].roles[j].name,\n                                value: settings[i].roles[j].id,\n                            }\n                        }\n                    }\n\n                    setSettingsData(settings)\n                } else { Jhilikka.fire({ icon: 'error', title: res.json.error, background: '#ffe5de' }) }\n            })\n            .catch(err => {\n                console.log(err)\n            })\n\n        getRoles({\n            \"action\": \"get\",\n            \"filter\": \"none\",\n            \"start\": 0,\n            \"end\": 999999,\n        }, controller.signal)\n            .then((res) => {\n                console.log(res);\n                if (res.json.status) {\n                    setRolesArr(\n                        res.json.roles.map((instance, index) => {\n                            return { value: instance.id, label: instance.name }\n                        })\n                    );\n                } else { Jhilikka.fire({ icon: 'error', title: res.json.error, background: '#ffe5de' }) }\n            })\n            .catch((err) => {\n                console.log(err)\n            });\n        return () => controller.abort();\n    }, []);\n\n\n    const _settingsDataChange = (e) => {\n        setErrors({ ...errors, [e.target.name]: '' })\n\n        setSettingsData({\n            ...settingsData,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    const _selectedRolesChange = (roles, row) => {\n        roles = roles || [];\n        const tempSettingsData = [...settingsData];\n        tempSettingsData[row].roles = roles;\n        tempSettingsData[row].roles_to_get_notified = roles.map(role => role.value);\n        setSettingsData(tempSettingsData);\n    }\n\n\n    console.log(settingsData)\n\n    const _submit = () => {\n        const { isValid, errors } = validatePaymentSettings(settingsData);\n        class Exception {\n            constructor(msg) {\n                this.type = 'custom';\n                this.message = msg;\n            }\n        }\n\n        if (!isValid) {\n            console.log(errors);\n            setErrors({ ...errors })\n            return;\n        };\n\n        setSubmitting(true)\n        //if no errros api call\n        const requestJsons = [];\n        settingsData.forEach((setting) => {\n            requestJsons.push({\n                \"action\": \"update\",\n                \"notification_setting_id\": setting.id,\n                \"roles\": setting.roles_to_get_notified,\n            });\n        });\n\n        console.log(JSON.stringify(requestJsons))\n\n        Promise.all(requestJsons.map(async requestJson => await updateNotificationSettings(requestJson)))\n            .then((ress) => {\n                setSubmitting(false)\n                console.log(ress)\n                for (let res of ress) {\n                    console.log(res.json.status)\n                    if (!res.json.status) throw new Exception(res.json.error);\n                }\n                Jhilikka.fire({ icon: 'success', title: 'Notification settings updated successfully!', background: '#dffff0' })\n            })\n            .catch(err => {\n                setSubmitting(false)\n                console.log(err)\n                if (err.type === 'custom') {\n                    Jhilikka.fire({ icon: 'error', title: err.message, background: '#ffe5de' })\n                }\n            })\n\n        // for (let requestJson of requestJsons) {\n        //     updateNotificationSettings(requestJson)\n        //         .then(res => {\n        //             console.log(res)\n        //             if (res.json.status) {\n        //                 console.log('yes')\n        //             } else Jhilikka.fire({ icon: 'error', title: res.json.error, background: '#ffe5de' })\n        //         })\n        //         .catch(err => console.log(err))\n        // }\n\n\n        // .then((res) => {\n        // if (res.json.status) {\n        //     Jhilikka.fire({ icon: 'success', title: 'Payment settings updated successfully!', background: '#dffff0' })\n        // } else {\n        //     Jhilikka.fire({ icon: 'error', title: res.json.error, background: '#ffe5de' })\n        // }\n        //     }).catch ((err) => {\n        //         console.log(err)\n        //     });\n    }\n    console.log(settingsData)\n    return (\n        <Aux>\n            <Row>\n                <Col>\n                    <Row>\n\n                        {\n                            settingsData.map((instance, index) => {\n                                return <Col key={index} md={6}>\n                                    <Form.Label>Roles that can get Notifications of {instance.model}</Form.Label>\n                                    <Select\n                                        value={instance.roles}\n                                        onChange={(instances) => _selectedRolesChange(instances, index)}\n                                        options={rolesArr}\n                                        placeholder='Select'\n                                        closeMenuOnSelect={false}\n                                        isMulti\n                                    />\n                                    <ErrorBody>{errors.role}</ErrorBody>\n                                </Col>\n                            })\n                        }\n\n\n\n                    </Row>\n                    <div className=\"d-flex justify-content-end mt-2\" >\n                        <Button\n                            disabled={submitting}\n                            variant=\"primary\"\n                            onClick={_submit}\n                        >\n                            {submitting ? <><i className=\"fa fa-spinner text-c-white f-15 fa-pulse m-l-1\"></i>Submitting</> : 'Submit'}\n\n                        </Button>\n                    </div>\n\n                </Col>\n            </Row>\n        </Aux>\n    );\n}\n\nexport default Notification;\n","import React from 'react';\n\nimport { Form } from 'react-bootstrap';\nimport isEmpty from '../../../validation/isEmpty'\n\nconst ErrorBody = (props) => {\n\n    if (isEmpty(props.children)) {\n        return <span></span>\n    }\n\n    return (\n        <>\n            <Form.Text style={{ color: 'red' }} >\n                {props.children}\n            </Form.Text>\n        </>\n    );\n}\n\n\nexport default ErrorBody;\n\n\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar Col = React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'col');\n  var spans = [];\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var span, offset, order;\n\n    if (propValue != null && typeof propValue === 'object') {\n      var _propValue$span = propValue.span;\n      span = _propValue$span === void 0 ? true : _propValue$span;\n      offset = propValue.offset;\n      order = propValue.order;\n    } else {\n      span = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (span != null) spans.push(span === true ? \"\" + prefix + infix : \"\" + prefix + infix + \"-\" + span);\n    if (order != null) classes.push(\"order\" + infix + \"-\" + order);\n    if (offset != null) classes.push(\"offset\" + infix + \"-\" + offset);\n  });\n\n  if (!spans.length) {\n    spans.push(prefix); // plain 'col'\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames.apply(void 0, [className].concat(spans, classes))\n  }));\n});\nCol.displayName = 'Col';\nexport default Col;","import { baseRequest } from './base';\n\n\nconst getDiscounts = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/sales/discounts/get', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\n\n\nconst deleteDiscounts = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/sales/discounts/delete', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\n\nconst createDiscount = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/sales/discount/add', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\n\n\nconst getDiscount = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/sales/discount/get', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\n\nconst updateDiscount = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/sales/discount/update', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\n\n\n\nconst getTaxes = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/sales/taxes/get', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\n\n\nconst deleteTaxes = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/sales/taxes/delete', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\n\nconst createTax = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/sales/tax/add', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\n\n\nconst getTax = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/sales/tax/get', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\n\nconst updateTax = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/sales/tax/update', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\n\nconst getPurchaseOrderStatus = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/inventory/purchaseorders/status', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\n\n\nconst getPlacements = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/inventory/placements/get', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\n\n\nconst getPlacement = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/inventory/placement/get', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\n\nconst createPlacement = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/inventory/placements/assign', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n}\n\nconst deletePlacement = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/inventory/placements/assign', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n}\n\nconst updatePlacement = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/inventory/placements/assign', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n}\n\n\nconst getExportFields = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/inventory/export', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n}\n\nconst getExport = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/inventory/export', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n}\n\n\nconst getCountries = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/user/countries/get ', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n}\n\n\n\n\n\nexport {\n  getExport,\n  getExportFields,\n\n  getPlacements,\n  getPlacement,\n  createPlacement,\n  updatePlacement,\n  deletePlacement,\n  getPurchaseOrderStatus,\n  getDiscounts,\n  createDiscount,\n  deleteDiscounts,\n  updateDiscount,\n  getDiscount,\n  getTaxes,\n  createTax,\n  deleteTaxes,\n  updateTax,\n  getTax,\n\n  getCountries,\n}\n","import '@babel/runtime/helpers/esm/objectWithoutProperties';\nimport '@babel/runtime/helpers/esm/extends';\nimport '@babel/runtime/helpers/esm/toConsumableArray';\nimport '@babel/runtime/helpers/esm/objectSpread';\nimport _classCallCheck from '@babel/runtime/helpers/esm/classCallCheck';\nimport _createClass from '@babel/runtime/helpers/esm/createClass';\nimport _possibleConstructorReturn from '@babel/runtime/helpers/esm/possibleConstructorReturn';\nimport _getPrototypeOf from '@babel/runtime/helpers/esm/getPrototypeOf';\nimport _inherits from '@babel/runtime/helpers/esm/inherits';\nimport _assertThisInitialized from '@babel/runtime/helpers/esm/assertThisInitialized';\nimport _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport React, { Component } from 'react';\nimport memoizeOne from 'memoize-one';\nimport { CacheProvider } from '@emotion/core';\nimport 'react-dom';\nimport 'prop-types';\nimport '@babel/runtime/helpers/esm/typeof';\nimport './chunk-39d3fda8.browser.esm.js';\nexport { y as components } from './chunk-80640036.browser.esm.js';\nimport { S as Select } from './base/dist/react-select-cac0a5ae.browser.esm.js';\nexport { c as createFilter, a as defaultTheme, m as mergeStyles } from './base/dist/react-select-cac0a5ae.browser.esm.js';\nimport '@emotion/css';\nimport '@babel/runtime/helpers/esm/taggedTemplateLiteral';\nimport 'react-input-autosize';\nimport { m as manageState } from './chunk-b36baf1a.browser.esm.js';\nimport createCache from '@emotion/cache';\n\nvar NonceProvider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NonceProvider, _Component);\n\n  function NonceProvider(props) {\n    var _this;\n\n    _classCallCheck(this, NonceProvider);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NonceProvider).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"createEmotionCache\", function (nonce) {\n      return createCache({\n        nonce: nonce\n      });\n    });\n\n    _this.createEmotionCache = memoizeOne(_this.createEmotionCache);\n    return _this;\n  }\n\n  _createClass(NonceProvider, [{\n    key: \"render\",\n    value: function render() {\n      var emotionCache = this.createEmotionCache(this.props.nonce);\n      return React.createElement(CacheProvider, {\n        value: emotionCache\n      }, this.props.children);\n    }\n  }]);\n\n  return NonceProvider;\n}(Component);\n\nvar index = manageState(Select);\n\nexport default index;\nexport { NonceProvider };\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar defaultProps = {\n  noGutters: false\n};\nvar Row = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      noGutters = _ref.noGutters,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"noGutters\", \"as\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  var sizePrefix = decoratedBsPrefix + \"-cols\";\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      cols = propValue.cols;\n    } else {\n      cols = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (cols != null) classes.push(\"\" + sizePrefix + infix + \"-\" + cols);\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames.apply(void 0, [className, decoratedBsPrefix, noGutters && 'no-gutters'].concat(classes))\n  }));\n});\nRow.displayName = 'Row';\nRow.defaultProps = defaultProps;\nexport default Row;","import { baseRequest } from '../base';\n\nconst getTransactions = async (data, signal) => {\n    try {\n        return await baseRequest('api/v1/accounting/account/transactions/get', 'POST', data, signal);\n    } catch (e) {\n        alert(e)\n    }\n}\n\n\n\nconst getAccounts = async (data, signal) => {\n    try {\n        return await baseRequest('api/v1/accounting/accounts/get', 'POST', data, signal);\n    } catch (e) {\n        alert(e)\n    }\n};\n\n\nconst deleteAccounts = async (data, signal) => {\n    try {\n        return await baseRequest('api/v1/accounting/accounts/delete', 'POST', data, signal);\n    } catch (e) {\n        alert(e)\n    }\n};\n\nconst createAccount = async (data, signal) => {\n    try {\n        return await baseRequest('api/v1/accounting/account/add', 'POST', data, signal);\n    } catch (e) {\n        alert(e)\n    }\n};\n\n\nconst getAccount = async (data, signal) => {\n    try {\n        return await baseRequest('api/v1/accounting/account/get', 'POST', data, signal);\n    } catch (e) {\n        alert(e)\n    }\n};\n\n\nconst closeAccount = async (data, signal) => {\n    try {\n        return await baseRequest('api/v1/accounting/account/update', 'POST', data, signal);\n    } catch (e) {\n        alert(e)\n    }\n};\n\nconst updateAccount = async (data, signal) => {\n    try {\n        return await baseRequest('api/v1/accounting/account/update', 'POST', data, signal);\n    } catch (e) {\n        alert(e)\n    }\n};\nconst getAccountStatus = async (data, signal) => {\n    try {\n        return await baseRequest('api/v1/sales/invoices/status', 'POST', data, signal);\n    } catch (e) {\n        alert(e)\n    }\n};\n\nconst getAccountTypes = async (data, signal) => {\n    try {\n        return await baseRequest('api/v1/accounting/accounts/types/get', 'POST', data, signal);\n    } catch (e) {\n        alert(e)\n    }\n}\nconst createAccountType = async (data, signal) => {\n    try {\n        return await baseRequest('api/v1/accounting/accounts/type/add', 'POST', data, signal);\n    } catch (e) {\n        alert(e)\n    }\n}\nconst updateAccountType = async (data, signal) => {\n    try {\n        return await baseRequest('api/v1/accounting/accounts/type/update', 'POST', data, signal);\n    } catch (e) {\n        alert(e)\n    }\n}\nconst deleteAccountTypes = async (data, signal) => {\n    try {\n        return await baseRequest('api/v1/accounting/accounts/types/delete', 'POST', data, signal);\n    } catch (e) {\n        alert(e)\n    }\n}\n\n\n\n\n\nexport {\n    getTransactions,\n    getAccountStatus,\n    getAccounts,\n    createAccount,\n    deleteAccounts,\n    closeAccount,\n    updateAccount,\n    getAccount,\n    getAccountTypes,\n    createAccountType,\n    updateAccountType,\n    deleteAccountTypes,\n\n}\n","import { baseRequest } from '../base';\n// api for Invoices \n\nconst getCustomers = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/sales/customers/get', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\n\n\nconst deleteCustomers = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/sales/customers/delete', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\n\nconst createCustomer = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/sales/customer/add', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\n\n\nconst getCustomer = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/sales/customer/get', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\n\nconst updateCustomer = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/sales/customer/update', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\n\nconst getCustomerCategory = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/sales/customers/category', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\n\nexport { getCustomerCategory, getCustomers, createCustomer, deleteCustomers, updateCustomer, getCustomer }\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { components } from 'react-select';\nimport PropTypes from 'prop-types'\n\n\nconst CustomMenuList = props => {\n\n    let activeFetchMoreFor;\n\n    //findout which fetch options is to be used\n    for (let key in props.selectDropdown) {\n        if (props.selectDropdown[key]) {\n            activeFetchMoreFor = key;\n            break;\n        }\n    }\n\n\n    return (\n        <components.MenuList {...props}>\n            {props.children}\n\n\n            {props.selectDropdown[activeFetchMoreFor] ?\n                <div\n                    style={{\n                        padding: '8px 12px',\n                        backgroundColor: '#f4f7fad9',\n                    }}\n                >\n                    <i className=\"fa fa-spinner text-c-white f-15 fa-pulse mr-1\"></i>\n                    <b>Loading...</b>\n                </div>\n                : null\n            }\n\n\n        </components.MenuList>\n    );\n};\n\nCustomMenuList.propTypes = {\n    selectDropdown: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    selectDropdown: state.selectDropdown\n})\n\nexport default connect(mapStateToProps, {})(CustomMenuList)","import { baseRequest } from '../base';\n// api for items \n\nconst getPlaces = async (data, signal) => {\n    try {\n      return await baseRequest('api/v1/inventory/places/get','POST', data, signal);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  \n  const deletePlaces = async (data, signal) => {\n    try {\n      return await baseRequest('api/v1/inventory/places/delete','POST', data, signal);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const createPlace = async (data, signal) => {\n      try {\n        return await baseRequest('api/v1/inventory/place/add','POST', data, signal);\n      } catch(e){\n        alert(e)\n      }\n  };\n  \n  \n  const getPlace = async (data, signal) => {\n    try {\n      return await baseRequest('api/v1/inventory/place/get','POST', data, signal);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const updatePlace = async (data, signal) => {\n    try {\n      return await baseRequest('api/v1/inventory/place/update','POST', data, signal);\n    } catch(e){\n      alert(e)\n    }\n  };\n\n  const assignPlace = async (data, signal) => {\n    try { \n      return await  baseRequest('api/v1/inventory/places/assign','POST', data, signal);\n    } catch (e){\n      alert(e)\n    }\n  }\n  \nexport {getPlaces, createPlace, deletePlaces, updatePlace, getPlace, assignPlace}\n  ","import { baseRequest } from '../base'\n\n\n\n\nconst getRoles = async (data, signal) => {\n    try {\n        return await baseRequest(\"api/v1/user/roles/get\", \"POST\", data, signal);\n    } catch (e) {\n        alert(e);\n    }\n};\n\n\n\nconst getRole = async (data, signal) => {\n    try {\n        return await baseRequest(\"api/v1/user/role/get\", \"POST\", data, signal);\n    } catch (e) {\n        alert(e);\n    }\n};\n\n\n\nconst deleteRole = async (data, signal) => {\n    try {\n        return await baseRequest(\"api/v1/user/role/delete\", \"POST\", data, signal);\n    } catch (e) {\n        alert(e);\n    }\n};\n\n\n\nconst createRole = async (data, signal) => {\n    try {\n        return await baseRequest(\"api/v1/user/role/add\", \"POST\", data, signal);\n    } catch (e) {\n        alert(e);\n    }\n};\n\n\n\nconst updateRole = async (data, signal) => {\n    try {\n        return await baseRequest(\"api/v1/user/role/update\", \"POST\", data, signal);\n    } catch (e) {\n        alert(e);\n    }\n};\n\n\n\nconst getPowers = async (data, signal) => {\n    try {\n        return await baseRequest(\"api/v1/user/role/valid\", \"POST\", data, signal);\n    } catch (e) {\n        alert(e);\n    }\n};\n\n\n\nconst assignRole = async (data, signal) => {\n    try {\n        return await baseRequest(\"api/v1/user/role/assign\", \"POST\", data, signal);\n    } catch (e) {\n        alert(e);\n    }\n};\nexport {\n    getRoles,\n    getRole,\n    updateRole,\n    deleteRole,\n    createRole,\n    getPowers,\n    assignRole\n}","import { baseRequest } from '../base';\n\n\nconst getPaymentMethods = async (data, signal) => {\n    try {\n        return await baseRequest('api/v1/payment/methods/get', 'POST', data, signal)\n    } catch (e) {\n        alert(e)\n    }\n}\n\n\n\nconst createPayment = async (data, signal) => {\n    try {\n        return await baseRequest('api/v1/payment/add', 'POST', data, signal)\n    } catch (e) {\n        alert(e)\n    }\n}\n\nconst paybackCredit = async (data, signal) => {\n    try {\n        return await baseRequest('api/v1/payment/credit/pay', 'POST', data, signal)\n    } catch (e) {\n        alert(e)\n    }\n}\n\n\nconst getPayment = async (data, signal) => {\n    try {\n        return await baseRequest('api/v1/payment/get', 'POST', data, signal)\n    } catch (e) {\n        alert(e)\n    }\n}\n\nconst deletePayment = async (data, signal) => {\n    try {\n        return await baseRequest('api/v1/payment/delete', 'POST', data, signal)\n    } catch (e) {\n        alert(e)\n    }\n}\n\n\n\n\nconst validateGiftCard = async (data, signal) => {\n    try {\n        return await baseRequest('api/v1/payment/giftcard/validate', 'POST', data, signal)\n    } catch (e) {\n        alert(e)\n    }\n}\n\nconst doPayment = async (data, signal) => {\n    try {\n        return await baseRequest('api/v1/payment/do', 'POST', data, signal)\n    } catch (e) {\n        alert(e)\n    }\n}\n\n\n\nexport {\n    getPaymentMethods,\n    paybackCredit,\n    doPayment,\n    validateGiftCard,\n    createPayment,\n    getPayment,\n    deletePayment\n}\n"],"sourceRoot":""}