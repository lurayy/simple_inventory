{"version":3,"sources":["Pages/Dashboard/Components/CustomDateRanges.js","api/dashboard.js","Pages/Dashboard/Components/Graph.js","Pages/Dashboard/Components/AccountingSummary.js","Pages/Dashboard/Components/InventorySummary.js","Pages/Dashboard/Default.js","App/components/Reusables/Num.js"],"names":["defineds","startOfWeek","Date","endOfWeek","startOfLastWeek","addDays","endOfLastWeek","startOfToday","startOfDay","endOfToday","endOfDay","startOfYesterday","endOfYesterday","startOfMonth","endOfMonth","startOfLastMonth","addMonths","endOfLastMonth","startOfYear","endOfYear","startOfLastYear","addYears","endOfLastYear","staticRangeHandler","range","isSelected","definedRange","this","isSameDay","startDate","endDate","defaultStaticRanges","label","map","getAccountingSummary","data","signal","a","baseRequest","alert","getInventorySummary","getSalesSummary","graphDataModel","name","Sales","Purchases","Profit","amt","rangeModel","Math","max","Number","key","Graph","props","React","useState","dateRangeShowing","setDateRangeShowing","genuineRange","setGenuineRange","dateRange","setDateRange","graphData","setGraphData","getGraphData_","graphJson","then","res","console","log","json","status","temp","Object","keys","index","format","profit","purchase","sales","Jhilikka","fire","icon","title","error","background","catch","err","useEffect","controller","AbortController","abort","Row","Col","md","Card","Header","className","Title","as","onClick","style","padding","margin","marginLeft","toDateString","aria-hidden","Collapse","in","id","Body","editableDateInputs","ranges","staticRanges","onChange","selection","display","justifyContent","width","height","isEmpty","top","right","left","bottom","dataKey","strokeDasharray","type","strokeWidth","stroke","activeDot","r","AccountingSummary","revenue","revenueIncrease","expense","expenseIncrease","profitIncrease","summary","setSummary","accountingJson","date","today","toISOString","split","mainData","find","slice","length","revenue_increase","expense_increase","profit_increase","thisMonth","toLocaleDateString","month","xl","color","Num","role","aria-valuenow","aria-valuemin","aria-valuemax","InventorySummary","suma","getList","input","item","thumbnailImage","images","img","category","Image","src","DEMO","SERVER_URL","image","thumbnail","minWidth","objectFit","alt","history","push","cursor","stock","sold","BestSellingItemsList","most_sold_items","items","LowStockItemsList","low_stock_items","active_items","Tabs","defaultActiveKey","Tab","eventKey","Table","striped","responsive","colSpan","Dashboard","newNum","children","toLocaleString","toFixed"],"mappings":"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","file":"static/js/105.312ca1d3.chunk.js","sourcesContent":["import {\n  addDays,\n  endOfDay,\n  startOfDay,\n  startOfMonth,\n  endOfMonth,\n  addMonths,\n  startOfWeek,\n  endOfWeek,\n  isSameDay,\n  differenceInCalendarDays,\n  startOfYear,\n  endOfYear,\n  addYears,\n} from 'date-fns';\n\nconst defineds = {\n  startOfWeek: startOfWeek(new Date()),\n  endOfWeek: endOfWeek(new Date()),\n  startOfLastWeek: startOfWeek(addDays(new Date(), -7)),\n  endOfLastWeek: endOfWeek(addDays(new Date(), -7)),\n  startOfToday: startOfDay(new Date()),\n  endOfToday: endOfDay(new Date()),\n  startOfYesterday: startOfDay(addDays(new Date(), -1)),\n  endOfYesterday: endOfDay(addDays(new Date(), -1)),\n  startOfMonth: startOfMonth(new Date()),\n  endOfMonth: endOfMonth(new Date()),\n  startOfLastMonth: startOfMonth(addMonths(new Date(), -1)),\n  endOfLastMonth: endOfMonth(addMonths(new Date(), -1)),\n  startOfYear: startOfYear(new Date()),\n  endOfYear: endOfYear(new Date()),\n  startOfLastYear: startOfYear(addYears(new Date(), -1)),\n  endOfLastYear: endOfYear(addYears(new Date(), -1))\n};\n\nconst staticRangeHandler = {\n  range: {},\n  isSelected(range) {\n    const definedRange = this.range();\n    return (\n      isSameDay(range.startDate, definedRange.startDate) &&\n      isSameDay(range.endDate, definedRange.endDate)\n    );\n  },\n};\n\nexport function createStaticRanges(ranges) {\n  return ranges.map(range => ({ ...staticRangeHandler, ...range }));\n}\n\nexport const defaultStaticRanges = createStaticRanges([\n  {\n    label: 'This Week',\n    range: () => ({\n      startDate: defineds.startOfWeek,\n      endDate: defineds.endOfWeek,\n    }),\n  },\n  {\n    label: 'Last Week',\n    range: () => ({\n      startDate: defineds.startOfLastWeek,\n      endDate: defineds.endOfLastWeek,\n    }),\n  },\n  {\n    label: 'This month',\n    range: () => ({\n      startDate: defineds.startOfMonth,\n      endDate: defineds.endOfMonth,\n    }),\n  },\n  {\n    label: 'Last Month',\n    range: () => ({\n      startDate: defineds.startOfLastMonth,\n      endDate: defineds.endOfLastMonth,\n    }),\n  },\n  {\n    label: 'This Year',\n    range: () => ({\n      startDate: defineds.startOfYear,\n      endDate: defineds.endOfYear,\n    }),\n  },\n  {\n    label: 'Last Year',\n    range: () => ({\n      startDate: defineds.startOfLastYear,\n      endDate: defineds.endOfLastYear,\n    }),\n  },\n\n]);\n\nexport const defaultInputRanges = [\n  {\n    label: 'days up to today',\n    range(value) {\n      return {\n        startDate: addDays(defineds.startOfToday, (Math.max(Number(value), 1) - 1) * -1),\n        endDate: defineds.endOfToday,\n      };\n    },\n    getCurrentValue(range) {\n      if (!isSameDay(range.endDate, defineds.endOfToday)) return '-';\n      if (!range.startDate) return '∞';\n      return differenceInCalendarDays(defineds.endOfToday, range.startDate) + 1;\n    },\n  },\n  {\n    label: 'days starting today',\n    range(value) {\n      const today = new Date();\n      return {\n        startDate: today,\n        endDate: addDays(today, Math.max(Number(value), 1) - 1),\n      };\n    },\n    getCurrentValue(range) {\n      if (!isSameDay(range.startDate, defineds.startOfToday)) return '-';\n      if (!range.endDate) return '∞';\n      return differenceInCalendarDays(range.endDate, defineds.startOfToday) + 1;\n    },\n  },\n];","import { baseRequest } from './base';\n\nconst getAccountingSummary = async (data, signal) => {\n    try {\n        return await baseRequest('api/v1/accounting/summary', 'POST', data, signal);\n    } catch (e) {\n        alert(e)\n    }\n};\n\n\nconst getInventorySummary = async (data, signal) => {\n    try {\n        return await baseRequest('api/v1/inventory/summary', 'POST', data, signal);\n    } catch (e) {\n        alert(e)\n    }\n};\n\nconst getSalesSummary = async (data, signal) => {\n    try {\n        return await baseRequest('api/v1/sales/summary', 'POST', data, signal);\n    } catch (e) {\n        alert(e)\n    }\n};\n\n\nexport {\n    getAccountingSummary,\n    getInventorySummary,\n    getSalesSummary\n}","\nimport React from 'react';\n\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { Row, Col, Card, Collapse } from 'react-bootstrap';\n\nimport { DateRangePicker } from 'react-date-range';\nimport { defaultStaticRanges } from './CustomDateRanges';\nimport { getSalesSummary } from '../../../api/dashboard';\nimport Jhilikka from '../../../App/components/Reusables/Jhilikka';\nimport isEmpty from '../../../validation/isEmpty';\nimport {\n    addDays,\n    endOfDay,\n    startOfDay,\n    format\n} from 'date-fns';\nconst defineds = {\n    endOfToday: endOfDay(new Date()),\n    startOfToday: startOfDay(new Date()),\n};\n\n\nconst graphDataModel = [\n    { name: '1', Sales: 0, Purchases: 0, Profit: 0, amt: 0 },\n    { name: '2', Sales: 0, Purchases: 0, Profit: 0, amt: 0 },\n    { name: '3', Sales: 0, Purchases: 0, Profit: 0, amt: 0 },\n    { name: '4', Sales: 0, Purchases: 0, Profit: 0, amt: 0 },\n    { name: '5', Sales: 0, Purchases: 0, Profit: 0, amt: 0 },\n    { name: '6', Sales: 0, Purchases: 0, Profit: 0, amt: 0 },\n    { name: '7', Sales: 0, Purchases: 0, Profit: 0, amt: 0 },\n    { name: '8', Sales: 0, Purchases: 0, Profit: 0, amt: 0 },\n    { name: '9', Sales: 0, Purchases: 0, Profit: 0, amt: 0 },\n    { name: '0', Sales: 0, Purchases: 0, Profit: 0, amt: 0 },\n    { name: '1', Sales: 1500, Purchases: 1900, Profit: 0, amt: 400 },\n    { name: '2', Sales: 0, Purchases: 0, Profit: 0, amt: 0 },\n];\n\nconst rangeModel = {\n    startDate: addDays(defineds.startOfToday, (Math.max(Number(7), 1) - 1) * -1),\n    endDate: defineds.endOfToday,\n    key: 'selection'\n}\n\nconst Graph = (props) => {\n\n    const [dateRangeShowing, setDateRangeShowing] = React.useState(false);\n    const [genuineRange, setGenuineRange] = React.useState({ ...rangeModel })\n\n    const [dateRange, setDateRange] = React.useState({ ...rangeModel })\n    const [graphData, setGraphData] = React.useState(graphDataModel);\n\n\n    const getGraphData_ = (signal) => {\n        const graphJson = {\n            'action': 'get',\n            'filters': {\n                'date': {\n                    'start': new Date(new Date(genuineRange.startDate)),\n                    'end': new Date(new Date(genuineRange.endDate)),\n                },\n                'delta': 1\n            },\n        }\n\n        // console.log(JSON.stringify(graphJson))\n\n        getSalesSummary(graphJson, signal)\n            .then(res => {\n                console.log(res);\n                if (res.json.status) {\n                    setGraphData({ ...res.json.data });\n                    const data = res.json.data;\n\n\n                    const temp = Object.keys(data).map((key, index) => {\n                        return {\n                            name: `${format(new Date(key), 'MMM dd yyyy')}`,\n                            Profit: data[key].profit,\n                            Purchases: data[key].purchase,\n                            Sales: data[key].sales,\n                        }\n                    })\n                    // console.log(JSON.stringify(temp));\n                    let necessito = temp;\n                    // const len = temp.length;\n                    // if (len > 12) {\n                    //     const factor = (len - 1) / 11;\n                    //     necessito = []\n\n                    //     let index = 0;\n                    //     for (let i = 0; i < 12; i++) {\n                    //         necessito.push(temp[Math.round(index)])\n                    //         index = index + factor\n                    //     }\n                    // }\n                    setGraphData(necessito)\n                } else { Jhilikka.fire({ icon: 'error', title: res.json.error, background: '#ffe5de' }) }\n            })\n            .catch(err => console.log(err))\n    }\n\n\n    let today = genuineRange.endDate;\n\n    React.useEffect(() => {\n\n        const controller = new AbortController();\n        (async () => {\n            getGraphData_(controller.signal);\n        })()\n        return () => controller.abort();\n    }, []);\n\n    React.useEffect(() => {\n        getGraphData_();\n    }, [genuineRange])\n\n    const _dateRangeChange = (ranges) => {\n        console.log(ranges);\n        setDateRange({ ...dateRange, ...ranges.selection })\n    }\n\n    const _close = () => {\n        //set genuine range to date range\n\n        setDateRange({ ...genuineRange })\n        setDateRangeShowing(false);\n\n    }\n\n    const _apply = () => {\n        //set daterange to genuinerange\n        setGenuineRange({ ...dateRange })\n        setDateRangeShowing(false);\n    }\n    return (\n        <Row>\n            <Col md={12}>\n                <Card>\n                    <Card.Header className=\"d-flex justify-content-between\">\n                        <Card.Title as=\"h5\">Cash Flow</Card.Title>\n                        <div className='dashboardDateRange'>\n                            <span>\n                                <button\n                                    className=\"btn btn-outline-secondary rounded-0 btn-sm mr-2\"\n                                    onClick={() => setDateRangeShowing(!dateRangeShowing)}\n                                    style={{ padding: '4px 8px', margin: 0, marginLeft: '2px' }}\n                                >\n                                    {genuineRange.startDate.toDateString() + '-' + genuineRange.endDate.toDateString()}\n                                    <i className=\"fa fa-calendar ml-2\" aria-hidden=\"true\" />\n                                </button>\n                            </span>\n                            <Collapse in={dateRangeShowing} style={{ background: 'white' }}>\n                                <div id=\"basic-collapse\" >\n                                    <Card.Body>\n                                        <DateRangePicker\n                                            editableDateInputs={true}\n                                            ranges={[dateRange]}\n                                            staticRanges={defaultStaticRanges}\n                                            onChange={_dateRangeChange}\n                                        />\n                                        <Row style={{ display: 'flex', justifyContent: 'flex-end' }} >\n                                            <button\n                                                className=\"btn btn-outline-secondary rounded-0 btn-sm mr-2\"\n                                                onClick={_close}\n                                                style={{ padding: '4px 8px', margin: 0, marginLeft: '2px' }}\n                                            >Close</button>\n                                            <button\n                                                className=\"btn btn-secondary rounded-0 btn-sm mr-4\"\n                                                onClick={_apply}\n                                                style={{ padding: '4px 8px', margin: 0, marginLeft: '2px' }}\n                                            >Apply</button>\n\n                                        </Row>\n                                    </Card.Body>\n                                </div>\n                            </Collapse>\n\n                        </div>\n                    </Card.Header>\n                    <Card.Body>\n                        <div style={{ width: '100%', height: 300 }}>\n                            <ResponsiveContainer>\n                                <LineChart width={600} height={300} data={isEmpty(graphData) ? [] : graphData}\n                                    margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n                                    <XAxis dataKey=\"name\" />\n                                    <YAxis />\n                                    <CartesianGrid strokeDasharray=\"3 3\" />\n                                    <Tooltip />\n                                    <Legend />\n                                    <Line type=\"monotone\" dataKey=\"Profit\" strokeWidth={2} stroke=\"#8884d8\" activeDot={{ r: 5 }} />\n                                    <Line type=\"monotone\" dataKey=\"Purchases\" strokeWidth={2} stroke=\"#eb5234\" activeDot={{ r: 5 }} />\n                                    <Line type=\"monotone\" dataKey=\"Sales\" strokeWidth={2} stroke=\"#82ca9d\" activeDot={{ r: 5 }} />\n                                </LineChart>\n                            </ResponsiveContainer>\n                        </div>\n                    </Card.Body>\n                </Card>\n            </Col>\n        </Row>\n\n\n\n\n\n\n    );\n}\n\nexport default Graph;","import React, { useState, useEffect } from 'react';\nimport { Col, Card, Row } from 'react-bootstrap';\nimport { getAccountingSummary } from '../../../api/dashboard';\nimport Jhilikka from '../../../App/components/Reusables/Jhilikka';\nimport { startOfMonth } from 'date-fns';\nimport Num from '../../../App/components/Reusables/Num';\n\nfunction AccountingSummary() {\n\n    const [summary, setSummary] = useState({\n        revenue: 0,\n        revenueIncrease: 0,\n        expense: 0,\n        expenseIncrease: 0,\n        profit: 0,\n        profitIncrease: 0,\n    })\n\n\n\n    useEffect(() => {\n        const controller = new AbortController();\n        console.log({ 'start': startOfMonth(new Date()), 'end': new Date() });\n\n        const accountingJson = {\n            \"action\": \"get\",\n            \"filters\": { date: { 'start': startOfMonth(new Date()), 'end': new Date() } },\n        }\n\n        // console.log(\"Accounting JSON\", accountingJson)\n\n        getAccountingSummary(accountingJson, controller.signal)\n            .then(res => {\n                // console.log(res);\n                if (res.json.status) {\n                    const suma = res.json.summary;\n                    const today = (new Date()).toISOString().split('T')[0];\n                    const data = res.json.summary.data;\n                    const key = Object.keys(data).find(date => {\n                        const todayD = today.slice(0, today.length - 3);\n                        const dateD = date.slice(0, date.length - 3);\n                        if (todayD === dateD) return true\n                    })\n                    const mainData = data[key];\n                    setSummary({\n                        revenue: mainData.revenue,\n                        revenueIncrease: mainData.revenue_increase,\n                        expense: mainData.expense,\n                        expenseIncrease: mainData.expense_increase,\n                        profit: mainData.profit,\n                        profitIncrease: mainData.profit_increase,\n                    })\n                } else { Jhilikka.fire({ icon: 'error', title: res.json.error, background: '#ffe5de' }) }\n\n            })\n            .catch(err => console.log(err))\n        return () => controller.abort();\n    }, [])\n\n\n\n    const thisMonth = (new Date()).toLocaleDateString('default', { month: 'short' })\n\n    return (\n        <Row>\n            <Col md={4} xl={4}>\n                <Card>\n                    <Card.Body>\n                        <div className='mb-4'>\n                            <h6 className='d-inline-block w-75'> <b> Total Revenue</b></h6>\n                            <div className=\"d-inline-block text-right w-25\">{thisMonth}</div>\n                        </div>\n                        <div className=\"row d-flex align-items-center\">\n                            <div className=\"col-9\">\n                                <h4 className=\"f-w-300 d-flex align-items-center m-b-0\"><i className=\"fa fa-money text-c-blue f-30 mr-3\" style={{ color: '#32d000' }} />\n                                    Rs. <Num>{summary.revenue}</Num>\n                                </h4>\n                            </div>\n\n                            <div className=\"col-3 text-right\">\n                                <p className=\"m-b-0\">0%</p>\n                            </div>\n                        </div>\n                        <div className=\"progress m-t-30\" style={{ height: '7px' }}>\n                            <div className=\"progress-bar progress-c-theme2\" role=\"progressbar\" style={{ width: '0%' }} aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" />\n                        </div>\n                    </Card.Body>\n                </Card>\n            </Col>\n\n\n\n            <Col md={4} md={4}>\n                <Card>\n                    <Card.Body>\n                        <div className='mb-4'>\n                            <h6 className='d-inline-block w-75'><b>Total Expense</b></h6>\n                            <div className=\"d-inline-block text-right w-25\">{thisMonth}</div>\n                        </div>\n                        <div className=\"row d-flex align-items-center\">\n                            <div className=\"col-9\">\n                                <h4 className=\"f-w-300 d-flex align-items-center m-b-0\"><i className=\"fa fa-shopping-cart text-c-red f-30 mr-3\" />\n                                    Rs. <Num>{summary.expense}</Num>\n                                </h4>\n                            </div>\n\n                            <div className=\"col-3 text-right\">\n                                <p className=\"m-b-0\">0%</p>\n                            </div>\n                        </div>\n                        <div className=\"progress m-t-30\" style={{ height: '7px' }}>\n                            <div className=\"progress-bar progress-c-theme\" role=\"progressbar\" style={{ width: '0%' }} aria-valuenow=\"50\" aria-valuemin=\"0\" aria-valuemax=\"100\" />\n                        </div>\n                    </Card.Body>\n                </Card>\n            </Col>\n\n            <Col md={4} xl={4}>\n                <Card>\n                    <Card.Body>\n                        <div className='mb-4'>\n                            <h6 className='d-inline-block w-75'><b>Total Profit</b></h6>\n                            <div className=\"d-inline-block text-right w-25\">{thisMonth}</div>\n                        </div>\n                        <div className=\"row d-flex align-items-center\">\n                            <div className=\"col-9\">\n                                <h4 className=\"f-w-300 d-flex align-items-center m-b-0\"><i className=\"fa fa-line-chart text-c-blue f-30 mr-3\" style={{ color: '#8884d8' }} />\n\n                                    {summary.profit < 0\n                                        ? (<span style={{ color: '#f44236' }}>Rs. <Num>{summary.profit}</Num></span>)\n                                        : <>Rs. <Num>{summary.profit}</Num></>\n                                    }\n\n                                </h4>\n                            </div>\n\n                            <div className=\"col-3 text-right\">\n                                <p className=\"m-b-0\">0%</p>\n                            </div>\n                        </div>\n                        <div className=\"progress m-t-30\" style={{ height: '7px' }}>\n                            <div className=\"progress-bar progress-c-theme\" role=\"progressbar\" style={{ width: '0%' }} aria-valuenow=\"70\" aria-valuemin=\"0\" aria-valuemax=\"100\" />\n                        </div>\n                    </Card.Body>\n                </Card>\n            </Col>\n        </Row>\n    )\n}\n\nexport default AccountingSummary\n","import React, { useState, useEffect } from 'react';\nimport { Col, Card, Row, Tab, Tabs, Table, Image } from 'react-bootstrap';\nimport { getInventorySummary } from '../../../api/dashboard';\nimport Jhilikka from '../../../App/components/Reusables/Jhilikka';\nimport DEMO from '../../../globals/constant';\nimport { history } from '../../..';\nimport isEmpty from '../../../validation/isEmpty';\n\n\nfunction InventorySummary(props) {\n\n    const [summary, setSummary] = useState({});\n\n\n\n\n    useEffect(() => {\n        const controller = new AbortController();\n        const inventoryJson = {\n            'action': 'get',\n            'filters': {\n                'low_items': { 'start': 0, 'end': 10 },\n                'most_sold_items': { 'start': 0, 'end': 10 },\n            }\n        }\n\n        // console.log(JSON.stringify(inventoryJson))\n\n        getInventorySummary(inventoryJson, controller.signal)\n            .then(res => {\n                console.log(res);\n                if (res.json.status) {\n                    const suma = res.json.summary\n                    setSummary({ ...suma })\n                } else { Jhilikka.fire({ icon: 'error', title: res.json.error, background: '#ffe5de' }) }\n            })\n            .catch(err => console.log(err));\n\n        return () => controller.abort();\n    }, [])\n\n\n\n    const getList = (input) => {\n        return input.map((item, index) => {\n            var thumbnailImage = item.images.find(img => img.category === 'THUMBNAIL');\n            if (!thumbnailImage) {\n                thumbnailImage = item.images[0];\n            }\n            return (\n                <tr key={index}>\n                    <td className=\"imageTd\">\n                        <Image\n                            src={thumbnailImage ? `${DEMO.SERVER_URL}${thumbnailImage.image}` : \"https://toppng.com/uploads/preview/inventory-icon-icon-11553435409cbxz9pmaao.png\"}\n                            thumbnail={true}\n                            style={{ height: '46px', minWidth: '46px', width: '46px', objectFit: 'cover' }}\n                            alt=\"...\"\n                        />\n                    </td>\n                    <td\n                        onClick={() => {\n                            history.push('/item/' + item.id)\n                        }}\n                        style={{ cursor: 'pointer', color: '#55588b' }}>{item.name}</td>\n                    <td>{item.stock}</td>\n                    <td>{item.sold}</td>\n                </tr>\n            )\n        })\n    }\n\n    const BestSellingItemsList = getList(summary.most_sold_items ? summary.most_sold_items.items : [])\n    const LowStockItemsList = getList((summary.low_stock_items ? summary.low_stock_items.items : []))\n\n    return (\n        <Row>\n\n\n            <Col md={4}>\n                <Col md={12} className=\"p-0\">\n                    <Card>\n                        <Card.Body>\n                            <div className='mb-4'>\n                                <h6 className='d-inline-block w-90'>Total Sold Items</h6>\n                                <div className=\"d-inline-block text-right w-10\"></div>\n                            </div>\n                            <div className=\"row d-flex align-items-center\">\n                                <div className=\"col-6\">\n                                    <i className=\"fa fa-cubes text-c-blue f-30 mr-5\" style={{ color: '#32d000' }} />\n                                </div>\n\n                                <div className=\"col-6 \">\n                                    <h4 className=\"m-b-0\">{summary.sold}</h4>\n                                </div>\n                            </div>\n\n                        </Card.Body>\n                    </Card>\n                </Col>\n\n\n\n                <Col md={12} className='p-0'>\n                    <Card>\n                        <Card.Body>\n                            <div className='mb-4'>\n                                <h6 className='d-inline-block w-90'>Total Active Items</h6>\n                                <div className=\"d-inline-block text-right w-10\"></div>\n                            </div>\n                            <div className=\"row d-flex align-items-center\">\n                                <div className=\"col-6\">\n                                    <i className=\"fa fa-cubes text-c-blue f-30 mr-5\" style={{ color: '#8884d8' }} />\n                                </div>\n\n                                <div className=\"col-6 \">\n                                    <h4 className=\"m-b-0\">{summary.active_items}</h4>\n                                </div>\n                            </div>\n                        </Card.Body>\n                    </Card>\n                </Col>\n\n            </Col>\n\n            <Col md={8}>\n                <Tabs defaultActiveKey=\"1\" id=\"uncontrolled-tab-example\">\n                    <Tab className=\"nav-link2\" eventKey=\"1\" title=\"Best Selling Items\">\n                        <Table striped responsive>\n                            <thead>\n                                <tr>\n                                    <th>Image</th>\n                                    <th>Name</th>\n                                    <th>Stock</th>\n                                    <th>Sold</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {BestSellingItemsList}\n                                {!isEmpty(summary.most_sold_items) || <tr><td colSpan={5}>No Data available</td></tr>}\n                            </tbody>\n                        </Table>\n                    </Tab>\n                    <Tab className=\"nav-link2\" eventKey=\"2\" title=\"Low Stock Items\">\n                        <Table striped responsive>\n                            <thead>\n                                <tr>\n                                    <th>Image</th>\n                                    <th>Name</th>\n                                    <th>Stock</th>\n                                    <th>Sold</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {!isEmpty(summary.low_stock_items) || <tr><td colSpan={5}>No Data available</td></tr>}\n                                {LowStockItemsList}\n                            </tbody>\n                        </Table>\n                    </Tab>\n                </Tabs>\n            </Col>\n        </Row>\n\n    )\n}\n\nexport default InventorySummary\n","import React from 'react';\r\n// import { Row, Col, Card, Table, Tabs, Tab, Collapse, Button } from 'react-bootstrap';\r\n\r\nimport Aux from \"../../hoc/_Aux\";\r\nimport Graph from './Components/Graph';\r\nimport 'react-date-range/dist/styles.css'; // main css file\r\nimport 'react-date-range/dist/theme/default.css'; // theme css file\r\nimport AccountingSummary from './Components/AccountingSummary';\r\nimport InventorySummary from './Components/InventorySummary';\r\n\r\nconst Dashboard = (props) => {\r\n\r\n\r\n\r\n    React.useEffect(() => {\r\n        (async () => {\r\n            // const res = await getItemCatagories({ \"action\": \"get\", \"filter\": \"none\", \"start\": 0, \"end\": 999999 });\r\n            // console.log(res);\r\n        })()\r\n    }, [])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Aux>\r\n            <AccountingSummary />\r\n            <Graph />\r\n            <InventorySummary />\r\n        </Aux >\r\n    );\r\n}\r\n\r\nexport default Dashboard;","import React from 'react';\n\nconst Num = (props) => {\n    let newNum = props.children.toLocaleString()\n\n\n\n    if (newNum % 1 !== 0 && typeof (newNum) === 'number') {\n        newNum = props.children.toFixed(2)\n    }\n\n    newNum = newNum.toLocaleString();\n\n    return (\n        <span>{newNum}</span>\n    )\n}\n\nexport default Num;"],"sourceRoot":""}