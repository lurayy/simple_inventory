{"version":3,"sources":["Pages/Notifications/Notifications.js","App/components/Reusables/Loader.js","App/components/Reusables/IsEmpty.js","App/components/Reusables/Paging.js","App/components/Reusables/Spinner.js","helpers/getStartEnd.js","assets/images/spinner.gif"],"names":["Notifications","props","React","useState","notificationsArr","setNotificationsArr","loading","setLoading","showModal","notificationId","instanceCount","setInstanceCount","useEffect","controller","AbortController","requestJson","getStartEnd","console","log","JSON","stringify","getNotifications","signal","then","res","json","status","notifications","count","setTimeout","readNotifications","map","instance","id","catch","err","Jhilikka","fire","icon","title","error","background","NotificationsList","index","key","style","display","color","borderTop","cursor","className","onClick","history","push","model","object_id","aria-hidden","width","justifyContent","Date","date","toDateString","msg","read","Body","borderCollapse","isEmpty","Loader","IsEmpty","fontSize","textAlign","marginTop","children","withRouter","queryString","location","search","queryParams","URLSearchParams","start","parseInt","get","end","indexQuotient","instancePerPage","activePageIndex","setActivePageIndex","set","toString","_pageNoClick","pageIndex","_change","e","a","target","value","noOfPages","Math","ceil","dynamicPageArr","padding","size","maxWidth","backgroundColor","Prepend","Text","Control","height","backgrondColor","as","onChange","marginBottom","Prev","disabled","el","Item","active","Ellipsis","Next","Spinner","pdisplay","paddingBottom","position","left","src","spinner","alt","module","exports"],"mappings":"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","file":"static/js/79.671fe571.chunk.js","sourcesContent":["import React from 'react';\nimport { Row, Col, Card, Table, Modal, Button } from 'react-bootstrap';\n\nimport Aux from \"../../hoc/_Aux\";\n\nimport IsEmpty from '../../App/components/Reusables/IsEmpty';\nimport Loader from '../../App/components/Reusables/Loader';\nimport Jhilikka from '../../App/components/Reusables/Jhilikka';\nimport isEmpty from '../../validation/isEmpty';\nimport Spinner from '../../App/components/Reusables/Spinner';\nimport Paging from '../../App/components/Reusables/Paging';\nimport { getNotifications, readNotifications } from '../../api/userManagement/notifications';\nimport { getStartEnd } from '../../helpers/getStartEnd';\n\nconst Notifications = (props) => {\n    const [notificationsArr, setNotificationsArr] = React.useState([]);\n    const [loading, setLoading] = React.useState(true)\n    const [deleteData, setDeleteData] = React.useState({ showModal: false, notificationId: null });\n    const [instanceCount, setInstanceCount] = React.useState(0)\n\n    React.useEffect(() => {\n        const controller = new AbortController();\n\n        const requestJson = {\n            \"action\": \"get\",\n            ...getStartEnd(props),\n            \"read\": null,\n        };\n\n        console.log(JSON.stringify(requestJson))\n\n\n\n        getNotifications(requestJson, controller.signal)\n            .then((res) => {\n                console.log(res);\n                if (res.json.status) {\n                    console.log(res.json.notifications)\n                    setNotificationsArr(res.json.notifications);\n                    setInstanceCount(res.json.count)\n                    setLoading(false);\n                    var reader = setTimeout(() => {\n                        readNotifications({\n                            \"action\": \"read\",\n                            \"notifications_id\": res.json.notifications.map(instance => instance.id)\n                        })\n                            .then(res => console.log(res))\n                            .catch(err => console.log(err))\n                    }, 6000);\n\n                } else { Jhilikka.fire({ icon: 'error', title: res.json.error, background: '#ffe5de' }) }\n            })\n            .catch((err) => {\n                console.log(err)\n            });\n        return () => {\n            // clearTimeout(reader);\n        }\n        return () => controller.abort()\n    }, []);\n\n\n\n\n\n\n    const NotificationsList = notificationsArr.map((instance, index) => {\n        return (\n            <div\n                key={index}\n                style={{ display: 'flex', color: '#666', borderTop: '1px solid #ccc', cursor: 'pointer' }}\n                className=\"p-10\"\n                onClick={() => props.history.push(`/${instance.model}/${instance.object_id}`)}\n            >\n\n                <div>\n                    <i className=\"fa fa-bell-o m-r-20 f-20 p-10\" aria-hidden=\"true\"></i></div>\n                <div style={{ width: '100%' }}>\n                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                        <div><b>{instance.model}</b></div>\n                        <div className=\"text-right\">{(new Date(instance.date)).toDateString()}<i className=\"icon feather icon-clock m-l-10\" /></div>\n                    </div>\n                    <div style={{ display: 'flex', justifyContent: 'space-between' }} className=\"p-t-5 p-b-5\">\n                        <div>{instance.msg}</div>\n                        <div className=\"text-right\">{!instance.read ? <i className=\"fa fa-check\" aria-hidden=\"true\"></i> : null}</div></div>\n                </div>\n            </div>\n        )\n    })\n\n    return (\n        <Aux>\n            <Row className=\"d-flex justify-content-between pageHead\" >\n                <h4 className=\"m-b-20\">Notifications</h4>\n                <div>\n                    <span></span>\n                </div>\n            </Row>\n            <Row>\n                <Col>\n\n                    <Card>\n                        <Card.Body>\n\n                            <div style={{ borderCollapse: true }} className='notificationsBox'>\n                                {NotificationsList || ''}\n                            </div >\n                            {isEmpty(notificationsArr) && !loading ? <><IsEmpty>Data not available</IsEmpty><br /><br /></> : ''}\n                            {loading ? <Spinner /> : null}\n                            <Paging instanceCount={instanceCount} />\n\n                        </Card.Body>\n                    </Card >\n\n\n\n\n\n                </Col>\n            </Row>\n        </Aux>\n    );\n}\n\nexport default Notifications;","import React from 'react';\n\nconst Loader = () => {\n    return (\n        <div className=\"loader-bg\">\n            <div className=\"loader-track\">\n                <div className=\"loader-fill\"/>\n            </div>\n        </div>\n    );\n};\n\nexport default Loader;","import React from 'react';\n\nconst IsEmpty = (props) => {\n\n\n    return (\n        <>\n\n            <h3 className=\"display-5\" style={{ fontSize: '1.4em', textAlign: 'center',marginTop: '10vh' }}>{props.children}</h3>\n        </>\n    );\n}\n\n\nexport default IsEmpty;","import React from 'react';\nimport { withRouter } from 'react-router-dom'\nimport { Pagination, Form, InputGroup, Row } from 'react-bootstrap'\n\nfunction Paging(props) {\n\n\n    const queryString = props.location.search;\n    const queryParams = new URLSearchParams(queryString);\n    let start = parseInt(queryParams.get('start') || 0);\n    let end = parseInt(queryParams.get('end') || 25);\n\n    const indexQuotient = parseInt(start / (end - start));\n    const [instancePerPage] = React.useState(end - start);\n    const [activePageIndex, setActivePageIndex] = React.useState(indexQuotient);\n    // const [start, setStart] = React.useState(0)\n    // const [end, setEnd] = React.useState(25);\n\n\n    React.useEffect(() => {\n\n        //todo here\n\n        // check if the query string is okay\n        //if not change to valid one\n        //okay? so replace state.\n\n\n\n        // console.log('start', start, 'end', end);\n\n\n\n        const queryNotValid =\n            start % 25 !== 0 ||\n            end % 25 !== 0 ||\n            (end - start !== 25 && end - start !== 50 && end - start !== 100) ||\n            end < 25 ||\n            start < 0\n\n        if (queryNotValid) {\n            start = 0;\n            end = 25;\n            queryParams.set('start', 0)\n            queryParams.set('end', 25)\n            props.history.push({ search: queryParams.toString() })\n        }\n    }, [])\n\n\n    const _pageNoClick = (pageIndex) => {\n        setActivePageIndex(pageIndex);\n\n        queryParams.set('start', instancePerPage * pageIndex)\n        queryParams.set('end', instancePerPage * (pageIndex + 1))\n\n        props.history.push({\n            search: queryParams.toString()\n        })\n        console.log(pageIndex)\n    }\n\n    const _change = async (e) => {\n        queryParams.set('start', 0)\n        queryParams.set('end', parseInt(e.target.value))\n        props.history.push({\n            search: queryParams.toString()\n        })\n    }\n\n    // console.log('active page index', activePageIndex)\n    const instanceCount = props.instanceCount;\n    let noOfPages = Math.ceil(instanceCount / instancePerPage);\n\n\n    if (activePageIndex >= noOfPages - 5) {\n        var dynamicPageArr = [\n            noOfPages - 5,\n            noOfPages - 4,\n            noOfPages - 3,\n            noOfPages - 2,\n        ]\n    } else {\n        var dynamicPageArr = [\n            activePageIndex - 1,\n            activePageIndex - 0,\n            activePageIndex + 1,//active page number\n            activePageIndex + 2,\n            activePageIndex + 3,\n        ]\n    }\n    // } else {\n    //     var dynamicPageArr = [\n    //         activePageIndex - 4,\n    //         activePageIndex - 3,\n    //         activePageIndex - 2,\n    //         activePageIndex - 1,\n    //     ]\n    // }\n\n    return (\n        <Row style={{ display: 'flex', justifyContent: 'space-between', padding: '40px 10px 0 10px   ' }}>\n            <InputGroup size=\"sm\" className=\"mb-3\" style={{ maxWidth: '120px', backgroundColor: 'white' }}>\n                <InputGroup.Prepend>\n                    <InputGroup.Text id=\"inputGroup-sizing-sm\">Show:</InputGroup.Text>\n                </InputGroup.Prepend>\n                <Form.Control\n                    style={{ height: '30.21px', backgrondColor: 'white' }}\n                    as=\"select\"\n                    value={instancePerPage}\n                    onChange={_change}\n                >\n                    <option value=\"25\">25</option>\n                    <option value=\"50\">50</option>\n                    <option value=\"100\">100</option>\n                </Form.Control>\n            </InputGroup>\n\n\n            <Pagination style={{ marginBottom: 0 }} size='sm'>\n\n                <Pagination.Prev\n                    onClick={() => _pageNoClick(activePageIndex - 1)}\n                    disabled={activePageIndex === 0}\n                />\n                {noOfPages <= 8 ?\n                    [1, 2, 3, 4, 5, 6, 7, 8].map((el, index) => {\n                        if (el > noOfPages) return;\n                        return <Pagination.Item\n                            disabled={noOfPages < el}\n                            key={index}\n                            active={activePageIndex === el - 1}\n                            onClick={() => _pageNoClick(el - 1)}\n                        >{el}</Pagination.Item>\n                    }) :\n                    <>\n                        {activePageIndex > 3 ?\n                            <>\n                                < Pagination.Item\n                                    active={activePageIndex === 0}\n                                    onClick={() => _pageNoClick(0)}\n                                >{1}</Pagination.Item><Pagination.Item\n                                    active={activePageIndex === 1}\n                                    onClick={() => _pageNoClick(1)}\n                                >{2}</Pagination.Item>\n                                <Pagination.Ellipsis disabled={true} />\n\n                            </>\n                            : null\n                        }\n\n                        {\n                            (activePageIndex > 3 ?\n                                dynamicPageArr :\n                                [1, 2, 3, 4, 5]).map((el, index) => {\n                                    return <Pagination.Item\n                                        disabled={noOfPages < el}\n                                        key={index}\n                                        active={activePageIndex === el - 1}\n                                        onClick={() => _pageNoClick(el - 1)}\n                                    >{el}</Pagination.Item>\n                                })\n                        }\n                        {noOfPages > 7 && (activePageIndex < noOfPages - 5) ? <Pagination.Ellipsis disabled={true} /> : null}\n                        {noOfPages > 7 ?\n                            <>\n                                < Pagination.Item\n                                    active={activePageIndex === noOfPages - 2}\n                                    onClick={() => _pageNoClick(noOfPages - 2)}\n                                >{noOfPages - 1}</Pagination.Item><Pagination.Item\n                                    active={activePageIndex === noOfPages - 1}\n                                    onClick={() => _pageNoClick(noOfPages - 1)}\n                                >{noOfPages}</Pagination.Item>\n                            </>\n                            : <>\n                                < Pagination.Item\n                                    disabled={noOfPages < 6}\n                                    active={activePageIndex === 7 - 2}\n                                    onClick={() => _pageNoClick(7 - 2)}\n                                >{6}</Pagination.Item><Pagination.Item\n                                    disabled={noOfPages < 7}\n                                    active={activePageIndex === 7 - 1}\n                                    onClick={() => _pageNoClick(7 - 1)}\n                                >{7}</Pagination.Item>\n                            </>\n                        }\n                    </>\n                }\n\n                <Pagination.Next\n                    onClick={() => _pageNoClick(activePageIndex + 1)}\n\n                    disabled={(activePageIndex === noOfPages - 1) || noOfPages === 0}\n                />\n            </Pagination>\n        </Row >\n    )\n}\n\nexport default withRouter(Paging)\n","import React from 'react';\nimport spinner from '../../../assets/images/spinner.gif'\n\nconst Spinner = () => {\n    return (\n        <div style={{ pdisplay: 'block', width: '100%', paddingBottom: '60px' }}>\n            <img\n                style={{ height: '100px', position: 'relative', left: 'calc( 50% - 50px )' }}\n                src={spinner} alt=\"\"\n            />\n        </div>\n    );\n};\n\nexport default Spinner;","export function getStartEnd(props) {\n    const queryParams = new URLSearchParams(props.location.search);\n    return {\n        \"start\": parseInt(queryParams.get('start')) || 0,\n        \"end\": (parseInt(queryParams.get('end')) || 25),\n    }\n}","module.exports = __webpack_public_path__ + \"static/media/spinner.2f27f045.gif\";"],"sourceRoot":""}