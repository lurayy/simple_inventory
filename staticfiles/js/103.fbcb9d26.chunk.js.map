{"version":3,"sources":["Pages/Users/Update.js","api/inventory/itemCategory.js","api/userManagement/users.js"],"names":["getBase64","file","cb","reader","FileReader","readAsDataURL","onload","result","onerror","error","console","log","Update","props","React","useState","loading","setLoading","submitting","setSubmitting","rolesArr","setRolesArr","username","email","fname","lname","password","role","userData","setUserData","address","phone1","phone2","post","profileImage","profileImageName","userProfile","setUserProfile","errors","setErrors","useEffect","controller","AbortController","getRoles","signal","then","res","a","json","status","roles","Jhilikka","fire","icon","title","background","catch","err","abort","_userDataChange","e","target","name","value","type","_userProfileChange","_profileImageChange","image","files","Body","md","Group","Label","Control","onChange","placeholder","as","disabled","map","instance","idex","key","id","File","label","data-browse","custom","className","variant","onClick","history","push","validateUserCreation","isValid","requestJson","createUser","getItemCatagories","data","baseRequest","alert","deleteItemCategory","addItemCategory","getItemCategory","updateItemCategory","getUsers","updateUser","toggleUserActivity","getUser"],"mappings":"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","file":"static/js/103.fbcb9d26.chunk.js","sourcesContent":["import React from 'react';\nimport { Row, Col, Card, Form, Button, InputGroup, FormControl, DropdownButton, Dropdown, FormFile } from 'react-bootstrap';\n\nimport Aux from \"../../hoc/_Aux\";\n\nimport ErrorBody from '../../App/components/Reusables/ErrorBody';\nimport { getItemCatagories } from '../../api/inventory/itemCategory';\nimport Loader from '../../App/components/Reusables/Loader';\n\nimport Jhilikka from '../../App/components/Reusables/Jhilikka';\nimport { getRoles } from '../../api/userManagement/roles';\nimport { createUser } from '../../api/userManagement/users'\nimport { validateUserCreation } from '../../validation/user';\n\n\nfunction getBase64(file, cb) {\n    let reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = function () {\n        cb(reader.result)\n    };\n    reader.onerror = function (error) {\n        console.log('Error: ', error);\n    };\n}\n\nconst Update = (props) => {\n\n    const [loading, setLoading] = React.useState(true);\n    const [submitting, setSubmitting] = React.useState(false)\n\n    const [rolesArr, setRolesArr] = React.useState([]);\n\n    const [userData, setUserData] = React.useState({\n        username: '',\n        email: '',\n        fname: '',\n        lname: '',\n        password: '',\n        role: '',\n    })\n\n    const [userProfile, setUserProfile] = React.useState({\n        address: '',\n        phone1: '',\n        phone2: '',\n        post: '',\n        profileImage: '',\n        profileImageName: '',\n    });\n\n    const [errors, setErrors] = React.useState({});\n\n    React.useEffect(() => {\n        const controller = new AbortController();\n        getRoles({ \"action\": \"get\", \"filter\": \"none\", \"start\": 0, \"end\": 999999 }, controller.signal)\n            .then(async (res) => {\n                console.log(res)\n                if (res.json.status) {\n                    await setRolesArr(res.json.roles);\n                    await setLoading(false)\n                } else { Jhilikka.fire({ icon: 'error', title: res.json.error, background: '#ffe5de' }) }\n            }).catch((err) => {\n                console.log(err)\n            });\n        return () => controller.abort();\n    }, []);\n\n    const _userDataChange = (e) => {\n        const { name, type, value } = e.target;\n        setUserData({ ...userData, [name]: value });\n        setErrors({ ...errors, [name]: '' })\n    }\n\n    const _userProfileChange = (e) => {\n        console.log('here it changes')\n        const { name, type, value } = e.target;\n        setUserProfile({ ...userProfile, [name]: value });\n        setErrors({ ...errors, [name]: '' });\n    }\n    const _profileImageChange = async (e) => {\n        const image = e.target.files[0];\n        console.log(image)\n        getBase64(image, (result) => {\n            // console.log(result);\n            setUserProfile({ ...userProfile, profileImage: result, profileImageName: image.name, })\n        })\n    }\n\n\n    console.log(userProfile)\n\n    const _submit = () => {\n        //check if there are errors\n\n        const { isValid, errors } = validateUserCreation(userData);\n\n        if (!isValid) {\n            console.log(errors);\n            setErrors({ ...errors })\n            return;\n        };\n\n        console.log('no errros');\n\n        const requestJson = {\n            \"action\": \"add\",\n            \"username\": userData.username,\n            \"email\": userData.email,\n            \"password\": userData.password,\n            \"first_name\": userData.fname,\n            \"last_name\": userData.lname,\n            \"role_id\": userData.role,\n            \"profile\": {\n                \"address\": userProfile.address,\n                \"phone_number\": userProfile.phone1,\n                \"phone_number2\": userProfile.phone2,\n                \"post\": userProfile.post,\n                \"profile_image\": userProfile.profileImage,\n            }\n        }\n        //if no errros api call\n        createUser(requestJson)\n            .then(async (res) => {\n                console.log(res);\n                if (res.json.status) {\n                    Jhilikka.fire({ icon: 'success', title: 'User Updated successfully!', background: '#dffff0' })\n                    props.history.push('/users')\n                } else { Jhilikka.fire({ icon: 'error', title: res.json.error, background: '#ffe5de' }) }\n            }).catch((err) => {\n                setSubmitting(false)\n            });\n    }\n    console.log(userProfile.address)\n\n    if (loading) return <Loader />\n    return (\n        <Aux>\n            <Row>\n                <Col>\n                    <Card>\n                        <Card.Body>\n                            <h5>Update User</h5>\n                            <hr />\n                            <Row>\n\n                                <Col md={6}>\n                                    <Form.Group  >\n                                        <Form.Label>Username*</Form.Label>\n                                        <Form.Control name=\"username\" value={userData.username} onChange={_userDataChange} type=\"text\" placeholder=\"Username\" />\n                                        <ErrorBody>{errors.username}</ErrorBody>\n                                    </Form.Group>\n                                </Col>\n\n\n                                <Col md={6}>\n                                    <Form.Group  >\n                                        <Form.Label>Email*</Form.Label>\n                                        <Form.Control name=\"email\" value={userData.email} onChange={_userDataChange} type=\"text\" placeholder=\"Email\" />\n                                        <ErrorBody>{errors.email}</ErrorBody>\n                                    </Form.Group>\n                                </Col>\n                                <Col md={6}>\n                                    <Form.Group  >\n                                        <Form.Label>First Name*</Form.Label>\n                                        <Form.Control name=\"fname\" value={userData.fname} onChange={_userDataChange} type=\"text\" placeholder=\"First Name\" />\n                                        <ErrorBody>{errors.fname}</ErrorBody>\n                                    </Form.Group>\n                                </Col>\n\n                                <Col md={6}>\n                                    <Form.Group  >\n                                        <Form.Label>Last Name*</Form.Label>\n                                        <Form.Control name=\"lname\" value={userData.lname} onChange={_userDataChange} type=\"text\" placeholder=\"Last Name\" />\n                                        <ErrorBody>{errors.lname}</ErrorBody>\n                                    </Form.Group>\n                                </Col>\n\n                                <Col md={6}>\n                                    <Form.Group  >\n                                        <Form.Label>Password*</Form.Label>\n                                        <Form.Control name=\"password\" value={userData.password} onChange={_userDataChange} type=\"password\" placeholder=\"Password\" />\n                                        <ErrorBody>{errors.password}</ErrorBody>\n                                    </Form.Group>\n                                </Col>\n\n                                <Col md={6}>\n                                    <Form.Group >\n                                        <Form.Label>Role*</Form.Label>\n                                        <Form.Control name=\"role\" value={userData.role} onChange={_userDataChange} as=\"select\">\n\n                                            <option value='' disabled >Select User Role</option>\n                                            {rolesArr.map((instance, idex) => {\n                                                return <option key={idex} value={instance.id}>{instance.name}</option>\n                                            })}\n                                        </Form.Control>\n                                        <ErrorBody>{errors.role}</ErrorBody>\n                                    </Form.Group>\n                                </Col>\n                            </Row>\n                            <br />\n                            <h5>Extra Details</h5>\n                            <hr />\n                            <Row>\n                                <Col md={6}>\n                                    <Form.Group  >\n                                        <Form.Label>Address</Form.Label>\n                                        <Form.Control name=\"address\" value={userProfile.address} onChange={_userProfileChange} type=\"text\" placeholder=\"Address\" />\n                                        <ErrorBody>{errors.address}</ErrorBody>\n                                    </Form.Group>\n                                </Col>\n                                <Col md={6}>\n                                    <Form.Group  >\n                                        <Form.Label>Phone Np 1</Form.Label>\n                                        <Form.Control name=\"phone1\" value={userProfile.phone1} onChange={_userProfileChange} type=\"text\" placeholder=\"Phone No 1\" />\n                                        <ErrorBody>{errors.phone1}</ErrorBody>\n                                    </Form.Group>\n                                </Col>\n\n                                <Col md={6}>\n                                    <Form.Group  >\n                                        <Form.Label>Phone No 2</Form.Label>\n                                        <Form.Control name=\"phone2\" value={userProfile.phone2} onChange={_userProfileChange} type=\"text\" placeholder=\"Phone No 2\" />\n                                        <ErrorBody>{errors.phone2}</ErrorBody>\n                                    </Form.Group>\n                                </Col>\n\n                                <Col md={6}>\n                                    <Form.Group  >\n                                        <Form.Label>Post</Form.Label>\n                                        <Form.Control name=\"post\" value={userProfile.post} onChange={_userProfileChange} type=\"text\" placeholder=\"Post\" />\n                                        <ErrorBody>{errors.post}</ErrorBody>\n                                    </Form.Group>\n                                </Col>\n\n\n                                <Col md={6}>\n                                    <Form.Group  >\n                                        <Form.Label>Profile Image</Form.Label>\n                                        <Form.File\n                                            label={userProfile.profileImageName ? userProfile.profileImageName : \"No file selected\"}\n                                            data-browse=\"Browse\"\n                                            custom\n                                            onChange={_profileImageChange}\n                                        />\n                                        <ErrorBody>{errors.profileImage}</ErrorBody>\n                                    </Form.Group>\n                                </Col>\n\n\n                            </Row>\n                            <div className=\"d-flex justify-content-end\" >\n                                <Button\n                                    variant=\"warning\"\n                                    onClick={() => { props.history.push('/items') }}\n                                >\n                                    Cancel\n                                    </Button>\n                                <Button\n                                    disabled={submitting}\n                                    variant=\"primary\"\n                                    onClick={_submit}\n                                >\n                                    {submitting ? <><i className=\"fa fa-spinner text-c-white f-15 fa-pulse m-l-1\"></i>Submitting</> : 'Submit'}\n                                </Button>\n                            </div>\n\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        </Aux>\n    );\n}\n\nexport default Update;\n","import { baseRequest } from '../base';\n// api for items \n\n\n\nconst getWeightUnit = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/inventory/items/categories/get', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\n\n\n\n\nconst getItemCatagories = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/inventory/items/categories/get', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\n\n\n\nconst deleteItemCategory = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/inventory/items/categories/delete', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\n\nconst addItemCategory = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/inventory/items/category/add', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\n\n\nconst getItemCategory = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/inventory/items/category/get', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\n\n\nconst getItemCategoryTree = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/inventory/items/category/get', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n}\n\nconst updateItemCategory = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/inventory/items/category/update', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\n\nexport {\n  getWeightUnit,\n  getItemCatagories,\n  deleteItemCategory,\n  addItemCategory,\n  getItemCategory,\n  updateItemCategory,\n  getItemCategoryTree\n}\n","import { baseRequest } from '../base'\n\n//api for user management by the admin or manager (managing others)\n\nconst createUser = async (data, signal) => {\n    try {\n        return await baseRequest(\"api/v1/user/add\", \"POST\", data, signal);\n    } catch (e) {\n        alert(e);\n    }\n};\n\n\nconst getUsers = async (data, signal) => {\n    try {\n        return await baseRequest(\"api/v1/user/list\", \"POST\", data, signal);\n    } catch (e) {\n        alert(e);\n    }\n};\n\n\n\nconst updateUser = async (data, signal) => {\n    try {\n        return await baseRequest(\"api/v1/user/update\", \"POST\", data, signal);\n    } catch (e) {\n        alert(e);\n    }\n};\n\n\nconst toggleUserActivity = async (data, signal) => {\n    try {\n        return await baseRequest(\"api/v1/user/delete\", \"POST\", data, signal);\n    } catch (e) {\n        alert(e);\n    }\n};\n\nconst getUser = async (data, signal) => {\n    try {\n        return await baseRequest(\"api/v1/user/list\", \"POST\", data, signal);\n    } catch (e) {\n        alert(e);\n    }\n};\n\n\n\n\nexport {\n    createUser,\n    getUser,\n    updateUser,\n    getUsers,\n    toggleUserActivity,\n}"],"sourceRoot":""}