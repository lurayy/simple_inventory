{"version":3,"sources":["Pages/Authentication/Password/ResetPassword.js"],"names":["CodeComponent","props","React","useState","code","setCode","errors","setErrors","queryString","location","search","email","URLSearchParams","get","isEmailValid","_validateCode","a","validateCodeInput","isValid","validateCode","then","res","console","log","json","status","getCode","showResetPassword","error","catch","e","className","style","name","display","width","type","placeholder","value","data","onChange","target","onKeyDown","key","onClick","cursor","sendCode","Jhilikka","fire","icon","title","background","history","push","ResetPassword","resetPasswordShowing","setResetPasswordShowing","password","password2","setData","_dataChange","_onEnter","_resetPassword","validateResetPassword","resetPassword"],"mappings":"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","file":"static/js/110.a397c30f.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux';\n\nimport './../../../assets/scss/style.scss';\nimport Aux from \"../../../hoc/_Aux\";\nimport Breadcrumb from \"../../../App/layout/AdminLayout/Breadcrumb\";\nimport { signin } from '../../../redux/actions/authActions';\n\nimport store from '../../../redux/store'\nimport isEmpty from '../../../validation/isEmpty';\nimport { NavLink } from 'react-router-dom';\nimport ErrorBody from '../../../App/components/Reusables/ErrorBody';\nimport { validateSendCode, validateResetPassword, validateCodeInput, isEmailValid } from '../../../validation/auth';\nimport { sendCode, resetPassword, validateCode } from '../../../api/user';\nimport Jhilikka from '../../../App/components/Reusables/Jhilikka';\nimport { data } from 'jquery';\nimport { Button } from 'react-bootstrap';\n\nconst ResetPassword = (props) => {\n\n    const [resetPasswordShowing, setResetPasswordShowing] = React.useState(false)\n    const [errors, setErrors] = React.useState({});\n    const [data, setData] = React.useState({\n        password: '',\n        password2: '',\n        code: '',\n    })\n\n\n    const showResetPassword = () => setResetPasswordShowing(true);\n\n\n    const _dataChange = (e) => {\n        setErrors({ ...errors, [e.target.name]: '' })\n        setData({ ...data, [e.target.name]: e.target.value })\n    }\n\n    const getCode = (code) => {\n        setData({ ...data, code: code })\n    }\n\n    const _onEnter = (e) => {\n        if (e.key === 'Enter') {\n            _resetPassword()\n        }\n    }\n    const _resetPassword = async () => {\n        const { isValid, errors } = validateResetPassword(data);\n        if (!isValid) {\n            setErrors(errors);\n            return;\n        }\n\n        console.log('Data is ', data)\n        resetPassword({ code: data.code, password: data.password })\n            .then(res => {\n                console.log(res);\n                if (res.json.status) {\n                    Jhilikka.fire({ icon: 'success', title: 'Password change successful!', background: '#dffff0' })\n                    props.history.push('/signin')\n                } else {\n                    Jhilikka.fire({ icon: 'error', title: res.json.error, background: '#ffe5de' })\n                }\n            })\n            .catch(e => console.log(e))\n\n\n    }\n\n    if (!showResetPassword) return <CodeComponent />\n    return (\n        <Aux>\n            <div className=\"auth-wrapper\">\n                <div className=\"auth-content\">\n                    <div className=\"auth-bg\">\n                        <span className=\"r\" />\n                        <span className=\"r s\" />\n                        <span className=\"r s\" />\n                        <span className=\"r\" />\n                    </div>\n                    <div className=\"card\">\n                        {resetPasswordShowing ? <div className=\"card-body text-center\">\n                            <div className=\"mb-4\">\n                                <i className=\"feather icon-unlock auth-icon\" />\n                            </div>\n                            <h3 className=\"mb-4\">Reset Password</h3>\n                            <p className=\"mb-3 text-muted\">Get code to reset your password.</p>\n\n                            <div className=\"input-group mb-3\" style={{}}>\n                                <input\n                                    name=\"password\"\n                                    style={{ display: 'block', width: '100%' }}\n                                    type=\"password\"\n                                    className=\"form-control\"\n                                    placeholder=\"New Password\"\n                                    value={data.password}\n                                    onChange={_dataChange}\n                                    onKeyDown={_onEnter}\n                                />\n                                <ErrorBody>{errors.password}</ErrorBody>\n                            </div>\n                            <div className=\"input-group mb-3\" style={{}}>\n                                <input\n                                    name=\"password2\"\n                                    style={{ display: 'block', width: '100%' }}\n                                    type=\"password\"\n                                    className=\"form-control\"\n                                    placeholder=\"Confirm Password\"\n                                    value={data.password2}\n                                    onChange={_dataChange}\n                                    onKeyDown={_onEnter}\n                                />\n                                <ErrorBody>{errors.password2}</ErrorBody>\n                            </div>\n\n                            <button\n                                className=\"btn btn-primary shadow-2 mb-4\"\n                                onClick={_resetPassword}\n                            >Reset Password</button>\n                        </div> :\n                            <CodeComponent\n                                location={props.location}\n                                showResetPassword={showResetPassword}\n                                getCode={getCode}\n                            />\n                        }\n                    </div>\n                </div>\n            </div>\n        </Aux>\n    );\n}\n\n\nconst CodeComponent = (props) => {\n    const [code, setCode] = React.useState('');\n    const [errors, setErrors] = React.useState({});\n\n    const queryString = props.location.search;\n    const queryParams = new URLSearchParams(queryString) || '';\n\n    let email = queryParams.get('email') || '';\n    if (!isEmailValid(email)) {\n        email = ''\n    }\n\n\n\n    const _codeChange = (e) => {\n        setErrors({ ...errors, [e.target.name]: '' });\n        setCode(e.target.value)\n    }\n\n\n    const _onEnter = (e) => {\n        if (e.key === 'Enter') {\n            _validateCode()\n        }\n    }\n\n\n    const _resendCode = () => {\n\n\n        if (email) {\n            sendCode({ email: email })\n                .then(res => {\n                    console.log(res);\n                    if (!res.json.status) {\n                        Jhilikka.fire({ icon: 'success', title: 'Code send to the email successfully!', background: '#dffff0' })\n                        props.history.push('/reset-password')\n                    } else {\n                        Jhilikka.fire({ icon: 'error', title: res.json.error, background: '#ffe5de' })\n                    }\n                })\n                .catch(e => console.log(e))\n        }\n\n    }\n\n    const _validateCode = async () => {\n        const { isValid, errors } = validateCodeInput(code);\n        if (!isValid) {\n            setErrors(errors);\n            return;\n        }\n        validateCode({ code: code })\n            .then(res => {\n                console.log(res);\n                if (res.json.status) {\n                    // Jhilikka.fire({ icon: 'success', title: 'Code is valid!', background: '#dffff0' })\n                    props.getCode(code);\n                    props.showResetPassword()\n                } else {\n                    // Jhilikka.fire({ icon: 'error', title: res.json.error, background: '#ffe5de' })\n                    setErrors({ ...errors, code: res.json.error })\n                }\n            })\n            .catch(e => console.log(e))\n    }\n\n\n    return <div className=\"card-body text-center\">\n        <div className=\"mb-4\">\n            <i className=\"feather icon-unlock auth-icon\" />\n        </div>\n        <h3 className=\"mb-4\">Reset Password</h3>\n        <p className=\"mb-3 text-muted\">Check your mail and enter the code you received.</p>\n\n        <div className=\"input-group mb-3\" style={{}}>\n            <input\n                name=\"code\"\n                style={{ display: 'block', width: '100%' }}\n                type=\"number\"\n                className=\"form-control\"\n                placeholder=\"Code\"\n                value={data.code}\n                onChange={_codeChange}\n                onKeyDown={_onEnter}\n            />\n            <ErrorBody>{errors.code}</ErrorBody>\n        </div>\n\n        <button\n            className=\"btn btn-primary shadow-2 mb-4\"\n            onClick={_validateCode}\n        >Continue</button>\n        {email ? <p className=\"mb-0 text-muted\">\n            Didn't Receive Code?\n            <span className=\"btn-link\" style={{ cursor: 'pointer' }} onClick={_resendCode}>{\"  \"}Resend</span>\n        </p> :\n            null\n        }\n\n    </div >\n\n}\n\n\n\nexport default ResetPassword;\n\n\n"],"sourceRoot":""}