{"version":3,"sources":["Pages/Customers/Customer.js","App/components/Reusables/IsEmpty.js","App/components/Reusables/DeleteModal.js","App/components/Reusables/Paging.js","helpers/getStartEnd.js","App/components/Reusables/Num.js","api/sales/customer.js","api/sales/customerCategory.js","api/sales/invoice.js"],"names":["Customer","props","React","useState","customerData","setCustomerData","loading","setLoading","showModal","customerId","deleteData","setDeleteData","invoicesArr","setInvoicesArr","instanceCount","setInstanceCount","useEffect","controller","AbortController","invoicesJson","match","params","id","getStartEnd","Promise","all","getCustomer","action","customer_id","filter","signal","getInvoices","then","res1","res2","json","status","customers","Jhilikka","fire","icon","title","error","background","invoices","count","catch","err","console","log","abort","InvoicesList","map","invoice","index","key","style","cursor","onClick","e","history","push","invoice_number","maxWidth","overflow","paddingRight","items","Date","invoiced_on","toDateString","total_weight","weight_unit","scope","bill_amount","status_name","className","first_name","middle_name","last_name","xl","Body","md","is_active","variant","category_str","email","website","address","phone1","phone2","tax_number","country_detail","name","Header","Title","as","marginTop","hover","responsive","isEmpty","show","onCancel","onDelete","_delete","idToBeDeleted","deleteCustomers","customers_id","res","IsEmpty","fontSize","textAlign","children","DeleteModal","border","color","boxShadow","onHide","closeButton","margin","paddingLeft","fontWeight","message","display","flexDirection","justifyContent","padding","noRedButton","redTitle","withRouter","queryString","location","search","queryParams","URLSearchParams","start","parseInt","get","end","indexQuotient","instancePerPage","activePageIndex","setActivePageIndex","set","toString","_pageNoClick","pageIndex","_change","a","target","value","noOfPages","Math","ceil","dynamicPageArr","size","backgroundColor","Prepend","Text","Control","height","backgrondColor","onChange","marginBottom","Prev","disabled","el","Item","active","Ellipsis","Next","Num","newNum","toLocaleString","toFixed","getCustomers","data","baseRequest","alert","createCustomer","updateCustomer","getCustomerCategories","deleteCustomerCategories","updateCustomerCategory","createCustomerCategory","getCustomerCategory","deleteInvoices","cancelInvoice","createInvoice","createQuickInvoice","getInvoice","updateInvoice","getInvoiceStatus","exportBill","todo","syncToIRD"],"mappings":"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","file":"static/js/64.3cc37818.chunk.js","sourcesContent":["import React from 'react';\nimport { Row, Col, Card, Table, Tabs, Tab, Badge, Spinner } from 'react-bootstrap';\n\nimport Loader from '../../App/layout/Loader/index'\n\nimport Jhilikka from '../../App/components/Reusables/Jhilikka';\nimport DeleteModal from '../../App/components/Reusables/DeleteModal';\nimport { getCustomer, deleteCustomers } from '../../api/sales/customer';\nimport { deleteCustomerCatgory } from '../../api/sales/customerCategory';\nimport { getStartEnd } from '../../helpers/getStartEnd';\nimport { getInvoices } from '../../api/sales/invoice';\nimport Num from '../../App/components/Reusables/Num';\nimport { isEmpty } from 'validate.js';\nimport IsEmpty from '../../App/components/Reusables/IsEmpty';\nimport Paging from '../../App/components/Reusables/Paging';\n\n\n\n\nconst Customer = (props) => {\n\n\n    const [customerData, setCustomerData] = React.useState(null);\n    const [loading, setLoading] = React.useState(true);\n    const [deleteData, setDeleteData] = React.useState({ showModal: false, customerId: null });\n\n    const [invoicesArr, setInvoicesArr] = React.useState([]);\n    const [instanceCount, setInstanceCount] = React.useState(0)\n\n    React.useEffect(() => {\n\n        const controller = new AbortController();\n\n        const invoicesJson = {\n            \"action\": \"get\",\n            \"filter\": \"multiple\",\n            \"filters\": {\n                \"date\": false,\n                'start_date': null,\n                'end_date': null,\n                \"customer\": true,\n                'customer_id': props.match.params.id,\n                'status': false,\n                'status_id': null,\n                'active': null,\n                'canceled': null\n            },\n            ...getStartEnd(props,)\n        }\n\n        Promise.all([\n            getCustomer({ action: 'get', customer_id: props.match.params.id, filter: 'none' }, controller.signal),\n            getInvoices(invoicesJson, controller.signal),\n        ]).then(([res1, res2]) => {\n            if (res1.json.status) {\n                setCustomerData(res1.json.customers[0])\n            } else {\n                Jhilikka.fire({ icon: 'error', title: res1.json.error, background: '#ffe5de' })\n            }\n            if (res2.json.status) {\n                setInvoicesArr([...res2.json.invoices]);\n                setInstanceCount(res2.json.count);\n            } else { Jhilikka.fire({ icon: 'error', title: res2.json.error, background: '#ffe5de' }) }\n            setLoading(false)\n        })\n            .catch(err => console.log(err))\n        return () => controller.abort();\n    }, [])\n\n    const _triggerDeleteModal = (e) => {\n        setDeleteData({ showModal: true, customerId: props.match.params.id });\n    }\n\n\n\n    const _delete = (idToBeDeleted) => {\n        deleteCustomers({ action: 'delete', customers_id: [idToBeDeleted] })\n            .then(res => res.json)\n            .then((res) => {\n                if (res.status) {\n                    Jhilikka.fire({ icon: 'success', title: 'Customer deleted successfully!', background: '#dffff0' })\n                    props.history.push('/customers')\n                } else {\n                    Jhilikka.fire({ icon: 'error', title: res.json.error, background: '#ffe5de' })\n                }\n            }).catch((err) => {\n                console.log(err);\n            });\n    }\n\n    // \n    const InvoicesList = invoicesArr.map((invoice, index) => {\n        return (\n            <tr key={index}\n\n                style={{ cursor: 'pointer' }}\n                onClick={(e) => {\n                    props.history.push('/invoice/' + invoice.id)\n                }}\n            >\n                <td>{invoice.invoice_number}</td>\n\n                <td style={{ maxWidth: '200px', overflow: 'hidden', paddingRight: '50px' }}>{invoice.items}</td>\n                <td>{(new Date(invoice.invoiced_on)).toDateString()}</td>\n                <td>{invoice.total_weight} {invoice.weight_unit}</td>\n                <th scope=\"row\">Rs. <Num>{invoice.bill_amount}</Num></th>\n                <td>{invoice.status_name}</td>\n            </tr>\n        )\n    })\n    if (loading) return <Loader />\n    return (\n        <>\n            <Row className=\"d-flex justify-content-between pageHead\" >\n                <h4 className=\"m-b-10\" >{customerData.first_name} {customerData.middle_name}{customerData.last_name}</h4>\n                <div>\n                    <button\n                        className=\"btn btn-primary btn-sm shadow-2 mb-4\"\n                        onClick={() => props.history.push(`/customer/update/${props.match.params.id}`)}\n                    > <i className=\"feather icon-edit text-c-black f-15 m-r-5\" />Update</button>\n                    <button\n                        className=\"btn btn-danger btn-sm shadow-2 mb-4\"\n                        onClick={_triggerDeleteModal}\n                    > <i className=\"feather icon-trash-2 text-c-black f-15 m-r-5\" />Delete</button>\n                </div>\n            </Row>\n            <Row>\n                <Col xl={2}></Col>\n                <Col xl={8}>\n                    <Card>\n                        <Card.Body>\n                            <h5 className='mb-4'>Customer Profile</h5>\n                            <div className=\"row d-flex align-items-center\">\n\n                                <Col md={2}></Col>\n                                <Col md={8}>\n                                    <div className='mb-1 border-bottom'><b>Name</b></div>\n                                    <div className='mt-1 mb-3'>\n                                        {customerData.first_name} {customerData.middle_name} {customerData.last_name} {\" \"}\n                                        {customerData.is_active ? (<Badge variant=\"info\">Active</Badge>) : (<Badge variant=\"secondary\">Inactive</Badge>)}\n                                    </div>\n\n                                    <div className='mb-1 border-bottom'><b>Customer Category</b></div>\n                                    <div className='mt-1 mb-3'>{customerData.category_str}</div>\n\n\n                                    <div className='mb-1 border-bottom'><b>Email</b></div>\n                                    <div className='mt-1 mb-3'>{customerData.email}</div>\n\n                                    <div className='mb-1 border-bottom'><b>Website</b></div>\n                                    <div className='mt-1 mb-3'>{customerData.website || 'NA'}</div>\n\n                                    <div className='mb-1 border-bottom'><b>Address</b></div>\n                                    <div className='mt-1 mb-3'>{customerData.address || 'NA'}</div>\n\n                                    <div className='mb-1 border-bottom'><b>Phone</b></div>\n                                    <div className='mt-1 mb-3'>{customerData.phone1}, {\" \"} {\" \"}{customerData.phone2}</div>\n\n                                    <div className='mb-1 border-bottom'><b>Tax Number</b></div>\n                                    <div className='mt-1 mb-3'>{customerData.tax_number}</div>\n\n                                    <div className='mb-1 border-bottom'><b>Country</b></div>\n                                    <div className='mt-1 mb-3'>{customerData.country_detail.name}</div>\n\n                                </Col>\n                                <Col md={2}></Col>\n                            </div>\n\n                            <Card.Body><Card.Header>\n                                <Card.Title as=\"h5\" style={{ marginTop: '5px' }} >Invoices</Card.Title>\n                            </Card.Header>\n                                <Table hover responsive>\n                                    <thead>\n                                        <tr>\n                                            <th>Invoice Number</th>\n                                            <th>Sold By</th>\n                                            <th>Invoiced On</th>\n                                            <th>Total Weight</th>\n                                            <th>Bill Amount</th>\n                                            <th>Status</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {InvoicesList || ''}\n                                    </tbody>\n                                </Table>\n                                {isEmpty(invoicesArr) && !loading ? <><IsEmpty>Data not available</IsEmpty><br /><br /></> : ''}\n                                {loading ? <Spinner /> : null}\n                                <Paging instanceCount={instanceCount} />\n                            </Card.Body>\n\n\n\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col xl={2}></Col>\n                <DeleteModal\n                    show={deleteData.showModal}\n                    onCancel={() => setDeleteData({ ...deleteData, showModal: false })}\n                    onDelete={() => _delete(deleteData.customerId)}\n                />\n            </Row>\n        </>\n    );\n}\n\nexport default Customer;\n","import React from 'react';\n\nconst IsEmpty = (props) => {\n\n\n    return (\n        <>\n\n            <h3 className=\"display-5\" style={{ fontSize: '1.4em', textAlign: 'center',marginTop: '10vh' }}>{props.children}</h3>\n        </>\n    );\n}\n\n\nexport default IsEmpty;","import React from 'react';\n\nimport { Modal, Button } from 'react-bootstrap';\n\nconst DeleteModal = (props) => {\n\n\n    return (\n        <Modal\n            style={{ border: 'none', color: '#3d4075', boxShadow: '0 0 10px red' }}\n            show={props.show}\n            onHide={props.onCancel}\n        >\n            <Modal.Header closeButton style={{ margin: 'auto 5px' }}>\n                <Modal.Title style={{ paddingLeft: '15px', color: '#3d4075', fontSize: '1.4em', fontWeight: 'bold' }}>Are you sure?</Modal.Title>\n            </Modal.Header>\n\n            <Modal.Body\n                style={{ paddingLeft: '30px' }}\n            >\n                {props.message ? props.message : 'This action cannot be undone.'}\n            </Modal.Body>\n\n\n            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'flex-end', padding: '10px' }}>\n                <Button variant=\"secondary\" onClick={props.onCancel}>\n                    <b>Cancel</b>\n                </Button>\n                {props.noRedButton ?\n                    null :\n                    <Button variant=\"danger\" onClick={props.onDelete}>\n                        <b>{props.redTitle || 'Delete'}</b>\n                    </Button>\n                }\n            </div>\n        </Modal >\n    )\n\n}\n\nexport default DeleteModal;","import React from 'react';\nimport { withRouter } from 'react-router-dom'\nimport { Pagination, Form, InputGroup, Row } from 'react-bootstrap'\n\nfunction Paging(props) {\n\n\n    const queryString = props.location.search;\n    const queryParams = new URLSearchParams(queryString);\n    let start = parseInt(queryParams.get('start') || 0);\n    let end = parseInt(queryParams.get('end') || 25);\n\n    const indexQuotient = parseInt(start / (end - start));\n    const [instancePerPage] = React.useState(end - start);\n    const [activePageIndex, setActivePageIndex] = React.useState(indexQuotient);\n    // const [start, setStart] = React.useState(0)\n    // const [end, setEnd] = React.useState(25);\n\n\n    React.useEffect(() => {\n\n        //todo here\n\n        // check if the query string is okay\n        //if not change to valid one\n        //okay? so replace state.\n\n\n\n        // console.log('start', start, 'end', end);\n\n\n\n        const queryNotValid =\n            start % 25 !== 0 ||\n            end % 25 !== 0 ||\n            (end - start !== 25 && end - start !== 50 && end - start !== 100) ||\n            end < 25 ||\n            start < 0\n\n        if (queryNotValid) {\n            start = 0;\n            end = 25;\n            queryParams.set('start', 0)\n            queryParams.set('end', 25)\n            props.history.push({ search: queryParams.toString() })\n        }\n    }, [])\n\n\n    const _pageNoClick = (pageIndex) => {\n        setActivePageIndex(pageIndex);\n\n        queryParams.set('start', instancePerPage * pageIndex)\n        queryParams.set('end', instancePerPage * (pageIndex + 1))\n\n        props.history.push({\n            search: queryParams.toString()\n        })\n        console.log(pageIndex)\n    }\n\n    const _change = async (e) => {\n        queryParams.set('start', 0)\n        queryParams.set('end', parseInt(e.target.value))\n        props.history.push({\n            search: queryParams.toString()\n        })\n    }\n\n    // console.log('active page index', activePageIndex)\n    const instanceCount = props.instanceCount;\n    let noOfPages = Math.ceil(instanceCount / instancePerPage);\n\n\n    if (activePageIndex >= noOfPages - 5) {\n        var dynamicPageArr = [\n            noOfPages - 5,\n            noOfPages - 4,\n            noOfPages - 3,\n            noOfPages - 2,\n        ]\n    } else {\n        var dynamicPageArr = [\n            activePageIndex - 1,\n            activePageIndex - 0,\n            activePageIndex + 1,//active page number\n            activePageIndex + 2,\n            activePageIndex + 3,\n        ]\n    }\n    // } else {\n    //     var dynamicPageArr = [\n    //         activePageIndex - 4,\n    //         activePageIndex - 3,\n    //         activePageIndex - 2,\n    //         activePageIndex - 1,\n    //     ]\n    // }\n\n    return (\n        <Row style={{ display: 'flex', justifyContent: 'space-between', padding: '40px 10px 0 10px   ' }}>\n            <InputGroup size=\"sm\" className=\"mb-3\" style={{ maxWidth: '120px', backgroundColor: 'white' }}>\n                <InputGroup.Prepend>\n                    <InputGroup.Text id=\"inputGroup-sizing-sm\">Show:</InputGroup.Text>\n                </InputGroup.Prepend>\n                <Form.Control\n                    style={{ height: '30.21px', backgrondColor: 'white' }}\n                    as=\"select\"\n                    value={instancePerPage}\n                    onChange={_change}\n                >\n                    <option value=\"25\">25</option>\n                    <option value=\"50\">50</option>\n                    <option value=\"100\">100</option>\n                </Form.Control>\n            </InputGroup>\n\n\n            <Pagination style={{ marginBottom: 0 }} size='sm'>\n\n                <Pagination.Prev\n                    onClick={() => _pageNoClick(activePageIndex - 1)}\n                    disabled={activePageIndex === 0}\n                />\n                {noOfPages <= 8 ?\n                    [1, 2, 3, 4, 5, 6, 7, 8].map((el, index) => {\n                        if (el > noOfPages) return;\n                        return <Pagination.Item\n                            disabled={noOfPages < el}\n                            key={index}\n                            active={activePageIndex === el - 1}\n                            onClick={() => _pageNoClick(el - 1)}\n                        >{el}</Pagination.Item>\n                    }) :\n                    <>\n                        {activePageIndex > 3 ?\n                            <>\n                                < Pagination.Item\n                                    active={activePageIndex === 0}\n                                    onClick={() => _pageNoClick(0)}\n                                >{1}</Pagination.Item><Pagination.Item\n                                    active={activePageIndex === 1}\n                                    onClick={() => _pageNoClick(1)}\n                                >{2}</Pagination.Item>\n                                <Pagination.Ellipsis disabled={true} />\n\n                            </>\n                            : null\n                        }\n\n                        {\n                            (activePageIndex > 3 ?\n                                dynamicPageArr :\n                                [1, 2, 3, 4, 5]).map((el, index) => {\n                                    return <Pagination.Item\n                                        disabled={noOfPages < el}\n                                        key={index}\n                                        active={activePageIndex === el - 1}\n                                        onClick={() => _pageNoClick(el - 1)}\n                                    >{el}</Pagination.Item>\n                                })\n                        }\n                        {noOfPages > 7 && (activePageIndex < noOfPages - 5) ? <Pagination.Ellipsis disabled={true} /> : null}\n                        {noOfPages > 7 ?\n                            <>\n                                < Pagination.Item\n                                    active={activePageIndex === noOfPages - 2}\n                                    onClick={() => _pageNoClick(noOfPages - 2)}\n                                >{noOfPages - 1}</Pagination.Item><Pagination.Item\n                                    active={activePageIndex === noOfPages - 1}\n                                    onClick={() => _pageNoClick(noOfPages - 1)}\n                                >{noOfPages}</Pagination.Item>\n                            </>\n                            : <>\n                                < Pagination.Item\n                                    disabled={noOfPages < 6}\n                                    active={activePageIndex === 7 - 2}\n                                    onClick={() => _pageNoClick(7 - 2)}\n                                >{6}</Pagination.Item><Pagination.Item\n                                    disabled={noOfPages < 7}\n                                    active={activePageIndex === 7 - 1}\n                                    onClick={() => _pageNoClick(7 - 1)}\n                                >{7}</Pagination.Item>\n                            </>\n                        }\n                    </>\n                }\n\n                <Pagination.Next\n                    onClick={() => _pageNoClick(activePageIndex + 1)}\n\n                    disabled={(activePageIndex === noOfPages - 1) || noOfPages === 0}\n                />\n            </Pagination>\n        </Row >\n    )\n}\n\nexport default withRouter(Paging)\n","export function getStartEnd(props) {\n    const queryParams = new URLSearchParams(props.location.search);\n    return {\n        \"start\": parseInt(queryParams.get('start')) || 0,\n        \"end\": (parseInt(queryParams.get('end')) || 25),\n    }\n}","import React from 'react';\n\nconst Num = (props) => {\n    let newNum = props.children.toLocaleString()\n\n\n\n    if (newNum % 1 !== 0 && typeof (newNum) === 'number') {\n        newNum = props.children.toFixed(2)\n    }\n\n    newNum = newNum.toLocaleString();\n\n    return (\n        <span>{newNum}</span>\n    )\n}\n\nexport default Num;","import { baseRequest } from '../base';\n// api for Invoices \n\nconst getCustomers = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/sales/customers/get', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\n\n\nconst deleteCustomers = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/sales/customers/delete', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\n\nconst createCustomer = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/sales/customer/add', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\n\n\nconst getCustomer = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/sales/customer/get', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\n\nconst updateCustomer = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/sales/customer/update', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\n\nconst getCustomerCategory = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/sales/customers/category', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\n\nexport { getCustomerCategory, getCustomers, createCustomer, deleteCustomers, updateCustomer, getCustomer }\n","import { baseRequest } from '../base';\n// api for Invoices \n\nconst getCustomerCategories = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/sales/customers/category', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\n\n\nconst deleteCustomerCategories = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/sales/customers/category/delete', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\n\nconst updateCustomerCategory = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/sales/customers/category/update', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\n\n\nconst createCustomerCategory = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/sales/customers/category/add', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\n\n\nconst getCustomerCategory = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/sales/customers/category/get', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\n\nexport { getCustomerCategory, getCustomerCategories, createCustomerCategory, deleteCustomerCategories, updateCustomerCategory }\n","import { baseRequest } from '../base';\n// api for Invoices \n\nconst getInvoices = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/sales/invoices/get', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\n\n\nconst deleteInvoices = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/sales/invoices/delete', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\n\nconst cancelInvoice = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/sales/invoice/update', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\n\n\nconst createInvoice = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/sales/invoice/add', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\n\nconst createQuickInvoice = async (data, signal) => {\n  try {\n    return await baseRequest('api/v2/sales/invoice/new', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\n\nconst getInvoice = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/sales/invoice/get', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\n\nconst updateInvoice = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/sales/invoice/update', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\nconst getInvoiceStatus = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/sales/invoice/status/get', 'GET', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\nconst exportBill = async (data, signal, todo) => {\n  try {\n    return await baseRequest('api/v1/sales/invoice/bill', 'POST', data, signal, todo);\n  } catch (e) {\n    alert(e)\n  }\n}\n\nconst syncToIRD = async (data, signal, todo) => {\n  try {\n    return await baseRequest('api/v1/sales/invoice/sync', 'POST', data, signal, todo);\n  } catch (e) {\n    alert(e)\n  }\n}\n\nexport {\n  getInvoiceStatus,\n  getInvoices,\n  createInvoice,\n  createQuickInvoice,\n  deleteInvoices,\n  cancelInvoice,\n  updateInvoice,\n  getInvoice,\n  exportBill,\n  syncToIRD\n}\n"],"sourceRoot":""}