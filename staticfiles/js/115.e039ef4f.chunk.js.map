{"version":3,"sources":["Pages/Taxes/Taxes.js"],"names":["Taxes","props","React","useState","taxesArr","setTaxesArr","loading","setLoading","showModal","taxId","deleteData","setDeleteData","instanceCount","setInstanceCount","useEffect","controller","AbortController","getTaxes","getTaxesSearchFilterObject","getStartEnd","signal","then","res","console","log","json","status","taxes","count","Jhilikka","fire","icon","title","error","background","catch","err","abort","_delete","idToBeDeleted","deleteTaxes","action","taxes_id","a","deleted","find","instance","id","tempArr","splice","indexOf","TaxesList","map","tax","index","key","scope","onClick","history","push","style","cursor","color","name","rate","tax_type","code","is_active","className","_triggerDeleteModal","Body","striped","responsive","isEmpty","show","onCancel","onDelete"],"mappings":"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","file":"static/js/115.e039ef4f.chunk.js","sourcesContent":["import React from 'react';\nimport { Row, Col, Card, Table, Modal, Button } from 'react-bootstrap';\n\nimport Aux from \"../../hoc/_Aux\";\n\nimport IsEmpty from '../../App/components/Reusables/IsEmpty';\nimport Loader from '../../App/components/Reusables/Loader';\nimport DeleteModal from '../../App/components/Reusables/DeleteModal';\nimport Jhilikka from '../../App/components/Reusables/Jhilikka';\nimport isEmpty from '../../validation/isEmpty';\nimport Spinner from '../../App/components/Reusables/Spinner';\nimport Paging from '../../App/components/Reusables/Paging';\nimport { getTaxes, deleteTaxes } from '../../api/misc';\nimport { getTaxesSearchFilterObject } from '../../helpers/getSearchFilterObject';\nimport TaxesFilter from '../../App/components/SearchFilters/TaxesFilter';\nimport { getStartEnd } from '../../helpers/getStartEnd';\n\nconst Taxes = (props) => {\n    const [taxesArr, setTaxesArr] = React.useState([]);\n    const [loading, setLoading] = React.useState(true)\n    const [deleteData, setDeleteData] = React.useState({ showModal: false, taxId: null });\n    const [instanceCount, setInstanceCount] = React.useState(0)\n\n    React.useEffect(() => {\n        const controller = new AbortController();\n        getTaxes({\n            \"action\": \"get\",\n            \"filter\": \"none\",\n            ...getTaxesSearchFilterObject(props),\n            ...getStartEnd(props),\n        }, controller.signal)\n            .then((res) => {\n                console.log(res);\n                if (res.json.status) {\n                    console.log(res.json.taxes)\n                    setTaxesArr(res.json.taxes);\n                    setInstanceCount(res.json.count)\n                    setLoading(false);\n                } else { Jhilikka.fire({ icon: 'error', title: res.json.error, background: '#ffe5de' }) }\n            })\n            .catch((err) => {\n                console.log(err)\n            });\n\n        return () => controller.abort();\n    }, []);\n\n\n\n    const _triggerDeleteModal = (id) => {\n        setDeleteData({ showModal: true, taxId: id });\n    }\n\n    const _delete = (idToBeDeleted) => {\n        deleteTaxes({ action: 'delete', taxes_id: [idToBeDeleted] })\n            .then(async (res) => {\n                console.log(res.json)\n                if (res.json.status) {\n                    const deleted = taxesArr.find(instance => instance.id === idToBeDeleted);\n                    let tempArr = taxesArr;\n                    tempArr.splice(tempArr.indexOf(deleted), 1);\n                    await setTaxesArr([...tempArr])\n                    await setDeleteData({ ...setDeleteData, showModal: false, taxId: null })\n                    Jhilikka.fire({ icon: 'success', title: 'Tax deleted successfully!', background: '#dffff0' })\n                } else {\n                    Jhilikka.fire({ icon: 'error', title: res.json.error, background: '#ffe5de' })\n                }\n            })\n            .catch((err) => {\n                console.log(err)\n            });\n    }\n\n\n    const TaxesList = taxesArr.map((tax, index) => {\n        return (\n            <tr key={index}>\n                <th scope=\"row\">{tax.id}</th>\n                <td\n                    onClick={() => {\n                        props.history.push('/tax/' + tax.id)\n                    }}\n                    style={{ cursor: 'pointer', color: '#55588b' }}>{tax.name}</td>\n                <td>{tax.rate}</td>\n                <td>{tax.tax_type}</td>\n                <td>{tax.code}</td>\n                <td>{tax.is_active ? 'Yes' : 'No'}</td>\n                <td>\n                    <i\n                        className=\"feather icon-edit text-c-green f-19 m-r-10\"\n                        style={{ cursor: 'pointer' }}\n                        onClick={() => props.history.push('/tax/update/' + tax.id)}\n                    />\n                    <i\n                        className=\"feather icon-trash-2 text-c-red f-19 m-r-5\"\n                        style={{ cursor: 'pointer' }}\n                        onClick={() => _triggerDeleteModal(tax.id)}\n                    />\n                </td>\n            </tr>\n        )\n    })\n\n    return (\n        <Aux>\n            <Row className=\"d-flex justify-content-between pageHead\" >\n                <h4 className=\"m-b-10\">Taxes</h4>\n                <div>\n                    <button\n                        className=\"btn btn-primary btn-sm shadow-2 mb-4\"\n                        onClick={() => props.history.push(`tax/create`)}\n                    > <i className=\"fa fa-plus text-c-white f-15 m-r-5\" />Add New</button>\n                </div>\n            </Row>\n            <Row>\n                <Col>\n\n                    <Card>\n                        <Card.Body>\n                            <TaxesFilter />\n                            <Table striped responsive>\n                                <thead>\n                                    <tr>\n                                        <th>#</th>\n                                        <th>Name</th>\n                                        <th>Rate</th>\n                                        <th>Tax Type</th>\n                                        <th>Tax Code</th>\n                                        <th>Enabled</th>\n                                        <th></th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {TaxesList || ''}\n                                </tbody>\n                            </Table>\n                            {isEmpty(taxesArr) && !loading ? <><IsEmpty>Data not available</IsEmpty><br /><br /></> : ''}\n                            {loading ? <Spinner /> : null}\n                            <Paging instanceCount={instanceCount} />\n\n                        </Card.Body>\n                    </Card >\n\n\n                    <DeleteModal\n                        show={deleteData.showModal}\n                        onCancel={() => setDeleteData({ ...deleteData, showModal: false })}\n                        onDelete={() => _delete(deleteData.taxId)}\n                    />\n\n\n                </Col>\n            </Row>\n        </Aux>\n    );\n}\n\nexport default Taxes;"],"sourceRoot":""}