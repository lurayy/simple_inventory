{"version":3,"sources":["Pages/Profile/Update.js","validation/profile.js","api/inventory/itemCategory.js","api/userManagement/users.js"],"names":["getBase64","file","cb","reader","FileReader","readAsDataURL","onload","result","onerror","error","console","log","connect","state","auth","props","React","useState","loading","setLoading","submitting","setSubmitting","username","email","fname","lname","password","password2","role","userData","setUserData","address","phone1","phone2","post","profileImage","profileImageName","userProfile","setUserProfile","errors","setErrors","useEffect","controller","AbortController","getUsers","action","filter","user_id","user","signal","then","res","json","status","me","users","first_name","last_name","role_str","myProfile","profile","pathArr","profile_image","split","imageName","length","imageUrl","DEMO","SERVER_URL","phone_number","phone_number2","e","catch","err","abort","_userDataChange","target","name","value","type","_userProfileChange","_profileImageChange","a","image","files","Loader","Row","Col","Card","Body","md","Form","Group","Label","Control","onChange","placeholder","ErrorBody","File","label","data-browse","custom","src","alt","style","height","minWidth","width","objectFit","onClick","className","cursor","border","borderRadius","Button","variant","history","push","disabled","isEmpty","test","isValid","validateProfileUpdate","requestJson","JSON","stringify","updateUser","Jhilikka","fire","icon","title","background","getItemCatagories","data","baseRequest","alert","deleteItemCategory","addItemCategory","getItemCategory","updateItemCategory","createUser","toggleUserActivity","getUser"],"mappings":"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","file":"static/js/101.2eefaa53.chunk.js","sourcesContent":["import React from 'react';\nimport { Row, Col, Card, Form, Button, InputGroup, FormControl, DropdownButton, Dropdown, FormFile } from 'react-bootstrap';\n\nimport Aux from \"../../hoc/_Aux\";\n\nimport ErrorBody from '../../App/components/Reusables/ErrorBody';\nimport { getItemCatagories } from '../../api/inventory/itemCategory';\nimport Loader from '../../App/components/Reusables/Loader';\n\nimport Jhilikka from '../../App/components/Reusables/Jhilikka';\nimport { getRoles } from '../../api/userManagement/roles';\nimport { createUser, getUser, getUsers, updateUser } from '../../api/userManagement/users'\nimport { validateUserCreation } from '../../validation/user';\nimport { connect } from 'react-redux';\nimport { validateProfileUpdate } from '../../validation/profile';\nimport DEMO from '../../globals/constant';\n\n\nfunction getBase64(file, cb) {\n    let reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = function () {\n        cb(reader.result)\n    };\n    reader.onerror = function (error) {\n        console.log('Error: ', error);\n    };\n}\n\nconst Update = (props) => {\n\n    const [loading, setLoading] = React.useState(true);\n    const [submitting, setSubmitting] = React.useState(false)\n    const [userData, setUserData] = React.useState({\n        username: '',\n        email: '',\n        fname: '',\n        lname: '',\n        password: '',\n        password2: '',\n        role: '',\n    })\n\n    const [userProfile, setUserProfile] = React.useState({\n        address: '',\n        phone1: '',\n        phone2: '',\n        post: '',\n        profileImage: '',\n        profileImageName: '',\n    });\n\n    const [errors, setErrors] = React.useState({});\n\n    React.useEffect(() => {\n        const controller = new AbortController();\n        getUsers({ action: 'get', filter: 'id', user_id: props.auth.user.user_id }, controller.signal)\n            .then(res => {\n                console.log(res);\n                if (res.json.status) {\n                    const me = res.json.users[0];\n                    setUserData({\n                        ...userData,\n                        username: me.username,\n                        email: me.email,\n                        fname: me.first_name,\n                        lname: me.last_name,\n                        role: me.role_str,\n                    })\n                    try {\n                        const myProfile = me.profile;\n                        const pathArr = myProfile.profile_image.split('/')\n                        const imageName = pathArr[pathArr.length - 1];\n                        const imageUrl = DEMO.SERVER_URL + myProfile.profile_image\n                        console.log(imageUrl)\n                        setUserProfile({\n                            ...userProfile,\n                            address: myProfile.address,\n                            phone1: myProfile.phone_number,\n                            phone2: myProfile.phone_number2,\n                            post: myProfile.post,\n                            profileImage: '',\n                            profileImageName: imageUrl,\n                        })\n                        console.log(imageName)\n\n                    } catch (e) {\n                        console.log(e)\n                    }\n                    setLoading(false)\n                }\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        return () => controller.abort()\n    }, []);\n\n    const _userDataChange = (e) => {\n        const { name, type, value } = e.target;\n        setUserData({ ...userData, [name]: value });\n        setErrors({ ...errors, [name]: '' })\n    }\n\n    const _userProfileChange = (e) => {\n        console.log('here it changes')\n        const { name, type, value } = e.target;\n        setUserProfile({ ...userProfile, [name]: value });\n        setErrors({ ...errors, [name]: '' });\n    }\n    const _profileImageChange = async (e) => {\n        const image = e.target.files[0];\n        console.log(image)\n        getBase64(image, (result) => {\n            // console.log(result);\n            setUserProfile({ ...userProfile, profileImage: result, profileImageName: result, })\n        })\n    }\n\n    const _removeProfileImage = () => {\n        setUserProfile({ ...userProfile, profileImage: 'remove', profileImageName: null, })\n    }\n\n\n    console.log(userProfile)\n\n    const _submit = () => {\n        //check if there are errors\n        const { isValid, errors } = validateProfileUpdate(userData);\n        if (!isValid) {\n            console.log(errors);\n            setErrors({ ...errors })\n            return;\n        };\n\n        console.log('no errros');\n\n        const requestJson = {\n            \"action\": \"update\",\n            \"email\": userData.email,\n            \"password\": userData.password || null,\n            \"first_name\": userData.fname,\n            \"last_name\": userData.lname,\n            \"profile\": {\n                \"address\": userProfile.address,\n                \"phone_number\": userProfile.phone1,\n                \"phone_number2\": userProfile.phone2,\n                \"post\": userProfile.post,\n                \"profile_image\": userProfile.profileImage,\n            }\n        }\n\n        console.log(JSON.stringify(requestJson))\n        //if no errros api call\n        updateUser(requestJson)\n            .then(async (res) => {\n                console.log(res);\n                if (res.json.status) {\n                    Jhilikka.fire({ icon: 'success', title: 'User Updated successfully!', background: '#dffff0' })\n                    props.history.push('/profile')\n                } else { Jhilikka.fire({ icon: 'error', title: res.json.error, background: '#ffe5de' }) }\n            }).catch((err) => {\n                setSubmitting(false)\n            });\n    }\n\n    if (loading) return <Loader />\n    return (\n        <Aux>\n            <Row>\n                <Col>\n                    <Card>\n                        <Card.Body>\n                            <h5>Update Profile</h5>\n                            <hr />\n                            <Row>\n\n                                <Col md={6}>\n                                    <Form.Group  >\n                                        <Form.Label>Username*</Form.Label>\n                                        <Form.Control name=\"username\" value={userData.username} onChange={_userDataChange} type=\"text\" placeholder=\"Username\" />\n                                        <ErrorBody>{errors.username}</ErrorBody>\n                                    </Form.Group>\n                                </Col>\n\n\n                                <Col md={6}>\n                                    <Form.Group  >\n                                        <Form.Label>Email*</Form.Label>\n                                        <Form.Control name=\"email\" value={userData.email} onChange={_userDataChange} type=\"text\" placeholder=\"Email\" />\n                                        <ErrorBody>{errors.email}</ErrorBody>\n                                    </Form.Group>\n                                </Col>\n                                <Col md={6}>\n                                    <Form.Group  >\n                                        <Form.Label>First Name*</Form.Label>\n                                        <Form.Control name=\"fname\" value={userData.fname} onChange={_userDataChange} type=\"text\" placeholder=\"First Name\" />\n                                        <ErrorBody>{errors.fname}</ErrorBody>\n                                    </Form.Group>\n                                </Col>\n\n                                <Col md={6}>\n                                    <Form.Group  >\n                                        <Form.Label>Last Name*</Form.Label>\n                                        <Form.Control name=\"lname\" value={userData.lname} onChange={_userDataChange} type=\"text\" placeholder=\"Last Name\" />\n                                        <ErrorBody>{errors.lname}</ErrorBody>\n                                    </Form.Group>\n                                </Col>\n\n                                <Col md={6}>\n                                    <Form.Group  >\n                                        <Form.Label>Password*</Form.Label>\n                                        <Form.Control name=\"password\" value={userData.password || ''} onChange={_userDataChange} type=\"password\" placeholder=\"Password\" />\n                                        <ErrorBody>{errors.password}</ErrorBody>\n                                    </Form.Group>\n                                </Col>\n\n\n                                <Col md={6}>\n                                    <Form.Group  >\n                                        <Form.Label>Confirm Password*</Form.Label>\n                                        <Form.Control name=\"password2\" value={userData.password2 || ''} onChange={_userDataChange} type=\"password\" placeholder=\"Confirm Password\" />\n                                        <ErrorBody>{errors.password2}</ErrorBody>\n                                    </Form.Group>\n                                </Col>\n\n                            </Row>\n                            <br />\n                            <h5>Extra Details</h5>\n                            <hr />\n                            <Row>\n                                <Col md={6}>\n                                    <Form.Group  >\n                                        <Form.Label>Address</Form.Label>\n                                        <Form.Control name=\"address\" value={userProfile.address || ''} onChange={_userProfileChange} type=\"text\" placeholder=\"Address\" />\n                                        <ErrorBody>{errors.address}</ErrorBody>\n                                    </Form.Group>\n                                </Col>\n                                <Col md={6}>\n                                    <Form.Group  >\n                                        <Form.Label>Phone No     1</Form.Label>\n                                        <Form.Control name=\"phone1\" value={userProfile.phone1 || ''} onChange={_userProfileChange} type=\"text\" placeholder=\"Phone No 1\" />\n                                        <ErrorBody>{errors.phone1}</ErrorBody>\n                                    </Form.Group>\n                                </Col>\n\n                                <Col md={6}>\n                                    <Form.Group  >\n                                        <Form.Label>Phone No 2</Form.Label>\n                                        <Form.Control name=\"phone2\" value={userProfile.phone2 || ''} onChange={_userProfileChange} type=\"text\" placeholder=\"Phone No 2\" />\n                                        <ErrorBody>{errors.phone2}</ErrorBody>\n                                    </Form.Group>\n                                </Col>\n\n                                <Col md={6}>\n                                    <Form.Group  >\n                                        <Form.Label>Post</Form.Label>\n                                        <Form.Control name=\"post\" value={userProfile.post || ''} onChange={_userProfileChange} type=\"text\" placeholder=\"Post\" />\n                                        <ErrorBody>{errors.post}</ErrorBody>\n                                    </Form.Group>\n                                </Col>\n\n\n                                <Col md={4}>\n                                    <Form.Group  >\n                                        <Form.Label>Profile Image</Form.Label>\n                                        <Form.File\n                                            label={userProfile.profileImageName ? 'Change photo' : \"No file selected\"}\n                                            data-browse=\"Browse\"\n                                            custom\n                                            onChange={_profileImageChange}\n                                        />\n                                        <ErrorBody>{errors.profileImage}</ErrorBody>\n                                    </Form.Group>\n                                </Col>\n                                {userProfile.profileImageName ?\n                                    <Col md={2}>\n                                        <Form.Group  >\n                                            <Form.Label>&#x200B;</Form.Label>\n                                            <div >\n                                                <img\n                                                    src={userProfile.profileImageName}\n                                                    alt=\"\"\n                                                    style={{ height: '42px', minWidth: '42px', width: '42px', objectFit: 'cover' }}\n                                                />\n                                                <i\n                                                    onClick={_removeProfileImage}\n                                                    className=\"feather icon-x text-c-red f-15 m-l-5 m-t-6\"\n                                                    style={{ cursor: 'pointer', border: '1px solid red', borderRadius: '3px' }}\n                                                />\n                                            </div>\n                                        </Form.Group>\n                                    </Col> :\n                                    null\n                                }\n\n\n                            </Row>\n                            <div className=\"d-flex justify-content-end\" >\n                                <Button\n                                    variant=\"warning\"\n                                    onClick={() => { props.history.push('/profile') }}\n                                >\n                                    Cancel\n                                    </Button>\n                                <Button\n                                    disabled={submitting}\n                                    variant=\"primary\"\n                                    onClick={_submit}\n                                >\n                                    {submitting ? <><i className=\"fa fa-spinner text-c-white f-15 fa-pulse m-l-1\"></i>Submitting</> : 'Submit'}\n\n                                </Button>\n                            </div>\n\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        </Aux>\n    );\n}\n\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps)(Update);","import isEmpty from \"./isEmpty\"\n\n\nconst validateProfileUpdate = (userData) => {\n    const errors = {}\n\n    if (isEmpty(userData.fname)) {\n        errors.fname = 'First Name cannot be empty.'\n    }\n    if (isEmpty(userData.lname)) {\n        errors.lname = 'Last name can\\'t be empty.'\n    }\n    if (isEmpty(userData.username)) {\n        errors.username = 'User name can\\'t be empty.'\n    }\n    if (isEmpty(userData.email)) {\n        errors.email = 'Email can\\'t be empty.'\n    }\n\n    if (userData.email && !/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(userData.email)) {\n        errors.email = 'Email not valid.'\n\n    }\n    if (userData.password2 && isEmpty(userData.password)) {\n        errors.password = 'Password can\\'t be empty.'\n    }\n    if (isEmpty(userData.password2) && userData.password) {\n        errors.password2 = 'Confirm the password.'\n    }\n\n    if (userData.password && userData.password2 && userData.password !== userData.password2) {\n        errors.password2 = 'Passwords must match.'\n    }\n\n\n\n    //Will be valid if the errors are empty\n    const isValid = isEmpty(errors);\n    return { isValid, errors }\n}\n\n\nexport { validateProfileUpdate }\n","import { baseRequest } from '../base';\n// api for items \n\n\n\nconst getWeightUnit = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/inventory/items/categories/get', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\n\n\n\n\nconst getItemCatagories = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/inventory/items/categories/get', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\n\n\n\nconst deleteItemCategory = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/inventory/items/categories/delete', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\n\nconst addItemCategory = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/inventory/items/category/add', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\n\n\nconst getItemCategory = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/inventory/items/category/get', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\n\n\nconst getItemCategoryTree = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/inventory/items/category/get', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n}\n\nconst updateItemCategory = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/inventory/items/category/update', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\n\nexport {\n  getWeightUnit,\n  getItemCatagories,\n  deleteItemCategory,\n  addItemCategory,\n  getItemCategory,\n  updateItemCategory,\n  getItemCategoryTree\n}\n","import { baseRequest } from '../base'\n\n//api for user management by the admin or manager (managing others)\n\nconst createUser = async (data, signal) => {\n    try {\n        return await baseRequest(\"api/v1/user/add\", \"POST\", data, signal);\n    } catch (e) {\n        alert(e);\n    }\n};\n\n\nconst getUsers = async (data, signal) => {\n    try {\n        return await baseRequest(\"api/v1/user/list\", \"POST\", data, signal);\n    } catch (e) {\n        alert(e);\n    }\n};\n\n\n\nconst updateUser = async (data, signal) => {\n    try {\n        return await baseRequest(\"api/v1/user/update\", \"POST\", data, signal);\n    } catch (e) {\n        alert(e);\n    }\n};\n\n\nconst toggleUserActivity = async (data, signal) => {\n    try {\n        return await baseRequest(\"api/v1/user/delete\", \"POST\", data, signal);\n    } catch (e) {\n        alert(e);\n    }\n};\n\nconst getUser = async (data, signal) => {\n    try {\n        return await baseRequest(\"api/v1/user/list\", \"POST\", data, signal);\n    } catch (e) {\n        alert(e);\n    }\n};\n\n\n\n\nexport {\n    createUser,\n    getUser,\n    updateUser,\n    getUsers,\n    toggleUserActivity,\n}"],"sourceRoot":""}