{"version":3,"sources":["Pages/GiftCardCategories/GiftCardCategory.js","App/components/Reusables/ErrorBody.js","api/payment/giftCards.js","api/inventory/placeApi.js"],"names":["GiftCardCategory","props","React","useState","submitting","setSubmitting","name","isActive","categoryData","setCategoryData","errors","setErrors","useEffect","controller","AbortController","getGiftCardCategory","action","gift_card_category","match","params","id","signal","then","res","console","log","json","status","category","is_active","catch","err","abort","Body","md","Group","Label","Control","value","onChange","e","target","type","placeholder","className","style","marginBottom","checked","variant","onClick","history","push","disabled","isEmpty","requestJson","updateGiftCardCategory","Jhilikka","fire","icon","title","background","error","ErrorBody","children","Text","color","createGiftCardCategory","data","a","baseRequest","alert","getGiftCardCategories","deleteGiftCardCategories","getGiftCards","getGiftCard","createGiftCard","updateGiftCard","deleteGiftCards","deleteUniqueCards","reedemGiftCard","getReedemHistory","getPlaces","deletePlaces","createPlace","getPlace","updatePlace"],"mappings":"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","file":"static/js/95.c6881773.chunk.js","sourcesContent":["import React from 'react';\nimport { Row, Col, Card, Form, Button, InputGroup, FormControl, DropdownButton, Dropdown } from 'react-bootstrap';\n\nimport Switch from \"react-switch\";\n\n\nimport ErrorBody from '../../App/components/Reusables/ErrorBody';\nimport Jhilikka from '../../App/components/Reusables/Jhilikka';\nimport isEmpty from '../../validation/isEmpty';\nimport { createPlace } from '../../api/inventory/placeApi';\nimport { createGiftCardCategory, updateGiftCardCategory, getGiftCardCategory } from '../../api/payment/giftCards';\n\nconst GiftCardCategory = (props) => {\n\n\n    const [submitting, setSubmitting] = React.useState(false)\n    const [categoryData, setCategoryData] = React.useState({\n        name: '',\n        isActive: true,\n    })\n    const [errors, setErrors] = React.useState({});\n\n\n    React.useEffect(() => {\n        const controller = new AbortController();\n        getGiftCardCategory({ action: 'get', gift_card_category: props.match.params.id }, controller.signal)\n            .then(res => {\n                console.log(res)\n                if (res.json.status) {\n                    console.log('here is the message')\n                    setCategoryData({\n                        ...categoryData,\n                        name: res.json.category[0].name,\n                        isActive: res.json.category[0].is_active,\n                    })\n                }\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        return () => controller.abort();\n    }, [])\n\n\n    const _categoryDataChange = (e) => {\n        console.log('chaing', e.target.value);\n        setErrors({ ...errors, [e.target.name]: '' })\n        setCategoryData({ ...categoryData, [e.target.name]: e.target.value })\n    }\n\n    const _activeChange = (checked) => {\n        console.log(checked);\n        setCategoryData({ ...categoryData, isActive: checked })\n    }\n\n\n\n    const _submit = () => {\n\n        if (isEmpty(categoryData.name)) {\n            setErrors({ ...errors, name: 'Category name cannot be empty!' });\n            return;\n        }\n\n        console.log('no errros');\n\n        setSubmitting(true)\n\n        //if no errros api call\n        const requestJson = {\n            \"action\": \"update\",\n            \"name\": categoryData.name,\n            \"gift_card_category\": categoryData.id || props.match.params.id,\n            \"is_active\": categoryData.isActive\n        }\n\n        updateGiftCardCategory(requestJson)\n            .then((res) => {\n                console.log(res)\n                if (res.json.status) {\n                    Jhilikka.fire({ icon: 'success', title: 'Gift Card category Updated successfully!', background: '#dffff0' })\n                    props.history.push('/gift-card-categories');\n                } else {\n                    setSubmitting(false)\n                    Jhilikka.fire({ icon: 'error', title: res.json.error, background: \"#ffe5d6\" })\n                }\n            }).catch((err) => {\n                setSubmitting(false)\n                console.log(err)\n            });\n    }\n\n    return (\n        <>\n            <Row>\n                <Col>\n                    <Card>\n                        <Card.Body>\n                            <h5>Gift Card Category</h5>\n                            <hr />\n\n                            <Row>\n\n                                <Col md={6}>\n                                    <Form.Group  >\n                                        <Form.Label>Name*</Form.Label>\n                                        <Form.Control name=\"name\" value={categoryData.name} onChange={_categoryDataChange} type=\"text\" placeholder=\"Category Name\" />\n                                        <ErrorBody>{errors.name}</ErrorBody>\n                                    </Form.Group>\n                                </Col>\n                                <Col md={6}>\n                                    <Form.Group className=\"d-flex flex-column justify-content-end\">\n                                        <Form.Label style={{ marginBottom: '15px' }}>Is Active?</Form.Label>\n                                        <Switch onChange={_activeChange} checked={categoryData.isActive} />\n                                    </Form.Group>\n                                </Col>\n                            </Row>\n\n                            <div className=\"d-flex justify-content-end\" >\n                                <Button\n                                    variant=\"warning\"\n                                    onClick={() => { props.history.push('/gift-card-categories') }}\n                                >\n                                    Cancel\n                                    </Button>\n                                <Button\n                                    disabled={submitting}\n                                    variant=\"primary\"\n                                    onClick={_submit}\n                                >\n                                    {submitting ? <><i className=\"fa fa-spinner text-c-white f-15 fa-pulse m-l-1\"></i>Updating</> : 'Update'}\n                                </Button>\n                            </div>\n\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        </>\n    );\n}\n\n\nexport default GiftCardCategory;","import React from 'react';\n\nimport { Form } from 'react-bootstrap';\nimport isEmpty from '../../../validation/isEmpty'\n\nconst ErrorBody = (props) => {\n\n    if (isEmpty(props.children)) {\n        return <span></span>\n    }\n\n    return (\n        <>\n            <Form.Text style={{ color: 'red' }} >\n                {props.children}\n            </Form.Text>\n        </>\n    );\n}\n\n\nexport default ErrorBody;\n\n\n","import { baseRequest } from '../base';\n\n\n\nconst createGiftCardCategory = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/payment/giftcards/category/add', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\nconst getGiftCardCategories = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/payment/giftcards/categories/get', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\nconst getGiftCardCategory = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/payment/giftcards/category/get', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\nconst updateGiftCardCategory = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/payment/giftcards/category/update', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\nconst deleteGiftCardCategories = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/payment/giftcards/category/delete', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\n\n\n\n\nconst getGiftCards = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/payment/giftcards/get', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\nconst getGiftCard = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/payment/giftcard/get', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\nconst createGiftCard = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/payment/giftcard/add', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\nconst updateGiftCard = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/payment/giftcard/update', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\nconst deleteGiftCards = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/payment/giftcards/delete', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n}\nconst deleteUniqueCards = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/payment/giftcard/uniquecard/delete', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\n\n\n\nconst validateGiftCard = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/payment/giftcards/validate', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\nconst reedemGiftCard = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/payment/giftcard/redeem', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\nconst getReedemHistory = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/payment/giftcard/redeem/history', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\n\n\n\n\nexport {\n  createGiftCardCategory,\n  getGiftCardCategories,\n  getGiftCardCategory,\n  updateGiftCardCategory,\n  deleteGiftCardCategories,\n\n  createGiftCard,\n  getGiftCards,\n  getGiftCard,\n  updateGiftCard,\n  deleteGiftCards,\n  deleteUniqueCards,\n\n  validateGiftCard,\n  reedemGiftCard,\n  getReedemHistory\n}\n","import { baseRequest } from '../base';\n// api for items \n\nconst getPlaces = async (data, signal) => {\n    try {\n      return await baseRequest('api/v1/inventory/places/get','POST', data, signal);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  \n  const deletePlaces = async (data, signal) => {\n    try {\n      return await baseRequest('api/v1/inventory/places/delete','POST', data, signal);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const createPlace = async (data, signal) => {\n      try {\n        return await baseRequest('api/v1/inventory/place/add','POST', data, signal);\n      } catch(e){\n        alert(e)\n      }\n  };\n  \n  \n  const getPlace = async (data, signal) => {\n    try {\n      return await baseRequest('api/v1/inventory/place/get','POST', data, signal);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const updatePlace = async (data, signal) => {\n    try {\n      return await baseRequest('api/v1/inventory/place/update','POST', data, signal);\n    } catch(e){\n      alert(e)\n    }\n  };\n\n  const assignPlace = async (data, signal) => {\n    try { \n      return await  baseRequest('api/v1/inventory/places/assign','POST', data, signal);\n    } catch (e){\n      alert(e)\n    }\n  }\n  \nexport {getPlaces, createPlace, deletePlaces, updatePlace, getPlace, assignPlace}\n  "],"sourceRoot":""}