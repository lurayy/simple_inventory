{"version":3,"sources":["server.js","api/base.js","api/user.js","actions/index.js","components/users/login.jsx","components/users/logout.jsx","api/inventory/vendorApi.js","components/vendors/vendorCreation.jsx","components/users/userCreation.jsx","components/list.jsx","components/users/userList.jsx","components/users/index.jsx","components/vendors/vendorList.jsx","components/vendors/index.jsx","api/sales/customer.js","components/customer/customerList.jsx","components/loading.js","components/customer/index.jsx","components/customer/customerCreation.jsx","api/inventory/purchaseOrder.js","api/inventory/purchaseItem.js","api/misc.js","api/inventory/itemApi.js","components/purchaseOrder/popUpEdit.jsx","components/purchaseOrder/purchaseOrderList.jsx","components/purchaseOrder/index.jsx","components/purchaseOrder/purchaseOrderCreation.jsx","api/sales/invoice.js","api/sales/invoiceItem.js","api/inventory/placeApi.js","components/invoices/popUpEdit.jsx","components/invoices/invoiceListing.jsx","components/invoices/index.jsx","components/invoices/invoiceCreation.jsx","components/discounts/discountList.jsx","components/discounts/index.jsx","components/discounts/discountCreation.jsx","components/taxes/taxList.jsx","components/taxes/index.jsx","components/taxes/taxCreation.jsx","api/inventory/itemCatagory.js","components/items/itemList.jsx","components/items/index.jsx","components/items/itemCreation.jsx","components/itemCatagories/itemCatagoryList.jsx","components/itemCatagories/index.jsx","components/itemCatagories/itemCreation.jsx","components/placement/placeList.jsx","components/placement/index.jsx","components/placement/placeCreation.jsx","components/dashboard.js","components/index.jsx","App.js","serviceWorker.js","reducers/userReducer.js","reducers/usersReducer.js","reducers/index.js","index.js","components/purchaseOrder/css/popUp.module.css"],"names":["dev","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","setCookie","value","days","expires","date","Date","setTime","getTime","toUTCString","getResponse","response","a","headers","get","json","baseRequest","url","method","body","signal","fetch","URL","serverUrl","credentials","myResponse","loginUser","data","alert","logoutUser","createUser","getUsers","getUser","updateUser","getCurrentUser","loggedIn","type","payload","Login","props","state","username","password","status","onChange","bind","onSubmit","this","current_state","user","isLoggedIn","window","location","href","e","setState","target","preventDefault","JSON","stringify","then","dispatch","Container","component","maxWidth","CssBaseline","Avatar","style","padding","margin","backgroundColor","noValidate","TextField","variant","fullWidth","id","label","autoComplete","autoFocus","FormControlLabel","control","Checkbox","color","Button","Alert","severity","display","Grid","container","Box","mt","Component","connect","Logout","res","history","push","getVendors","createVendor","deleteVendors","updateVendor","getVendor","VendorCreation","update","ele","console","log","required","UserCreation","user_type","password2","defaultValue","useStyles","makeStyles","table","minWidth","List","page","temp","classes","header","rows","no_data","back","pagination","IconButton","onClick","aria-label","disabled","TableContainer","Paper","Table","className","TableHead","TableRow","map","TableCell","key","TableBody","row","popUp","uuid","prop","justify","alignItems","item","xs","UserList","columns","user_data","data_main","list","popUpRender","placeholder","first_name","last_name","email","is_active","userDelete","userRevive","Users","update_table","request_json","by","x","start","end","getUsersData","render_after_load","users","to","loaded","VendorList","vendorDelete","vendor","middle_name","website","tax_number","phone1","phone2","address","Vendors","getVendorsData","vendors","getCustomers","deleteCustomers","createCustomer","getCustomer","updateCustomer","styles","theme","root","flexGrow","paper","spacing","textAlign","palette","text","secondary","CustomerList","customerDelete","Swal","fire","icon","title","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","showConfirmButton","timer","size","alignContent","xm","md","FormControl","InputLabel","htmlFor","Input","customer","withStyles","left","bottom","right","LoadingIcon","React","useState","progress","setProgress","useEffect","setInterval","oldProgress","clearInterval","direction","minHeight","CircularProgress","Customers","getCustomersData","customers","textDecoration","CustomerCreation","getPurchaseOrders","deletePurchaseOrder","createPurchaseOrder","getPurchaseOrder","updatePurchaseOrder","deletePurchaseItems","createPurchaseItem","updatePurchaseItem","getDiscounts","deleteDiscounts","createDiscount","getDiscount","updateDiscount","getTaxes","deleteTaxes","createTax","getTax","updateTax","getPurchaseOrderStatus","getItems","deleteItems","createItem","getItem","updateItem","PopUpEdit","purchase_order","converter","invoiced_on","completed_on","purchase_items","refreshTable","getItemData","selectItem","searchItem","addPurchaseItem","invoiceHandler","completeHandler","searchVendor","selectVendor","onChangePI","postPurchaseItem","deletePurchaseItem","parse","error","current","is_new","purchase_items_id","p_list","items","item_selection","itemPopUp","trigger","closeOnDocumentClick","dropdown_content","popUpItem","item_name","new","quantity","defective","discount_type","discount","purchase_price","vendor_selection","vendorPopup","vendor_name","selected","added_by_name","total_cost","parseInt","delete","PurchaseOrderList","purchaseOrderDelete","PurchaseOrders","getPurchaseOrdersData","purchaseOrders","PurchaseOrderCreation","toISOString","addPurchaseOrder","getInvoices","deleteInvoices","createInvoice","getInvoice","updateInvoice","getInvoiceStatus","deleteInvoiceItems","createInvoiceItem","updateInvoiceItem","getPlaces","deletePlaces","createPlace","getPlace","updatePlace","discount_columns","tax_columns","add_discount_columns","add_tax_columns","invoice","due_on","invoice_items","stateman","addInvoiceItem","dueOnHandler","getCustomerData","searchCustomer","selectCustomer","postInvoiceItem","deleteInvoiceItem","onChangePlace","removeEntry","addEntryDiscount","addEntryTax","dis","applied_discount","pop","temp2","applied_tax","taxes","getPlacesData","filter","el","update_stock","sold_from","p","string","sold_from_selection","invoice_items_id","discount_start","discount_end","discount_page","getDiscountsData","tax_start","tax_end","tax_page","getTaxesData","discount_selection","tax_selection","sales_price","places","place_selection","selectPlace","str_placed_on","stocks","stock_selection","stockValue","purchase_item","selectStock","str","addPopupDiscount","addPopupTax","discounts","cellSpacing","cellPadding","colSpan","min","price","tax_total","sub_total","discount_amount","total_without_discount","total","discount_loaded","tax_loaded","customer_selection","customerPopup","spaceing","customer_name","InputProps","readOnly","order_number","total_amount","discount_total","paid_amount","additional_discount","Select","MenuItem","InvoiceListing","invoiceDelete","Invoices","getInvoiceData","invoices","InvoiceCreation","pathname","DiscountList","discountDelete","code","formControl","rate","Discounts","DiscountCreation","TaxList","taxDelete","tax","tax_type","Taxes","TaxCreation","discont_type","getItemCatagories","deleteItemCatagory","createItemCatagory","getItemCatagory","updateItemCatagory","ItemList","itemDelete","catagories","catagory","stock","sold","Items","getItemsData","ItemCreation","ItemCatagoryList","items_c","itemCatDelete","popUptemp","updatetemp","itemCatagory","ItemCatagories","getItemCatagoriesData","item_catagories","PlaceList","second_columns","placeDelete","place","Placements","PlaceCreation","toolbar","paddingRight","toolbarIcon","justifyContent","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","height","overflow","paddingTop","paddingBottom","flexDirection","fixedHeight","Dashboard","open","setOpen","useSelector","AppBar","clsx","Toolbar","edge","Typography","noWrap","Drawer","Divider","ListItem","button","ListItemIcon","ListItemText","primary","path","ItemCatagoryCreation","Places","Index","swal","render_x","loading","App","Boolean","hostname","match","initState","userReducer","action","usersReducer","rootReducers","combineReducers","store","createStore","rootReducer","applyMiddleware","thunkMiddleware","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.7a9eff2c.chunk.js","sourcesContent":["// const prod = `${window.location.protocol}//${window.location.host}/`;\n// const dev = \"http://localhost:8000/\";\nconst dev =\"https://simpleim.herokuapp.com/\"\n// const serverUrl = process.env.NODE_ENV === \"development\" ? dev : prod;\nexport default dev;\n","import serverUrl from \"../server\";\n\nfunction getCookie(name) {\n  var cookieValue = null;\n  if (document.cookie && document.cookie !== \"\") {\n    var cookies = document.cookie.split(\";\");\n    for (var i = 0; i < cookies.length; i++) {\n      var cookie = cookies[i].trim();\n      if (cookie.substring(0, name.length + 1) === name + \"=\") {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n  return cookieValue;\n}\n\nfunction setCookie(name,value,days) {\n  var expires = \"\";\n  if (days) {\n      var date = new Date();\n      date.setTime(date.getTime() + (days*24*60*60*1000));\n      expires = \"; expires=\" + date.toUTCString();\n  }\n  document.cookie = name + \"=\" + (value || \"\")  + expires + \"; path=/\";\n}\n\nconst getResponse = async response => {\n  const contentType = response.headers.get(\"content-type\");\n  if (contentType === \"application/json\") {\n    const json = await response.json();\n    return { response, json };\n  }\n  return { response };\n};\n\nconst baseRequest = async (url, method, body, signal) => {\n    var cookie = getCookie(\"x-csrftoken\")\n    if (cookie === null) {\n      const response = await fetch(new URL('apiv1/users/verify', serverUrl), {\n        method: 'GET'\n      });\n      const temp = await getResponse(response)\n      setCookie('x-csrftoken', temp.json['x-csrftoken'], 2)\n    }\n    cookie = getCookie(\"x-csrftoken\")\n    const response = await fetch(new URL(url, serverUrl), {\n        method: method,\n        body: body,\n        signal: signal,\n        credentials: \"include\",\n        headers: {\n        \"x-csrftoken\": cookie,\n        \"Content-Type\": \"application/json\"\n        }\n    });\n    const myResponse = await getResponse(response);\n    return myResponse.json;\n};\n\n\nexport { baseRequest };","import { baseRequest } from './base';\n\nconst loginUser = async data => {\n    try {\n      return await baseRequest(\"apiv1/users/login\", \"POST\", data);\n    } catch (e) {\n      alert(e);\n    }\n  };\n\nconst csrfToken = async () => {\n    try {\n        return await baseRequest(\"apiv1/users/verify\", \"GET\");\n      } catch (e) {\n        alert(e);\n      }\n    };\n\nconst logoutUser = async data => {\n  try {\n    return await baseRequest('apiv1/users/logout', \"GET\");\n  } catch(e){\n    alert(e);\n  }\n};\n\nconst createUser = async data => {\n  try {\n    return await baseRequest('apiv1/users/create','POST', data);\n  } catch(e){\n    alert(e)\n  }\n};\n\nconst getUsers = async data => {\n  try {\n    return await baseRequest('apiv1/users/get','POST', data);\n  } catch(e){\n    alert(e)\n  }\n};\n\n\nconst getUser = async data => {\n  try {\n    return await baseRequest('apiv1/users/get/0','POST', data);\n  } catch(e){\n    alert(e)\n  }\n};\n\nconst updateUser = async data => {\n  try{\n    return await baseRequest('apiv1/users/get/0', 'POST', data);\n  } catch (e){\n    alert(e)\n  }\n};\n\n\nconst getCurrentUser = async data => {\n  try{\n    return await baseRequest('apiv1/users/current', 'POST', data);\n  } catch (e){\n    alert(e)\n  }\n};\n\nexport { loginUser, csrfToken, logoutUser, getUsers, createUser, getUser, updateUser, getCurrentUser }","export const logout = () => {\n    return {\n        type: 'logout'\n    };\n}\n\nexport const loggedIn = (data) => {\n    return {\n        type: 'loggedIn',\n        payload: data\n    };\n}\n\nexport const setUsers = (data) => {\n    return{\n        type: 'setUsers',\n        payload: data\n    }\n}\n\n\nexport const setVendors = (data) => {\n    return{\n        type: 'setVendors',\n        payload: data\n    }\n}","import React, { Component } from 'react';\nimport { loginUser, getCurrentUser } from '../../api/user';\nimport {  connect } from 'react-redux';\nimport { loggedIn } from '../../actions';\n\n//material-ui import button\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\n\nimport Alert from '@material-ui/lab/Alert';\n\nclass Login extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            username:'',\n            password:'',\n            status:'',\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n    componentDidMount() {\n        if (this.props.current_state.user.isLoggedIn === true){\n          window.location.href=\"/\"\n        }\n    }\n    onChange(e)\n    {\n        this.setState({[e.target.name]: [e.target.value]})\n    }\n    async onSubmit(e){\n        e.preventDefault();\n        const data = {\n            username: this.state.username[0],\n            password: this.state.password[0]\n        }\n        loginUser(JSON.stringify(data)).then(data => {\n            try{\n                if (data['status']){\n                    getCurrentUser().then(data => {\n                        this.props.dispatch(loggedIn(data['user_data']))\n                    })\n                    window.location.href=\"/\"\n                  }else if ((this.state.username===\"\" && this.state.password===\"\")|\n                (this.state.username===\"\" || this.state.password===\"\")){\n                        this.setState((state) => {\n                            return {status: \"Username and password empty\"};\n                          });\n                }\n                else if (data['status']=== false){\n                    this.setState((state) => {\n                        return {status: data['msg']};\n                      });\n                }\n            }catch(e){\n                alert(e)\n            }\n        })       \n    }\n\n    render() {\n      \n        return (\n            <Container component=\"main\" maxWidth=\"xs\">\n                \n                <CssBaseline />\n                <div>\n                  <Avatar style={{padding:30,margin:'auto',backgroundColor:'#1a237e'}} >\n                    <h3>O</h3>\n                  </Avatar>\n                  {/* <Typography component=\"h1\" variant=\"h4\" style={{textAlign:'center'}}>\n                    LOGIN\n                  </Typography> */}\n                  <form  onSubmit={this.onSubmit} noValidate>\n                    <TextField\n                      variant=\"outlined\"\n                      margin=\"normal\"\n                      fullWidth\n                      id=\"uname\"\n                      label=\"Username\"\n                      name=\"username\"\n                      autoComplete=\"email\"\n                      autoFocus\n                      type='text'\n                      onChange={this.onChange}\n                      value={this.state.username}\n                    />\n                    {/* required */}\n                    <TextField\n                      variant=\"outlined\"\n                      margin=\"normal\"\n                      fullWidth\n                      name=\"password\"\n                      label=\"Password\"\n                      type=\"password\"\n                      id=\"password\"\n                      autoComplete=\"current-password\"\n                      onChange={this.onChange}\n                      value={this.state.password}\n                    />\n                    <FormControlLabel\n                      control={<Checkbox value=\"remember\" color=\"primary\" />}\n                      label=\"Remember me\"\n                    />\n                    <Button\n                      type='submit'\n                      fullWidth\n                      variant=\"contained\"\n                      color=\"primary\"\n                    >\n                      Login\n                    </Button>\n                    <br/><br/>\n                    <Alert severity=\"error\" style={{display: this.state.status ? \"\":'none'}}>\n                        {this.state.status}\n                    </Alert>\n\n                    <Grid container>\n                      {/* <Grid item xs>\n                        <Link href=\"#\" variant=\"body2\">\n                          Forgot password?\n                        </Link>\n                      </Grid> */}\n                      {/* <Grid item>\n                        <Link href=\"#\" variant=\"body2\">\n                          {\"Don't have an account? Sign Up\"}\n                        </Link>\n                      </Grid> */}\n                    </Grid>\n                  </form>\n                </div>\n                <Box mt={8}>\n                  {/* <Copyright /> */}\n                </Box>\n              </Container>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    current_state: state\n})\n\nexport default connect(mapStateToProps)(Login)","import React, { Component } from 'react'\nimport { logoutUser } from '../../api/user';\nimport {  connect } from 'react-redux';\nimport { logout } from '../../actions';\n\n\nclass Logout extends Component {\n    componentDidMount(){\n        logoutUser().then(res => {\n            this.props.dispatch(logout())\n            this.props.history.push('/')\n\n        });\n    }\n\n    render() {\n        return (\n            <div>\n            </div>\n        )\n    }\n}\n\nexport default connect()(Logout)","import { baseRequest } from '../base';\n// api for vendors\n\nconst getVendors = async data => {\n  try {\n    return await baseRequest('apiv1/inventory/vendors','POST', data);\n  } catch(e){\n    alert(e)\n  }\n};\n\nconst createVendor = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/vendors','POST', data);\n    } catch(e){\n      alert(e)\n    }\n};\n\n\nconst deleteVendors = async data => {\n  try {\n    return await baseRequest('apiv1/inventory/vendors/delete','POST', data);\n  } catch(e){\n    alert(e)\n  }\n};\n\n\nconst updateVendor = async data => {\n  try {\n    return await baseRequest('apiv1/inventory/vendor','POST', data);\n  } catch(e){\n    alert(e)\n  }\n};\n\nconst getVendor = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/vendor','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n\nexport { getVendors, createVendor, deleteVendors, updateVendor, getVendor}","import React, { Component } from 'react'\nimport {  connect } from 'react-redux';\nimport {Button, TextField } from '@material-ui/core';\nimport { createVendor } from '../../api/inventory/vendorApi';\n\n\nclass VendorCreation extends Component {\n\n    constructor (props){\n        super(props)\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.state = {\n            'update':{\n                'middle_name':[''],\n                'website':[''],\n                'phone2':[''],\n                'address':['']\n            }\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n    }\n\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value]\n            }\n        })\n    }\n\n\n    async onSubmit(e){\n        e.preventDefault();\n            var data = {...this.state.update}\n            var ele;\n            for (ele in this.state.update){\n                data[ele] = this.state.update[ele][0]\n            }\n            data = {...data, 'action':'add'}\n            createVendor(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        alert(\"New Vendor Added\")\n                    }\n                    else{\n                        alert(data['error'])\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Add New Vendor</h1>\n                <form onSubmit={this.onSubmit}>\n                            First Name: <TextField\n                                id ='first_name'\n                                name=\"first_name\"\n                                type='text'\n                                onChange={this.onChange}  \n                                required                  \n                            />\n                            Middle Name : <TextField\n                                id ='middle_name'\n                                name=\"middle_name\"\n                                type='text'\n                                onChange={this.onChange} \n                            />\n                            Last Name  : <TextField\n                                id ='last_name'\n                                name=\"last_name\"\n                                type='text'\n                                onChange={this.onChange}\n                                required \n                            />\n                            <br></br>\n                            Email : <TextField\n                                id ='email'\n                                name=\"email\"\n                                type='email'\n                                onChange={this.onChange}\n                                required \n                            />\n                            <br></br>\n                            Website : <TextField\n                                id ='website'\n                                name=\"website\"\n                                type='text'\n                                onChange={this.onChange}\n                            />\n                            <br></br>\n                            Tax Number : <TextField\n                                id ='tax_number'\n                                name=\"tax_number\"\n                                type='number'\n                                onChange={this.onChange}\n                                required \n                            />\n                            <br></br>\n                            Contact Number: <TextField\n                                id ='phone1'\n                                name=\"phone1\"\n                                type='number'\n                                onChange={this.onChange}\n                                required \n                            />\n                            <br></br>\n                            Contact Number 2 : <TextField\n                                id ='phone2'\n                                name=\"phone2\"\n                                type='number'\n                                onChange={this.onChange}\n                            />\n                            <br></br>\n                            \n                            Addresss : <TextField\n                                id ='address'\n                                name=\"address\"\n                                type='text'\n                                onChange={this.onChange}\n                            />\n                            <br></br>\n                            <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                >\n                                Update\n                                </Button>\n                        \n                </form>\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    user: state.user\n})\n\nexport default connect(mapStateToProps)(VendorCreation)","import React, { Component } from 'react'\nimport {  connect } from 'react-redux';\nimport { createUser } from '../../api/user';\nimport {Button, TextField } from '@material-ui/core';\n\n\nclass UserCreation extends Component {\n\n    constructor (props){\n        super(props)\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.state = {\n            'udpate':{}\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n        if (this.props.user.data.user_type !== \"MANAGER\"){\n            this.props.history.push('/')\n        }\n    }\n\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value]\n            }\n        })\n    }\n\n\n    async onSubmit(e){\n        e.preventDefault();\n        if (this.state.update.password[0] === this.state.update.password2[0]){\n            var data = {...this.state.update}\n            var ele;\n            for (ele in this.state.update){\n                data[ele] = this.state.update[ele][0]\n            }\n            createUser(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        alert(\"New User Created\")\n                    }\n                    else{\n                        alert(data['error'])\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n        }\n        else {\n            alert(\"Password didn't match\")\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Create New User</h1>\n                <form onSubmit={this.onSubmit}>\n                            First Name: <TextField\n                                id ='first_name'\n                                name=\"first_name\"\n                                type='text'\n                                onChange={this.onChange}  \n                                required                  \n                            />\n                            Last Name<TextField\n                                id ='last_name'\n                                name=\"last_name\"\n                                type='text'\n                                onChange={this.onChange}\n                                required \n                            />\n                            \n                            <br></br>\n                             Username :<TextField\n                             \n                                id ='username'\n                                name=\"username\"\n                                type='text'\n                                onChange={this.onChange}\n                                required \n                            />\n                            <br></br>\n                            Password <TextField\n                                id=\"password\"\n                                name=\"password\"\n                                type=\"password\"\n                                autoComplete=\"current-password\"\n                                onChange={this.onChange}\n                                required \n                                />\n                               Confirm Password <TextField\n                                id=\"password2\"\n                                type=\"password\"\n                                name=\"password2\"\n                                autoComplete=\"current-password\"\n                                onChange={this.onChange}\n                                required \n                                />\n                                <br></br>\n                            Email : <TextField\n                                id ='email'\n                                name=\"email\"\n                                type='email'\n                                onChange={this.onChange}\n                                required \n                            />\n                            <br></br>\n                            User Post:\n                            <select name='user_type' id=\"user_type\" onChange={this.onChange} defaultValue=\"STAFF\">\n                                <option value=\"MANAGER\">Manager</option>\n                                <option value=\"STAFF\">Staff</option>\n                            </select>\n                            <br></br>\n                            <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                >\n                                Update\n                                </Button>\n                        \n                </form>\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    user: state.user\n})\n\nexport default connect(mapStateToProps)(UserCreation)","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid'\nimport IconButton from '@material-ui/core/IconButton';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst List = (props) => {\n  var page = true;\n  if (!props.page){\n    page=props.page\n  }\n  const classes = useStyles();\n  const headers = props.header\n  const rows = props.data\n  var temp;\n  var no_data=false\n  var back=true\n  if (rows.length === 0){\n    no_data=true\n  } \n  if (props.page === 1){\n    back = false\n  }\n\n\n  const pagination = <div>\n    {back? <IconButton color=\"secondary\" onClick={() => {props.update(-10)}} aria-label=\"pervious-button\">\n      <NavigateBeforeIcon />\n    </IconButton> : <IconButton color=\"secondary\" onClick={() => {props.update(-10)}} aria-label=\"pervious-button\" disabled>\n      <NavigateBeforeIcon />\n    </IconButton>}\n    <b>\n    Page: {props.page}</b>\n    {no_data? <IconButton color=\"secondary\" onClick={() => {props.update(10)}} aria-label=\"pervious-button\" disabled>\n      <NavigateNextIcon />\n    </IconButton> : <IconButton color=\"secondary\" onClick={() => {props.update(10)}} aria-label=\"pervious-button\">\n      <NavigateNextIcon />\n    </IconButton>}\n  </div>\n\n  return (\n      <div>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n                {headers.map(\n                    header =>(\n                    <TableCell key={header.id}><b>{header.name}</b></TableCell>\n                    )\n                )}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          {rows.map(\n              row =>(\n                  <TableRow key={row.id} onClick={() => {props.popUp(row.id, row.uuid)}}>\n                      {headers.map(\n                          header =>\n                              (\n                                  temp = header.prop,\n                              <TableCell key={header.id}>{row[temp]}</TableCell>\n                              )\n                      )}\n                  </TableRow>\n              )\n          )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      <Grid container justify=\"center\" alignItems=\"center\">\n    <Grid item xs={\"auto\"}>\n    {no_data ? <h2>No More Data Available</h2> : <span></span>}\n    </Grid>\n    </Grid>\n    <br></br>\n    <Grid container justify=\"center\" alignItems=\"center\">\n    <Grid item xs={\"auto\"}>\n    {page ? pagination : <span></span>}\n    </Grid>    \n    </Grid>\n    <br></br>\n    </div>\n  );\n}\n\nexport default List","import React, { Component } from 'react'\nimport List from '../list';\nimport { getUser, updateUser } from '../../api/user';\nimport {Button, TextField } from '@material-ui/core';\n\nclass UserList extends Component {\n    constructor(props){\n        super(props)\n        this.popUp = this.popUp.bind(this)\n        this.state = {\n            'popUp':false,\n            'user_data':{},\n            'update':{}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n    \n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value]\n            }\n        })\n    }\n\n    onSubmit(e){\n        e.preventDefault();\n        var data = this.state.user_data;\n        var ele;\n        for (ele in data){\n            if (this.state.update[ele]){\n                data[ele] = this.state.update[ele][0]\n            }\n        }\n        data = {\n            ...data,\n            'action':'edit',\n            'user_id':data.id\n        }\n        updateUser(JSON.stringify(data)).then(data =>{\n            if (data['status']){\n                alert('You Details has been updated.')\n                this.props.update(0)\n            }\n        })\n    }\n\n    userDelete(id,uuid){\n        var data = {\n            'action':'delete',\n            'user_id':id,\n            'uuid':uuid\n        }\n        updateUser(JSON.stringify(data)).then(data =>{\n            if (data['status']){\n                alert('User has been deleted. They cannot login now')\n                this.props.update(0)\n            }\n        })\n    }\n\n    \n    userRevive(id,uuid){\n        var data = {\n            'action':'revive',\n            'user_id':id,\n            'uuid':uuid\n        }\n        updateUser(JSON.stringify(data)).then(data =>{\n            if (data['status']){\n                alert('User has been made active. They login now')\n                this.props.update(0)\n            }\n        })\n    }\n\n    async popUp(id, uuid=0){\n        const data = {\n            'action':'get',\n            'user_id':id,\n            'uuid':uuid\n        }\n        var data_main;\n        await getUser(JSON.stringify(data)).then(data => {\n            if (data['status']){\n                data_main=data\n            }\n        })\n        await this.setState({\n            'popUp':true,\n            'user_data':data_main\n        })\n    }\n\n    columns = [\n        {\n            id:1,\n            name:\"Name\",\n            prop: 'name'\n        },\n        {\n            id:2,\n            name:\"Post\",\n            prop: 'status'\n        },\n        {\n            id:3,\n            name:\"Username\",\n            prop: 'username'\n        },\n        {\n            id:4,\n            name:\"Status\",\n            prop: 'is_active_str'\n        }      \n    ]\n    \n\n    render() {\n        const list = <List data={this.props.data} header={this.columns} popUp={this.popUp} update={this.props.update} page={this.props.page}/>\n        const popUpRender = <div>\n                        <button onClick={()=> {this.setState({'popUp':false})}}>Back</button><br></br>\n                        <h1>{this.state.user_data.name}</h1>\n\n                        <form onSubmit={this.onSubmit}>\n                            First Name : <TextField\n                                id ='first_name'\n                                name=\"first_name\"\n                                placeholder = {this.state.user_data.first_name}   \n                                type='text'\n                                onChange={this.onChange}\n                                // value={this.state.update.first_name}                       \n                            />\n                            \n                            Last Name : <TextField\n                            \n                                id ='last_name'\n                                name=\"last_name\"\n\n                                placeholder = {this.state.user_data.last_name}   \n                                type='text'\n                                onChange={this.onChange}\n                                // value={this.state.update.last_name}                       \n                            />\n                            \n                            <br></br>\n                             Username :<TextField\n                             \n                                id ='username'\n\n                                name=\"username\"\n                                placeholder = {this.state.user_data.username}   \n                                type='text'\n                                onChange={this.onChange}\n                                // value={this.state.update.username}                       \n                            />\n                            <br></br>\n                            Email : <TextField\n                                id ='email'\n                                name=\"email\"\n                                placeholder = {this.state.user_data.email}   \n                                type='email'\n                                onChange={this.onChange}\n                                // value={this.state.update.email}                       \n                            />\n                            <br></br>\n                            User Post:\n                            <select name='user_type' onChange={this.onChange} defaultValue={this.state.user_data.user_type}>\n                                <option value=\"MANAGER\">Manager</option>\n                                <option value=\"STAFF\">Staff</option>\n                            </select>\n                            <br></br>\n                            <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                >\n                                Update\n                                </Button>\n                        </form>\n                        <br>\n                        </br>\n                        {this.state.user_data.is_active ? <Button variant=\"contained\" color=\"secondary\" onClick={() => {this.userDelete(this.state.user_data.id, this.state.user_data.uuid)}}>\n                            Deactivate User\n                        </Button> : <Button variant=\"contained\" color=\"secondary\" onClick={() => {this.userRevive(this.state.user_data.id, this.state.user_data.uuid)}}>\n                            Activate User\n                        </Button> }\n                        \n                        <br>\n                        </br>\n                    </div>\n        return (\n            <div>\n                {this.state.popUp ? popUpRender : list}\n            </div>\n        )\n    }\n}\n\nexport default  UserList","import React, { Component } from 'react'\nimport { getUsers } from '../../api/user'\nimport {  connect } from 'react-redux';\nimport UserList from './userList';\nimport { Link} from 'react-router-dom';\n\nclass Users extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            'users':[],\n            'loaded':false,\n            'start':0,\n            'end':10,\n            'page':1\n        }\n        this.update_table = this.update_table.bind(this)\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n        if (this.props.user.data.user_type !== \"MANAGER\"){\n            this.props.history.push('/')\n        }\n    }\n\n    async getUsersData (request_json) {\n        await getUsers(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'users':data['users'],\n                    'loaded':true\n                })\n            }  \n        })\n    }\n\n    async update_table (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                'loaded':false,\n                start: 0,\n                end: 10,\n                page:1\n            })\n        }\n        else{\n            if (this.state.start+by>-1){\n                await this.setState({\n                    'loaded':false,\n                    start: this.state.start+by,\n                    end: this.state.end+by,\n                    page:this.state.page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.start,\n            'end':this.state.end\n        }\n        this.getUsersData(request_json)\n    }\n    \n\n    render() {\n        const render_after_load = (\n            <div>\n                <UserList data={this.state.users} update={this.update_table} page={this.state.page} />\n            </div>\n        )\n\n        return(\n            <div>\n                <Link to='users/create'>Create New User</Link><br></br>\n                <button onClick={() => {this.update_table(0)}}>Refresh table</button>\n                {this.state.loaded ? render_after_load : \"Loading...\"}\n\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    user: state.user,\n})\n\nexport default connect(mapStateToProps)(Users)","import React, { Component } from 'react'\nimport List from '../list';\nimport { getVendor, updateVendor,  deleteVendors } from '../../api/inventory/vendorApi';\nimport {Button, TextField } from '@material-ui/core';\n\nclass VendorList extends Component {\n    \n    constructor(props){\n        super(props)\n        this.popUp = this.popUp.bind(this)\n        this.state = {\n            'popUp':false,\n            'vendor':{},\n            'update':{}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.vendorDelete = this.vendorDelete.bind(this)\n    }\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value]\n            }\n        })\n    }\n\n    \n    async onSubmit(e){\n        e.preventDefault();\n            var data = this.state.vendor\n            var ele;\n            for (ele in this.state.update){\n                data[ele] = this.state.update[ele][0]\n            }\n            data = {...data, 'action':'edit'}\n            updateVendor(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        alert(\"Vendor Data updated.\")\n                        this.props.update(0)\n                    }\n                    else{\n                        alert(data['error'])\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    vendorDelete(id){\n        var data = {\n            'vendors_id':[\n                id\n            ]\n        }\n        deleteVendors(JSON.stringify(data)).then(data=>{\n            try {\n                if (data['status']){\n                    alert('Vendor data deleted.')\n                    this.props.update(0)\n                }   else{\n                    alert(data['error'])\n                }\n            }catch(e){\n                console.log(e)\n            }\n        })\n    }\n    \n    async popUp(id, uuid=0){\n        const data = {\n            'action':'get',\n            'vendor_id':id,\n        }\n        var data_main;\n        await getVendor(JSON.stringify(data)).then(data => {\n            if (data['status']){\n                data_main=data\n            }\n        })\n        await this.setState({\n            'popUp':true,\n            'vendor':data_main['vendors'][0]\n        })\n    }\n\n\n    columns = [\n        {\n            id:1,\n            name:\"Name\",\n            prop: 'name'\n        },\n        {\n            id:2,\n            name:\"Phone Number\",\n            prop: 'phone1'\n        },\n        {\n            id:3,\n            name:\"Email\",\n            prop: 'email'\n        },\n        {\n            id:4,\n            name:\"Address\",\n            prop: 'address'\n        }      \n    ]\n    \n\n    render() {\n        const list = <List data={this.props.data} header={this.columns}   popUp={this.popUp} update={this.props.update} page={this.props.page} />\n        const popUpRender = <div>\n                        <button onClick={()=> {this.setState({'popUp':false})}}>Back</button><br></br>\n                        <h1>{this.state.vendor.name}</h1>\n                        <form onSubmit={this.onSubmit}>\n                            First Name: <TextField\n                                id ='first_name'\n                                name=\"first_name\"\n                                type='text'\n                                onChange={this.onChange}  \n                                placeholder={this.state.vendor.first_name}          \n                            />\n                            Middle Name : <TextField\n                                id ='middle_name'\n                                name=\"middle_name\"\n                                type='text'\n                                onChange={this.onChange}\n                                placeholder={this.state.vendor.middle_name} \n                            />\n                            Last Name  : <TextField\n                                id ='last_name'\n                                name=\"last_name\"\n                                type='text'\n                                onChange={this.onChange}\n                                placeholder={this.state.vendor.last_name}\n                                  \n                            />\n                            <br></br>\n                            Email : <TextField\n                                id ='email'\n                                name=\"email\"\n                                type='email'\n                                onChange={this.onChange}                                \n                                placeholder={this.state.vendor.email}\n                                  \n                            />\n                            <br></br>\n                            Website : <TextField\n                                id ='website'\n                                name=\"website\"\n                                type='text'\n                                onChange={this.onChange}                                \n                                placeholder={this.state.vendor.website}\n                            />\n                            <br></br>\n                            Tax Number : <TextField\n                                id ='tax_number'\n                                name=\"tax_number\"\n                                type='number'\n                                onChange={this.onChange}                                \n                                placeholder={this.state.vendor.tax_number}\n                                  \n                            />\n                            <br></br>\n                            Contact Number: <TextField\n                                id ='phone1'\n                                name=\"phone1\"\n                                type='number'\n                                onChange={this.onChange}                                  \n                                placeholder={this.state.vendor.phone1}\n                            />\n                            <br></br>\n                            Contact Number 2 : <TextField\n                                id ='phone2'\n                                name=\"phone2\"\n                                type='number'\n                                onChange={this.onChange}                                \n                                placeholder={this.state.vendor.phone2}\n                            />\n                            <br></br>\n                            \n                            Addresss : <TextField\n                                id ='address'\n                                name=\"address\"\n                                type='text'\n                                onChange={this.onChange}\n                                placeholder={this.state.vendor.address}\n                            />\n                            <br></br>\n                            <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                >\n                                Update\n                                </Button> <Button variant=\"contained\" color=\"secondary\" onClick={() => {this.vendorDelete(this.state.vendor.id)}}>\n                            Delete Vendor\n                        </Button> \n                        \n                </form>\n            \n                        <br>\n                        </br>\n                    </div>\n        return (\n            <div>\n                {this.state.popUp ? popUpRender : list}\n            </div>\n        )\n    }\n}\n\nexport default VendorList\n","import React, { Component } from 'react'\nimport {getVendors} from '../../api/inventory/vendorApi';\nimport {  connect } from 'react-redux';\nimport  VendorList  from './vendorList';\nimport { Link} from 'react-router-dom';\n\nclass Vendors extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            'vendors':[],\n            'loaded':false,\n            'start':0,\n            'end':10,\n            'page':1\n        }\n        this.update_table = this.update_table.bind(this)\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n    }\n\n    async update_table (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                'loaded':false,\n                start: 0,\n                end: 10,\n                page:1\n            })\n        }\n        else{\n            if (this.state.start+by>-1){\n                await this.setState({\n                    'loaded':false,\n                    start: this.state.start+by,\n                    end: this.state.end+by,\n                    page:this.state.page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.start,\n            'end':this.state.end\n        }\n        this.getVendorsData(request_json)\n    }\n    \n    async getVendorsData (request_json) {\n        await getVendors(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'vendors':data['vendors'],\n                    'loaded':true\n                })\n            }  \n        })\n    }\n\n \n\nrender() {\n    const render_after_load = (\n        <div>\n            <VendorList data={this.state.vendors} update={this.update_table} page={this.state.page} />\n        </div>\n    )\n\n    return(\n        <div>\n            <Link to='/vendors/create'>Add New Vendor</Link><br></br>\n            <button onClick={() => {this.update_table(0)}}>Refresh table</button><br></br>\n            {this.state.loaded ? render_after_load : \"Loading...\"}\n\n        </div>\n    )\n}\n}\n\n\n\n\nconst mapStateToProps = state => ({\n    user: state.user,\n})\n\nexport default connect(mapStateToProps)(Vendors)","import { baseRequest } from '../base';\n// api for Invoices \n\nconst getCustomers = async data => {\n    try {\n      return await baseRequest('apiv1/sales/customers','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  \n  const deleteCustomers = async data => {\n    try {\n      return await baseRequest('apiv1/sales/customers/delete','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const createCustomer = async data => {\n      try {\n        return await baseRequest('apiv1/sales/customers','POST', data);\n      } catch(e){\n        alert(e)\n      }\n  };\n  \n  \n  const getCustomer = async data => {\n    try {\n      return await baseRequest('apiv1/sales/customer','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const updateCustomer= async data => {\n    try {\n      return await baseRequest('apiv1/sales/customer','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \nexport {getCustomers, createCustomer, deleteCustomers, updateCustomer, getCustomer}\n  ","import React, { Component } from 'react'\nimport List from '../list';\nimport { getCustomer, updateCustomer,  deleteCustomers } from '../../api/sales/customer';\nimport {Button, TextField, Grid, withStyles } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\n\nimport {FormControl, InputLabel, Input} from '@material-ui/core'\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\nimport Swal from 'sweetalert2'\n\nconst styles = makeStyles((theme) => ({\n    root: {\n    flexGrow: 12,\n    },\n    paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    },\n}));\n\n\nclass CustomerList extends Component {\n    \n    constructor(props){\n        super(props)\n        this.popUp = this.popUp.bind(this)\n        this.state = {\n            'popUp':false,\n            'customer':{},\n            'update':{}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.customerDelete = this.customerDelete.bind(this)\n    }\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value][0]\n            }\n        })\n    }\n\n    \n    async onSubmit(){\n            var data = this.state.update\n            data = {...data, 'action':'edit'}\n            updateCustomer(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        Swal.fire(\n                            'Updated!',\n                            'Customer Details has been updated.',\n                            'success'\n                          )\n                        this.props.update(0)\n                    }\n                    else{\n                        Swal.fire({\n                            icon:'error',\n                            title:data['error']\n                        })\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    customerDelete(id){\n        var data = {\n            'customers_id':[\n                id\n            ]\n        }\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to revert this!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, delete it!'\n          }).then((result) => {\n            if (result.value) {\n                deleteCustomers(JSON.stringify(data)).then(data=>{\n                    try {\n                        if (data['status']){\n                            Swal.fire({\n                                icon:'success',\n                                title:'Customer entry has been deleted.',\n                                showConfirmButton: false,\n                                timer:1000\n                            })\n                            this.props.update(0)\n                        }   else{\n                            Swal.fire({\n                                icon:'error',\n                                title:data['error']\n                            })\n                        }\n                    }catch(e){\n                        console.log(e)\n                    }\n                })\n              \n            }\n          })\n        \n    }\n    \n    async popUp(id, uuid=0){\n        const data = {\n            'action':'get',\n            'customer_id':id,\n        }\n        var data_main;\n        await getCustomer(JSON.stringify(data)).then(data => {\n            if (data['status']){\n                data_main=data\n            }\n        })\n        await this.setState({\n            'popUp':true,\n            'update':data_main['customers'][0],\n            'customer':data_main['customers'][0]\n        })\n    }\n\n\n    columns = [\n        {\n            id:1,\n            name:\"Name\",\n            prop: 'name'\n        },\n        {\n            id:2,\n            name:\"Phone Number\",\n            prop: 'phone1'\n        },\n        {\n            id:3,\n            name:\"Email\",\n            prop: 'email'\n        },\n        {\n            id:4,\n            name:\"Address\",\n            prop: 'address'\n        }      \n    ]\n\n\n    render() {\n        const list = <List data={this.props.data} header={this.columns}   popUp={this.popUp} update={this.props.update} page={this.props.page} />\n         const popUpRender =\n         <div>\n            &nbsp;\n            &nbsp;\n            &nbsp;\n            &nbsp;\n            &nbsp;\n            &nbsp; <Button  variant=\"contained\" size='small' color=\"primary\" onClick={()=> {this.setState({...this.state, popUp:false})}}>\n                <ArrowLeftIcon></ArrowLeftIcon>\n         Back\n     </Button>\n        <Grid  container spacing={3} justify=\"center\" alignContent='center' alignItems=\"center\">\n            <Grid item xm={4}>\n            \n            </Grid>\n            <Grid item xs={4}>\n            <h1>{this.state.update.name}</h1>\n            </Grid>\n            <Grid item xm={4}>\n            </Grid>\n        </Grid>\n\n        <Grid container  justify=\"center\" alignContent='center' alignItems=\"center\">\n        <Grid item xm={6}>\n            <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n                <Grid item xm={2} > \n                <TextField required id=\"first_name\" label=\"First Name\" name='first_name' defaultValue={this.state.update.first_name} onChange={this.onChange} autoFocus/>\n                </Grid>\n                <Grid item xm={2}>\n                <TextField required id=\"middle_name\" label=\"Middle Name\" name='middle_name' defaultValue={this.state.update.middle_name} onChange={this.onChange} />\n                </Grid>\n                <Grid item xm={2}>\n                <TextField required id=\"last_name\" label=\"Last Name\" name='last_name' defaultValue={this.state.update.last_name} onChange={this.onChange} />\n                </Grid>\n            </Grid>\n            \n            <Grid container spacing={3}>\n                <Grid item xm={6} md={6}> \n                <FormControl fullWidth>\n                <InputLabel htmlFor=\"email\">Email address</InputLabel>\n                <Input id=\"email\" required name='email' fullWidth onChange={this.onChange} defaultValue={this.state.update.email}  />\n                </FormControl>\n                </Grid>\n                <Grid item xm={6} md={6}> \n                 <TextField\n                                id ='website'\n                                name=\"website\"\n                                label='Website'\n                                type='text'\n                                fullWidth\n                                onChange={this.onChange}                                \n                                defaultValue={this.state.update.website}\n                            />\n\n               </Grid>\n            </Grid>\n\n\n            <Grid container spacing={3} >\n                \n                <Grid item xm={6} md={6}> \n                <TextField\n                label=\"Primary Phone Number\"\n                                id ='phone1'\n                                name=\"phone1\"\n                                fullWidth\n                                onChange={this.onChange}                                  \n                                value={this.state.update.phone1}\n                            />\n                </Grid>\n                <Grid item xm={6} md={6}> \n                 \n                <TextField\n                    label='Second Phone Number'\n                                id ='phone2'\n                                name=\"phone2\"\n                                fullWidth\n                                onChange={this.onChange}                                \n                                value={this.state.update.phone2}\n                            />\n\n               </Grid>\n            </Grid>\n\n\n            <Grid container spacing={3}>\n\n                <Grid item xm={6} md={6}> \n                <TextField\n                                id ='address'\n                                name=\"address\"\n                                type='text'\n                                label='Address'\n                                fullWidth\n                                onChange={this.onChange}\n                                value={this.state.update.address}\n                            />\n                </Grid>\n                <Grid item xm={6} md={6} > \n                <TextField\n                                id ='tax_number'\n                                name=\"tax_number\"\n                                type='number'\n                                fullWidth\n                                label='Tax Number'\n                                onChange={this.onChange}                                \n                                value={this.state.update.tax_number}   \n                            />\n               </Grid>\n            </Grid>\n            <Grid container spacing={3}  alignItems='flex-end'>\n\n                <Grid item xm={3} md={6}> \n                <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={()=>{this.onSubmit()}}\n                                >\n                                Update\n                                </Button>\n                </Grid>\n                <Grid item xm={3} md={6}> \n                <Button variant=\"contained\" color=\"secondary\" onClick={() => {this.customerDelete(this.state.customer.id)}}>\n                    Delete Customer\n                </Button> \n               </Grid>\n            </Grid>\n        </Grid>\n        </Grid><br></br>\n        </div>\n        return (\n            <div>\n                {this.state.popUp ? popUpRender : list}\n            </div>\n        )\n    }\n}\n\nCustomerList.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n\n\nexport default withStyles(styles)(CustomerList)","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    backgroundColor: \"black\",\n        \n    // position: 'fixed',\n    left: theme.spacing(2),\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n    },\n}));\n\nexport default function LoadingIcon() {\n  const [progress, setProgress] = React.useState(0);\n\n  React.useEffect(() => {\n    function tick() {\n      // reset when reaching 100%\n      setProgress(oldProgress => (oldProgress >= 100 ? 0 : oldProgress + 1));\n    }\n\n    const timer = setInterval(tick, 20);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  return (\n    <Grid\n    container\n    spacing={0}\n    direction=\"column\"\n    alignItems=\"center\"\n    justify=\"center\"\n    style={{ minHeight: '100vh' }}\n  >\n  \n    <Grid item xs={3}>\n    <CircularProgress variant=\"determinate\" value={progress} />\n\n    </Grid>   \n  \n  </Grid> \n        \n  );\n}","import React, { Component } from 'react'\nimport {getCustomers} from '../../api/sales/customer';\nimport {  connect } from 'react-redux';\nimport  CustomerList  from './customerList';\nimport { Link} from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/styles';\nimport PropTypes from 'prop-types';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport LoadingIcon from '../loading';\n\nconst styles = makeStyles((theme) => ({\n    root: {\n    flexGrow: 12,\n    },\n    paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    },\n}));\n\n\nclass Customers extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            'customers':[],\n            'loaded':false,\n            'start':0,\n            'end':10,\n            'page':1\n        }\n        this.update_table = this.update_table.bind(this)\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n        this.update_table(0)\n    }\n\n    async update_table (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                'loaded':false,\n                start: 0,\n                end: 10,\n                page:1\n            })\n        }\n        else{\n            if (this.state.start+by>-1){\n                await this.setState({\n                    'loaded':false,\n                    start: this.state.start+by,\n                    end: this.state.end+by,\n                    page:this.state.page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.start,\n            'end':this.state.end\n        }\n        this.getCustomersData(request_json)\n    }\n    \n    async getCustomersData (request_json) {\n        await getCustomers(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'customers':data['customers'],\n                    'loaded':true\n                })\n            }  \n        })\n    }\n\n \n\nrender() {\n    const { classes } = this.props;\n\n    const render_after_load = (\n        <div>\n            <CustomerList data={this.state.customers} update={this.update_table} page={this.state.page} />\n        </div>\n    )\n\n    return(\n        <div className={classes.root}>\n      <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n          <Grid item xs={3} >\n          <Button variant=\"contained\" color=\"primary\" onClick={() => {this.update_table(0)}}>\n            <RefreshIcon/>&nbsp;&nbsp;&nbsp;Refresh Table\n            </Button>\n          </Grid>\n          <Grid item xs={5}>\n\n          </Grid>\n            <Grid item xs={3}>\n            <Link to='/customers/create' style={{ textDecoration: 'none' }}>\n            <Button variant=\"contained\" color=\"secondary\">\n            <AddCircleIcon/>&nbsp;&nbsp;&nbsp;Add New Customer\n            </Button>\n            </Link>\n            </Grid>\n\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n          {this.state.loaded ? render_after_load : <LoadingIcon></LoadingIcon>}\n          </Paper>\n        </Grid>\n        \n      </Grid>\n    </div>\n    )\n}\n}\n\n\n\n\n\nCustomers.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n\nconst mapStateToProps = state => ({\n    user: state.user,\n})\n\nexport default withStyles(styles)(connect(mapStateToProps)(Customers))","import React, { Component } from 'react'\n\nimport { createCustomer} from '../../api/sales/customer';\nimport {Button, TextField, Grid, withStyles } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport {  connect } from 'react-redux';\n\nimport {FormControl, InputLabel, Input} from '@material-ui/core'\nimport Swal from 'sweetalert2'\n\nconst styles = makeStyles((theme) => ({\n    root: {\n    flexGrow: 12,\n    },\n    paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    },\n}));\n\n\nclass CustomerCreation extends Component {\n    \n    constructor(props){\n        super(props)\n        this.state = {\n            'customer':{},\n            'update':{\n                'first_name':'',\n                'middle_name':'',\n                'last_name':'',\n                'email':'',\n                'phone1':'',\n                'website':'',\n                'phone2':'',\n                'address':'',\n                'tax_number':''\n            }\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n    \n    \n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n    }\n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value][0]\n            }\n        })\n    }\n\n    \n    async onSubmit(){\n            var data = this.state.update\n            data = {...data, 'action':'add'}\n            createCustomer(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        Swal.fire(\n                            'Updated!',\n                            'New Customer Has Been Added.',\n                            'success'\n                          )\n                    }\n                    else{\n                        Swal.fire({\n                            icon:'error',\n                            title:data['error']\n                        })\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n    render() {\n         const popUpRender =\n         <div>\n            &nbsp;\n            &nbsp;\n            &nbsp;\n            &nbsp;\n            &nbsp;\n            &nbsp; \n        <Grid  container spacing={3} justify=\"center\" alignContent='center' alignItems=\"center\">\n            <Grid item xm={4}>\n            \n            </Grid>\n            <Grid item xs={4}>\n            <h1>Add New Customer</h1>\n            </Grid>\n            <Grid item xm={4}>\n            </Grid>\n        </Grid>\n\n        <Grid container  justify=\"center\" alignContent='center' alignItems=\"center\">\n        <Grid item xm={6}>\n            <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n                <Grid item xm={2} > \n                <TextField required id=\"first_name\" label=\"First Name\" name='first_name' autoFocus/>\n                </Grid>\n                <Grid item xm={2}>\n                <TextField id=\"middle_name\" label=\"Middle Name\" name='middle_name'  onChange={this.onChange} />\n                </Grid>\n                <Grid item xm={2}>\n                <TextField required id=\"last_name\" label=\"Last Name\" name='last_name'  onChange={this.onChange} />\n                </Grid>\n            </Grid>\n            \n            <Grid container spacing={3}>\n                <Grid item xm={6} md={6}> \n                <FormControl fullWidth required>\n                <InputLabel htmlFor=\"email\">Email address</InputLabel>\n                <Input id=\"email\" required name='email' fullWidth onChange={this.onChange}   />\n                </FormControl>\n                </Grid>\n                <Grid item xm={6} md={6}> \n                 <TextField\n                                id ='website'\n                                name=\"website\"\n                                label='Website'\n                                type='text'\n                                fullWidth\n                                onChange={this.onChange}                                \n                            />\n\n               </Grid>\n            </Grid>\n\n\n            <Grid container spacing={3} >\n                \n                <Grid item xm={6} md={6}> \n                <TextField\n                label=\"Primary Phone Number\"\n                                id ='phone1'\n                                name=\"phone1\"\n                                fullWidth\n                                required\n                                onChange={this.onChange}                                  \n                            />\n                </Grid>\n                <Grid item xm={6} md={6}> \n                 \n                <TextField\n                    label='Second Phone Number'\n                                id ='phone2'\n                                name=\"phone2\"\n                                fullWidth\n                                onChange={this.onChange}                                \n                            />\n\n               </Grid>\n            </Grid>\n\n\n            <Grid container spacing={3}>\n\n                <Grid item xm={6} md={6}> \n                <TextField\n                                id ='address'\n                                name=\"address\"\n                                type='text'\n                                label='Address'\n                                fullWidth\n                                onChange={this.onChange}\n                                required\n                            />\n                </Grid>\n                <Grid item xm={6} md={6} > \n                <TextField\n                                id ='tax_number'\n                                name=\"tax_number\"\n                                type='number'\n                                fullWidth\n                                label='Tax Number'\n                                onChange={this.onChange}  \n                                required                              \n                            />\n               </Grid>\n            </Grid>\n            <Grid container spacing={3}  alignItems='flex-end'>\n\n                <Grid item xm={3} md={6}> \n                <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={()=>{this.onSubmit()}}\n                                >\n                                Add\n                                </Button>\n                </Grid>\n                <Grid item xm={3} md={6}> \n                \n               </Grid>\n            </Grid>\n        </Grid>\n        </Grid><br></br>\n        </div>\n        return (\n            <div>\n                {popUpRender}\n            </div>\n        )\n    }\n}\n\nCustomerCreation.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n\n\nconst mapStateToProps = state => ({\n    user: state.user\n})\n\nexport default withStyles(styles)(connect(mapStateToProps)(CustomerCreation))\n","import { baseRequest } from '../base';\n// api for items \n\nconst getPurchaseOrders = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/porders','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  \n  const deletePurchaseOrder = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/porders/delete','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const createPurchaseOrder = async data => {\n      try {\n        return await baseRequest('apiv1/inventory/porders','POST', data);\n      } catch(e){\n        alert(e)\n      }\n  };\n  \n  \n  const getPurchaseOrder = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/porder','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const updatePurchaseOrder= async data => {\n    try {\n      return await baseRequest('apiv1/inventory/porder','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \nexport {getPurchaseOrders, deletePurchaseOrder, createPurchaseOrder, getPurchaseOrder, updatePurchaseOrder}\n  ","import { baseRequest } from '../base';\n// api for items \n\n  \n  const deletePurchaseItems = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/pitems/delete','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const createPurchaseItem = async data => {\n      try {\n        return await baseRequest('apiv1/inventory/pitems','POST', data);\n      } catch(e){\n        alert(e)\n      }\n  };\n  \n  const updatePurchaseItem= async data => {\n    try {\n      return await baseRequest('apiv1/inventory/pitem','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \nexport { deletePurchaseItems, createPurchaseItem, updatePurchaseItem}\n  ","import { baseRequest } from './base';\n \n\nconst getDiscounts = async data => {\n    try {\n      return await baseRequest('apiv1/sales/discounts','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  \n  const deleteDiscounts = async data => {\n    try {\n      return await baseRequest('apiv1/sales/discounts/delete','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const createDiscount = async data => {\n      try {\n        return await baseRequest('apiv1/sales/discounts','POST', data);\n      } catch(e){\n        alert(e)\n      }\n  };\n  \n  \n  const getDiscount = async data => {\n    try {\n      return await baseRequest('apiv1/sales/discount','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const updateDiscount= async data => {\n    try {\n      return await baseRequest('apiv1/sales/discount','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n\n\n  \nconst getTaxes = async data => {\n    try {\n      return await baseRequest('apiv1/sales/taxes','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  \n  const deleteTaxes = async data => {\n    try {\n      return await baseRequest('apiv1/sales/taxes/delete','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const createTax = async data => {\n      try {\n        return await baseRequest('apiv1/sales/taxes','POST', data);\n      } catch(e){\n        alert(e)\n      }\n  };\n  \n  \n  const getTax = async data => {\n    try {\n      return await baseRequest('apiv1/sales/tax','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const updateTax= async data => {\n    try {\n      return await baseRequest('apiv1/sales/tax','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n\n  const getPurchaseOrderStatus= async data => {\n    try {\n      return await baseRequest('apiv1/inventory/status/porders','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n\n  \nexport {getPurchaseOrderStatus, getDiscounts, createDiscount, deleteDiscounts, updateDiscount, getDiscount, getTaxes, createTax, deleteTaxes, updateTax, getTax}\n  ","import { baseRequest } from '../base';\n// api for items \n\nconst getItems = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/items','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  \n  const deleteItems = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/items/delete','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const createItem = async data => {\n      try {\n        return await baseRequest('apiv1/inventory/items','POST', data);\n      } catch(e){\n        alert(e)\n      }\n  };\n  \n  \n  const getItem = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/item','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const updateItem= async data => {\n    try {\n      return await baseRequest('apiv1/inventory/item','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \nexport {getItems, createItem, deleteItems, updateItem, getItem}\n  ","import React, { Component } from 'react'\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport List from '../list';\nimport Popup from \"reactjs-popup\";\nimport style from './css/popUp.module.css';\nimport {getVendors} from '../../api/inventory/vendorApi';\nimport {updatePurchaseOrder, getPurchaseOrder} from '../../api/inventory/purchaseOrder';\nimport {updatePurchaseItem, deletePurchaseItems, createPurchaseItem} from '../../api/inventory/purchaseItem'\nimport {getPurchaseOrderStatus} from '../../api/misc';\nimport {getItems} from '../../api/inventory/itemApi';\nclass PopUpEdit extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            'popUp':false,\n            'new':false,\n            'current':0,\n            'status':[],\n            'vendor_selection':[\n                {\n                    'id':0,\n                    'name':'None'\n                }\n            ],\n            'item_selection':[\n                {\n                    'id':0,\n                    'name':\"None\"\n                }\n            ],\n            update : {\n                'purchase_order':{\n                    ...this.props.purchase_order,\n                    'invoiced_on': this.converter(this.props.purchase_order.invoiced_on),\n                    'completed_on': this.converter(this.props.purchase_order.completed_on)\n                },\n                'purchase_items':this.props.purchase_items\n            }\n        }\n        this.refreshTable = this.refreshTable.bind(this)\n        this.getItemData = this.getItemData.bind(this)\n        this.selectItem = this.selectItem.bind(this)\n        this.searchItem = this.searchItem.bind(this)\n        this.addPurchaseItem = this.addPurchaseItem.bind(this)\n        this.invoiceHandler = this.invoiceHandler.bind(this)\n        this.completeHandler = this.completeHandler.bind(this)\n        this.getVendorsData = this.getVendorsData.bind(this)\n        this.converter = this.converter.bind(this)\n        this.popUp = this.popUp.bind(this)\n        this.searchVendor = this.searchVendor.bind(this)\n        this.selectVendor = this.selectVendor.bind(this)\n        this.onChange = this.onChange.bind(this)\n        this.updatePurchaseOrder = this.updatePurchaseOrder.bind(this)\n        this.onChangePI = this.onChangePI.bind(this)\n        this.postPurchaseItem = this.postPurchaseItem.bind(this)\n        this.deletePurchaseItem = this.deletePurchaseItem.bind(this)\n    }\n\n\n    async componentDidMount(){\n        var request_json = {\n            'action':'get',\n        }\n        await getPurchaseOrderStatus(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    ...this.state,\n                    'status':data.data\n                })\n            }  \n        })\n    }\n\n    async getVendorsData (request_json) {\n        await getVendors(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'vendor_selection':data['vendors'],\n                })\n            }  \n        })\n    }\n\n    selectVendor(id,name){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_order':{\n                    ...this.state.update.purchase_order,\n                    'vendor':id,\n                    'vendor_name':name\n                }\n            }\n        })\n    }\n\n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_order':{\n                    ...this.state.update.purchase_order,\n                    [e.target.name] : [e.target.value][0]\n                }\n            }\n        })\n    }\n\n    converter(date){\n        return ( new Date(Date.parse(date)))\n    }\n\n    popUp(id){\n        var key\n        for (key in this.state.update.purchase_items){\n            if (this.state.update.purchase_items[key].id === id){\n                this.setState({\n                    ...this.state,\n                    'current':key,\n                    'popUp':true\n                })        \n                return\n            }\n        }\n    }\n\n    searchVendor(e){\n        if ((e.target.value).length > 2 ){\n            var request_json = {\n                'action':'get',\n                'start':0,\n                'end':10,\n                'filter':'name',\n                'first_name':(e.target.value)\n            }\n            this.getVendorsData(request_json)\n        }\n    }\n    \n    invoiceHandler(date){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_order':{\n                    ...this.state.update.purchase_order,\n                    'invoiced_on' : date\n                }\n            }\n        })\n    }\n    \n    completeHandler(date){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_order':{\n                    ...this.state.update.purchase_order,\n                    'completed_on' : date\n                }\n            }\n        })\n    }\n\n    updatePurchaseOrder(){\n        var request_json = {\n            ...this.state.update.purchase_order,\n            'action':'edit',\n            'purchase_order_id':this.state.update.purchase_order.id\n        }\n        updatePurchaseOrder(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                alert(\"Purchase Order Details Has Been Updated.\")\n                this.props.update(0)\n            }\n            else{\n                alert(\"Error : \",data.error)\n            }\n        })\n    }\n\n    onChangePI(e){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_items':{\n                    ...this.state.update.purchase_items,\n                    [this.state.current] : {\n                        ...this.state.update.purchase_items[this.state.current],\n                        [e.target.name] : [e.target.value][0]\n                    },\n                }\n            }\n        })\n    }\n\n    postPurchaseItem(is_new=false){\n        var request_json\n        if (is_new){\n            request_json = {\n                'action':'add',\n                'purchase_order':this.state.update.purchase_order.id,\n                ...this.state.update.purchase_items[this.state.current]\n            }\n            createPurchaseItem(JSON.stringify(request_json)).then(data => {\n                if (data['status']){\n                    alert(\"Purchase Item Has Been Added.\")\n                    this.refreshTable()\n                }\n                else{\n                    alert(data['error'])\n                }\n            })\n            return\n        }\n        request_json = {\n            'action':'edit',\n            ...this.state.update.purchase_items[this.state.current]\n        }\n        updatePurchaseItem(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                alert(\"Purchase Item Details Has Been Updated.\")\n                this.refreshTable()\n            }\n            else{\n                alert(data['error'])\n            }\n        })\n    }\n\n    deletePurchaseItem(){\n        var request_json = {\n            purchase_items_id : [this.state.update.purchase_items[this.state.current].id]\n        }\n        deletePurchaseItems(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                alert(\"Purchase Item Has Beed Deleted.\")\n                this.refreshTable()\n            }\n            else{\n                alert(data['error'])\n            }\n        })\n    }\n\n\n    addPurchaseItem(){\n        var current =0;\n        var item,p_list=[];\n        for (item in this.state.update.purchase_items){\n            if (item.id){\n                if (item.id !== \"Fake Key\"){\n                    current = current + 1\n                    p_list.push(item)\n                }\n            }\n        }\n        this.setState({\n            'current':current,\n            'new':true,\n            'popUp':true,\n            'update':{\n                ...this.state.update,\n                'purchase_items':[\n                    ...p_list,\n                    {\n                        'item_name':\"None\",\n                        'discount_type':'percentage',\n                        'status':'incomplete'\n                    }\n                ]\n            }\n        })\n    }\n    columns = [\n        {\n            id:1,\n            name:\"Item Name\",\n            prop: 'item_name'\n        },\n        {\n            id:2,\n            name:\"Quantity\",\n            prop: 'quantity'\n        },\n        {\n            id:3,\n            name:\"Stock\",\n            prop: 'stock'\n        },\n        {\n            id:4,\n            name:\"Defective\",\n            prop: 'defective'\n        },   \n        {\n            id:5,\n            name:\"Sold\",\n            prop: 'sold'\n        },\n        {\n            id:6,\n            name:\"Discount\",\n            prop: 'discount'\n        },\n        {\n            id:7,\n            name:\"Purchase Price\",\n            prop: 'purchase_price'\n        },\n        {\n            id:8,\n            name:\"Status\",\n            prop: 'status'\n        }\n    ]\n\n    searchItem(e){\n        if ((e.target.value).length > 2 ){\n            var request_json = {\n                'action':'get',\n                'start':0,\n                'end':10,\n                'filter':'name',\n                'name':(e.target.value)\n            }\n            this.getItemData(request_json)\n        }\n    }\n\n    async getItemData(request_json){\n        await getItems(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    ...this.state,\n                    'item_selection':data['items'],\n                })\n            }  \n        })\n    }\n    selectItem(id, name){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_items':{\n                    ...this.state.update.purchase_items,\n                    [this.state.current] : {\n                        ...this.state.update.purchase_items[this.state.current],\n                        'item_name' : name,\n                        'item':id\n                    },\n                }\n            }\n        })\n\n    }\n\n    async refreshTable(){\n        var id = this.state.update.purchase_order.id;\n        var items= [];\n        const request_json = {\n            'action':'get',\n            'purchase_order_id':id\n        }\n        await getPurchaseOrder(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                items = data['p_items']\n            }\n        })\n        if (items.length === 0){\n            items = [{\n                'id':\"Fake Key\",\n                'item_name': ''\n            }]\n        }\n        await this.setState({\n            ...this.state,\n            'popUp':false,\n            'update':{\n                ...this.state.update,\n                'purchase_items':items\n            }\n        })\n    }\n\n\n    render() {\n        const item_selection = this.state.item_selection\n        const itemPopUp = <Popup trigger={ <button>Select Item</button>} closeOnDocumentClick>\n        <div>\n            <input placeholder=\"Item Name\" id='item_search_box' name='item_serach_box' onChange={this.searchItem}></input>\n            <div className={style.dropdown_content} id='vendor_dropdown'>\n                    {item_selection.map(\n                        item => (\n                            // use css to get rid of <a>\n                            <a href=\"#\" key={item.id} onClick={() => {this.selectItem(item.id, item.name)}} >{item.name}</a>\n                        )\n                    )}\n            </div>\n        </div>\n        </Popup>\n        const popUpItem = <div>\n                <button onClick={() => {this.refreshTable()}} >Back</button><br></br><br></br>\n                Item : {this.state.update.purchase_items[this.state.current].item_name}  {this.state.new ? itemPopUp: <span></span>}<br></br>\n                Quantity : <input name=\"quantity\" placeholder={this.state.update.purchase_items[this.state.current].quantity} type=\"number\" onChange={this.onChangePI} required></input><br></br>\n                Defective : <input name=\"defective\" placeholder={this.state.update.purchase_items[this.state.current].defective} type=\"number\"  onChange={this.onChangePI} required></input><br></br>\n                \n                Discount Type :<select name='discount_type' id=\"discount_type\" defaultValue={this.state.update.purchase_items[this.state.current].discount_type}  onChange={this.onChangePI}>\n                                    <option value=\"percent\">Percentage</option>\n                                    <option value=\"fixed\">Fixed</option>\n                                </select> <br></br>\n                Discount : <input placeholder={this.state.update.purchase_items[this.state.current].discount} name=\"discount\" onChange={this.onChangePI} ></input><br></br>\n                Purchase Price : <input placeholder={this.state.update.purchase_items[this.state.current].purchase_price} name=\"purchase_price\" onChange={this.onChangePI} required></input> <br></br>\n                Status : <select defaultValue= {this.state.update.purchase_items[this.state.current].status} name=\"status\" onChange={this.onChangePI}>\n                    <option value=\"delivered\">Delivered</option>\n                    <option value=\"incomplete\">Incomplete</option>\n                    <option value=\"addedtocirculation\">Added To Circulation</option>\n                </select><br></br>\n                {this.state.new ? <button onClick={() => {this.postPurchaseItem(true)}} >Add</button> : <button onClick={() => {this.postPurchaseItem()}} >Update</button>}<br></br><br></br>\n                <button onClick={() => {this.deletePurchaseItem()}} >Delete</button>\n            </div>\n        const vendor_selection = this.state.vendor_selection\n        const vendorPopup = <Popup trigger={<button>Change Vendor</button>} closeOnDocumentClick>\n        <div>\n            <input placeholder=\"Vendor's first name\" id='vendor_serach_box' name='vendor_serach_box' onChange={this.searchVendor}></input>\n            <div className={style.dropdown_content} id='vendor_dropdown'>\n                    {vendor_selection.map(\n                        vendor => (\n                            // use css to get rid of <a>\n                            <a href=\"#\" key={vendor.id} onClick={() => {this.selectVendor(vendor.id, vendor.name)}} >{vendor.name}</a>\n                        )\n                    )}\n            </div>\n        </div>\n        </Popup>\n        const status = this.state.status\n        return (\n            <div>\n                <h1>Purchase Order</h1>\n                <h1>{this.props.purchase_order.vendor_name}</h1>\n                Vendor : {this.state.update.purchase_order.vendor_name}\n                {vendorPopup}<br></br>\n                Invoiced On : \n                <DatePicker\n                name='invoiced_on'\n                selected={this.state.update.purchase_order.invoiced_on}\n                onChange={this.invoiceHandler}\n                />\n                Completed On : \n                <DatePicker\n                name='completed_on'\n                selected={this.state.update.purchase_order.completed_on}\n                onChange={this.completeHandler}\n                /><br></br>\n                Added By : {this.state.update.purchase_order.added_by_name}<br></br>\n                Total Cost : <input placeholder={this.state.update.purchase_order.total_cost} name=\"total_cost\" onChange={this.onChange}/><br></br>\n                Discount Type :<select name='discount_type' id=\"discount_type\" onChange={this.onChange} defaultValue={this.state.update.purchase_order.discount_type}>\n                                <option value=\"percent\">Percentage</option>\n                                <option value=\"fixed\">Fixed</option>\n                            </select> <br></br>\n                Discount : <input placeholder={this.state.update.purchase_order.discount} name=\"discount\" onChange={this.onChange}></input><br></br>\n                Status : <select name='status' id=\"status\" onChange={this.onChange} value={this.state.update.purchase_order.status}  >\n                                {status.map(\n                                    x => (\n                                    <option key={x.id} value={parseInt(x.id)}>{x.name}</option>\n                                    )\n                                )}\n                            </select> <br></br><br></br>\n                <button onClick={() => {this.updatePurchaseOrder()}}>Update Purchase Order</button><br></br><br></br>\n                <button onClick={() => {this.props.delete(this.props.purchase_order.id)}}>Delete</button>\n                <hr></hr>\n                <h3>Items</h3> <button  onClick={() => {this.addPurchaseItem()}}>Add New Items</button>\n                {this.state.popUp ? popUpItem :<List data={this.state.update.purchase_items} header={this.columns} page={false} popUp={this.popUp} />}\n            </div>\n        )\n    }\n}\nexport default PopUpEdit","import React, { Component } from 'react'\nimport List from '../list';\nimport { getPurchaseOrder, deletePurchaseOrder, updatePurchaseOrder } from '../../api/inventory/purchaseOrder';\nimport PopUpEdit from './popUpEdit';\n\nclass PurchaseOrderList extends Component {\n    \n    constructor(props){\n        super(props)\n        this.popUp = this.popUp.bind(this)\n        this.state = {\n            'popUp':false,\n            'purchase_order':{},\n            'purchase_items':[],\n            'update':{}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.purchaseOrderDelete = this.purchaseOrderDelete.bind(this)\n    }\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value]\n            }\n        })\n    }\n\n    \n    async onSubmit(e){\n        e.preventDefault();\n            var data = this.state.vendor\n            var ele;\n            for (ele in this.state.update){\n                data[ele] = this.state.update[ele][0]\n            }\n            data = {...data, 'action':'edit'}\n            updatePurchaseOrder(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        alert(\"Vendor Data updated.\")\n                        this.props.update(0)\n                    }\n                    else{\n                        alert(data['error'])\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    purchaseOrderDelete(id){\n        var data = {\n            'purchase_orders_id':[\n                id\n            ]\n        }\n        deletePurchaseOrder(JSON.stringify(data)).then(data=>{\n            try {\n                if (data['status']){\n                    alert('Purchase Order Deleted.')\n                    this.props.update(0)\n                }   else{\n                    alert(data['error'])\n                }\n            }catch(e){\n                console.log(e)\n            }\n        })\n    }\n    \n    async popUp(id, uuid=0){\n        const data = {\n            'action':'get',\n            'purchase_order_id':id,\n        }\n        var data_main;\n        await getPurchaseOrder(JSON.stringify(data)).then(data => {\n            if (data['status']){\n                data_main=data\n            }\n        })\n        if (data_main['p_items'].length === 0) {\n            console.log(\"blank\")\n            data_main['p_items'] = [{\n                id:0\n            }]\n        }\n        await this.setState({\n            'popUp':true,\n            'purchase_order':data_main['p_order'][0],\n            'purchase_items':data_main['p_items']\n        })\n    }\n\n\n    columns = [\n        {\n            id:1,\n            name:\"Vendor Name\",\n            prop: 'vendor_name'\n        },\n        {\n            id:2,\n            name:\"Items\",\n            prop: 'items'\n        },\n        {\n            id:3,\n            name:\"Invoiced On\",\n            prop: 'invoiced_on'\n        },\n        {\n            id:4,\n            name:\"Total Cost\",\n            prop: 'total_cost'\n        },   \n        {\n            id:5,\n            name:\"Status\",\n            prop: 'status_name'\n        }      \n    ]\n    \n\n    render() {\n        const list = <List data={this.props.data} header={this.columns}   popUp={this.popUp} update={this.props.update} page={this.props.page} />\n        const popUpRender = <PopUpEdit purchase_order={this.state.purchase_order} purchase_items={this.state.purchase_items} update={this.props.update} delete={this.purchaseOrderDelete} ></PopUpEdit>\n        return (\n            <div>\n                {this.state.popUp ? popUpRender : list}\n            </div>\n        )\n    }\n}\n\nexport default PurchaseOrderList\n","import React, { Component } from 'react'\nimport {getPurchaseOrders} from '../../api/inventory/purchaseOrder';\nimport {  connect } from 'react-redux';\nimport  PurchaseOrderList  from './purchaseOrderList';\nimport { Link} from 'react-router-dom';\n\nclass PurchaseOrders extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            'purchaseOrders':[],\n            'loaded':false,\n            'start':0,\n            'end':10,\n            'page':1\n        }\n        this.update_table = this.update_table.bind(this)\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n    }\n\n    async update_table (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                'loaded':false,\n                start: 0,\n                end: 10,\n                page:1\n            })\n        }\n        else{\n            if (this.state.start+by>-1){\n                await this.setState({\n                    'loaded':false,\n                    start: this.state.start+by,\n                    end: this.state.end+by,\n                    page:this.state.page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.start,\n            'end':this.state.end\n        }\n        this.getPurchaseOrdersData(request_json)\n    }\n    \n    async getPurchaseOrdersData (request_json) {\n        await getPurchaseOrders(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'purchaseOrders':data['p_orders'],\n                    'loaded':true\n                })\n            }  \n        })\n    }\n\n \n\nrender() {\n    const render_after_load = (\n        <div>\n            <PurchaseOrderList data={this.state.purchaseOrders} update={this.update_table} page={this.state.page} />\n        </div>\n    )\n\n    return(\n        <div>\n            <Link to='/purchaseorders/create'>Create New Purchase Order</Link><br></br>\n            <button onClick={() => {this.update_table(0)}}>Refresh table</button><br></br>\n            {this.state.loaded ? render_after_load : \"Loading...\"}\n\n        </div>\n    )\n}\n}\n\n\n\n\nconst mapStateToProps = state => ({\n    user: state.user,\n})\n\nexport default connect(mapStateToProps)(PurchaseOrders)","import React, { Component } from 'react'\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport List from '../list';\nimport Popup from \"reactjs-popup\";\nimport style from './css/popUp.module.css';\nimport {getVendors} from '../../api/inventory/vendorApi';\nimport {getPurchaseOrder , updatePurchaseOrder, createPurchaseOrder} from '../../api/inventory/purchaseOrder';\nimport {updatePurchaseItem, deletePurchaseItems, createPurchaseItem} from '../../api/inventory/purchaseItem'\nimport {getPurchaseOrderStatus} from '../../api/misc';\nimport {getItems} from '../../api/inventory/itemApi';\n\nclass PurchaseOrderCreation extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            'popUp':false,\n            'new':false,\n            'current':0,\n            'status':[],\n            'vendor_selection':[\n                {\n                    'id':0,\n                    'name':'None'\n                }\n            ],\n            'item_selection':[\n                {\n                    'id':0,\n                    'name':\"None\"\n                }\n            ],\n            update : {\n                'purchase_order':{\n                    'invoiced_on': this.converter((new Date()).toISOString()),\n                    'completed_on': this.converter((new Date()).toISOString()),\n                    'discount_type':'percent'\n                },\n                'purchase_items':[{\n                    'id':\"Fake Key\"\n                }]\n            }\n        }\n        this.converter = this.converter.bind(this)\n        this.addPurchaseOrder = this.addPurchaseOrder.bind(this)\n        this.getItemData = this.getItemData.bind(this)\n        this.selectItem = this.selectItem.bind(this)\n        this.searchItem = this.searchItem.bind(this)\n        this.addPurchaseItem = this.addPurchaseItem.bind(this)\n        this.invoiceHandler = this.invoiceHandler.bind(this)\n        this.completeHandler = this.completeHandler.bind(this)\n        this.getVendorsData = this.getVendorsData.bind(this)\n        this.popUp = this.popUp.bind(this)\n        this.searchVendor = this.searchVendor.bind(this)\n        this.selectVendor = this.selectVendor.bind(this)\n        this.onChange = this.onChange.bind(this)\n        this.updatePurchaseOrder = this.updatePurchaseOrder.bind(this)\n        this.onChangePI = this.onChangePI.bind(this)\n        this.postPurchaseItem = this.postPurchaseItem.bind(this)\n        this.deletePurchaseItem = this.deletePurchaseItem.bind(this)\n        this.refreshTable = this.refreshTable.bind(this)\n    }\n\n    async componentDidMount(){\n        var request_json = {\n            'action':'get',\n        }\n        await getPurchaseOrderStatus(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    ...this.state,\n                    'status':data.data\n                })\n            }  \n        })\n    }\n\n    async getVendorsData (request_json) {\n        await getVendors(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'vendor_selection':data['vendors'],\n                })\n            }  \n        })\n    }\n\n    selectVendor(id,name){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_order':{\n                    ...this.state.update.purchase_order,\n                    'vendor':id,\n                    'vendor_name':name\n                }\n            }\n        })\n    }\n\n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_order':{\n                    ...this.state.update.purchase_order,\n                    [e.target.name] : [e.target.value][0]\n                }\n            }\n        })\n    }\n\n    converter(date){\n        return ( new Date(Date.parse(date)))\n    }\n\n    popUp(id){\n        var key\n        for (key in this.state.update.purchase_items){\n            if (this.state.update.purchase_items[key].id === id){\n                this.setState({\n                    ...this.state,\n                    'current':key,\n                    'popUp':true\n                })        \n                return\n            }\n        }\n    }\n\n    searchVendor(e){\n        if ((e.target.value).length > 2 ){\n            var request_json = {\n                'action':'get',\n                'start':0,\n                'end':10,\n                'filter':'name',\n                'first_name':(e.target.value)\n            }\n            this.getVendorsData(request_json)\n        }\n    }\n    \n    invoiceHandler(date){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_order':{\n                    ...this.state.update.purchase_order,\n                    'invoiced_on' : date\n                }\n            }\n        })\n    }\n    \n    completeHandler(date){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_order':{\n                    ...this.state.update.purchase_order,\n                    'completed_on' : date\n                }\n            }\n        })\n    }\n\n    updatePurchaseOrder(){\n        var request_json = {\n            ...this.state.update.purchase_order,\n            'action':'edit',\n            'purchase_order_id':this.state.update.purchase_order.id\n        }\n        updatePurchaseOrder(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                alert(\"Purchase Order Details Has Been Updated.\")\n            }\n            else{\n                alert(\"Error : \",data.error)\n            }\n        })\n    }\n    addPurchaseOrder(){\n        var request_json = {\n            ...this.state.update.purchase_order,\n            'action':'add',\n        }\n        createPurchaseOrder(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                alert(\"Purchase Order Has Been Added.\")\n                data['p_orders'][0]['invoiced_on'] = this.converter(data['p_orders'][0]['invoiced_on'])\n                data['p_orders'][0]['completed_on'] = this.converter(data['p_orders'][0]['completed_on'])\n                this.setState({\n                    ...this.state,\n                    'update':{\n                        ...this.state.update,\n                        'purchase_order':data['p_orders'][0]\n                    }\n                })\n            }\n            else{\n                alert(\"Error : \",data.error)\n            }\n        })\n    }\n\n    onChangePI(e){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_items':{\n                    ...this.state.update.purchase_items,\n                    [this.state.current] : {\n                        ...this.state.update.purchase_items[this.state.current],\n                        [e.target.name] : [e.target.value][0]\n                    },\n                }\n            }\n        })\n    }\n\n    postPurchaseItem(is_new=false){\n        var request_json;\n        if (is_new){\n            request_json = {\n                'action':'add',\n                'purchase_order':this.state.update.purchase_order.id,\n                ...this.state.update.purchase_items[this.state.current]\n            }\n            createPurchaseItem(JSON.stringify(request_json)).then(data => {\n                if (data['status']){\n                    alert(\"Purchase Item Has Been Added.\")\n                    this.refreshTable()\n                }\n                else{\n                    alert(data['error'])\n                }\n            })\n            return\n        }\n        request_json = {\n            'action':'edit',\n            ...this.state.update.purchase_items[this.state.current]\n        }\n        updatePurchaseItem(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                alert(\"Purchase Item Details Has Been Updated.\")\n                this.refreshTable()\n            }\n            else{\n                alert(data['error'])\n            }\n        })\n    }\n\n  \n    deletePurchaseItem(){\n        var request_json = {\n            purchase_items_id : [this.state.update.purchase_items[this.state.current].id]\n        }\n        deletePurchaseItems(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                alert(\"Purchase Item Has Beed Deleted.\")\n                this.refreshTable()\n            }\n            else{\n                alert(data['error'])\n            }\n        })\n    }\n\n\n    addPurchaseItem(){\n        var current =0;\n        var item,p_list=[];\n        for (item in this.state.update.purchase_items){\n            if (item.id){\n                if (item.id !== \"Fake Key\"){\n                    current = current + 1\n                    p_list.push(item)\n                }\n            }\n        }\n        this.setState({\n            'current':current,\n            'new':true,\n            'popUp':true,\n            'update':{\n                ...this.state.update,\n                'purchase_items':[\n                    ...p_list,\n                    {\n                        'item_name':\"None\",\n                        'discount_type':'percentage',\n                        'status':'incomplete'\n                    }\n                ]\n            }\n        })\n    }\n\n    columns = [\n        {\n            id:1,\n            name:\"Item Name\",\n            prop: 'item_name'\n        },\n        {\n            id:2,\n            name:\"Quantity\",\n            prop: 'quantity'\n        },\n        {\n            id:3,\n            name:\"Stock\",\n            prop: 'stock'\n        },\n        {\n            id:4,\n            name:\"Defective\",\n            prop: 'defective'\n        },   \n        {\n            id:5,\n            name:\"Sold\",\n            prop: 'sold'\n        },\n        {\n            id:6,\n            name:\"Discount\",\n            prop: 'discount'\n        },\n        {\n            id:7,\n            name:\"Purchase Price\",\n            prop: 'purchase_price'\n        },\n        {\n            id:8,\n            name:\"Status\",\n            prop: 'status'\n        }\n    ]\n\n    searchItem(e){\n        if ((e.target.value).length > 2 ){\n            var request_json = {\n                'action':'get',\n                'start':0,\n                'end':10,\n                'filter':'name',\n                'name':(e.target.value)\n            }\n            this.getItemData(request_json)\n        }\n    }\n\n    async getItemData(request_json){\n        await getItems(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    ...this.state,\n                    'item_selection':data['items'],\n                })\n            }  \n        })\n    }\n    selectItem(id, name){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'purchase_items':{\n                    ...this.state.update.purchase_items,\n                    [this.state.current] : {\n                        ...this.state.update.purchase_items[this.state.current],\n                        'item_name' : name,\n                        'item':id\n                    },\n                }\n            }\n        })\n\n    }\n\n    async refreshTable(){\n        var id = this.state.update.purchase_order.id;\n        var items= [];\n        const request_json = {\n            'action':'get',\n            'purchase_order_id':id\n        }\n        await getPurchaseOrder(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                items = data['p_items']\n            }\n        })\n        if (items.length === 0){\n            items = [{\n                'id':\"Fake Key\",\n                'item_name': ''\n            }]\n        }\n        await this.setState({\n            ...this.state,\n            'popUp':false,\n            'update':{\n                ...this.state.update,\n                'purchase_items':items\n            }\n        })\n    }\n\n\n    render() {\n        const item_selection = this.state.item_selection\n        const itemPopUp = <Popup trigger={ <button>Select Item</button>} closeOnDocumentClick>\n        <div>\n            <input placeholder=\"Item Name\" id='item_search_box' name='item_serach_box' onChange={this.searchItem}></input>\n            <div className={style.dropdown_content} id='vendor_dropdown'>\n                    {item_selection.map(\n                        item => (\n                            // use css to get rid of <a>\n                            <a key={item.id} onClick={() => {this.selectItem(item.id, item.name)}} >{item.name}</a>\n                        )\n                    )}\n            </div>\n        </div>\n        </Popup>\n        const popUpItem = <div>\n                <button onClick={() => {this.refreshTable()}} >Back</button><br></br><br></br>\n                Item : {this.state.update.purchase_items[this.state.current].item_name}  {this.state.new ? itemPopUp: <span></span>}<br></br>\n                Quantity : <input name=\"quantity\" placeholder={this.state.update.purchase_items[this.state.current].quantity} type=\"number\" onChange={this.onChangePI} required></input><br></br>\n                Defective : <input name=\"defective\" placeholder={this.state.update.purchase_items[this.state.current].defective} type=\"number\"  onChange={this.onChangePI} required></input><br></br>\n                \n                Discount Type :<select name='discount_type' id=\"discount_type\" defaultValue={this.state.update.purchase_items[this.state.current].discount_type}  onChange={this.onChangePI}>\n                                    <option value=\"percent\">Percentage</option>\n                                    <option value=\"fixed\">Fixed</option>\n                                </select> <br></br>\n                Discount : <input placeholder={this.state.update.purchase_items[this.state.current].discount} name=\"discount\" onChange={this.onChangePI} ></input><br></br>\n                Purchase Price : <input placeholder={this.state.update.purchase_items[this.state.current].purchase_price} name=\"purchase_price\" onChange={this.onChangePI} required></input> <br></br>\n                Status : <select defaultValue= {this.state.update.purchase_items[this.state.current].status} name=\"status\" onChange={this.onChangePI}>\n                    <option value=\"delivered\">Delivered</option>\n                    <option value=\"incomplete\">Incomplete</option>\n                    <option value=\"addedtocirculation\">Added To Circulation</option>\n                </select><br></br>\n                {this.state.new ? <button onClick={() => {this.postPurchaseItem(true)}} >Add</button> : <button onClick={() => {this.postPurchaseItem()}} >Update</button>}<br></br><br></br>\n                <button onClick={() => {this.deletePurchaseItem()}} >Delete</button>\n            </div>\n        const vendor_selection = this.state.vendor_selection\n        const vendorPopup = <Popup trigger={this.state.update.purchase_order.id ?<button>Change Vendor</button> :<button>Select Vendor</button> } closeOnDocumentClick>\n        <div>\n            <input placeholder=\"Vendor's first name\" id='vendor_serach_box' name='vendor_serach_box' onChange={this.searchVendor}></input>\n            <div className={style.dropdown_content} id='vendor_dropdown'>\n                    {vendor_selection.map(\n                        vendor => (\n                            // use css to get rid of <a>\n                            <a key={vendor.id} onClick={() => {this.selectVendor(vendor.id, vendor.name)}} >{vendor.name}</a>\n                        )\n                    )}\n            </div>\n        </div>\n        </Popup>\n        const status = this.state.status\n        return (\n            <div>\n                Vendor : {this.state.update.purchase_order.vendor_name}\n                {vendorPopup}<br></br>\n                Invoiced On : \n                <DatePicker\n                name='invoiced_on'\n                selected={this.state.update.purchase_order.invoiced_on}\n                onChange={this.invoiceHandler}\n                required\n                />\n                Completed On : \n                <DatePicker\n                name='completed_on'\n                selected={this.state.update.purchase_order.completed_on}\n                onChange={this.completeHandler}\n                required\n                /><br></br>\n                Total Cost : <input placeholder={this.state.update.purchase_order.total_cost} name=\"total_cost\" onChange={this.onChange} /><br></br>\n                Discount Type :<select name='discount_type' id=\"discount_type\" onChange={this.onChange} defaultValue={this.state.update.purchase_order.discount_type}>\n                                <option value=\"percent\">Percentage</option>\n                                <option value=\"fixed\">Fixed</option>\n                            </select> <br></br>\n                Discount : <input placeholder={this.state.update.purchase_order.discount} name=\"discount\" onChange={this.onChange}></input><br></br>\n                Status : <select name='status' id=\"status\" onChange={this.onChange} value={this.state.update.purchase_order.status} required >\n                                {status.map(\n                                    x => (\n                                    <option key={x.id} value={parseInt(x.id)}>{x.name}</option>\n                                    )\n                                )}\n                            </select> <br></br><br></br>\n                {this.state.update.purchase_order.id ? <button onClick={() => {this.updatePurchaseOrder()}}>Update Purchase Order</button> : <button onClick={() => {this.addPurchaseOrder()}}>Create Purchase Order</button>}\n                <br></br><br></br>\n                <hr></hr>\n                <h3>Items</h3> {this.state.update.purchase_order.id ? <button  onClick={() => {this.addPurchaseItem()}}>Add New Items</button> : ''} \n                {this.state.update.purchase_order.id ?this.state.popUp ? popUpItem :<List data={this.state.update.purchase_items} header={this.columns} page={false} popUp={this.popUp} /> : \"Fill in Purchase Order first to add new items.\" }\n                \n            </div>\n        )\n    }\n}\nexport default PurchaseOrderCreation","import { baseRequest } from '../base';\n// api for Invoices \n\nconst getInvoices = async data => {\n    try {\n      return await baseRequest('apiv1/sales/invoices','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  \n  const deleteInvoices = async data => {\n    try {\n      return await baseRequest('apiv1/sales/invoices/delete','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const createInvoice = async data => {\n      try {\n        return await baseRequest('apiv1/sales/invoices','POST', data);\n      } catch(e){\n        alert(e)\n      }\n  };\n  \n  \n  const getInvoice = async data => {\n    try {\n      return await baseRequest('apiv1/sales/invoice','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const updateInvoice= async data => {\n    try {\n      return await baseRequest('apiv1/sales/invoice','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  const getInvoiceStatus= async data => {\n    try {\n      return await baseRequest('apiv1/sales/invoices/status','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \nexport {getInvoiceStatus, getInvoices, createInvoice, deleteInvoices, updateInvoice, getInvoice}\n  ","import { baseRequest } from '../base';\n// api for Invoices \n\nconst getInvoiceItems = async data => {\n    try {\n      return await baseRequest('apiv1/sales/invoiceitems','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  \n  const deleteInvoiceItems = async data => {\n    try {\n      return await baseRequest('apiv1/sales/invoiceitems/delete','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const createInvoiceItem = async data => {\n      try {\n        return await baseRequest('apiv1/sales/invoiceitems','POST', data);\n      } catch(e){\n        alert(e)\n      }\n  };\n  \n  \n  const getInvoiceItem = async data => {\n    try {\n      return await baseRequest('apiv1/sales/invoiceitem','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const updateInvoiceItem= async data => {\n    try {\n      return await baseRequest('apiv1/sales/invoiceitem','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \nexport {getInvoiceItems, createInvoiceItem, deleteInvoiceItems, updateInvoiceItem, getInvoiceItem}\n  ","import { baseRequest } from '../base';\n// api for items \n\nconst getPlaces = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/places','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  \n  const deletePlaces = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/places/delete','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const createPlace = async data => {\n      try {\n        return await baseRequest('apiv1/inventory/places','POST', data);\n      } catch(e){\n        alert(e)\n      }\n  };\n  \n  \n  const getPlace = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/place','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const updatePlace = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/place','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n\n  const assignPlace = async data => {\n    try { \n      return await  baseRequest('apiv1/inventory/places/assign','POST', data);\n    } catch (e){\n      alert(e)\n    }\n  }\n  \nexport {getPlaces, createPlace, deletePlaces, updatePlace, getPlace, assignPlace}\n  ","import React, { Component } from 'react'\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport List from '../list';\nimport Popup from \"reactjs-popup\";\nimport style from '../purchaseOrder/css/popUp.module.css';\nimport {getCustomers} from '../../api/sales/customer';\nimport {updateInvoice, getInvoice, deleteInvoices, getInvoiceStatus} from '../../api/sales/invoice';\nimport {updateInvoiceItem, deleteInvoiceItems, createInvoiceItem} from '../../api/sales/invoiceItem'\nimport {getItems} from '../../api/inventory/itemApi';\nimport {getPlaces} from '../../api/inventory/placeApi';\nimport { getDiscounts, getTaxes } from '../../api/misc'\nimport { Grid } from '@material-ui/core';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\n\n\nimport IconButton from '@material-ui/core/IconButton';\n\nimport {Button, TextField } from '@material-ui/core';\n\nimport Swal from 'sweetalert2'\n\n\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\n\n\nclass PopUpEdit extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            'tax_start':0,\n            'tax_end':5,\n            'discount_start':0,\n            'discount_end':5,\n            'tax_loaded':false,\n            'discount_loaded':false,\n            'discount_page':[],\n            'tax_page':[],\n            'discount_selection':[],\n            'tax_selection':[],\n            'place_selection':[],\n            'stock_selection':[],\n            'sold_from_selection':[],\n            'popUp':false,\n            'new':false,\n            'current':0,\n            'status':[],\n            'customer_selection':[\n                {\n                    'id':0,\n                    'name':'None'\n                }\n            ],\n            'item_selection':[\n                {\n                    'id':0,\n                    'name':\"None\"\n                }\n            ],\n            update : {\n                'invoice':{\n                    ...this.props.invoice,\n                    'invoiced_on': this.converter(this.props.invoice.invoiced_on),\n                    'due_on': this.converter(this.props.invoice.due_on)\n                },\n                'invoice_items':this.props.invoice_items\n            }\n        }\n        this.update_table = this.update_table.bind(this)\n        this.stateman = this.stateman.bind(this)\n        this.refreshTable = this.refreshTable.bind(this)\n        this.getItemData = this.getItemData.bind(this)\n        this.selectItem = this.selectItem.bind(this)\n        this.searchItem = this.searchItem.bind(this)\n        this.addInvoiceItem = this.addInvoiceItem.bind(this)\n        this.invoiceHandler = this.invoiceHandler.bind(this)\n        this.dueOnHandler = this.dueOnHandler.bind(this)\n        this.getCustomerData = this.getCustomerData.bind(this)\n        this.converter = this.converter.bind(this)\n        this.popUp = this.popUp.bind(this)\n        this.searchCustomer = this.searchCustomer.bind(this)\n        this.selectCustomer = this.selectCustomer.bind(this)\n        this.onChange = this.onChange.bind(this)\n        this.updateInvoice = this.updateInvoice.bind(this)\n        this.onChangePI = this.onChangePI.bind(this)\n        this.postInvoiceItem = this.postInvoiceItem.bind(this)\n        this.deleteInvoiceItem = this.deleteInvoiceItem.bind(this)\n        this.onChangePlace = this.onChangePlace.bind(this)\n        this.removeEntry = this.removeEntry.bind(this)\n        this.addEntryDiscount = this.addEntryDiscount.bind(this)\n        this.addEntryTax = this.addEntryTax.bind(this)\n    }\n\n    removeEntry(id, dis){\n        if (dis){\n            Swal.fire({\n                title: 'Are you sure?',\n                text: \"You won't be able to revert this!\",\n                icon: 'warning',\n                showCancelButton: true,\n                confirmButtonColor: '#3085d6',\n                cancelButtonColor: '#d33',\n                confirmButtonText: 'Yes, delete it!'\n              }).then((result) => {\n                if (result.value) {\n\n            var temp = this.state.update.invoice_items[this.state.current].applied_discount\n            temp.pop(dis)\n            var temp2 = this.state.update.invoice_items[this.state.current].discount\n            temp2.pop(temp.id)\n            this.setState({\n                ...this.state,\n                'update':{\n                    ...this.state.update,\n                    invoice_items:{\n                        ...this.state.update.invoice_items,\n                        [dis]:{\n                            'applied_discount':temp,\n                            'discount':temp2\n                            }\n                        }\n                    }\n                })\n            }\n        })\n    }\n        else {\n            \n    Swal.fire({\n        title: 'Are you sure?',\n        text: \"You won't be able to revert this!\",\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Yes, delete it!'\n      }).then((result) => {\n                var temp = this.state.update.invoice_items[this.state.current].applied_tax\n                temp.pop(dis)\n                var temp2 = this.state.update.invoice_items[this.state.current].taxes\n                temp2.pop(temp.id)\n                this.setState({\n                    ...this.state,\n                    'update':{\n                        ...this.state.update,\n                        invoice_items:{\n                            ...this.state.update.invoice_items,\n                            [dis]:{\n                                'applied_tax':temp,\n                                'taxes':temp2\n                            }\n                        }\n                    }\n                })\n            })\n        }\n    }\n\n    async componentDidMount(){\n        var request_json = {\n            'action':'get',\n        }\n        await getInvoiceStatus(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    ...this.state,\n                    'status':data.data\n                })\n            }\n            else{\n                Swal.fire({\n                    icon:'error',\n                    title:data['error']\n                })\n            }\n        })\n    }\n\n    async getCustomerData (request_json) {\n        await getCustomers(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'customer_selection':data['customers'],\n                })\n            } \n            \n            else{\n                Swal.fire({\n                    icon:'error',\n                    title:data['error']\n                })\n            } \n        })\n    }\n\n    selectCustomer(id,name){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice':{\n                    ...this.state.update.invoice,\n                    'customer':id,\n                    'customer_name':name\n                }\n            }\n        })\n    }\n\n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice':{\n                    ...this.state.update.invoice,\n                    [e.target.name] : [e.target.value][0]\n                }\n            }\n        })\n    }\n\n    converter(date){\n        return ( new Date(Date.parse(date)))\n    }\n\n    popUp(id){\n        var key\n        for (key in this.state.update.invoice_items){\n            if (this.state.update.invoice_items[key].id === id){\n                this.setState({\n                    ...this.state,\n                    'current':key,\n                    'popUp':true\n                }) \n                break;       \n            }\n        }\n        var request_json = {\n            'action':'get',\n            'filter':'item',\n            'item_id':this.state.update.invoice_items[key].item  \n        }\n        this.getPlacesData(request_json)\n    }\n\n    async getPlacesData(request_json) {\n        await getPlaces(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'sold_from_selection':data['placements'],\n                })\n                var temp = [], key, x;\n                for(key in data['placements']){\n                    x = {'id': data['placements'][key]['placed_on'], 'str_placed_on':data['placements'][key]['str_placed_on']}\n                    temp[data['placements'][key]['placed_on']] = x\n                    }\n                temp = temp.filter(function (el) {\n                    return el != null;\n                });\n                this.setState({\n                    'place_selection':temp\n                })\n                this.update_stock(data)\n            }\n            else{\n                Swal.fire({\n                    icon:'error',\n                    title:data['error']\n                })\n            }\n        })\n\n    }\n\n    // data = sold_From_selection\n    update_stock(data){\n        console.log(\"data\",data)\n        var sold_from;\n        if (this.state.update.invoice_items[this.state.current]['sold_from']){\n            sold_from = this.state.update.invoice_items[this.state.current]['sold_from']\n        }else {\n            sold_from = data['placements'][0]['placed_on']\n        }\n        var temp=[];\n        var p ;\n        for (p in data['placements']){\n            if (sold_from === data['placements'][p]['placed_on']){\n                var string  = data['placements'][p]['purchase_item_details']['purchase_price'] + \"/-  \" + data['placements'][p]['purchase_item_details']['quantity'] + \" \" + data['placements'][p]['purchase_item_details']['vendor'] \n                temp.push({\n                    'id': data['placements'][p]['purchase_item'],\n                    'str':string\n                })\n            }\n            \n        }\n        this.setState({\n            ...this.state,\n            'stock_selection': temp\n        })\n    }  \n    \n\n    async onChangePlace(e){\n        await this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice_items':{\n                    ...this.state.update.invoice_items,\n                    [this.state.current] : {\n                        ...this.state.update.invoice_items[this.state.current],\n                        [e.target.name] : [e.target.value][0]\n                    },\n                }\n            }\n        })\n        var temp=[],p;\n                for (p in this.state.sold_from_selection){\n                    if ( parseInt( this.state.update.invoice_items[this.state.current]['sold_from']) ===parseInt( this.state.sold_from_selection[p]['placed_on'])){\n                        var string  = this.state.sold_from_selection[p]['purchase_item_details']['purchase_price'] + \"/-  \" + this.state.sold_from_selection[p]['purchase_item_details']['quantity'] + \" \" + this.state.sold_from_selection[p]['purchase_item_details']['vendor'] \n                        temp.push({\n                            'id': this.state.sold_from_selection[p]['purchase_item'],\n                            'str':string\n                        })\n                    }\n                }\n                this.setState({\n                    ...this.state,\n                    'stock_selection': temp\n                }) \n    }\n\n    searchCustomer(e){\n        if ((e.target.value).length > 2 ){\n            var request_json = {\n                'action':'get',\n                'start':0,\n                'end':10,\n                'filter':'name',\n                'name':(e.target.value)\n            }\n            this.getCustomerData(request_json)\n        }\n    }\n    \n    invoiceHandler(date){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice':{\n                    ...this.state.update.invoice,\n                    'invoiced_on' : date\n                }\n            }\n        })\n    }\n    \n    dueOnHandler(date){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice':{\n                    ...this.state.update.invoice,\n                    'due_on' : date\n                }\n            }\n        })\n    }\n\n    updateInvoice(){\n        var request_json = {\n            ...this.state.update.invoice,\n            'action':'edit',\n            'invoice_id':this.state.update.invoice.id\n        }\n        updateInvoice(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                Swal.fire(\"Invoice Details Has Been Updated.\")\n                this.props.update(0)\n            }\n            else{\n                Swal.fire({\n                    icon:'error',\n                    title:data['error']\n                })            }\n        })\n    }\n\n    onChangePI(e){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice_items':{\n                    ...this.state.update.invoice_items,\n                    [this.state.current] : {\n                        ...this.state.update.invoice_items[this.state.current],\n                        [e.target.name] : [e.target.value][0]\n                    },\n                }\n            }\n        })\n    }\n\n    postInvoiceItem(is_new=false){\n        var request_json\n        if (is_new){\n            request_json = {\n                'action':'add',\n                'invoice':this.state.update.invoice.id,\n                ...this.state.update.invoice_items[this.state.current],\n            }\n            request_json['applied_tax'] = []\n            request_json['applied_discount'] = []\n            createInvoiceItem(JSON.stringify(request_json)).then(data => {\n                if (data['status']){\n                    Swal.fire(\"Invoice Item Has Been Added.\")\n                    this.refreshTable()\n                }\n                else{\n                    Swal.fire({\n                        icon:'error',\n                        title:data['error']\n                    })                   }\n            })\n            return\n        }\n        request_json = {\n            'action':'edit',\n            'invoice':this.state.update.invoice.id,\n            'invoice_item_id':this.state.update.invoice_items[this.state.current].id,\n            ...this.state.update.invoice_items[this.state.current]\n        }\n        request_json['applied_tax'] = []\n        request_json['applied_discount'] = []\n        updateInvoiceItem(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                Swal.fire(\"Invoice Item Details Has Been Updated.\")\n                this.refreshTable()\n            }\n            else{\n                Swal.fire({\n                    icon:'error',\n                    title:data['error']\n                })               }\n        })\n    }\n\n    deleteInvoiceItem(){\n        var request_json = {\n            invoice_items_id : [this.state.update.invoice_items[this.state.current].id]\n        }\n        \n    Swal.fire({\n        title: 'Are you sure?',\n        text: \"You won't be able to revert this!\",\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Yes, delete it!'\n      }).then((result) => {\n        deleteInvoiceItems(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                Swal.fire(\"Invoice Item Has Beed Deleted.\")\n                this.refreshTable()\n            }\n            else{\n                Swal.fire({\n                    icon:'error',\n                    title:data['error']\n                })               }\n        })\n    })\n    }\n\n    addInvoiceItem(){\n        var current =0;\n        var item,p_list=[];\n        for (item in this.state.update.invoice_items){\n            if (item.id){\n                if (item.id !== \"Fake Key\"){\n                    current = current + 1\n                    p_list.push(item)\n                }\n            }\n        }\n        this.setState({\n            'current':current,\n            'new':true,\n            'popUp':true,\n            'update':{\n                ...this.state.update,\n                'invoice_items':[\n                    ...p_list,\n                    {\n                        'item_name':\"None\",\n                        'discount_type':'percentage',\n                        'status':'incomplete',\n                        'discount':[],\n                        'taxes':[],\n                        'applied_tax':[],\n                        'applied_discount':[],\n                        'purchase_item':'',\n                    }\n                ]\n            }\n        })\n    }\n    columns = [\n        {\n            id:1,\n            name:\"Item Name\",\n            prop: 'item_name'\n        },\n        {\n            id:2,\n            name:\"Quantity\",\n            prop: 'quantity'\n        },\n        {\n            id:8,\n            name:\"Price\",\n            prop: 'price'\n        },\n        {\n            id:3,\n            name:\"Sold From\",\n            prop: 'sold_from_name'\n        },\n        {\n            id:4,\n            name:\"Tax Total\",\n            prop: 'tax_total'\n        },\n        ,\n        {\n            id:5,\n            name:\"Disount Amount\",\n            prop: 'discount_amount'\n        },   \n        {\n            id:6,\n            name:\"Sub Total\",\n            prop: 'sub_total'\n        },\n        {\n            id:7,\n            name:\"Total\",\n            prop: 'total'\n        }\n    ]\n\n    searchItem(e){\n        if ((e.target.value).length > 2 ){\n            var request_json = {\n                'action':'get',\n                'start':0,\n                'end':10,\n                'filter':'name',\n                'name':(e.target.value)\n            }\n            this.getItemData(request_json)\n        }\n    }\n\n    async getItemData(request_json){\n        await getItems(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    ...this.state,\n                    'item_selection':data['items'],\n                })\n            }  \n            \n            else{\n                Swal.fire({\n                    icon:'error',\n                    title:data['error']\n                })            }\n        })\n    }\n    selectItem(id, name){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice_items':{\n                    ...this.state.update.invoice_items,\n                    [this.state.current] : {\n                        ...this.state.update.invoice_items[this.state.current],\n                        'item_name' : name,\n                        'item':id\n                    },\n                }\n            }\n        })\n        var request_json = {\n            'action':'get',\n            'filter':'item',\n            'item_id':id\n        }\n        this.getPlacesData(request_json)\n    }\n\n    async refreshTable(){\n        var id = this.state.update.invoice.id;\n        var items= [];\n        const request_json = {\n            'action':'get',\n            'invoice_id':id\n        }\n        await getInvoice(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                items = data['invoice_items']\n            }\n            \n            else{\n                Swal.fire({\n                    icon:'error',\n                    title:data['error']\n                })            }\n        })\n        if (items.length === 0){\n            items = [{\n                'id':\"Fake Key\",\n                'item_name': ''\n            }]\n        }\n        await this.setState({\n            ...this.state,\n            'popUp':false,\n            'update':{\n                ...this.state.update,\n                'invoice_items':items\n            }\n        })\n    }\n\n\n    stateman(){\n        console.log(this.state)\n    }\n\n\n    discount_columns =[\n        {\n            'id':1,\n            'name':'Name',\n            'prop':'name'\n        },{\n            'id':2,\n            'name':'Rate',\n            'prop':'rate'\n        },{\n            'id':3,\n            'name':'Code',\n            'prop':'code'\n        },{\n            'id':4,\n            'name':'Type',\n            'prop':'discount_type'\n        },{\n            'id':5,\n            'name':'Remove',\n            'prop':'removeButton'\n        },\n    ]\n\n    tax_columns =[\n        {\n            'id':1,\n            'name':'Name',\n            'prop':'name'\n        },{\n            'id':2,\n            'name':'Rate',\n            'prop':'rate'\n        },{\n            'id':3,\n            'name':'Code',\n            'prop':'code'\n        },{\n            'id':4,\n            'name':'Type',\n            'prop':'tax_type'\n        },{\n            'id':5,\n            'name':'Remove',\n            'prop':'removeButton'\n        },\n    ]\n\n    \n    add_discount_columns =[\n        {\n            'id':1,\n            'name':'Name',\n            'prop':'name'\n        },{\n            'id':2,\n            'name':'Rate',\n            'prop':'rate'\n        },{\n            'id':3,\n            'name':'Code',\n            'prop':'code'\n        },{\n            'id':4,\n            'name':'Type',\n            'prop':'discount_type'\n        }\n    ]\n\n    add_tax_columns =[\n        {\n            'id':1,\n            'name':'Name',\n            'prop':'name'\n        },{\n            'id':2,\n            'name':'Rate',\n            'prop':'rate'\n        },{\n            'id':3,\n            'name':'Code',\n            'prop':'code'\n        },{\n            'id':4,\n            'name':'Type',\n            'prop':'tax_type'\n        }\n    ]\n\n    async update_table (by,dis) {\n        var x = by<0?-1:1\n        if (dis){\n            if (by===0){\n                await this.setState({\n                    'discoount_loaded':false,\n                    discount_start: 0,\n                    discount_end: 10,\n                    discount_page:1\n                })\n            }\n            else{\n                if (this.state.discount_start+by>-1){\n                    await this.setState({\n                        'discount_loaded':false,\n                        discount_start: this.state.discount_start+by,\n                        discount_end: this.state.discount_end+by,\n                        discount_page:this.state.discount_page+x\n                    })\n                }\n                else{\n                    alert(\"Cannot move futher from here.\")\n                    return\n                }\n            }\n            var  request_json = {\n                'action':'get',\n                'filter':'none',\n                'start':this.state.discount_start,\n                'end':this.state.discount_end\n            }\n            this.getDiscountsData(request_json)\n        }\n    else { \n        if (by===0){\n            await this.setState({\n                'tax_loaded':false,\n                tax_start: 0,\n                tax_end: 10,\n                tax_page:1\n            })\n        }\n        else{\n            if (this.state.tax_start+by>-1){\n                await this.setState({\n                    'tax_loaded':false,\n                    tax_start: this.state.tax_start+by,\n                    tax_end: this.state.tax_end+by,\n                    tax_page:this.state.tax_page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.tax_start,\n            'end':this.state.tax_end\n        }\n        this.getTaxesData(request_json)\n\n    }\n    }\n    \n    async getDiscountsData (request_json) {\n        await getDiscounts(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'discount_selection':data['discounts'],\n                    'discount_loaded':true\n                })\n            }\n            else{\n                Swal.fire({\n                    icon:'error',\n                    title:data['error']\n                })            }\n        })\n    }\n    async getTaxesData (request_json) {\n        await getTaxes(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'tax_selection':data['taxes'],\n                    'tax_loaded':true\n                })\n            }  \n        })\n    }\n \n    addEntryDiscount(id){\n        var dis;\n        var temp,temp2;\n        console.log(\"dis\",this.state.update.invoice_items[this.state.current])\n        for (dis in this.state.discount_selection){\n            if (this.state.discount_selection[dis].id === id){\n                temp = this.state.update.invoice_items[this.state.current]['applied_discount']\n                var x = this.state.discount_selection[dis]\n                temp.push(x)\n                temp2 = this.state.update.invoice_items[this.state.current]['discount']\n                temp2.push(id)\n                this.setState({\n                    ...this.state,\n                    update:{\n                        ...this.state.update,\n                        'invoice_items':{\n                            ...this.state.update.invoice_items,\n                            [this.state.current] : {\n                                ...this.state.update.invoice_items[this.state.current],\n                                'discount':temp2,\n                                'applied_discount': temp\n                            }\n                        }\n                    }\n                })\n            }\n        }\n    }\n\n    addEntryTax(id){\n        var dis;\n        for (dis in this.state.tax_selection){\n            if (this.state.tax_selection[dis].id === id){\n                var temp = this.state.update.invoice_items[this.state.current]['applied_tax']\n                var x = this.state.tax_selection[dis]\n                temp.push(x)\n                var temp2 = this.state.update.invoice_items[this.state.current]['taxes']\n                temp2.push(id)\n                this.setState({\n                    ...this.state,\n                    update:{\n                        ...this.state.update,\n                        'invoice_items':{\n                            ...this.state.update.invoice_items,\n                            [this.state.current] : {\n                                ...this.state.update.invoice_items[this.state.current],\n                                'tax':temp2,\n                                'applied_tax': temp\n                            }\n                        }\n                    }\n                })\n            }\n        }\n    }\n\n\n    render() {\n        const item_selection = this.state.item_selection\n        const itemPopUp = <Popup trigger={ <Button variant=\"contained\" color=\"primary\" size='small'>Select Item</Button>} closeOnDocumentClick>\n        <div>\n            <input placeholder=\"Item Name\" id='item_search_box' name='item_serach_box' onChange={this.searchItem}></input>\n            <div className={style.dropdown_content} id='item_dropdown'>\n                    {item_selection.map(\n                        item => (\n                        <a key={item.id} onClick={() => {this.selectItem(item.id, item.name)}} >{item.name} {item.sales_price}</a>\n                        )\n                    )}\n            </div>\n        </div>\n        </Popup>\n\n        var places = this.state.place_selection\n        const selectPlace =<select name='sold_from' id=\"sold_from\" onChange={this.onChangePlace} value={this.state.update.invoice_items[this.state.current].sold_from}  >\n            <option key=\"Fake Key\" value='Fake Value'>Select Place</option>\n                {places.map(\n                    x => (\n                    <option key={x.id} value={x.id}>{x.str_placed_on}</option>\n                    )\n                )}\n            </select>\n\n            \n        var stocks  = this.state.stock_selection\n        var stockValue = this.state.update.invoice_items[this.state.current].purchase_item ? this.state.update.invoice_items[this.state.current].purchase_item : ''\n        const selectStock = <select name='purchase_item' id=\"purchase_item\" onChange={this.onChangePI} value={stockValue} >\n                <option key='Fake Key' value=\"Fake Value\">Select Stock</option>\n                {stocks.map(\n                    x => (\n                    <option key={x.id} value={parseInt(x.id)}>{x.str}</option>\n                    )\n                )}\n            </select>\n        const addPopupDiscount = <div>\n\n            <h3> Click To Apply New Discount</h3>\n            <Grid container justify='center'>\n                <Grid item xm={12} md={12}>\n            <List data={this.state.discount_selection} header={this.add_discount_columns} page={false} popUp={this.addEntryDiscount} />\n            </Grid>\n            <Grid item xm={12} md={3}>\n            <IconButton onClick={()=> {this.update_table(-5,true)}}><NavigateBeforeIcon /></IconButton><span>      {this.state.discount_page}       </span><IconButton  onClick={()=> {this.update_table(5,true)}} ><NavigateNextIcon /></IconButton>\n            </Grid>\n                            \n            </Grid>\n                            </div>\n        \n        const addPopupTax = <div>\n            <h3>Click To Apply New Tax </h3>\n            <Grid container justify='center'>\n                <Grid item xm={12} md={12}>\n            <List data={this.state.tax_selection} header={this.add_tax_columns} page={false} popUp={this.addEntryTax} />\n            </Grid>\n            <Grid item xm={12} md={3}>\n            <IconButton onClick={()=> {this.update_table(-5,false)}}><NavigateBeforeIcon /></IconButton><span>      {this.state.discount_page}       </span><IconButton  onClick={()=> {this.update_table(5,false)}} ><NavigateNextIcon /></IconButton>\n            </Grid>\n                            \n            </Grid>\n            </div>\n        \n\n        var dis;\n        const discounts =this.state.update.invoice_items[this.state.current].applied_discount\n        for (dis in discounts){\n            discounts[dis] = {\n                ...discounts[dis],\n                'removeButton':<button onClick={() => {this.removeEntry(dis,true)}}> Remove </button>\n            }\n        }\n        \n        const taxes = this.state.update.invoice_items[this.state.current].applied_tax\n        for (dis in taxes){\n            taxes[dis] = {\n                ...taxes[dis],\n                'removeButton':<button onClick={()=>{this.removeEntry(dis,false)}}> Remove </button>\n            }\n        }\n        const popUpItem = <div>\n            <table cellSpacing={10} cellPadding={10}>\n                <tbody>\n\n               \n                <tr>\n                    <td>\n                    <Button  variant=\"contained\" color=\"secondary\" onClick={() => {this.refreshTable()}} >Back</Button>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                    <h3>Item :  {this.state.update.invoice_items[this.state.current].item_name}</h3>\n                    </td>\n                    <td>\n                    {itemPopUp}\n                    </td>\n                </tr>\n                <tr>\n                    <th colSpan={2} >\n                        <b>Sold From </b>\n                    </th>\n                </tr>\n\n                <tr>\n                    <td>\n                        Place: \n                    </td>\n                    <td>\n                    {this.state.update.invoice_items[this.state.current].item ? selectPlace : \"Select An Item First\" }\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                    Stock :\n                    </td>\n                    <td>\n                    {this.state.update.invoice_items[this.state.current].item ? selectStock : \"Select An Item First\" }\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                    Quantity : <input name=\"quantity\" placeholder={this.state.update.invoice_items[this.state.current].quantity} type=\"number\" onChange={this.onChangePI} required min='1' ></input><br></br>\n                \n                    </td>\n                    <td>\n                    Price : <input name=\"price\" placeholder={this.state.update.invoice_items[this.state.current].price} type=\"number\" onChange={this.onChangePI} required></input><br></br>\n                \n                    </td>\n                    </tr>\n                    <tr>\n                    <td>\n                    Tax Total : {this.state.update.invoice_items[this.state.current].tax_total} <br></br>\n                    </td>\n                    <td>\n                    Sub Total : {this.state.update.invoice_items[this.state.current].sub_total} <br></br>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                    Discount Amount : {this.state.update.invoice_items[this.state.current].discount_amount}<br></br>\n                    </td>\n                    <td>\n                    Total without discount : {this.state.update.invoice_items[this.state.current].total_without_discount}<br></br>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                    Total : {this.state.update.invoice_items[this.state.current].total}<br></br>\n                    </td>\n                </tr>\n                <tr>\n                    \n                <td>\n                    Applied Discounts \n                    </td>\n                    <th>\n                    <Button onClick={() =>{this.update_table(0, true)}}  variant=\"contained\" color=\"secondary\" size='small'>Apply New Discount</Button>\n                    </th>\n                </tr>\n                <tr>\n                    <td colSpan={3} >\n                    <List data={discounts} header={this.discount_columns} page={false} popUp={this.popUp} removeEntry={this.removeEntry} />\n                    </td>\n                </tr>\n                <tr>\n                    <td colSpan={3}>\n                {this.state.discount_loaded ? addPopupDiscount : <span></span>}\n                </td>\n                </tr>\n            <tr>\n                <td>\n                    Applied Taxes \n                </td>\n                <td>\n                <Button variant=\"contained\" color=\"secondary\" size='small' onClick={() => {this.update_table(0, false)}}>Apply New Tax</Button>\n                </td>\n            </tr>\n                <tr>\n                    <td colSpan={3}>\n                    <List data={taxes} header={this.tax_columns} page={false} popUp={this.popUp} removeEntry={this.removeEntry} />\n                    </td>\n                </tr>\n                <tr>\n                    <td colSpan={3}>\n                    {this.state.tax_loaded ? addPopupTax : <span></span>}<br></br>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                    {this.state.new ? <Button variant=\"contained\" color=\"primary\" size='small' onClick={() => {this.postInvoiceItem(true)}} >Add</Button> : <Button  variant=\"contained\" color=\"primary\" size='small' onClick={() => {this.postInvoiceItem()}} >Update</Button>}\n                    </td>\n                    <td>\n                    <Button  variant=\"contained\" color=\"secondary\" size='small' onClick={() => {this.deleteInvoiceItem()}} >Delete</Button>\n                    </td>\n                </tr>\n                </tbody>\n            </table>\n            </div>\n\n        const customer_selection = this.state.customer_selection\n        const customerPopup = <Popup trigger={<Button variant=\"contained\" color=\"primary\">Change Customer</Button>} closeOnDocumentClick>\n        <div>\n            <input placeholder=\"Customer's first name\" id='customer_serach_box' name='customer_serach_box' onChange={this.searchCustomer}></input>\n            <div className={style.dropdown_content} id='customer_dropdown'>\n                    {customer_selection.map(\n                        customer => (\n                            <a href=\"#\" key={customer.id} onClick={() => {this.selectCustomer(customer.id, customer.name)}} >{customer.name}</a>\n                        )\n                    )}\n            </div>\n        </div>\n        </Popup>\n        const status = this.state.status\n        return (\n            <div>\n                \n            <Grid container justify='center' alignContent='center' alignItems='center' spaceing={6}>\n                <Grid item xm={12} >\n                    <h2>{this.state.update.invoice.customer_name}</h2>\n                </Grid>\n            </Grid>\n\n            <Grid container justify='center' >\n                <Grid item xm={8}>\n                    <table  cellPadding='10' cellSpacing='10' >\n                        <tbody>\n                        <tr>\n                        <td>\n                                <TextField\n                                defaultValue={this.state.update.invoice.added_by_name}\n                                InputProps={{\n                                    readOnly: true,\n                                }}\n                                label='Added By'\n                                variant=\"outlined\"\n                                />\n                                </td>\n                        <td> <TextField\n                                defaultValue={this.state.update.invoice.customer_name}\n                                InputProps={{\n                                    readOnly: true,\n                                }}\n                                label='Customer'\n                                variant=\"outlined\"\n                                \n                                />\n                         </td>\n                        </tr>\n                        <tr>\n                            <td></td><td>{customerPopup}</td>\n                        </tr>\n                        <tr>\n                            <td colSpan=\"2\">\n                            <TextField\n                                defaultValue= {this.state.update.invoice.order_number}\n                                InputProps={{\n                                    readOnly: true,\n                                }}\n                                fullWidth\n                                label='Order Number'\n                                variant=\"outlined\"\n                                />\n                        </td>\n                        </tr>\n\n                        <tr>\n                            <td>\n                            <TextField\n                                defaultValue= {this.state.update.invoice.total_amount}\n                                InputProps={{\n                                    readOnly: true,\n                                }}\n                                \n                                label='Total Amount'\n                                variant=\"outlined\"\n                                />\n                            </td>\n                            <td>\n                            <TextField\n                                defaultValue= {this.state.update.invoice.tax_total}\n                                InputProps={{\n                                    readOnly: true,\n                                }}\n                                \n                                label='Tax Total'\n                                variant=\"outlined\"\n                                />\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                            <TextField\n                                defaultValue={this.state.update.invoice.discount_total}\n                                InputProps={{\n                                    readOnly: true,\n                                }}\n                                \n                                label='Discount Total'\n                                variant=\"outlined\"\n                                />\n                            </td>\n                            <td>\n                            <TextField\n                                defaultValue= {this.state.update.invoice.paid_amount}\n                                InputProps={{\n                                    readOnly: true,\n                                }}\n                                \n                                label='Paid Amount'\n                                variant=\"outlined\"\n                                />\n                            </td>\n                        </tr>\n\n                        <tr>\n                            <td>\n                            <TextField variant=\"outlined\" value={this.state.update.invoice.additional_discount} name='additional_discount' onChange={this.onChange} type='float' label='Additional Discount'></TextField>\n                            </td>\n                        </tr>\n                        \n                        <tr>\n                            <td>\n                            <b>Invoiced On : </b><br></br>\n                                <DatePicker\n                                name='invoiced_on'\n                                selected={this.state.update.invoice.invoiced_on}\n                                onChange={this.invoiceHandler}\n                                />\n                            </td>\n                            <td>\n                            <b>Due On : </b> <br></br>\n                            <DatePicker\n                            name='completed_on'\n                            selected={this.state.update.invoice.due_on}\n                            onChange={this.dueOnHandler}\n                            />\n                            </td>\n                        </tr>\n                        <tr>\n                    \n                            <td >\n                            <b>Status : </b> \n                                    <Select label='Status' fullWidth name='status' id=\"status\" onChange={this.onChange} value={this.state.update.invoice.status}>\n                                        {status.map(\n                                            x=>(\n                                            <MenuItem key={x.id} value={parseInt(x.id)}>{x.name}</MenuItem>\n                                            )\n                                        )}\n                                    </Select>\n                            </td>\n                        </tr>\n                            <tr>\n                                <td>\n                                <Button variant=\"contained\" color=\"primary\" onClick={() => {this.updateInvoice()}}>Update Invoice</Button>\n                                </td>\n                                <td>\n                                <Button variant=\"contained\" color=\"secondary\"  onClick={() => {this.props.delete(this.props.invoice.id)}}>Delete</Button>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </Grid>\n                </Grid>\n                <Grid container justify='center'>\n                    <Grid item xs={8} >\n                    <h3>Items</h3> <Button variant=\"contained\" color=\"secondary\"  onClick={() => {this.addInvoiceItem()}}>Add New Items</Button>\n                    {this.state.popUp ? popUpItem :<List data={this.state.update.invoice_items} header={this.columns} page={false} popUp={this.popUp} />}\n                \n                    </Grid>\n                </Grid>\n            </div>\n        )\n    }\n}\nexport default PopUpEdit","import React, { Component } from 'react'\nimport List from '../list';\nimport { getInvoice, deleteInvoices, updateInvoice } from '../../api/sales/invoice';\nimport PopUpEdit from './popUpEdit';\nimport Swal from 'sweetalert2'\n\nclass InvoiceListing extends Component {\n    \n    constructor(props){\n        super(props)\n        this.popUp = this.popUp.bind(this)\n        this.state = {\n            'popUp':false,\n            'invoices':{},\n            'invoice_items':[],\n            'update':{}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.invoiceDelete = this.invoiceDelete.bind(this)\n    }\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value]\n            }\n        })\n    }\n\n    \n    async onSubmit(e){\n        e.preventDefault();\n            var data = this.state.vendor\n            var ele;\n            for (ele in this.state.update){\n                data[ele] = this.state.update[ele][0]\n            }\n            data = {...data, 'action':'edit'}\n            updateInvoice(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        Swal.fire(\"Vendor Data updated.\")\n                        this.props.update(0)\n                    }\n                    else{\n                        Swal.fire({\n                            icon:'error',\n                            title:data['error']\n                        })\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    invoiceDelete(id){\n        var data = {\n            'invoices_id':[\n                id\n            ]\n        }\n        deleteInvoices(JSON.stringify(data)).then(data=>{\n            try {\n                if (data['status']){\n                    Swal.fire('Invoice has been Deleted.')\n                    this.props.update(0)\n                }   else{\n                    Swal.fire({\n                        icon:'error',\n                        title:data['error']\n                    })\n                }\n            }catch(e){\n                console.log(e)\n            }\n        })\n    }\n    \n    async popUp(id, uuid=0){\n        const data = {\n            'action':'get',\n            'invoice_id':id,\n        }\n        var data_main;\n        await getInvoice(JSON.stringify(data)).then(data => {\n            if (data['status']){\n                console.log(data)\n                data_main=data\n            }\n            else{\n                Swal.fire({\n                    icon:'error',\n                    title:data['error']\n                })\n            }\n        })\n        if (data_main['invoice_items'].length === 0) {\n            console.log(\"blank\")\n            data_main['invoice_items'] = [{\n                id:0\n            }]\n        }\n        await this.setState({\n            'popUp':true,\n            'invoice':data_main['invoice'][0],\n            'invoice_items':data_main['invoice_items']\n        })\n    }\n\n\n    columns = [\n        {\n            id:1,\n            name:\"Customer's Name\",\n            prop: 'customer_name'\n        },\n        {\n            id:2,\n            name:\"Sold By\",\n            prop: 'added_by_name'\n        },\n        {\n            id:3,\n            name:\"Paid Amount\",\n            prop: 'paid_amount'\n        },\n        {\n            id:4,\n            name:\"Order Number\",\n            prop: 'order_number'\n        },\n        {\n            id:5,\n            name:'Invoiced On',\n            prop:'invoiced_on_str'\n        },\n        {\n            id:6,\n            name:'Status',\n            prop:'status_name'\n        }\n    ]\n    \n\n    render() {\n        const list = <List data={this.props.data} header={this.columns}   popUp={this.popUp} update={this.props.update} page={this.props.page} />\n        const popUpRender = <PopUpEdit invoice={this.state.invoice} invoice_items={this.state.invoice_items} update={this.props.update} delete={this.invoiceDelete} ></PopUpEdit>\n        return (\n            <div>\n                {this.state.popUp ? popUpRender : list}\n            </div>\n        )\n    }\n}\n\nexport default InvoiceListing\n","import React, { Component } from 'react'\nimport {getInvoices} from '../../api/sales/invoice';\nimport {  connect } from 'react-redux';\nimport  InvoiceListing  from './invoiceListing';\nimport { Link} from 'react-router-dom';\n\n\nimport Button from '@material-ui/core/Button';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/styles';\nimport PropTypes from 'prop-types';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport LoadingIcon from '../loading';\n\nimport Swal from 'sweetalert2'\n\n\n\nconst styles = makeStyles((theme) => ({\n    root: {\n    flexGrow: 12,\n    },\n    paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    },\n}));\n\n\nclass Invoices extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            'invoices':[],\n            'loaded':false,\n            'start':0,\n            'end':10,\n            'page':1\n        }\n        this.update_table = this.update_table.bind(this)\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n        this.update_table(0)\n    }\n\n    async update_table (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                'loaded':false,\n                start: 0,\n                end: 10,\n                page:1\n            })\n        }\n        else{\n            if (this.state.start+by>-1){\n                await this.setState({\n                    'loaded':false,\n                    start: this.state.start+by,\n                    end: this.state.end+by,\n                    page:this.state.page+x\n                })\n            }\n            else{\n                Swal.fire({\n                    icon:'error',\n                    title:'cannot go any further'\n                })\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.start,\n            'end':this.state.end\n        }\n        this.getInvoiceData(request_json)\n    }\n    \n    async getInvoiceData (request_json) {\n        var invoice\n        await getInvoices(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                for (invoice in data['invoices']){\n                    data['invoices'][invoice]['invoiced_on_str']=(data['invoices'][invoice]['invoiced_on']).split('T')[0]\n                    data['invoices'][invoice]['due_on_str']=(data['invoices'][invoice]['due_on']).split('T')[0]\n                }\n                this.setState({\n                    'invoices':data['invoices'],\n                    'loaded':true\n                })\n            }\n            else{\n                Swal.fire(data['error'])\n            }  \n        })\n    }\n\n \n\nrender() {\n    const { classes } = this.props;\n\n    const render_after_load = (\n        <div>\n            <InvoiceListing data={this.state.invoices} update={this.update_table} page={this.state.page} />\n        </div>\n    )\n\n    return(\n        <div className={classes.root}>\n        <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n            <Grid item xs={3} >\n            <Button variant=\"contained\" color=\"primary\" onClick={() => {this.update_table(0)}}>\n              <RefreshIcon/>&nbsp;&nbsp;&nbsp;Refresh Table\n              </Button>\n            </Grid>\n            <Grid item xs={5}>\n  \n            </Grid>\n              <Grid item xs={3}>\n              <Link to='/invoices/create' style={{ textDecoration: 'none' }}>\n              <Button variant=\"contained\" color=\"secondary\">\n              <AddCircleIcon/>&nbsp;&nbsp;&nbsp;Add New Invoice\n              </Button>\n              </Link>\n              </Grid>\n  \n          <Grid item xs={12}>\n            <Paper className={classes.paper}>\n            {this.state.loaded ? render_after_load : <LoadingIcon></LoadingIcon>}\n            </Paper>\n          </Grid>\n          \n        </Grid>\n      </div>\n    )\n}\n}\n\n\nInvoices.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n\nconst mapStateToProps = state => ({\n    user: state.user,\n})\nexport default withStyles(styles)(connect(mapStateToProps)(Invoices))\n","import React, { Component } from 'react'\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport List from '../list';\nimport Popup from \"reactjs-popup\";\nimport style from '../purchaseOrder/css/popUp.module.css';\nimport {getCustomers} from '../../api/sales/customer';\nimport {createInvoice,  getInvoice, getInvoiceStatus} from '../../api/sales/invoice';\nimport {updateInvoiceItem, deleteInvoiceItems, createInvoiceItem} from '../../api/sales/invoiceItem'\nimport {getItems} from '../../api/inventory/itemApi';\nimport {getPlaces} from '../../api/inventory/placeApi';\nimport { getDiscounts, getTaxes } from '../../api/misc'\nimport { Grid, Button } from '@material-ui/core';\nimport Swal from 'sweetalert2';\n\n\nclass InvoiceCreation extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            'tax_start':0,\n            'tax_end':5,\n            'discount_start':0,\n            'discount_end':5,\n            'tax_loaded':false,\n            'discount_loaded':false,\n            'discount_page':[],\n            'tax_page':[],\n            'discount_selection':[],\n            'tax_selection':[],\n            'place_selection':[],\n            'stock_selection':[],\n            'sold_from_selection':[],\n            'popUp':false,\n            'new':false,\n            'current':0,\n            'status':[],\n            'customer_selection':[\n                {\n                    'id':0,\n                    'name':'None'\n                }\n            ],\n            'item_selection':[\n                {\n                    'id':0,\n                    'name':\"None\"\n                }\n            ],\n            update : {\n                'invoice':{\n                    'invoiced_on': new Date(),\n                    'due_on': new Date()\n                },\n                'invoice_items':[[{\n                    'id':'Fake Key',\n                    'discount':[],\n                    'applied_discount':[],\n                    'tax':[],\n                    'applied_tax':[]\n                }]]\n            }\n        }\n        this.update_table = this.update_table.bind(this)\n        this.stateman = this.stateman.bind(this)\n        this.refreshTable = this.refreshTable.bind(this)\n        this.getItemData = this.getItemData.bind(this)\n        this.selectItem = this.selectItem.bind(this)\n        this.searchItem = this.searchItem.bind(this)\n        this.addInvoiceItem = this.addInvoiceItem.bind(this)\n        this.invoiceHandler = this.invoiceHandler.bind(this)\n        this.dueOnHandler = this.dueOnHandler.bind(this)\n        this.getCustomerData = this.getCustomerData.bind(this)\n        this.converter = this.converter.bind(this)\n        this.popUp = this.popUp.bind(this)\n        this.searchCustomer = this.searchCustomer.bind(this)\n        this.selectCustomer = this.selectCustomer.bind(this)\n        this.onChange = this.onChange.bind(this)\n        this.updateInvoice = this.updateInvoice.bind(this)\n        this.onChangePI = this.onChangePI.bind(this)\n        this.postInvoiceItem = this.postInvoiceItem.bind(this)\n        this.deleteInvoiceItem = this.deleteInvoiceItem.bind(this)\n        this.onChangePlace = this.onChangePlace.bind(this)\n        this.removeEntry = this.removeEntry.bind(this)\n        this.addEntryDiscount = this.addEntryDiscount.bind(this)\n        this.addEntryTax = this.addEntryTax.bind(this)\n    }\n\n    removeEntry(id, dis){\n        var temp,temp2\n        if (dis){\n             temp = this.state.update.invoice_items[this.state.current].applied_discount\n            temp.pop(dis)\n             temp2 = this.state.update.invoice_items[this.state.current].discount\n            temp2.pop(temp.id)\n            this.setState({\n                ...this.state,\n                'update':{\n                    ...this.state.update,\n                    invoice_items:{\n                        ...this.state.update.invoice_items,\n                        [dis]:{\n                            'applied_discount':temp,\n                            'discount':temp2\n                        }\n                    }\n                }\n            })\n        }\n        else {\n            \n                 temp = this.state.update.invoice_items[this.state.current].applied_tax\n                temp.pop(dis)\n                 temp2 = this.state.update.invoice_items[this.state.current].taxes\n                temp2.pop(temp.id)\n                this.setState({\n                    ...this.state,\n                    'update':{\n                        ...this.state.update,\n                        invoice_items:{\n                            ...this.state.update.invoice_items,\n                            [dis]:{\n                                'applied_tax':temp,\n                                'taxes':temp2\n                            }\n                        }\n                    }\n                })\n            \n        }\n    }\n\n    async componentDidMount(){\n        var request_json = {\n            'action':'get',\n        }\n        await getInvoiceStatus(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    ...this.state,\n                    'status':data.data\n                })\n            }\n            else{\n                Swal.fire(data['error'])\n            }\n        })\n    }\n\n    async getCustomerData (request_json) {\n        await getCustomers(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'customer_selection':data['customers'],\n                })\n            } \n            \n            else{\n                Swal.fire(data['error'])\n            } \n        })\n    }\n\n    selectCustomer(id,name){\n        console.log(id,name)\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice':{\n                    ...this.state.update.invoice,\n                    'customer':id,\n                    'customer_name':name\n                }\n            }\n        })\n    }\n\n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice':{\n                    ...this.state.update.invoice,\n                    [e.target.name] : [e.target.value][0]\n                }\n            }\n        })\n    }\n\n    converter(date){\n        return ( new Date(Date.parse(date)))\n    }\n\n    popUp(id){\n        var key\n        for (key in this.state.update.invoice_items){\n            if (this.state.update.invoice_items[key].id === id){\n                this.setState({\n                    ...this.state,\n                    'current':key,\n                    'popUp':true\n                }) \n                break;       \n            }\n        }\n        var request_json = {\n            'action':'get',\n            'filter':'item',\n            'item_id':this.state.update.invoice_items[key].item  \n        }\n        this.getPlacesData(request_json)\n    }\n\n    async getPlacesData(request_json) {\n        await getPlaces(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'sold_from_selection':data['placements'],\n                })\n                var temp = [], key, x;\n                for(key in data['placements']){\n                    x = {'id': data['placements'][key]['placed_on'], 'str_placed_on':data['placements'][key]['str_placed_on']}\n                    temp[data['placements'][key]['placed_on']] = x\n                    }\n                temp = temp.filter(function (el) {\n                    return el != null;\n                });\n                this.setState({\n                    'place_selection':temp\n                })\n                this.update_stock(data)\n            }\n        })\n\n    }\n\n    // data = sold_From_selection\n    update_stock(data){\n        console.log('data',data)\n        var sold_from\n        if (this.state.update.invoice_items[this.state.current]['sold_from']){\n            sold_from = this.state.update.invoice_items[this.state.current]['sold_from']\n        }else {\n            sold_from = data['placements'][0]['placed_on']\n            console.log('default',sold_from)\n        }\n        var temp=[];\n        var p ;\n        for (p in data['placements']){\n            console.log(sold_from, \"  \", data['placements'][p]['placed_on'])\n            if (parseInt(sold_from) === parseInt(data['placements'][p]['placed_on'])){\n                var string  = data['placements'][p]['purchase_item_details']['purchase_price'] + \"/-  \" + data['placements'][p]['purchase_item_details']['quantity'] + \" \" + data['placements'][p]['purchase_item_details']['vendor'] \n                temp.push({\n                    'id': data['placements'][p]['purchase_item'],\n                    'str':string\n                })\n                console.log(temp)\n            }\n            \n        }\n        this.setState({\n            ...this.state,\n            'stock_selection': temp\n        })\n    }  \n    \n\n    async onChangePlace(e){\n        await this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice_items':{\n                    ...this.state.update.invoice_items,\n                    [this.state.current] : {\n                        ...this.state.update.invoice_items[this.state.current],\n                        [e.target.name] : [e.target.value][0]\n                    },\n                }\n            }\n        })\n        var temp=[],p,sold_from;\n        if (this.state.update.invoice_items[this.state.current]['sold_from']){\n            sold_from = this.state.update.invoice_items[this.state.current]['sold_from']\n        }else {\n            sold_from = this.state.sold_from[0]['placed_on']\n            console.log('default',sold_from)\n        }\n        for (p in this.state.sold_from_selection){\n            if ( parseInt(sold_from) === parseInt(this.state.sold_from_selection[p]['placed_on'])){\n                var string  = this.state.sold_from_selection[p]['purchase_item_details']['purchase_price'] + \"/-  \" + this.state.sold_from_selection[p]['purchase_item_details']['quantity'] + \" \" + this.state.sold_from_selection[p]['purchase_item_details']['vendor'] \n                temp.push({\n                    'id': this.state.sold_from_selection[p]['purchase_item'],\n                    'str':string\n                })\n            }\n            \n        }\n        this.setState({\n            ...this.state,\n            'stock_selection': temp\n        }) \n    }\n\n    searchCustomer(e){\n        if ((e.target.value).length > 2 ){\n            var request_json = {\n                'action':'get',\n                'start':0,\n                'end':10,\n                'filter':'name',\n                'name':(e.target.value)\n            }\n            this.getCustomerData(request_json)\n        }\n    }\n    \n    invoiceHandler(date){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice':{\n                    ...this.state.update.invoice,\n                    'invoiced_on' : date\n                }\n            }\n        })\n    }\n    \n    dueOnHandler(date){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice':{\n                    ...this.state.update.invoice,\n                    'due_on' : date\n                }\n            }\n        })\n    }\n\n    updateInvoice(){\n        var request_json = {\n            ...this.state.update.invoice,\n            'action':'add',\n            'invoice_id':this.state.update.invoice.id,\n            'status':'',\n        }\n        console.log(this.state)\n        createInvoice(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                Swal.fire(\"Invoice Details Has Been Updated.\")\n                window.location.pathname = '/invoices'\n            }\n            else{\n                Swal.fire(data['error'])\n            }\n        })\n    }\n\n    onChangePI(e){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice_items':{\n                    ...this.state.update.invoice_items,\n                    [this.state.current] : {\n                        ...this.state.update.invoice_items[this.state.current],\n                        [e.target.name] : [e.target.value][0]\n                    },\n                }\n            }\n        })\n    }\n\n    postInvoiceItem(is_new=false){\n        var request_json\n        if (is_new){\n            request_json = {\n                'action':'add',\n                'invoice':this.state.update.invoice.id,\n                ...this.state.update.invoice_items[this.state.current],\n            }\n            request_json['applied_tax'] = []\n            request_json['applied_discount'] = []\n            createInvoiceItem(JSON.stringify(request_json)).then(data => {\n                if (data['status']){\n                    Swal.fire(\"Invoice Item Has Been Added.\")\n                    this.refreshTable()\n                }\n                else{\n                    Swal.fire(data['error'])\n                }\n            })\n            return\n        }\n        request_json = {\n            'action':'edit',\n            'invoice':this.state.update.invoice.id,\n            'invoice_item_id':this.state.update.invoice_items[this.state.current].id,\n            ...this.state.update.invoice_items[this.state.current]\n        }\n        request_json['applied_tax'] = []\n        request_json['applied_discount'] = []\n        updateInvoiceItem(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                Swal.fire(\"Invoice Item Details Has Been Updated.\")\n                this.refreshTable()\n            }\n            else{\n                Swal.fire(data['error'])\n            }\n        })\n    }\n\n    deleteInvoiceItem(){\n        var request_json = {\n            invoice_items_id : [this.state.update.invoice_items[this.state.current].id]\n        }\n        deleteInvoiceItems(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                Swal.fire(\"Invoice Item Has Beed Deleted.\")\n                this.refreshTable()\n            }\n            else{\n                Swal.fire(data['error'])\n            }\n        })\n    }\n\n\n    addInvoiceItem(){\n        var current =0;\n        var item,p_list=[];\n        for (item in this.state.update.invoice_items){\n            if (item.id){\n                if (item.id !== \"Fake Key\"){\n                    current = current + 1\n                    p_list.push(item)\n                }\n            }\n        }\n        this.setState({\n            'current':current,\n            'new':true,\n            'popUp':true,\n            'update':{\n                ...this.state.update,\n                'invoice_items':[\n                    ...p_list,\n                    {\n                        'item_name':\"None\",\n                        'discount_type':'percentage',\n                        'status':'incomplete',\n                        'applied_tax':[],\n                        'applied_discount':[],\n                        'purchase_item':'',\n                        'discount':[],\n                        'taxes':[]\n                    }\n                ]\n            }\n        })\n    }\n    columns = [\n        {\n            id:1,\n            name:\"Item Name\",\n            prop: 'item_name'\n        },\n        {\n            id:2,\n            name:\"Quantity\",\n            prop: 'quantity'\n        },\n        {\n            id:8,\n            name:\"Price\",\n            prop: 'price'\n        },\n        {\n            id:3,\n            name:\"Sold From\",\n            prop: 'sold_from_name'\n        },\n        {\n            id:4,\n            name:\"Tax Total\",\n            prop: 'tax_total'\n        },\n        ,\n        {\n            id:5,\n            name:\"Disount Amount\",\n            prop: 'discount_amount'\n        },   \n        {\n            id:6,\n            name:\"Sub Total\",\n            prop: 'sub_total'\n        },\n        {\n            id:7,\n            name:\"Total\",\n            prop: 'total'\n        }\n    ]\n\n    searchItem(e){\n        if ((e.target.value).length > 2 ){\n            var request_json = {\n                'action':'get',\n                'start':0,\n                'end':10,\n                'filter':'name',\n                'name':(e.target.value)\n            }\n            this.getItemData(request_json)\n        }\n    }\n\n    async getItemData(request_json){\n        await getItems(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    ...this.state,\n                    'item_selection':data['items'],\n                })\n            }  \n            \n            else{\n                Swal.fire(data['error'])\n            }\n        })\n    }\n    selectItem(id, name){\n        this.setState({\n            'update': {\n                ...this.state.update,\n                'invoice_items':{\n                    ...this.state.update.invoice_items,\n                    [this.state.current] : {\n                        ...this.state.update.invoice_items[this.state.current],\n                        'item_name' : name,\n                        'item':id\n                    },\n                }\n            }\n        })\n        var request_json = {\n            'action':'get',\n            'filter':'item',\n            'item_id':id\n        }\n        this.getPlacesData(request_json)\n    }\n\n    async refreshTable(){\n        var id = this.state.update.invoice.id;\n        var items= [];\n        const request_json = {\n            'action':'get',\n            'invoice_id':id\n        }\n        await getInvoice(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                items = data['invoice_items']\n            }\n            \n            else{\n                Swal.fire(data['error'])\n            }\n        })\n        if (items.length === 0){\n            items = [{\n                'id':\"Fake Key\",\n                'item_name': ''\n            }]\n        }\n        await this.setState({\n            ...this.state,\n            'popUp':false,\n            'update':{\n                ...this.state.update,\n                'invoice_items':items\n            }\n        })\n    }\n\n\n    stateman(){\n        console.log(this.state)\n    }\n\n\n    discount_columns =[\n        {\n            'id':1,\n            'name':'Name',\n            'prop':'name'\n        },{\n            'id':2,\n            'name':'Rate',\n            'prop':'rate'\n        },{\n            'id':3,\n            'name':'Code',\n            'prop':'code'\n        },{\n            'id':4,\n            'name':'Type',\n            'prop':'discount_type'\n        },{\n            'id':5,\n            'name':'Remove',\n            'prop':'removeButton'\n        },\n    ]\n\n    tax_columns =[\n        {\n            'id':1,\n            'name':'Name',\n            'prop':'name'\n        },{\n            'id':2,\n            'name':'Rate',\n            'prop':'rate'\n        },{\n            'id':3,\n            'name':'Code',\n            'prop':'code'\n        },{\n            'id':4,\n            'name':'Type',\n            'prop':'tax_type'\n        },{\n            'id':5,\n            'name':'Remove',\n            'prop':'removeButton'\n        },\n    ]\n\n    \n    add_discount_columns =[\n        {\n            'id':1,\n            'name':'Name',\n            'prop':'name'\n        },{\n            'id':2,\n            'name':'Rate',\n            'prop':'rate'\n        },{\n            'id':3,\n            'name':'Code',\n            'prop':'code'\n        },{\n            'id':4,\n            'name':'Type',\n            'prop':'discount_type'\n        }\n    ]\n\n    add_tax_columns =[\n        {\n            'id':1,\n            'name':'Name',\n            'prop':'name'\n        },{\n            'id':2,\n            'name':'Rate',\n            'prop':'rate'\n        },{\n            'id':3,\n            'name':'Code',\n            'prop':'code'\n        },{\n            'id':4,\n            'name':'Type',\n            'prop':'tax_type'\n        }\n    ]\n\n    async update_table (by,dis) {\n        var x = by<0?-1:1\n        var request_json\n        if (dis){\n            if (by===0){\n                await this.setState({\n                    'discoount_loaded':false,\n                    discount_start: 0,\n                    discount_end: 10,\n                    discount_page:1\n                })\n            }\n            else{\n                if (this.state.discount_start+by>-1){\n                    await this.setState({\n                        'discount_loaded':false,\n                        discount_start: this.state.discount_start+by,\n                        discount_end: this.state.discount_end+by,\n                        discount_page:this.state.discount_page+x\n                    })\n                }\n                else{\n                    Swal.fire(\"Cannot move futher from here.\")\n                    return\n                }\n            }\n            request_json = {\n                'action':'get',\n                'filter':'none',\n                'start':this.state.discount_start,\n                'end':this.state.discount_end\n            }\n            this.getDiscountsData(request_json)\n        }\n    else { \n        if (by===0){\n            await this.setState({\n                'tax_loaded':false,\n                tax_start: 0,\n                tax_end: 10,\n                tax_page:1\n            })\n        }\n        else{\n            if (this.state.tax_start+by>-1){\n                await this.setState({\n                    'tax_loaded':false,\n                    tax_start: this.state.tax_start+by,\n                    tax_end: this.state.tax_end+by,\n                    tax_page:this.state.tax_page+x\n                })\n            }\n            else{\n                Swal.fire(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.tax_start,\n            'end':this.state.tax_end\n        }\n        this.getTaxesData(request_json)\n\n    }\n    }\n    \n    async getDiscountsData (request_json) {\n        await getDiscounts(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'discount_selection':data['discounts'],\n                    'discount_loaded':true\n                })\n            }\n            else{\n                Swal.fire(data['error'])\n            }\n        })\n    }\n    async getTaxesData (request_json) {\n        await getTaxes(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'tax_selection':data['taxes'],\n                    'tax_loaded':true\n                })\n            }  \n        })\n    }\n \n    addEntryDiscount(id){\n        var dis;\n        for (dis in this.state.discount_selection){\n            if (this.state.discount_selection[dis].id === id){\n                var temp = this.state.update.invoice_items[this.state.current]['applied_discount']\n                var x = this.state.discount_selection[dis]\n                temp.push(x)\n                var temp2 = this.state.update.invoice_items[this.state.current]['discount']\n                temp2.push(id)\n                this.setState({\n                    ...this.state,\n                    update:{\n                        ...this.state.update,\n                        'invoice_items':{\n                            ...this.state.update.invoice_items,\n                            [this.state.current] : {\n                                ...this.state.update.invoice_items[this.state.current],\n                                'discount':temp2,\n                                'applied_discount': temp\n                            }\n                        }\n                    }\n                })\n            }\n        }\n    }\n\n    addEntryTax(id){\n        var dis;\n        for (dis in this.state.tax_selection){\n            if (this.state.tax_selection[dis].id === id){\n                var temp = this.state.update.invoice_items[this.state.current]['applied_tax']\n                var x = this.state.tax_selection[dis]\n                temp.push(x)\n                var temp2 = this.state.update.invoice_items[this.state.current]['taxes']\n                temp2.push(id)\n                this.setState({\n                    ...this.state,\n                    update:{\n                        ...this.state.update,\n                        'invoice_items':{\n                            ...this.state.update.invoice_items,\n                            [this.state.current] : {\n                                ...this.state.update.invoice_items[this.state.current],\n                                'tax':temp2,\n                                'applied_tax': temp\n                            }\n                        }\n                    }\n                })\n            }\n        }\n    }\n\n\n    render() {\n        const item_selection = this.state.item_selection\n        const itemPopUp = <Popup trigger={ <button>Select Item</button>} closeOnDocumentClick>\n        <div>\n            <input placeholder=\"Item Name\" id='item_search_box' name='item_serach_box' onChange={this.searchItem}></input>\n            <div className={style.dropdown_content} id='item_dropdown'>\n                    {item_selection.map(\n                        item => (\n                            // use css to get rid of <a>\n                        <a key={item.id} onClick={() => {this.selectItem(item.id, item.name)}} >{item.name} {item.sales_price}</a>\n                        )\n                    )}\n            </div>\n        </div>\n        </Popup>\n\n        var places = this.state.place_selection\n        const selectPlace =<select name='sold_from' id=\"sold_from\" onChange={this.onChangePlace} value={this.state.update.invoice_items[this.state.current].sold_from}  >\n            <option key=\"Fake Key\" value='Fake Value'>Select Place</option>\n                {places.map(\n                    x => (\n                    <option key={x.id} value={x.id}>{x.str_placed_on}</option>\n                    )\n                )}\n            </select>\n\n            \n        var stocks  = this.state.stock_selection\n        var stockValue = this.state.update.invoice_items[this.state.current].purchase_item ? this.state.update.invoice_items[this.state.current].purchase_item : ''\n        const selectStock = <select name='purchase_item' id=\"purchase_item\" onChange={this.onChangePI} value={stockValue} >\n                <option key='Fake Key' value=\"Fake Value\">Select Stock</option>\n                {stocks.map(\n                    x => (\n                    <option key={x.id} value={parseInt(x.id)}>{x.str}</option>\n                    )\n                )}\n            </select>\n        const addPopupDiscount = <div>\n            <h3> Click To Apply New Discount</h3>\n                            <List data={this.state.discount_selection} header={this.add_discount_columns} page={false} popUp={this.addEntryDiscount} />\n                            <button onClick={()=> {this.update_table(-5,true)}}>Previous</button><span>      {this.state.discount_page}       </span><button  onClick={()=> {this.update_table(5,true)}} >Next</button>\n                        </div>\n        \n        const addPopupTax = <div>\n            <h3>Click To Apply New Tax </h3>\n                            <List data={this.state.tax_selection} header={this.add_tax_columns} page={false} popUp={this.addEntryTax} />\n                            <button onClick={()=> {this.update_table(-5,false)}}>Previous</button><span>      {this.state.tax_page}       </span><button  onClick={()=> {this.update_table(5,false)}} >Next</button>\n                        </div>\n        const discounts =this.state.update.invoice_items[this.state.current].applied_discount\n        for (var dis in discounts){\n            discounts[dis] = {\n                ...discounts[dis],\n                'removeButton':<button onClick={() => {this.removeEntry(dis,true)}}> Remove </button>\n            }\n        }\n        \n        const taxes = this.state.update.invoice_items[this.state.current].applied_tax\n        for (var dis in taxes){\n            taxes[dis] = {\n                ...taxes[dis],\n                'removeButton':<button onClick={()=>{this.removeEntry(dis,false)}}> Remove </button>\n            }\n        }\n        const popUpItem = <div>\n                <button onClick={() => {this.refreshTable()}} >Back</button><br></br><br></br>\n                Item : {this.state.update.invoice_items[this.state.current].item_name}  {itemPopUp}<br></br>\n                Sold From: \n                Place : {this.state.update.invoice_items[this.state.current].item ? selectPlace : \"Select An Item First\" } <br></br>\n                Stock :   {this.state.update.invoice_items[this.state.current].item ? selectStock : \"Select An Item First\" } <br></br>\n                <br></br>\n\n                Quantity : <input name=\"quantity\" placeholder={this.state.update.invoice_items[this.state.current].quantity} type=\"number\" onChange={this.onChangePI} required min='1' ></input><br></br>\n                Price : <input name=\"price\" placeholder={this.state.update.invoice_items[this.state.current].price} type=\"number\" onChange={this.onChangePI} required></input><br></br>\n                Tax Total : {this.state.update.invoice_items[this.state.current].tax_total} <br></br>\n                Sub Total : {this.state.update.invoice_items[this.state.current].sub_total} <br></br>\n                Discount Amount : {this.state.update.invoice_items[this.state.current].discount_amount}<br></br>\n                Total without discount : {this.state.update.invoice_items[this.state.current].total_without_discount}<br></br>\n                Total : {this.state.update.invoice_items[this.state.current].total}<br></br>\n                <br></br>\n                Applied Discounts : :<List data={discounts} header={this.discount_columns} page={false} popUp={this.popUp} removeEntry={this.removeEntry} /><button onClick={() =>{this.update_table(0, true)}} >Apply New Discount</button> <br></br><br></br>\n                {this.state.discount_loaded ? addPopupDiscount : <span></span>}<br></br>\n                Applied Taxes : :<List data={taxes} header={this.tax_columns} page={false} popUp={this.popUp} removeEntry={this.removeEntry} /><br></br><button onClick={() => {this.update_table(0, false)}}>Apply New Tax</button><br></br><br></br>\n                {this.state.tax_loaded ? addPopupTax : <span></span>}<br></br>\n                {this.state.new ? <button onClick={() => {this.postInvoiceItem(true)}} >Add</button> : <button onClick={() => {this.postInvoiceItem()}} >Update</button>}<br></br><br></br>\n                <button onClick={() => {this.deleteInvoiceItem()}} >Delete</button>\n            </div>\n        const customer_selection = this.state.customer_selection\n        const customerPopup = <Popup trigger={<button>Select Customer</button>} closeOnDocumentClick>\n        <div>\n            <input placeholder=\"Customer's first name\" id='customer_serach_box' name='customer_serach_box' onChange={this.searchCustomer}></input>\n            <div className={style.dropdown_content} id='customer_dropdown'>\n                    {customer_selection.map(\n                        customer => (\n                            <a href=\"#\" key={customer.id} onClick={() => {this.selectCustomer(customer.id, customer.name)}} >{customer.name}</a>\n                        )\n                    )}\n            </div>\n        </div>\n        </Popup>\n        const status = this.state.status\n        return (\n            <div>\n            <Grid container justify='center' >\n                \n                <Grid item xm={8}>\n                    <table  cellPadding='10' cellSpacing='10' >\n                        <tbody>\n                            <tr>\n                                <th colSpan={3}>\n                                    <h1>New Invoice Order</h1>\n                                    <h4>Select customer and Date only</h4>\n                                </th>\n                            </tr>\n                        <tr>\n                        <td><b>Customer :</b> <input\n                                defaultValue={this.state.update.invoice.customer_name}\n                                label='Customer'\n                                variant=\"outlined\"\n                                />\n                         </td>\n                        \n                        <td>{customerPopup}</td>\n                        </tr>\n                        \n                        <tr>\n                            <td>\n                            <b>Invoiced On : </b><br></br>\n                                <DatePicker\n                                name='invoiced_on'\n                                selected={this.state.update.invoice.invoiced_on}\n                                onChange={this.invoiceHandler}\n                                />\n                            </td>\n                            <td>\n                            <b>Due On : </b> <br></br>\n                            <DatePicker\n                            name='completed_on'\n                            selected={this.state.update.invoice.due_on}\n                            onChange={this.dueOnHandler}\n                            />\n                            </td>\n                        </tr>\n                            <tr>\n                                <td>\n                                <Button variant=\"contained\" color=\"primary\" onClick={() => {this.updateInvoice()}}>Update Invoice</Button>\n                                </td>\n                                <td>\n                                <Button variant=\"contained\" color=\"secondary\"  onClick={() => {this.props.delete(this.props.invoice.id)}}>Delete</Button>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </Grid>\n                </Grid>\n                </div>\n        //     <div>\n        //         <h1>Invoice</h1>\n        // <h3>{this.state.update.invoice.customer_name} </h3>\n        //         Added By : {this.state.update.invoice.added_by_name}<br></br>\n        //         Customer : {this.state.update.invoice.customer_name} {customerPopup}<br></br>\n        //         Order Number : {this.state.update.invoice.order_number}<br></br>\n        //         <br></br><br></br>\n        //         Invoiced On : \n        //         <DatePicker\n        //         name='invoiced_on'\n        //         selected={this.state.update.invoice.invoiced_on}\n        //         onChange={this.invoiceHandler}\n        //         />\n        //         Due On : \n        //         <DatePicker\n        //         name='completed_on'\n        //         selected={this.state.update.invoice.due_on}\n        //         onChange={this.dueOnHandler}\n        //         /><br></br><br></br>\n                \n        //         Total Amount : {this.state.update.invoice.total_amount}<br></br>\n        //         Total Tax : {this.state.update.invoice.tax_total}<br></br>\n        //         Total Discount: {this.state.update.invoice.discount_total}<br></br>\n        //         Paid Amount : {this.state.update.invoice.paid_amount}<br></br>\n\n        //         <br></br>\n        //         Additional Discount : <input placeholder={this.state.update.invoice.additional_discount} name='additional_discount' onChange={this.onChange} ></input>\n        //         <br></br><br></br>\n\n                \n        //         Status : <select name='status' id=\"status\" onChange={this.onChange} value={this.state.update.invoice.status}  >\n        //                         {status.map(\n        //                             x => (\n        //                             <option key={x.id} value={parseInt(x.id)}>{x.name}</option>\n        //                             )\n        //                         )}\n        //                     </select> <br></br><br></br>\n        //         <button onClick={() => {this.updateInvoice()}}>Add Invoice</button><br></br><br></br>\n        //         <hr></hr>\n        //     <button onClick={() => {this.stateman()}}>State</button>\n        //     </div>\n\n        )\n    }\n}\nexport default InvoiceCreation","import React, { Component } from 'react'\nimport List from '../list';\nimport { getDiscount, updateDiscount,  deleteDiscounts } from '../../api/misc';\nimport {Button, TextField, Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\nimport Swal from 'sweetalert2'\n\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport { withStyles } from '@material-ui/styles';\nimport PropTypes from 'prop-types';\n\nconst styles = makeStyles((theme) => ({\n    root: {\n    flexGrow: 12,\n    },\n    paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    },\n}));\n\n\nclass DiscountList extends Component {\n    \n    constructor(props){\n        super(props)\n        this.popUp = this.popUp.bind(this)\n        this.state = {\n            'popUp':false,\n            'discount':{},\n            'update':{}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.discountDelete = this.discountDelete.bind(this)\n    }\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value][0]\n            }\n        })\n    }\n\n    \n    async onSubmit(){\n            var data = this.state.update\n            data = {...data, 'action':'edit','discount_id':data.id}\n            console.log(data)\n            updateDiscount(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        Swal.fire(\n                            'Updated!',\n                            'Discounts details has been updated.',\n                            'success'\n                          )\n                        this.props.update(0)\n                    }\n                    else{\n                        Swal.fire({\n                            icon:'error',\n                            title:data['error']\n                        })\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    discountDelete(id){\n        var data = {\n            'discounts_id':[\n                id\n            ]\n        }\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to revert this!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, delete it!'\n          }).then((result) => {\n            if (result.value) {\n                deleteDiscounts(JSON.stringify(data)).then(data=>{\n                    try {\n                        if (data['status']){\n                            Swal.fire({\n                                icon:'success',\n                                title:'Discount entry has been deleted.',\n                                showConfirmButton: false,\n                                timer:1000\n                            })\n                            this.props.update(0)\n                        }   else{\n                            Swal.fire({\n                                icon:'error',\n                                title:data['error']\n                            })\n                        }\n                    }catch(e){\n                        console.log(e)\n                    }\n                })\n              \n            }\n          })\n    }\n    \n    async popUp(id, uuid=0){\n        const data = {\n            'action':'get',\n            'discount_id':id,\n        }\n        var data_main;\n        await getDiscount(JSON.stringify(data)).then(data => {\n            if (data['status']){\n                data_main=data\n            }\n        })\n        await this.setState({\n            'popUp':true,\n            'discount':data_main['discounts'][0],\n            'update':data_main['discounts'][0]\n        })\n    }\n\n\n    columns = [\n        {\n            id:1,\n            name:\"Name\",\n            prop: 'name'\n        },\n        {\n            id:2,\n            name:\"Code\",\n            prop: 'code'\n        },\n        {\n            id:3,\n            name:\"Discount Type\",\n            prop: 'discount_type'\n        },\n        {\n            id:4,\n            name:\"Rate\",\n            prop: 'rate'\n        }      \n    ]\n    \n\n    render() {\n        const { classes } = this.props;\n\n        const list = <List data={this.props.data} header={this.columns}   popUp={this.popUp} update={this.props.update} page={this.props.page} />\n        \n        const popUpRender =\n         <div>\n            &nbsp;\n            &nbsp;\n            &nbsp;\n            &nbsp;\n            &nbsp;\n            &nbsp; <Button  variant=\"contained\" size='small' color=\"primary\" onClick={()=> {this.setState({...this.state, popUp:false})}}>\n                <ArrowLeftIcon></ArrowLeftIcon>\n         Back\n     </Button>\n        <Grid  container justify=\"center\" alignContent='center' alignItems=\"center\" spacing={3}>\n            <Grid item xm={4}>\n            \n            </Grid>\n            <Grid item xs={4}>\n            <h1>{this.state.discount.name}</h1>\n            </Grid>\n            <Grid item xm={4}>\n            </Grid>\n        </Grid>\n\n        <Grid container  justify=\"center\" alignContent='center' alignItems=\"center\"   direction={'column'} spacing={10}>\n        <Grid item xm={6}>\n            <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n                <Grid item xm={2} > \n                <TextField required id=\"name\" label=\"Name\" name='name' defaultValue={this.state.discount.name} onChange={this.onChange} autoFocus/>\n                </Grid>\n                <Grid item xm={2}>\n                <TextField required id=\"code\" label=\"code\" name='code' defaultValue={this.state.discount.code} onChange={this.onChange} />\n                </Grid>\n            </Grid>\n            \n            <Grid container spacing={3}>\n                <Grid item xm={6} md={6}>\n                    Discount Type :  \n                 <FormControl className={classes.formControl}>\n                                <Select onChange={this.onChange}   value={this.state.update.discount_type}  name='discount_type' id=\"discount_type\">\n                                <MenuItem value=\"percent\">Percentage</MenuItem>\n                                <MenuItem value=\"fixed\">Fixed</MenuItem>\n                                </Select>\n                            </FormControl>\n                </Grid>\n                <Grid item xm={6} md={6} > \n                <TextField required id=\"rate\"  name=\"rate\"  label=\"rate\" defaultValue={this.state.discount.rate} onChange={this.onChange} />\n\n               </Grid>\n            </Grid>\n            <Grid container spacing={3}  alignItems='flex-end'>\n\n                <Grid item xm={3} md={6}> \n                <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={()=>{this.onSubmit()}}\n                                >\n                                Update\n                                </Button>\n                </Grid>\n                <Grid item xm={3} md={6}> \n                <Button variant=\"contained\" color=\"secondary\" onClick={() => {this.discountDelete(this.state.discount.id)}}>\n                    Delete Customer\n                </Button> \n               </Grid>\n            </Grid>\n        </Grid>\n        </Grid><br></br>\n        </div>\n\n\n\n\n        return (\n            <div>\n                {this.state.popUp ? popUpRender : list}\n            </div>\n        )\n    }\n}\n\nDiscountList.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n\n\nexport default withStyles(styles)(DiscountList)\n\n","import React, { Component } from 'react'\nimport {getDiscounts} from '../../api/misc';\nimport {  connect } from 'react-redux';\nimport  DiscountList  from './discountList';\nimport { Link} from 'react-router-dom';\n\nimport Button from '@material-ui/core/Button';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/styles';\nimport PropTypes from 'prop-types';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport LoadingIcon from '../loading';\n\n\nconst styles = makeStyles((theme) => ({\n    root: {\n    flexGrow: 12,\n    },\n    paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    },\n}));\n\n\nclass Discounts extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            'taxes':[],\n            'loaded':false,\n            'start':0,\n            'end':10,\n            'page':1\n        }\n        this.update_table = this.update_table.bind(this)\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n        this.update_table(0)\n    }\n\n\n    async update_table (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                'loaded':false,\n                start: 0,\n                end: 10,\n                page:1\n            })\n        }\n        else{\n            if (this.state.start+by>-1){\n                await this.setState({\n                    'loaded':false,\n                    start: this.state.start+by,\n                    end: this.state.end+by,\n                    page:this.state.page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.start,\n            'end':this.state.end\n        }\n        this.getDiscountsData(request_json)\n    }\n    \n    async getDiscountsData (request_json) {\n        await getDiscounts(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'discounts':data['discounts'],\n                    'loaded':true\n                })\n            }  \n        })\n    }\n\n \n\nrender() {\n    const { classes } = this.props;\n\n    const render_after_load = (\n        <div>\n            <DiscountList data={this.state.discounts} update={this.update_table} page={this.state.page} />\n        </div>\n    )\n\n    return(\n        <div className={classes.root}>\n        <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n            <Grid item xs={3} >\n            <Button variant=\"contained\" color=\"primary\" onClick={() => {this.update_table(0)}}>\n              <RefreshIcon/>&nbsp;&nbsp;&nbsp;Refresh Table\n              </Button>\n            </Grid>\n            <Grid item xs={5}>\n  \n            </Grid>\n              <Grid item xs={3}>\n              <Link to='/discounts/create' style={{ textDecoration: 'none' }}>\n              <Button variant=\"contained\" color=\"secondary\">\n              <AddCircleIcon/>&nbsp;&nbsp;&nbsp;Add New Discount\n              </Button>\n              </Link>\n              </Grid>\n  \n          <Grid item xs={12}>\n            <Paper className={classes.paper}>\n            {this.state.loaded ? render_after_load : <LoadingIcon></LoadingIcon>}\n            </Paper>\n          </Grid>\n          \n        </Grid>\n      </div>\n    )\n}\n}\n\n\n\nDiscounts.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n\nconst mapStateToProps = state => ({\n    user: state.user,\n})\n\nexport default withStyles(styles)(connect(mapStateToProps)(Discounts))","import React, { Component } from 'react'\nimport {  connect } from 'react-redux';\nimport { createDiscount } from '../../api/misc';\n\nimport {Button, TextField, Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\nimport Swal from 'sweetalert2'\n\nimport { withStyles } from '@material-ui/styles';\nimport PropTypes from 'prop-types';\n\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\n\n\nconst styles = makeStyles((theme) => ({\n    root: {\n    flexGrow: 12,\n    },\n    paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    },\n}));\n\n\n\nclass DiscountCreation extends Component {\n\n    constructor (props){\n        super(props)\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.state = {\n            'update':{\n                'name':'',\n                'code':'',\n                'discount_type':'percent',\n                'rate':''\n            }\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n    }\n\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value][0]\n            }\n        })\n    }\n\n\n    async onSubmit(e){\n            var data = {...this.state.update}\n            var ele;\n            for (ele in this.state.update){\n                data[ele] = this.state.update[ele]\n            }\n            data = {...data, 'action':'add'}\n            console.log(data)\n            createDiscount(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        Swal.fire(\n                            'Updated!',\n                            'Discounts details has been added.',\n                            'success'\n                          )\n                    }\n                    else{\n                        Swal.fire({\n                            icon:'error',\n                            title:data['error']\n                        })\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        const popUpRender = <div>\n           &nbsp;\n           &nbsp;\n           &nbsp;\n           &nbsp;\n           &nbsp;\n           &nbsp; \n       <Grid  container justify=\"center\" alignContent='center' alignItems=\"center\" spacing={3}>\n           <Grid item xm={4}>\n           \n           </Grid>\n           <Grid item xs={4}>\n           <h1>Add New Discounts</h1>\n           </Grid>\n           <Grid item xm={4}>\n           </Grid>\n       </Grid>\n\n       <Grid container  justify=\"center\" alignContent='center' alignItems=\"center\"   direction={'column'} spacing={10}>\n       <Grid item xm={6}>\n           <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n               <Grid item xm={2} > \n               <TextField required id=\"name\" label=\"Name\" name='name' defaultValue={this.state.update.name} onChange={this.onChange} autoFocus/>\n               </Grid>\n               <Grid item xm={2}>\n               <TextField required id=\"code\" label=\"code\" name='code' defaultValue={this.state.update.code} onChange={this.onChange} />\n               </Grid>\n           </Grid>\n           \n           <Grid container spacing={3}>\n               <Grid item xm={6} md={6}>\n                   Discount Type :  \n                <FormControl className={classes.formControl}>\n                               <Select onChange={this.onChange}   value={this.state.update.discount_type}  name='discount_type' id=\"discount_type\">\n                               <MenuItem value=\"percent\">Percentage</MenuItem>\n                               <MenuItem value=\"fixed\">Fixed</MenuItem>\n                               </Select>\n                           </FormControl>\n               </Grid>\n               <Grid item xm={6} md={6} > \n               <TextField required id=\"rate\"  name=\"rate\" onChange={this.onChange} label=\"rate\" name='rate' defaultValue={this.state.update.rate} onChange={this.onChange} />\n\n              </Grid>\n           </Grid>\n           <Grid container spacing={3}  alignItems='flex-end'>\n\n               <Grid item xm={3} md={6}> \n               <Button\n                               type='submit'\n                               variant=\"contained\"\n                               color=\"primary\"\n                               onClick={()=>{this.onSubmit()}}\n                               >\n                               Add\n                               </Button>\n               </Grid>\n               <Grid item xm={3} md={6}> \n              </Grid>\n           </Grid>\n       </Grid>\n       </Grid><br></br>\n       </div>\n\n        return (\n            popUpRender\n        )\n    }\n}\n\n\nDiscountCreation.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n\n\n  const mapStateToProps = state => ({\n    user: state.user\n})\n\n\nexport default withStyles(styles)(connect(mapStateToProps)(DiscountCreation))\n\n","import React, { Component } from 'react'\nimport List from '../list';\nimport { getTax, updateTax,  deleteTaxes } from '../../api/misc';\nimport {Button, TextField } from '@material-ui/core';\n\nclass TaxList extends Component {\n    \n    constructor(props){\n        super(props)\n        this.popUp = this.popUp.bind(this)\n        this.state = {\n            'popUp':false,\n            'tax':{},\n            'update':{}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.taxDelete = this.taxDelete.bind(this)\n    }\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value]\n            }\n        })\n    }\n\n    \n    async onSubmit(e){\n        e.preventDefault();\n            var data = this.state.tax\n            var ele;\n            for (ele in this.state.update){\n                data[ele] = this.state.update[ele][0]\n            }\n            data = {...data, 'action':'edit','tax_id':data.id}\n            console.log(data)\n            updateTax(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        alert(\"Tax Data updated.\")\n                        this.props.update(0)\n                    }\n                    else{\n                        alert(data['error'])\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    taxDelete(id){\n        var data = {\n            'taxes_id':[\n                id\n            ]\n        }\n        deleteTaxes(JSON.stringify(data)).then(data=>{\n            try {\n                if (data['status']){\n                    alert('Tax data deleted.')\n                    this.props.update(0)\n                }   else{\n                    alert(data['error'])\n                }\n            }catch(e){\n                console.log(e)\n            }\n        })\n    }\n    \n    async popUp(id, uuid=0){\n        const data = {\n            'action':'get',\n            'tax_id':id,\n        }\n        var data_main;\n        await getTax(JSON.stringify(data)).then(data => {\n            if (data['status']){\n                data_main=data\n            }\n        })\n        await this.setState({\n            'popUp':true,\n            'tax':data_main['taxes'][0]\n        })\n    }\n\n\n    columns = [\n        {\n            id:1,\n            name:\"Name\",\n            prop: 'name'\n        },\n        {\n            id:2,\n            name:\"Code\",\n            prop: 'code'\n        },\n        {\n            id:3,\n            name:\"Tax Type\",\n            prop: 'tax_type'\n        },\n        {\n            id:4,\n            name:\"Rate\",\n            prop: 'rate'\n        }      \n    ]\n    \n\n    render() {\n        const list = <List data={this.props.data} header={this.columns}   popUp={this.popUp} update={this.props.update} page={this.props.page} />\n        const popUpRender = <div>\n                        <button onClick={()=> {this.setState({'popUp':false})}}>Back</button><br></br>\n                        <h1>{this.state.tax.name}</h1>\n                        <form onSubmit={this.onSubmit}>\n                            Name: <TextField\n                                id ='name'\n                                name=\"name\"\n                                type='text'\n                                onChange={this.onChange}  \n                                placeholder={this.state.tax.name}          \n                            />\n                            Code : <TextField\n                                id ='code'\n                                name=\"code\"\n                                type='text'\n                                onChange={this.onChange}\n                                placeholder={this.state.tax.code} \n                            />\n                             Tax Type :<select name='tax_type' id=\"tax_type\" defaultValue={this.state.tax.tax_type}  onChange={this.onChange}>\n                                    <option value=\"normal\">Normal</option>\n                                    <option value=\"fixed\">Fixed</option>\n                                </select> <br></br>\n                            Rate : <input placeholder={this.state.tax.rate} name=\"rate\" onChange={this.onChange} ></input><br></br>\n                            <br></br>\n                            <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                >\n                                Update\n                                </Button> <Button variant=\"contained\" color=\"secondary\" onClick={() => {this.taxDelete(this.state.tax.id)}}>\n                            Delete Tax\n                        </Button> \n                        \n                </form>\n            \n                        <br>\n                        </br>\n                    </div>\n        return (\n            <div>\n                {this.state.popUp ? popUpRender : list}\n            </div>\n        )\n    }\n}\n\nexport default TaxList\n","import React, { Component } from 'react'\nimport {getTaxes} from '../../api/misc';\nimport {  connect } from 'react-redux';\nimport  TaxList  from './taxList';\nimport { Link} from 'react-router-dom';\n\nclass Taxes extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            'taxes':[],\n            'loaded':false,\n            'start':0,\n            'end':10,\n            'page':1\n        }\n        this.update_table = this.update_table.bind(this)\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n    }\n\n    async update_table (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                'loaded':false,\n                start: 0,\n                end: 10,\n                page:1\n            })\n        }\n        else{\n            if (this.state.start+by>-1){\n                await this.setState({\n                    'loaded':false,\n                    start: this.state.start+by,\n                    end: this.state.end+by,\n                    page:this.state.page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.start,\n            'end':this.state.end\n        }\n        this.getTaxesData(request_json)\n    }\n    \n    async getTaxesData (request_json) {\n        await getTaxes(JSON.stringify(request_json)).then(data => {\n            console.log(data)\n            if (data['status']){\n                this.setState({\n                    'taxes':data['taxes'],\n                    'loaded':true\n                })\n            }  \n        })\n    }\n\n \n\nrender() {\n    const render_after_load = (\n        <div>\n            <TaxList data={this.state.taxes} update={this.update_table} page={this.state.page} />\n        </div>\n    )\n\n    return(\n        <div>\n            <Link to='/taxes/create'>Add New Tax</Link><br></br>\n            <button onClick={() => {this.update_table(0)}}>Refresh table</button><br></br>\n            {this.state.loaded ? render_after_load : \"Loading...\"}\n\n        </div>\n    )\n}\n}\n\n\n\n\nconst mapStateToProps = state => ({\n    user: state.user,\n})\n\nexport default connect(mapStateToProps)(Taxes)","import React, { Component } from 'react'\nimport {  connect } from 'react-redux';\nimport {Button, TextField } from '@material-ui/core';\nimport { createTax } from '../../api/misc';\n\n\nclass TaxCreation extends Component {\n\n    constructor (props){\n        super(props)\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.state = {\n            'update':{\n                'name':'',\n                'code':'',\n                'tax_type':'normal',\n                'rate':''\n            }\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n    }\n\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value][0]\n            }\n        })\n    }\n\n\n    async onSubmit(e){\n        e.preventDefault();\n            var data = {...this.state.update}\n            var ele;\n            for (ele in this.state.update){\n                data[ele] = this.state.update[ele]\n            }\n            data = {...data, 'action':'add'}\n            console.log(data)\n            createTax(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        alert(\"New Tax type Added\")\n                    }\n                    else{\n                        alert(data['error'])\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    render() {\n            const popUpRender = <div>\n                        <form onSubmit={this.onSubmit}>\n                            Name: <TextField\n                                id ='name'\n                                name=\"name\"\n                                type='text'\n                                onChange={this.onChange}  \n                            />\n                            Code : <TextField\n                                id ='code'\n                                name=\"code\"\n                                type='text'\n                                onChange={this.onChange}\n                            />\n                             Tax Type :<select name='tax_type' id=\"tax_type\" value={this.state.update.discont_type}  onChange={this.onChange}>\n                                    <option value=\"normal\">Normal</option>\n                                    <option value=\"fixed\">Fixed</option>\n                                </select> <br></br>\n                            Rate : <input  name=\"rate\" id=\"rate\" type='number' onChange={this.onChange} value={this.state.update.rate} ></input><br></br>\n                            <br></br>\n                            <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                >\n                                Create\n                            </Button>\n                </form>\n            \n                        <br>\n                        </br>\n                    </div>\n        return (\n            popUpRender\n        )\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    user: state.user\n})\n\nexport default connect(mapStateToProps)(TaxCreation)","import { baseRequest } from '../base';\n// api for items \n\nconst getItemCatagories = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/items/catagories','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  \n  const deleteItemCatagory = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/items/catagories/delete','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const createItemCatagory = async data => {\n      try {\n        return await baseRequest('apiv1/inventory/items/catagories','POST', data);\n      } catch(e){\n        alert(e)\n      }\n  };\n  \n  \n  const getItemCatagory = async data => {\n    try {\n      return await baseRequest('apiv1/inventory/items/catagory','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \n  const updateItemCatagory= async data => {\n    try {\n      return await baseRequest('apiv1/inventory/items/catagory','POST', data);\n    } catch(e){\n      alert(e)\n    }\n  };\n  \nexport { getItemCatagories, deleteItemCatagory, createItemCatagory, getItemCatagory, updateItemCatagory}\n  ","import React, { Component } from 'react'\nimport List from '../list';\nimport { getItem, updateItem,  deleteItems } from '../../api/inventory/itemApi';\nimport {getItemCatagories} from '../../api/inventory/itemCatagory'\nimport {Button, TextField,Grid } from '@material-ui/core';\n\n\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\nimport Swal from 'sweetalert2'\n\n\n\nclass ItemList extends Component {\n    \n    constructor(props){\n        super(props)\n        this.popUp = this.popUp.bind(this)\n        this.state = {\n            'catagories':[],\n            'popUp':false,\n            'item':{\n                'catagory':''\n            },\n            'update':{}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.itemDelete = this.itemDelete.bind(this)\n    }\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value][0]\n            }\n        })\n    }\n\n    \n    async onSubmit(e){\n        e.preventDefault();\n            var data = this.state.update\n            data = {...data, 'action':'edit','item_id':data.id}\n            updateItem(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        Swal.fire(\n                            'Updated!',\n                            'ItemData updated.',\n                            'success'\n                          )\n                        this.props.update(0)\n                    }\n                    else{\n                        Swal.fire({\n                            icon:'error',\n                            title:data['error']\n                        })                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    itemDelete(id){\n        var data = {\n            'items_id':[\n                id\n            ]\n        }\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to revert this!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, delete it!'\n          }).then((result) => {\n            if (result.value) {\n        deleteItems(JSON.stringify(data)).then(data=>{\n            try {\n                if (data['status']){\n                    Swal.fire({\n                        icon:'success',\n                        title:'Item entry has been deleted.',\n                        showConfirmButton: false,\n                        timer:1000\n                    })                    \n                    this.props.update(0)\n                }   else{\n                    Swal.fire({\n                        icon:'error',\n                        title:data['error']\n                    })                }\n            }catch(e){\n                console.log(e)\n            }\n        })\n    }\n})\n    }\n\n    async popUp(id, uuid=0){\n        var data = {\n            'action':'get',\n            'item_id':id,\n        }\n        var data_main;\n        await getItem(JSON.stringify(data)).then(data => {\n            if (data['status']){\n                data_main=data\n            }\n        })\n        await this.setState({\n            'popUp':true,\n            'update':data_main['items'][0]\n        })\n        data = {\n            'action':'get',\n            'start':0,\n            'end':50\n        }\n        await getItemCatagories(JSON.stringify(data)).then(data=> {\n            try { \n                if (data['status']){\n                    this.setState({\n                        ...this.state,\n                        'catagories':data['item_catagories']\n                    })\n                }\n                else{\n                    Swal.fire({\n                        icon:'error',\n                        title:data['error']\n                    })                   }\n            }catch(e){\n                console.log(e)\n            }\n        })\n    }\n\n\n    columns = [\n        {\n            id:1,\n            name:\"Name\",\n            prop: 'name'\n        },\n        {\n            id:2,\n            name:\"Catagory\",\n            prop: 'catagory_str'\n        },\n        {\n            id:3,\n            name:\"Price\",\n            prop: 'sales_price'\n        },\n        ,\n        {\n            id:4,\n            name:\"Stock\",\n            prop: 'stock'\n        },\n        {\n            id:5,\n            name:\"Sold\",\n            prop: 'sold'\n        }      \n    ]\n    \n\n    render() {\n        const catagories = this.state.catagories\n        const list = <List data={this.props.data} header={this.columns}   popUp={this.popUp} update={this.props.update} page={this.props.page} />\n        const popUpRender = <div>\n            <Grid container justify='center'>\n<Grid item xm={6}>\n<Button  variant=\"contained\" size='small' color=\"primary\" onClick={()=> {this.setState({...this.state, popUp:false})}}>\n                <ArrowLeftIcon></ArrowLeftIcon>\n         Back\n     </Button>          <h1>{this.state.item.name}</h1>\n                        <form onSubmit={this.onSubmit}>\n                            <table>\n                                <tbody>\n                                <tr>\n                                    <td>\n                                    Name:\n                                    </td>\n                                    <td>\n                                    <TextField\n                                id ='name'\n                                name=\"name\"\n                                type='text'\n                                onChange={this.onChange}  \n                                placeholder={this.state.update.name}          \n                            />\n                                    </td>\n                                </tr>\n                                <tr>\n<td>\nCatagory :\n</td>\n<td>\n<select name='catagory' id=\"catagory\" onChange={this.onChange} value={this.state.update.catagory} required >\n                                {catagories.map(\n                                    x => (\n                                    <option key={x.id} value={parseInt(x.id)}>{x.name}</option>\n                                    )\n                                )}\n                            </select>\n</td>\n                                </tr>\n                                </tbody>\n                            </table>\n                             \n                              <br></br><br></br>\n                            \n                            Sales Price : <input placeholder={this.state.update.sales_price} onChange={this.onChange}></input><br></br>\n                            Stock : {this.state.update.stock} <br></br>\n                            Sold : {this.state.update.sold} <br></br>\n\n                            <br></br>\n                            <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                >\n                                Update\n                                </Button> <Button variant=\"contained\" color=\"secondary\" onClick={() => {this.itemDelete(this.state.update.id)}}>\n                            Delete Item\n                        </Button> \n                        \n                </form>\n            \n                        <br>\n                        </br>\n                        </Grid>\n                        </Grid>\n                    </div>\n        return (\n            <div>\n                {this.state.popUp ? popUpRender : list}\n            </div>\n        )\n    }\n}\n\nexport default ItemList\n","import React, { Component } from 'react'\nimport {getItems} from '../../api//inventory/itemApi';\nimport {  connect } from 'react-redux';\nimport  ItemList  from './itemList';\nimport { Link} from 'react-router-dom';\n\n\nimport Button from '@material-ui/core/Button';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/styles';\nimport PropTypes from 'prop-types';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport LoadingIcon from '../loading';\n\n\n\nconst styles = makeStyles((theme) => ({\n    root: {\n    flexGrow: 12,\n    },\n    paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    },\n}));\n\n\nclass Items extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            'items':[],\n            'loaded':false,\n            'start':0,\n            'end':10,\n            'page':1\n        }\n        this.update_table = this.update_table.bind(this)\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n        this.update_table(0)\n    }\n\n    async update_table (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                'loaded':false,\n                start: 0,\n                end: 10,\n                page:1\n            })\n        }\n        else{\n            if (this.state.start+by>-1){\n                await this.setState({\n                    'loaded':false,\n                    start: this.state.start+by,\n                    end: this.state.end+by,\n                    page:this.state.page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.start,\n            'end':this.state.end\n        }\n        this.getItemsData(request_json)\n    }\n    \n    async getItemsData (request_json) {\n        await getItems(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'items':data['items'],\n                    'loaded':true\n                })\n            }  \n        })\n    }\n\n \n\nrender() {\n    const render_after_load = (\n        <div>\n            <ItemList data={this.state.items} update={this.update_table} page={this.state.page} />\n        </div>\n    )\n    const { classes } = this.props;\n\n\n    return(\n        <div className={classes.root}>\n        <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n            <Grid item xs={3} >\n            <Button variant=\"contained\" color=\"primary\" onClick={() => {this.update_table(0)}}>\n              <RefreshIcon/>&nbsp;&nbsp;&nbsp;Refresh Table\n              </Button>\n            </Grid>\n            <Grid item xs={5}>\n  \n            </Grid>\n              <Grid item xs={3}>\n              <Link to='/items/create' style={{ textDecoration: 'none' }}>\n              <Button variant=\"contained\" color=\"secondary\">\n              <AddCircleIcon/>&nbsp;&nbsp;&nbsp;Add New Item\n              </Button>\n              </Link>\n              </Grid>\n  \n          <Grid item xs={12}>\n            <Paper className={classes.paper}>\n            {this.state.loaded ? render_after_load : <LoadingIcon></LoadingIcon>}\n            </Paper>\n          </Grid>\n          \n        </Grid>\n      </div>\n    )\n}\n}\n\n\nItems.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n\n\nconst mapStateToProps = state => ({\n    user: state.user,\n})\n\nexport default withStyles(styles)(connect(mapStateToProps)(Items))","import React, { Component } from 'react'\nimport {  connect } from 'react-redux';\nimport {Button, TextField,Grid } from '@material-ui/core';\nimport { createItem } from '../../api/inventory/itemApi';\nimport {getItemCatagories} from '../../api/inventory/itemCatagory'\n\nimport Swal from 'sweetalert2'\n\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\n\nclass ItemCreation extends Component {\n\n    constructor (props){\n        super(props)\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.state = {\n            'catagories':[],\n            'update':{\n            }\n        }\n    }\n\n    async componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n        var data = {\n            'action':'get',\n            'start':0,\n            'end':50\n        }\n        await getItemCatagories(JSON.stringify(data)).then(data=> {\n            try { \n                if (data['status']){\n                    this.setState({\n                        ...this.state,\n                        'catagories':data['item_catagories']\n                    })\n                }\n                else{\n                    Swal.fire({\n                        icon:'error',\n                        title:data['error']\n                    })                   }\n            }catch(e){\n                console.log(e)\n            }\n        })\n    }\n\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value][0]\n            }\n        })\n    }\n\n\n    async onSubmit(e){\n        e.preventDefault();\n            var data = {...this.state.update}\n            var ele;\n            for (ele in this.state.update){\n                data[ele] = this.state.update[ele]\n            }\n            data = {...data, 'action':'add'}\n            console.log(data)\n            createItem(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        Swal.fire(\n                            'Updated!',\n                            'Item has been added.',\n                            'success'\n                          ) \n                    }\n                    else{\n                        Swal.fire({\n                            icon:'error',\n                            title:data['error']\n                        })                       }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    render() {\n        const catagories = this.state.catagories\n        const popUpRender = \n            <div>\n            <Grid container justify='center'>\n<Grid item xm={6}>\n            \n                        <form onSubmit={this.onSubmit}>\n                            Name: <TextField\n                                id ='name'\n                                name=\"name\"\n                                type='text'\n                                onChange={this.onChange}      \n                            />\n                            Catagory : <select name='catagory' id=\"catagory\" onChange={this.onChange} required >\n                                {catagories.map(\n                                    x => (\n                                    <option key={x.id} value={parseInt(x.id)}>{x.name}</option>\n                                    )\n                                )}\n                            </select> <br></br><br></br>\n                            \n                            Sales Price : <input name='sales_price' type='float' onChange={this.onChange}></input><br></br>\n\n                            <br></br>\n                            <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                >\n                                Create</Button>\n                </form>\n            \n                        <br>\n                        </br>\n                    </Grid>\n                    </Grid>\n                    </div>\n        return (\n            popUpRender\n        )\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    user: state.user\n})\n\nexport default connect(mapStateToProps)(ItemCreation)","import React, { Component } from 'react'\nimport List from '../list';\nimport { getItemCatagory, updateItemCatagory,  deleteItemCatagory } from '../../api/inventory/itemCatagory';\nimport {Button, TextField, Grid } from '@material-ui/core';\n\n\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\nimport Swal from 'sweetalert2'\n\n\nclass ItemCatagoryList extends Component {\n    \n    constructor(props){\n        super(props)\n        this.popUp = this.popUp.bind(this)\n        this.state = {\n            'popUp':false,\n            'itemCatagory':{},\n            'update':{}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.itemCatDelete = this.itemCatDelete.bind(this)\n        this.popUptemp = this.popUptemp.bind(this)\n        this.updatetemp = this.updatetemp.bind(this)\n    }\n    popUptemp(id,uuid){\n\n    }\n    updatetemp(){\n\n    }\n    onChange(e)\n    {\n        this.setState({\n            'itemCatagory': {\n                ...this.state.itemCatagory,\n                [e.target.name] : [e.target.value][0]\n            }\n        })\n    }\n\n    \n    async onSubmit(e){\n        e.preventDefault();\n            var data = this.state.itemCatagory\n            data = {...data, 'action':'edit','item_catagory_id':data.id}\n            console.log(data)\n            updateItemCatagory(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        Swal.fire(\n                            'Updated!',\n                            'ItemCatagory Data updated.',\n                            'success'\n                          )\n                        this.props.update(0)\n                    }\n                    else{\n                        Swal.fire({\n                            icon:'error',\n                            title:data['error']\n                        })\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    itemCatDelete(id){\n        var data = {\n            'item_catagories_id':[\n                id\n            ]\n        }\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to revert this!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, delete it!'\n          }).then((result) => {\n            if (result.value) {\n                \n        deleteItemCatagory(JSON.stringify(data)).then(data=>{\n            try {\n                if (data['status']){\n                    Swal.fire({\n                        icon:'success',\n                        title:'Item Catagory entry has been deleted.',\n                        showConfirmButton: false,\n                        timer:1000\n                    })\n                    this.props.update(0)\n                }   else{\n                    Swal.fire({\n                        icon:'error',\n                        title:data['error']\n                    })\n                }\n            }catch(e){\n                console.log(e)\n            }\n        })\n    }\n})\n    }\n    \n    async popUp(id, uuid=0){\n        const data = {\n            'action':'get',\n            'item_catagory_id':id,\n        }\n        var data_main;\n        await getItemCatagory(JSON.stringify(data)).then(data => {\n            console.log(data)\n            if (data['status']){\n                data_main=data\n            }\n        })\n\n        await this.setState({\n            'popUp':true,\n            'itemCatagory':data_main['item_catagories'][0]\n        })\n    }\n\n\n    columns = [\n        {\n            id:1,\n            name:\"Name\",\n            prop: 'name'\n        },\n        {\n            id:2,\n            name:'Items Under This Catagory',\n            prop:'count'\n        }\n    ]\n\n    items_c = [\n        {\n            id:1,\n            name:\"Item's Name\",\n            prop:'name'\n        },{\n            id:2,\n            name: 'Price',\n            prop: 'sales_price',\n        },\n        {\n            id:3,\n            name:'Sales Price',\n            prop:'sales_price'\n        },\n        {\n            id:4,\n            name: 'Stock',\n            prop:'stock',\n        },\n        {\n            id:5,\n            name:'Sold',\n            prop:'sold'\n        }\n\n\n    ]\n    \n\n    render() {\n        const list = <List data={this.props.data} header={this.columns}   popUp={this.popUp} update={this.props.update} page={this.props.page} />\n        const popUpRender = <div>\n            <Grid container justify='center'>\n<Grid item xm={6}>\n<Button  variant=\"contained\" size='small' color=\"primary\" onClick={()=> {this.setState({...this.state, popUp:false})}}>\n                <ArrowLeftIcon></ArrowLeftIcon>\n         Back\n     </Button>\n     <h1>{this.state.update.name}</h1>\n                        <form onSubmit={this.onSubmit}>\n                            <table cellSpacing={10} cellPadding={10}>\n                                <tbody>\n                                <tr>\n                                    <td>\n                                    Name: \n                                    </td>\n                                    <td>\n                                    <TextField\n                                id ='name'\n                                name=\"name\"\n                                type='text'\n                                onChange={this.onChange}  \n                                defaultValue={this.state.itemCatagory.name}          \n                            />\n                                    </td>\n                                </tr>\n                                <tr>\n<td>\n<Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                >\n                                Update\n                                </Button>\n</td>\n<td>\n<Button variant=\"contained\" color=\"secondary\" onClick={() => {this.itemCatDelete(this.state.itemCatagory.id)}}>\n                            Delete Discount\n                        </Button> \n</td>\n                                </tr>\n                                <tr>\n                                   <td colSpan={3}>\n                                       <h1> Related Items</h1>\n                                   <List data={this.state.itemCatagory.items} header={this.items_c} popUp={this.popUptemp} update={this.updatetemp} page={false} />\n                                   </td> \n                                </tr>\n                                </tbody>\n                            </table>\n                           \n                           \n                        \n                </form>\n            \n</Grid>\n            </Grid>\n                        \n                        \n                    </div>\n        return (\n            <div>\n                {this.state.popUp ? popUpRender : list}\n            </div>\n        )\n    }\n}\n\nexport default ItemCatagoryList\n","import React, { Component } from 'react'\nimport {getItemCatagories} from '../../api//inventory/itemCatagory';\nimport {  connect } from 'react-redux';\nimport  ItemCatagoryList  from './itemCatagoryList';\nimport { Link} from 'react-router-dom';\n\n\nimport Button from '@material-ui/core/Button';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/styles';\nimport PropTypes from 'prop-types';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport LoadingIcon from '../loading';\n\n\nconst styles = makeStyles((theme) => ({\n    root: {\n    flexGrow: 12,\n    },\n    paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    },\n}));\n\n\n\nclass ItemCatagories extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            'items':[],\n            'loaded':false,\n            'start':0,\n            'end':10,\n            'page':1\n        }\n        this.update_table = this.update_table.bind(this)\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n        this.update_table(0)\n    }\n\n    async update_table (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                'loaded':false,\n                start: 0,\n                end: 10,\n                page:1\n            })\n        }\n        else{\n            if (this.state.start+by>-1){\n                await this.setState({\n                    'loaded':false,\n                    start: this.state.start+by,\n                    end: this.state.end+by,\n                    page:this.state.page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.start,\n            'end':this.state.end\n        }\n        this.getItemCatagoriesData(request_json)\n    }\n    \n    async getItemCatagoriesData (request_json) {\n        await getItemCatagories(JSON.stringify(request_json)).then(data => {\n            if (data['status']){\n                this.setState({\n                    'item_catagories':data['item_catagories'],\n                    'loaded':true\n                })\n            }  \n        })\n    }\n\n \n\nrender() {\n    const render_after_load = (\n        <div>\n            <ItemCatagoryList data={this.state.item_catagories} update={this.update_table} page={this.state.page} />\n        </div>\n    )\n    const { classes } = this.props;\n\n    return(\n        <div className={classes.root}>\n        <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n            <Grid item xs={3} >\n            <Button variant=\"contained\" color=\"primary\" onClick={() => {this.update_table(0)}}>\n              <RefreshIcon/>&nbsp;&nbsp;&nbsp;Refresh Table\n              </Button>\n            </Grid>\n            <Grid item xs={5}>\n  \n            </Grid>\n              <Grid item xs={3}>\n              <Link to='/itemcatagories/create' style={{ textDecoration: 'none' }}>\n              <Button variant=\"contained\" color=\"secondary\">\n              <AddCircleIcon/>&nbsp;&nbsp;&nbsp;Add New Item Catagories\n              </Button>\n              </Link>\n              </Grid>\n  \n          <Grid item xs={12}>\n            <Paper className={classes.paper}>\n            {this.state.loaded ? render_after_load : <LoadingIcon></LoadingIcon>}\n            </Paper>\n          </Grid>\n          \n        </Grid>\n      </div>\n    )\n}\n}\n\n\n\n\n\nItemCatagories.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\nconst mapStateToProps = state => ({\n    user: state.user,\n})\n\nexport default withStyles(styles)(connect(mapStateToProps)(ItemCatagories))","import React, { Component } from 'react'\nimport {  connect } from 'react-redux';\nimport {Button, TextField, Grid } from '@material-ui/core';\nimport { createItemCatagory } from '../../api/inventory/itemCatagory';\n\nimport Swal from 'sweetalert2'\n\nclass DiscountCreation extends Component {\n\n    constructor (props){\n        super(props)\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.state = {\n           'itemCatagory':{}\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n    }\n\n    \n    onChange(e)\n    {\n        this.setState({\n            'itemCatagory': {\n                ...this.state.itemCatagory,\n                [e.target.name] : [e.target.value][0]\n            }\n        })\n    }\n\n\n    async onSubmit(e){\n        e.preventDefault();\n            var data = {...this.state.itemCatagory}\n            data = {...data, 'action':'add'}\n            createItemCatagory(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        Swal.fire(\n                            'Updated!',\n                            'ItemCatagory Data has been added.',\n                            'success'\n                          )                    }\n                    else{\n                        Swal.fire({\n                            icon:'error',\n                            title:data['error']\n                        })                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    render() {\n        const popUpRender =\n        <div>\n        <Grid container justify='center'>\n        <Grid item xm={6}>\n                                <form onSubmit={this.onSubmit}>\n                                    <table>\n                                        <tbody>\n                                        <tr>\n                                            <td>\n                                            Name: \n                                            </td>\n                                            <td>\n                                            <TextField\n                                        id ='name'\n                                        name=\"name\"\n                                        type='text'\n                                        onChange={this.onChange}  \n                                        defaultValue={this.state.itemCatagory.name}          \n                                    />\n                                            </td>\n                                        </tr>\n                                        <tr>\n        <td>\n        <Button\n                                        type='submit'\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        >\n                                        Add\n                                        </Button>\n        </td>\n        <td>\n\n        </td>\n                                        </tr>\n                                        </tbody>\n                                    </table>\n                                   \n                                   \n                                \n                        </form>\n                    \n        </Grid>\n                    </Grid>\n                    \n                    </div>\n        return (\n            popUpRender\n        )\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    user: state.user\n})\n\nexport default connect(mapStateToProps)(DiscountCreation)","import React, { Component } from 'react'\nimport List from '../list';\nimport { getPlace, updatePlace,  deletePlaces } from '../../api/inventory/placeApi';\nimport {Button, TextField } from '@material-ui/core';\n\nclass PlaceList extends Component {\n    \n    constructor(props){\n        super(props)\n        this.popUp = this.popUp.bind(this)\n        this.state = {\n            'popUp':false,\n            'place':{},\n            'update':{}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.placeDelete = this.placeDelete.bind(this)\n    }\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value]\n            }\n        })\n    }\n\n    \n    async onSubmit(e){\n        e.preventDefault();\n            var data = this.state.place\n            var ele;\n            for (ele in this.state.update){\n                data[ele] = this.state.update[ele][0]\n            }\n            data = {...data, 'action':'edit','place_id':data.id}\n            console.log(data)\n            updatePlace(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        alert(\"Place Data updated.\")\n                        this.props.update(0)\n                    }\n                    else{\n                        alert(data['error'])\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    placeDelete(id){\n        var data = {\n            'places_id':[\n                id\n            ]\n        }\n        deletePlaces(JSON.stringify(data)).then(data=>{\n            try {\n                if (data['status']){\n                    alert('Place data deleted.')\n                    this.props.update(0)\n                }   else{\n                    alert(data['error'])\n                }\n            }catch(e){\n                console.log(e)\n            }\n        })\n    }\n    \n    async popUp(id, uuid=0){\n        const data = {\n            'action':'get',\n            'place_id':id,\n        }\n        var data_main;\n        await getPlace(JSON.stringify(data)).then(data => {\n            if (data['status']){\n                data_main=data\n            }\n        })\n        await this.setState({\n            'popUp':true,\n            'place':data_main['places'][0]\n        })\n    }\n\n\n    columns = [\n        {\n            id:1,\n            name:\"Name\",\n            prop: 'name'\n        },\n        {\n            id:2,\n            name:\"Number of Items Assigned To The Place (different Purchase orders)\",\n            prop: 'count_assignment'\n        }     \n    ]\n\n    second_columns =[\n        {\n            id:1,\n            name:\"Item Name\",\n            prop:'item_name'\n        },\n        {\n            id:2,\n            name:\"Stock\",\n            prop:'stock'\n        },\n        {\n            id:3,\n            name:'Purchase Order',\n            prop:'purchase_order_uuid'\n        }\n    ]\n    \n\n    render() {\n        const list = <List data={this.props.data} header={this.columns}   popUp={this.popUp} update={this.props.update} page={this.props.page} />\n        const popUpRender = <div>\n                        <button onClick={()=> {this.setState({'popUp':false})}}>Back</button><br></br>\n                        <h1>{this.state.place.name}</h1>\n                        <form onSubmit={this.onSubmit}>\n                            Name: <TextField\n                                id ='name'\n                                name=\"name\"\n                                type='text'\n                                onChange={this.onChange}  \n                                placeholder={this.state.place.name}          \n                            />\n                            <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                >\n                                Update\n                                </Button> <Button variant=\"contained\" color=\"secondary\" onClick={() => {this.placeDelete(this.state.place.id)}}>\n                            Delete Discount\n                        </Button> \n                        \n                </form>\n            \n                        <br>\n                        </br>\n                    </div>\n        return (\n            <div>\n                {this.state.popUp ? popUpRender : list}\n            </div>\n        )\n    }\n}\n\nexport default PlaceList\n","import React, { Component } from 'react'\nimport {getPlaces} from '../../api/inventory/placeApi';\nimport {  connect } from 'react-redux';\nimport  PlaceList  from './placeList';\nimport { Link} from 'react-router-dom';\n\nclass Placements extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            'places':[],\n            'loaded':false,\n            'start':0,\n            'end':10,\n            'page':1\n        }\n        this.update_table = this.update_table.bind(this)\n    }\n\n    componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n    }\n\n    async update_table (by) {\n        var x = by<0?-1:1\n        if (by===0){\n            await this.setState({\n                'loaded':false,\n                start: 0,\n                end: 10,\n                page:1\n            })\n        }\n        else{\n            if (this.state.start+by>-1){\n                await this.setState({\n                    'loaded':false,\n                    start: this.state.start+by,\n                    end: this.state.end+by,\n                    page:this.state.page+x\n                })\n            }\n            else{\n                alert(\"Cannot move futher from here.\")\n                return\n            }\n        }\n        var  request_json = {\n            'action':'get',\n            'filter':'none',\n            'start':this.state.start,\n            'end':this.state.end\n        }\n        this.getPlacesData(request_json)\n    }\n    \n    async getPlacesData(request_json) {\n        await getPlaces(JSON.stringify(request_json)).then(data => {\n            console.log(data)\n            if (data['status']){\n                this.setState({\n                    'places':data['places'],\n                    'loaded':true\n                })\n            }  \n        })\n    }\n\n \n\nrender() {\n    const render_after_load = (\n        <div>\n            <PlaceList data={this.state.places} update={this.update_table} page={this.state.page} />\n        </div>\n    )\n\n    return(\n        <div>\n            <Link to='/places/create'>Add New Place</Link><br></br>\n            <button onClick={() => {this.update_table(0)}}>Refresh table</button><br></br>\n            {this.state.loaded ? render_after_load : \"Loading...\"}\n        </div>\n    )\n}\n}\n\n\n\n\nconst mapStateToProps = state => ({\n    user: state.user,\n})\n\nexport default connect(mapStateToProps)(Placements)","import React, { Component } from 'react'\nimport {  connect } from 'react-redux';\nimport {Button, TextField } from '@material-ui/core';\nimport { createPlace } from '../../api/inventory/placeApi';\n\n\nclass PlaceCreation extends Component {\n\n    constructor (props){\n        super(props)\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.state = {\n            'update':{\n            }\n        }\n    }\n\n    async componentDidMount() {\n        if (this.props.user.isLoggedIn === false ){\n            this.props.history.push('/')\n        }\n    }\n\n    \n    onChange(e)\n    {\n        this.setState({\n            'update': {\n                ...this.state.update,\n                [e.target.name] : [e.target.value][0]\n            }\n        })\n    }\n\n\n    async onSubmit(e){\n        e.preventDefault();\n            var data = {...this.state.update}\n            data = {...data, 'action':'add'}\n            console.log(data)\n            createPlace(JSON.stringify(data)).then(data=> {\n                try { \n                    if (data['status']){\n                        alert(\"New Place Added\")\n                    }\n                    else{\n                        alert(data['error'])\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n            })\n    }\n\n    render() {\n        const popUpRender = <div>\n                        <form onSubmit={this.onSubmit}>\n                            Name: <TextField\n                                id ='name'\n                                name=\"name\"\n                                type='text'\n                                onChange={this.onChange}      \n                            />\n                            <br></br>\n                            <Button\n                                type='submit'\n                                variant=\"contained\"\n                                color=\"primary\"\n                                >\n                                Create</Button>\n                </form>\n            \n                        <br>\n                        </br>\n                    </div>\n        return (\n            popUpRender\n        )\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    user: state.user\n})\n\nexport default connect(mapStateToProps)(PlaceCreation)","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport Login from './users/login';\nimport Logout from './users/logout';\nimport VendorCreation from './vendors/vendorCreation';\nimport UserCreation from './users/userCreation';\nimport { BrowserRouter as Router, Switch , Route} from 'react-router-dom';\nimport Users from './users';\nimport Vendors from './vendors/index';\nimport Customers from './customer/index';\nimport CustomerCreation from './customer/customerCreation'\nimport PurchaseOrders from './purchaseOrder/index'\nimport PurchaseOrderCreation from './purchaseOrder/purchaseOrderCreation'\nimport Invoices from './invoices/index';\nimport InvoiceCreation from './invoices/invoiceCreation';\nimport Discounts from './discounts/index';\nimport DiscountCreation from './discounts/discountCreation'\nimport Taxes from './taxes/index';\nimport TaxCreation from './taxes/taxCreation'\nimport Items from './items/index'\nimport ItemCreation from './items/itemCreation'\nimport ItemCatagories from './itemCatagories/index';\nimport ItemCatagoryCreation from './itemCatagories/itemCreation';\nimport Places from './placement/index'\nimport PlaceCreation from './placement/placeCreation'\n\nimport { useSelector } from \"react-redux\";\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\n\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport PeopleIcon from '@material-ui/icons/People';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\nimport FeaturedPlayListIcon from '@material-ui/icons/FeaturedPlayList';\nimport SettingsIcon from '@material-ui/icons/Settings';\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24,\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    textAlign: 'center',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nfunction Dashboard() {\n  \n\n\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n\n  };\n\n  const user = useSelector(state => state.user);\n\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            Mandala IMS\n          </Typography>\n          <IconButton color=\"inherit\"  onClick={()=> {window.location.href=\"/logout\"}}>\n          <ExitToAppIcon/>\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <Typography>\n            {user.data.first_name} <span>  </span> {user.data.last_name}<br></br>\n            {user.data.user_type}\n          </Typography>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Router>\n        <Divider />\n        <List>\n    <ListItem button onClick={()=> {window.location.href=\"/\"}}>\n      <ListItemIcon>\n        <DashboardIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Dashboard\" />\n    </ListItem>\n    <ListItem button  onClick={()=> {window.location.href=\"/purchaseorders\"}}>\n      <ListItemIcon>\n        <ShoppingCartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Purchase Orders\" />\n    </ListItem>\n    <ListItem button onClick={()=> {window.location.href=\"/vendors\"}}>\n      <ListItemIcon>\n        <PeopleIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Vendors\" />\n    </ListItem>\n    <ListItem button onClick={()=> {window.location.href=\"/invoices\"}}>\n      <ListItemIcon>\n        <DescriptionIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Invoices\" />\n    </ListItem>\n    <ListItem button onClick={()=> {window.location.href=\"/customers\"}}>\n      <ListItemIcon>\n        <MonetizationOnIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Customers\" />\n    </ListItem>\n    <ListItem button onClick={()=> {window.location.href=\"/items\"}}>\n      <ListItemIcon>\n      <FeaturedPlayListIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Items\" />\n    </ListItem>\n        </List>\n        <Divider />\n        <List>\n    <ListItem button onClick={()=> {window.location.href=\"/items\"}}>\n      <ListItemIcon>\n      <SettingsIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Item Managements\" />\n    </ListItem>\n    <ListItem button onClick={()=> {window.location.href=\"/discounts\"}}>\n      <ListItemIcon>\n      <SettingsIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Discounts\" />\n    </ListItem>\n    <ListItem button onClick={()=> {window.location.href=\"/taxes\"}}>\n      <ListItemIcon>\n      <SettingsIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Taxes\" />\n    </ListItem>\n    <ListItem button onClick={()=> {window.location.href=\"/itemcatagories\"}}>\n      <ListItemIcon>\n      <SettingsIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Item Catagories\" />\n    </ListItem>\n        </List>\n        </Router>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container className={classes.container}>\n          <Grid container justify=\"center\">\n            <Grid item xs={12} >\n            <Router>\n            <Switch>\n                    <Route path='/login' component={Login}></Route>\n                    <Route path='/logout' component={Logout}></Route>\n                    <Route path='/users/create' component = {UserCreation}></Route>\n                    <Route path='/users' component = {Users}></Route>\n                    <Route path='/vendors/create' component = {VendorCreation}></Route>\n                    <Route path='/vendors' component = {Vendors}></Route>\n                    \n                    <Route path='/customers/create' component = {CustomerCreation}></Route>\n                    <Route path='/customers' component = {Customers}></Route>\n\n                    <Route path='/purchaseorders/create' component = {PurchaseOrderCreation}></Route>\n                    <Route path='/purchaseorders' component = {PurchaseOrders}></Route>\n                    \n                    <Route path='/invoices/create' component = {InvoiceCreation}></Route>\n                    <Route path='/invoices' component = {Invoices}></Route>\n\n                    <Route path='/discounts/create' component= {DiscountCreation}></Route>\n                    <Route path='/discounts' component= {Discounts}></Route>\n                    \n                    <Route path='/taxes/create' component= {TaxCreation}></Route>\n                    <Route path='/taxes' component= {Taxes}></Route>\n                    \n                    <Route path='/items/create' component= {ItemCreation}></Route>\n                    <Route path='/items' component= {Items}></Route>\n\n                    <Route path='/itemcatagories/create' component= {ItemCatagoryCreation}></Route>\n                    <Route path='/itemcatagories' component= {ItemCatagories}></Route>\n\n                    <Route path='/places/create' component= {PlaceCreation}></Route>\n                    <Route path='/places' component= {Places}></Route>\n                    </Switch>\n            </Router>\n            </Grid>            \n          </Grid>\n        </Container>\n      </main>\n    </div>\n  );\n}\n\nexport default Dashboard","import React, { Component } from 'react'\nimport {  connect } from 'react-redux';\nimport { getCurrentUser } from '../api/user';\nimport { loggedIn } from '../actions';\nimport swal from 'sweetalert';\nimport Dashboard from './dashboard'\nimport LoadingIcon from './loading'\nimport Login from './users/login'\n\nclass Index extends Component {\n    constructor (props){\n        super(props)\n        this.state = {\n            'loading':true\n        }\n    }\n    \n    \n\n    async componentDidMount() { \n        await getCurrentUser().then(data => {\n            if (data){\n              \n              console.log(data)\n                if (data['status'])\n                {\n                    this.props.dispatch(loggedIn(data['user_data']))\n                }\n                this.setState({\n                  'loading':false\n                })\n            }\n            else{\n                swal('Cannot connet to the server, make sure you have a stable internet connection.')\n            }\n        })\n    }\n    render() {\n        var render_x=<LoadingIcon></LoadingIcon>;\n        if(this.state.loading){\n          render_x = <LoadingIcon></LoadingIcon>\n        }\n        else{\n          if (this.props.user.isLoggedIn){\n            render_x = <Dashboard></Dashboard>\n          }\n          else{\n            render_x = <Login></Login>\n          }\n        }\n        \n        return (\n          <div>\n            {render_x}\n          </div>\n          \n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    user: state.user\n})\n\nexport default connect(mapStateToProps)(Index)","import React from 'react';\nimport './App.css';\nimport Index from './components';\n\n\nfunction  App() {\n  return (\n    <div>\n      <Index></Index>\n    </div>\n  );\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","var initState = {\n    'isLoggedIn':false,\n    'data':{}\n}\nconst userReducer = (state=initState, action) => {\n    switch(action.type){\n        case 'logout':\n            state.data = {}\n            state.isLoggedIn = false;\n            return{\n                isLoggedIn: state.isLoggedIn\n            }\n        case 'loggedIn':\n            state.data = action.payload\n            state.isLoggedIn = true;\n            return {\n                data: state.data,\n                isLoggedIn: state.isLoggedIn\n            }\n        default:\n            return state;\n    }\n\n};\n\nexport default userReducer","var initState = {\n    'data':{}\n}\nconst usersReducer = (state=initState, action) => {\n    switch(action.type){\n        case 'setUsers':\n            state.users = action.payload\n            return{\n                users: state.users\n            }\n        default:\n            return state;\n    }\n\n};\n\nexport default usersReducer","import { combineReducers } from 'redux';\nimport userReducer from './userReducer';\nimport usersReducer from './usersReducer';\n\nconst rootReducers = combineReducers ({\n    user: userReducer,\n    users : usersReducer\n})\n\nexport default rootReducers","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { applyMiddleware, createStore } from 'redux';\nimport rootReducer from './reducers';\nimport { Provider } from 'react-redux';\nimport thunkMiddleware from 'redux-thunk';\n\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.getElementById('root')\n    );\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"popUp_loader__ji3PT\",\"spin\":\"popUp_spin__1nLou\",\"dropbtn\":\"popUp_dropbtn__1fyGN\",\"dropdown\":\"popUp_dropdown__2vgTr\",\"dropdown_content\":\"popUp_dropdown_content__1rTux\"};"],"sourceRoot":""}