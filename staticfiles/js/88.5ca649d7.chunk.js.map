{"version":3,"sources":["Pages/GiftCards/Update.js","App/components/Reusables/ErrorBody.js","App/components/Reusables/Loader.js","api/payment/giftCards.js","validation/giftCard.js"],"names":["Create","props","React","useState","loading","setLoading","submitting","setSubmitting","giftCardCategories","setGiftCardCategories","name","category","type","rate","code","hasUniqueCode","isLimited","countLimit","isActive","giftCardData","setGiftCardData","errors","setErrors","useEffect","controller","AbortController","a","ladder","getGiftCardCategories","action","filter","start","end","signal","then","res","console","log","json","status","gift_card_categories","catch","err","getGiftCard","uuid","match","params","id","giftCard","gift_cards","discount_type","has_unique_codes","is_limited","count_limit","is_active","abort","_giftCardDataChange","e","field","target","value","tempGiftCardData","Body","md","Group","Label","Control","onChange","placeholder","as","disabled","map","cat","index","key","Check","checked","style","padding","paddingLeft","label","className","marginBottom","variant","onClick","history","push","validateGiftCardCreation","isValid","requestJson","parseFloat","parseInt","JSON","stringify","updateGiftCard","Jhilikka","fire","icon","title","background","error","ErrorBody","isEmpty","children","Text","color","Loader","createGiftCardCategory","data","baseRequest","alert","getGiftCardCategory","updateGiftCardCategory","deleteGiftCardCategories","getGiftCards","createGiftCard","deleteGiftCards","deleteUniqueCards","reedemGiftCard","getReedemHistory"],"mappings":"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","file":"static/js/88.5ca649d7.chunk.js","sourcesContent":["import React from 'react';\nimport { Row, Col, Card, Form, Button, InputGroup, FormControl, DropdownButton, Dropdown } from 'react-bootstrap';\n\nimport Aux from \"../../hoc/_Aux\";\nimport Switch from 'react-switch'\nimport Loader from \"../../App/components/Reusables/Loader\"\n\n\nimport ErrorBody from '../../App/components/Reusables/ErrorBody';\nimport Jhilikka from '../../App/components/Reusables/Jhilikka';\nimport { validateGiftCardCreation } from '../../validation/giftCard';\nimport { createGiftCard, getGiftCard, getGiftCardCategories, updateGiftCard } from '../../api/payment/giftCards';\n\nconst Create = (props) => {\n\n    const [loading, setLoading] = React.useState(true);\n    const [submitting, setSubmitting] = React.useState(false);\n    const [giftCardCategories, setGiftCardCategories] = React.useState([]);\n    const [giftCardData, setGiftCardData] = React.useState({\n        name: '',\n        category: '',\n        type: '',\n        rate: '',\n        code: '',\n        hasUniqueCode: false,\n        isLimited: false,\n        countLimit: '',\n        isActive: true,\n    })\n    const [errors, setErrors] = React.useState({});\n\n    React.useEffect(() => {\n\n        const controller = new AbortController();\n        (async () => {\n            let ladder = 0;\n            await getGiftCardCategories({ action: 'get', filter: 'none', start: 0, end: 999999 }, controller.signal)\n                .then((res) => {\n                    console.log(res)\n                    if (res.json.status) {\n                        setGiftCardCategories([...res.json.gift_card_categories]);\n                        ladder++;\n                    }\n                }).catch((err) => {\n                    console.log(err)\n                });\n\n            await getGiftCard({ action: 'get', uuid: props.match.params.id, filter: 'uuid', }, controller.signal)\n                .then(async (res) => {\n                    console.log(res.json)\n                    if (res.json.status) {\n                        const giftCard = res.json.gift_cards[0];\n\n                        await setGiftCardData({\n                            id: giftCard.id,\n                            uuid: giftCard.uuid,\n                            name: giftCard.name,\n                            category: giftCard.category,\n                            type: giftCard.discount_type,\n                            rate: giftCard.rate,\n                            code: giftCard.code,\n                            hasUniqueCode: giftCard.has_unique_codes,\n                            isLimited: giftCard.is_limited,\n                            countLimit: giftCard.count_limit,\n                            isActive: giftCard.is_active\n                        })\n                        ladder++;\n                    }\n                }).catch((err) => {\n                    console.log(err);\n                });\n\n            if (ladder === 2) {\n                setLoading(false)\n\n            }\n        })();\n        return () => controller.abort();\n    }, [])\n\n    const amendErrorOf = (field) => {\n        setErrors({ ...errors, [field]: '' })\n    }\n\n\n\n    const _giftCardDataChange = (e) => {\n        console.log('chainge hte ghints', e.target.value);\n        amendErrorOf(e.target.name)\n        const tempGiftCardData = giftCardData;\n        // console.log(giftCardData.hasUniqueCode)\n        if (e.target.type === 'checkbox') {\n            console.log('htis is checkobs ------------------');\n            tempGiftCardData[e.target.name] = !tempGiftCardData[e.target.name];\n            if (tempGiftCardData.hasUniqueCode === true) {\n                tempGiftCardData.isLimited = true\n            }\n        } else {\n            console.log('htis is not not ------------------');\n            tempGiftCardData[e.target.name] = e.target.value;\n        }\n\n        setGiftCardData({ ...tempGiftCardData });\n\n    }\n\n    const _activeChange = (checked) => {\n        setGiftCardData({ ...giftCardData, isActive: checked })\n    }\n\n\n    const _submit = () => {\n\n        const { isValid, errors } = validateGiftCardCreation(giftCardData);\n\n        if (!isValid) {\n            console.log(errors);\n            setErrors({ ...errors })\n            return;\n        };\n\n        console.log('no errros');\n        setSubmitting(true)\n        //if no errros api call\n        const requestJson = {\n            \"action\": \"update\",\n            \"gift_card_uuid\": giftCardData.uuid,\n            \"name\": giftCardData.name,\n            \"code\": giftCardData.code,\n            \"discount_type\": giftCardData.type,\n            \"rate\": parseFloat(giftCardData.rate),\n            \"is_limited\": giftCardData.isLimited,\n            \"has_unique_codes\": giftCardData.hasUniqueCode,\n            \"count_limit\": parseInt(giftCardData.countLimit),\n            \"category\": parseInt(giftCardData.category),\n            \"is_active\": giftCardData.isActive\n        }\n        console.log(JSON.stringify(requestJson));\n        updateGiftCard(requestJson)\n            .then((res) => {\n                if (res.json.status) {\n                    Jhilikka.fire({ icon: 'success', title: 'Gift Card updated successfully!', background: '#dffff0' })\n                    props.history.push('/gift-card/' + giftCardData.uuid);\n                } else {\n                    setSubmitting(false)\n                    Jhilikka.fire({ icon: 'error', title: res.json.error, background: '#ffe5de' })\n                }\n            }).catch((err) => {\n                setSubmitting(false)\n                console.log(err)\n            });\n    }\n\n\n    if (loading) return <Loader />\n    return (\n        <Aux>\n            <Row>\n                <Col>\n                    <Card>\n                        <Card.Body>\n                            <h5>Create Gift Card</h5>\n                            <hr />\n                            <Row>\n                                <Col md={6}>\n                                    <Form.Group  >\n                                        <Form.Label>Gift Card Name*</Form.Label>\n                                        <Form.Control name=\"name\" value={giftCardData.name} onChange={_giftCardDataChange} type=\"text\" placeholder=\"Tax Name\" />\n                                        <ErrorBody>{errors.name}</ErrorBody>\n                                    </Form.Group>\n                                </Col>\n                                <Col md={6}>\n\n                                    <Form.Group  >\n                                        <Form.Label>Gift Card Category</Form.Label>\n                                        <Form.Control name=\"category\" value={giftCardData.category} onChange={_giftCardDataChange} as=\"select\">\n\n                                            <option value='' disabled >Select...</option>\n                                            {giftCardCategories.map((cat, index) => {\n                                                return <option key={index} value={cat.id}  >{cat.name}</option>\n                                            })}\n\n                                        </Form.Control>\n                                        <ErrorBody>{errors.category}</ErrorBody>\n                                    </Form.Group>\n                                </Col>\n                                <Col md={6}>\n\n                                    <Form.Group  >\n                                        <Form.Label>Discount Type*</Form.Label>\n                                        <Form.Control name=\"type\" value={giftCardData.type} onChange={_giftCardDataChange} as=\"select\">\n\n                                            <option value='' disabled >Select...</option>\n                                            <option value='percent'  >Percent</option>\n                                            <option value='fixed'  >Fixed</option>\n                                        </Form.Control>\n                                        <ErrorBody>{errors.type}</ErrorBody>\n                                    </Form.Group>\n                                </Col>\n\n                                <Col md={6}>\n                                    <Form.Group  >\n                                        <Form.Label>Rate*</Form.Label>\n                                        <Form.Control name=\"rate\" value={giftCardData.rate} onChange={_giftCardDataChange} type=\"number\" placeholder=\"Rate\" />\n                                        <ErrorBody>{errors.rate}</ErrorBody>\n                                    </Form.Group>\n                                </Col>\n\n\n                                <Col md={6}>\n                                    <Form.Group  >\n                                        <Form.Label>Code*</Form.Label>\n                                        <Form.Control name=\"code\" value={giftCardData.code} onChange={_giftCardDataChange} type=\"text\" placeholder=\"Code\" />\n                                        <ErrorBody>{errors.code}</ErrorBody>\n                                    </Form.Group>\n                                </Col>\n                                <Col md={3}>\n                                    <Form.Group  >\n                                        <Form.Label></Form.Label>\n                                        <Form.Check name=\"hasUniqueCode\" onChange={_giftCardDataChange} checked={giftCardData.hasUniqueCode} style={{ padding: '5px', paddingLeft: '20px' }} type=\"checkbox\" label=\"Has Unique Code\" />\n                                        <ErrorBody>{errors.hasUniqueCode}</ErrorBody>\n                                    </Form.Group>\n                                </Col>\n\n                                <Col md={3}>\n                                    <Form.Group  >\n                                        <Form.Label></Form.Label>\n                                        <Form.Check name=\"isLimited\" onChange={_giftCardDataChange} checked={giftCardData.isLimited} style={{ padding: '5px', paddingLeft: '20px' }} type=\"checkbox\" label=\"Is Limited\" />\n                                        <ErrorBody>{errors.isLimited}</ErrorBody>\n                                    </Form.Group>\n                                </Col>\n\n                                {giftCardData.isLimited ? (\n                                    <Col md={6}>\n                                        <Form.Group  >\n                                            <Form.Label>Count Limit*</Form.Label>\n                                            <Form.Control name=\"countLimit\" value={giftCardData.countLimit} onChange={_giftCardDataChange} type=\"number\" placeholder=\"Count Limit\" />\n                                            <ErrorBody>{errors.countLimit}</ErrorBody>\n                                        </Form.Group>\n                                    </Col>\n                                ) : null}\n                                <Col md={6}>\n                                    <Form.Group className=\"d-flex flex-column justify-content-end\">\n                                        <Form.Label style={{ marginBottom: '15px' }}>Is Active?</Form.Label>\n                                        <Switch onChange={_activeChange} checked={giftCardData.isActive} />\n                                    </Form.Group>\n                                </Col>\n\n\n\n                            </Row>\n                            <div className=\"d-flex justify-content-end\" >\n                                <Button\n                                    variant=\"warning\"\n                                    onClick={() => { props.history.push('/gift-cards') }}\n                                >\n                                    Cancel\n                                    </Button>\n                                <Button\n                                    disabled={submitting}\n                                    variant=\"primary\"\n                                    onClick={_submit}\n                                >\n                                    {submitting ? <><i className=\"fa fa-spinner text-c-white f-15 fa-pulse m-l-1\"></i>Updating</> : 'Update'}\n\n                                </Button>\n                            </div>\n\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        </Aux>\n    );\n}\n\nexport default Create;\n","import React from 'react';\n\nimport { Form } from 'react-bootstrap';\nimport isEmpty from '../../../validation/isEmpty'\n\nconst ErrorBody = (props) => {\n\n    if (isEmpty(props.children)) {\n        return <span></span>\n    }\n\n    return (\n        <>\n            <Form.Text style={{ color: 'red' }} >\n                {props.children}\n            </Form.Text>\n        </>\n    );\n}\n\n\nexport default ErrorBody;\n\n\n","import React from 'react';\n\nconst Loader = () => {\n    return (\n        <div className=\"loader-bg\">\n            <div className=\"loader-track\">\n                <div className=\"loader-fill\"/>\n            </div>\n        </div>\n    );\n};\n\nexport default Loader;","import { baseRequest } from '../base';\n\n\n\nconst createGiftCardCategory = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/payment/giftcards/category/add', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\nconst getGiftCardCategories = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/payment/giftcards/categories/get', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\nconst getGiftCardCategory = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/payment/giftcards/category/get', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\nconst updateGiftCardCategory = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/payment/giftcards/category/update', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\nconst deleteGiftCardCategories = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/payment/giftcards/category/delete', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\n\n\n\n\nconst getGiftCards = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/payment/giftcards/get', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\nconst getGiftCard = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/payment/giftcard/get', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\nconst createGiftCard = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/payment/giftcard/add', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\nconst updateGiftCard = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/payment/giftcard/update', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\nconst deleteGiftCards = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/payment/giftcards/delete', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n}\nconst deleteUniqueCards = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/payment/giftcard/uniquecard/delete', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\n\n\n\nconst validateGiftCard = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/payment/giftcards/validate', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\nconst reedemGiftCard = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/payment/giftcard/redeem', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\nconst getReedemHistory = async (data, signal) => {\n  try {\n    return await baseRequest('api/v1/payment/giftcard/redeem/history', 'POST', data, signal);\n  } catch (e) {\n    alert(e)\n  }\n};\n\n\n\n\nexport {\n  createGiftCardCategory,\n  getGiftCardCategories,\n  getGiftCardCategory,\n  updateGiftCardCategory,\n  deleteGiftCardCategories,\n\n  createGiftCard,\n  getGiftCards,\n  getGiftCard,\n  updateGiftCard,\n  deleteGiftCards,\n  deleteUniqueCards,\n\n  validateGiftCard,\n  reedemGiftCard,\n  getReedemHistory\n}\n","import isEmpty from \"./isEmpty\"\n\n\nconst validateGiftCardCreation = (giftCardData) => {\n\n\n    const errors = {}\n    if (isEmpty(giftCardData.name)) {\n        errors.name = 'Name of tax cannot be empty!'\n    }\n    if (isEmpty(giftCardData.type)) {\n        errors.type = 'Provide discount type of gift card!'\n    }\n    if (isEmpty(giftCardData.rate)) {\n        errors.rate = 'Provide rate of gift card!'\n    }\n    if (isEmpty(giftCardData.code)) {\n        errors.code = 'Provide code of gift card!'\n    }\n    if (giftCardData.isLimited && isEmpty(giftCardData.countLimit)) {\n        errors.countLimit = 'Provide count limit of gift card!'\n    }\n    //Will be valid if the errors are empty\n    const isValid = isEmpty(errors);\n    return { isValid, errors }\n}\n\n\n\n\nconst validateGiftCardCategoryCreation = (giftCardCategoryData) => {\n\n    const errors = {}\n\n    if (isEmpty(giftCardCategoryData.name)) {\n        errors.name = 'Name of category cannot be empty!'\n    }\n\n    //Will be valid if the errors are empty\n    const isValid = isEmpty(errors);\n    return { isValid, errors }\n}\n\nexport { validateGiftCardCreation,validateGiftCardCategoryCreation}"],"sourceRoot":""}